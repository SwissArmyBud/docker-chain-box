// Generated by dart2js (full emitter, strong), the Dart to JavaScript compiler version: 2.1.0.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// defaultPackagesBase:
//    Override the location where `package:` uris are resolved from. By default
//    they are resolved under "packages/" from the current window location.
(function() {
  // /* ::norenaming:: */
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function map(x) {
    x = Object.create(null);
    x.x = 0;
    delete x.x;
    return x;
  }
  // The global objects start as so-called "slow objects". For V8, this
  // means that it won't try to make map transitions as we add properties
  // to these objects. Later on, we attempt to turn these objects into
  // fast objects by calling "convertToFastObject" (see
  // [emitConvertToFastObjectFunction]).
  var A = map();
  var B = map();
  var C = map();
  var D = map();
  var E = map();
  var F = map();
  var G = map();
  var H = map();
  var J = map();
  var K = map();
  var L = map();
  var M = map();
  var N = map();
  var O = map();
  var P = map();
  var Q = map();
  var R = map();
  var S = map();
  var T = map();
  var U = map();
  var V = map();
  var W = map();
  var X = map();
  var Y = map();
  var Z = map();
  function Isolate() {
  }
  init();
  // Constructors are generated at runtime.
  function setupProgram(programData, metadataOffset, typesOffset) {
    "use strict";
    function generateAccessor(fieldDescriptor, accessors, cls) {
      var fieldInformation = fieldDescriptor.split("-");
      var field = fieldInformation[0];
      var len = field.length;
      var code = field.charCodeAt(len - 1);
      var reflectable;
      if (fieldInformation.length > 1)
        reflectable = true;
      else
        reflectable = false;
      code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
      if (code) {
        var getterCode = code & 3;
        var setterCode = code >> 2;
        var accessorName = field = field.substring(0, len - 1);
        var divider = field.indexOf(":");
        if (divider > 0) {
          accessorName = field.substring(0, divider);
          field = field.substring(divider + 1);
        }
        if (getterCode) {
          var args = getterCode & 2 ? "receiver" : "";
          var receiver = getterCode & 1 ? "this" : "receiver";
          var body = "return " + receiver + "." + field;
          var property = cls + ".prototype.get$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
        if (setterCode) {
          var args = setterCode & 2 ? "receiver, value" : "value";
          var receiver = setterCode & 1 ? "this" : "receiver";
          var body = receiver + "." + field + " = value";
          var property = cls + ".prototype.set$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
      }
      return field;
    }
    function defineClass(name, fields) {
      var accessors = [];
      var str = "function " + name + "(";
      var comma = "", body = "";
      for (var i = 0; i < fields.length; i++) {
        var fieldDescriptor = fields[i];
        if (fieldDescriptor.charCodeAt(0) == 48) {
          fieldDescriptor = fieldDescriptor.substring(1);
          var field = generateAccessor(fieldDescriptor, accessors, name);
          body += "this." + field + " = null;\n";
        } else {
          var field = generateAccessor(fieldDescriptor, accessors, name);
          var parameter = "p_" + field;
          str += comma;
          comma = ", ";
          str += parameter;
          body += "this." + field + " = " + parameter + ";\n";
        }
      }
      if (supportsDirectProtoAccess)
        body += "this." + "$deferredAction" + "();";
      str += ") {\n" + body + "}\n";
      str += name + ".builtin$cls=\"" + name + "\";\n";
      str += "$desc=$collectedClasses." + name + "[1];\n";
      str += name + ".prototype = $desc;\n";
      if (typeof defineClass.name != "string")
        str += name + ".name=\"" + name + "\";\n";
      str += accessors.join("");
      return str;
    }
    var inheritFrom = supportsDirectProtoAccess ? function(constructor, superConstructor) {
      var prototype = constructor.prototype;
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
      prototype["$is" + constructor.name] = constructor;
      return convertToFastObject(prototype);
    } : function() {
      function tmp() {
      }
      return function(constructor, superConstructor) {
        tmp.prototype = superConstructor.prototype;
        var object = new tmp();
        convertToSlowObject(object);
        var properties = constructor.prototype;
        var members = Object.keys(properties);
        for (var i = 0; i < members.length; i++) {
          var member = members[i];
          object[member] = properties[member];
        }
        object["$is" + constructor.name] = constructor;
        object.constructor = constructor;
        constructor.prototype = object;
        return object;
      };
    }();
    function finishClasses(processedClasses) {
      var allClasses = init.allClasses;
      processedClasses.combinedConstructorFunction += "return [\n" + processedClasses.constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", processedClasses.combinedConstructorFunction)(processedClasses.collected);
      processedClasses.combinedConstructorFunction = null;
      for (var i = 0; i < constructors.length; i++) {
        var constructor = constructors[i];
        var cls = constructor.name;
        var desc = processedClasses.collected[cls];
        var globalObject = desc[0];
        desc = desc[1];
        allClasses[cls] = constructor;
        globalObject[cls] = constructor;
      }
      constructors = null;
      var finishedClasses = init.finishedClasses;
      function finishClass(cls) {
        if (finishedClasses[cls])
          return;
        finishedClasses[cls] = true;
        var superclass = processedClasses.pending[cls];
        if (superclass && superclass.indexOf("+") > 0) {
          var s = superclass.split("+");
          superclass = s[0];
          var mixinClass = s[1];
          finishClass(mixinClass);
          var mixin = allClasses[mixinClass];
          var mixinPrototype = mixin.prototype;
          var clsPrototype = allClasses[cls].prototype;
          var properties = Object.keys(mixinPrototype);
          for (var i = 0; i < properties.length; i++) {
            var d = properties[i];
            if (!hasOwnProperty.call(clsPrototype, d))
              clsPrototype[d] = mixinPrototype[d];
          }
        }
        if (!superclass || typeof superclass != "string") {
          var constructor = allClasses[cls];
          var prototype = constructor.prototype;
          prototype.constructor = constructor;
          prototype.$isObject = constructor;
          prototype.$deferredAction = function() {
          };
          return;
        }
        finishClass(superclass);
        var superConstructor = allClasses[superclass];
        if (!superConstructor)
          superConstructor = existingIsolateProperties[superclass];
        var constructor = allClasses[cls];
        var prototype = inheritFrom(constructor, superConstructor);
        if (mixinPrototype)
          prototype.$deferredAction = mixinDeferredActionHelper(mixinPrototype, prototype);
        if (Object.prototype.hasOwnProperty.call(prototype, "%")) {
          var nativeSpec = prototype["%"].split(";");
          if (nativeSpec[0]) {
            var tags = nativeSpec[0].split("|");
            for (var i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = true;
            }
          }
          if (nativeSpec[1]) {
            tags = nativeSpec[1].split("|");
            if (nativeSpec[2]) {
              var subclasses = nativeSpec[2].split("|");
              for (var i = 0; i < subclasses.length; i++) {
                var subclass = allClasses[subclasses[i]];
                subclass.$nativeSuperclassTag = tags[0];
              }
            }
            for (i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = false;
            }
          }
          prototype.$deferredAction();
        }
        if (prototype.$isInterceptor)
          prototype.$deferredAction();
      }
      var properties = Object.keys(processedClasses.pending);
      for (var i = 0; i < properties.length; i++)
        finishClass(properties[i]);
    }
    function finishAddStubsHelper() {
      var prototype = this;
      while (!prototype.hasOwnProperty("$deferredAction"))
        prototype = prototype.__proto__;
      delete prototype.$deferredAction;
      var properties = Object.keys(prototype);
      for (var index = 0; index < properties.length; index++) {
        var property = properties[index];
        var firstChar = property.charCodeAt(0);
        var elem;
        if (property !== "^" && property !== "$reflectable" && firstChar !== 43 && firstChar !== 42 && (elem = prototype[property]) != null && elem.constructor === Array && property !== "<>")
          addStubs(prototype, elem, property, false, []);
      }
      convertToFastObject(prototype);
      prototype = prototype.__proto__;
      prototype.$deferredAction();
    }
    function mixinDeferredActionHelper(mixinPrototype, targetPrototype) {
      var chain;
      if (targetPrototype.hasOwnProperty("$deferredAction"))
        chain = targetPrototype.$deferredAction;
      return function foo() {
        if (!supportsDirectProtoAccess)
          return;
        var prototype = this;
        while (!prototype.hasOwnProperty("$deferredAction"))
          prototype = prototype.__proto__;
        if (chain)
          prototype.$deferredAction = chain;
        else {
          delete prototype.$deferredAction;
          convertToFastObject(prototype);
        }
        mixinPrototype.$deferredAction();
        prototype.$deferredAction();
      };
    }
    function processClassData(cls, descriptor, processedClasses) {
      descriptor = convertToSlowObject(descriptor);
      var previousProperty;
      var properties = Object.keys(descriptor);
      var hasDeferredWork = false;
      var shouldDeferWork = supportsDirectProtoAccess && cls != "Object";
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        var firstChar = property.charCodeAt(0);
        if (property === "static") {
          processStatics(init.statics[cls] = descriptor.static, processedClasses);
          delete descriptor.static;
        } else if (firstChar === 43) {
          mangledNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
        } else if (firstChar === 42) {
          descriptor[previousProperty].$defaultValues = descriptor[property];
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else {
          var elem = descriptor[property];
          if (property !== "^" && elem != null && elem.constructor === Array && property !== "<>")
            if (shouldDeferWork)
              hasDeferredWork = true;
            else
              addStubs(descriptor, elem, property, false, []);
          else
            previousProperty = property;
        }
      }
      if (hasDeferredWork)
        descriptor.$deferredAction = finishAddStubsHelper;
      var classData = descriptor["^"],
        split, supr,
        fields = classData;
      var s = fields.split(";");
      fields = s[1] ? s[1].split(",") : [];
      supr = s[0];
      split = supr.split(":");
      if (split.length == 2) {
        supr = split[0];
        var functionSignature = split[1];
        if (functionSignature)
          descriptor.$signature = function(s) {
            return function() {
              return init.types[s];
            };
          }(functionSignature);
      }
      if (supr)
        processedClasses.pending[cls] = supr;
      processedClasses.combinedConstructorFunction += defineClass(cls, fields);
      processedClasses.constructorsList.push(cls);
      processedClasses.collected[cls] = [globalObject, descriptor];
      classes.push(cls);
    }
    function processStatics(descriptor, processedClasses) {
      var properties = Object.keys(descriptor);
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        if (property === "^")
          continue;
        var element = descriptor[property];
        var firstChar = property.charCodeAt(0);
        var previousProperty;
        if (firstChar === 43) {
          mangledGlobalNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
          if (element && element.length)
            init.typeInformation[previousProperty] = element;
        } else if (firstChar === 42) {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
        } else if (element.constructor === Array)
          addStubs(globalObject, element, property, true, functions);
        else {
          previousProperty = property;
          processClassData(property, element, processedClasses);
        }
      }
    }
    function addStubs(prototype, array, name, isStatic, functions) {
      var index = 0,
        applyTrampolineIndex = index,
        alias = array[index],
        f;
      if (typeof alias == "string")
        f = array[++index];
      else {
        f = alias;
        alias = name;
      }
      if (typeof f == "number") {
        applyTrampolineIndex = f;
        f = array[++index];
      }
      prototype[name] = prototype[alias] = f;
      var funcs = [f];
      f.$stubName = name;
      functions.push(name);
      for (index++; index < array.length; index++) {
        f = array[index];
        if (typeof f != "function")
          break;
        if (!isStatic)
          f.$stubName = array[++index];
        funcs.push(f);
        if (f.$stubName) {
          prototype[f.$stubName] = f;
          functions.push(f.$stubName);
        }
      }
      for (var i = 0; i < funcs.length; index++, i++)
        funcs[i].$callName = array[index];
      var getterStubName = array[index];
      array = array.slice(++index);
      var requiredParameterInfo = array[0];
      var isIntercepted = (requiredParameterInfo & 1) === 1;
      requiredParameterInfo = requiredParameterInfo >> 1;
      var requiredParameterCount = requiredParameterInfo >> 1;
      var isAccessor = (requiredParameterInfo & 1) === 1;
      var isSetter = requiredParameterInfo === 3;
      var isGetter = requiredParameterInfo === 1;
      var optionalParameterInfo = array[1];
      var optionalParameterCount = optionalParameterInfo >> 1;
      var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
      var totalParameterCount = requiredParameterCount + optionalParameterCount;
      var functionTypeIndex = array[2];
      if (typeof functionTypeIndex == "number")
        array[2] = functionTypeIndex + typesOffset;
      if (metadataOffset > 0) {
        var position = 3;
        for (var i = 0; i < optionalParameterCount; i++) {
          if (typeof array[position] == "number")
            array[position] = array[position] + metadataOffset;
          position++;
        }
        for (var i = 0; i < totalParameterCount; i++) {
          array[position] = array[position] + metadataOffset;
          position++;
        }
      }
      var unmangledNameIndex = 2 * optionalParameterCount + requiredParameterCount + 3;
      if (getterStubName) {
        f = tearOff(funcs, applyTrampolineIndex, array, isStatic, name, isIntercepted);
        prototype[name].$getter = f;
        f.$getterStub = true;
        if (isStatic)
          functions.push(getterStubName);
        prototype[getterStubName] = f;
        funcs.push(f);
        f.$stubName = getterStubName;
        f.$callName = null;
      }
      var isReflectable = array.length > unmangledNameIndex;
      if (isReflectable) {
        funcs[0].$reflectable = 1;
        funcs[0].$reflectionInfo = array;
        for (var i = 1; i < funcs.length; i++) {
          funcs[i].$reflectable = 2;
          funcs[i].$reflectionInfo = array;
        }
        var mangledNames = isStatic ? init.mangledGlobalNames : init.mangledNames;
        var unmangledName = array[unmangledNameIndex];
        var reflectionName = unmangledName;
        if (getterStubName)
          mangledNames[getterStubName] = reflectionName;
        if (isSetter)
          reflectionName += "=";
        else if (!isGetter)
          reflectionName += ":" + (requiredParameterCount + optionalParameterCount);
        mangledNames[name] = reflectionName;
        funcs[0].$reflectionName = reflectionName;
        for (var i = unmangledNameIndex + 1; i < array.length; i++)
          array[i] = array[i] + metadataOffset;
        funcs[0].$metadataIndex = unmangledNameIndex + 1;
        if (optionalParameterCount)
          prototype[unmangledName + "*"] = funcs[applyTrampolineIndex];
      }
    }
    Function.prototype.call$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$0 = function() {
      return this();
    };
    Function.prototype.call$3 = function(a, b, c) {
      return this(a, b, c);
    };
    Function.prototype.call$3$3 = function(a, b, c) {
      return this(a, b, c);
    };
    Function.prototype.call$2$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$1$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$1$2 = function(a, b) {
      return this(a, b);
    };
    Function.prototype.call$1$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$3$6 = function(a, b, c, d, e, f) {
      return this(a, b, c, d, e, f);
    };
    Function.prototype.call$2$5 = function(a, b, c, d, e) {
      return this(a, b, c, d, e);
    };
    Function.prototype.call$5 = function(a, b, c, d, e) {
      return this(a, b, c, d, e);
    };
    Function.prototype.call$2$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$2$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$3$1 = function(a) {
      return this(a);
    };
    Function.prototype.call$3$4 = function(a, b, c, d) {
      return this(a, b, c, d);
    };
    Function.prototype.call$2$3 = function(a, b, c) {
      return this(a, b, c);
    };
    function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
      return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
    }
    function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
      var cache = null;
      return isStatic ? function() {
        if (cache === null)
          cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
        return cache;
      } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
    }
    var functionCounter = 0;
    if (!init.libraries)
      init.libraries = [];
    if (!init.mangledNames)
      init.mangledNames = map();
    if (!init.mangledGlobalNames)
      init.mangledGlobalNames = map();
    if (!init.statics)
      init.statics = map();
    if (!init.typeInformation)
      init.typeInformation = map();
    var libraries = init.libraries;
    var mangledNames = init.mangledNames;
    var mangledGlobalNames = init.mangledGlobalNames;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var length = programData.length;
    var processedClasses = map();
    processedClasses.collected = map();
    processedClasses.pending = map();
    processedClasses.constructorsList = [];
    processedClasses.combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
    for (var i = 0; i < length; i++) {
      var data = programData[i];
      var name = data[0];
      var uri = data[1];
      var metadata = data[2];
      var globalObject = data[3];
      var descriptor = data[4];
      var isRoot = !!data[5];
      var fields = descriptor && descriptor["^"];
      if (fields instanceof Array)
        fields = fields[0];
      var classes = [];
      var functions = [];
      processStatics(descriptor, processedClasses);
      libraries.push([name, uri, classes, functions, metadata, fields, isRoot, globalObject]);
    }
    finishClasses(processedClasses);
  }
  Isolate.functionThatReturnsNull = function() {
  };
  var dart = [["_foreign_helper", "dart:_foreign_helper",, H, {
    "^": "",
    JS_CONST: {
      "^": "Object;code"
    }
  }], ["_interceptors", "dart:_interceptors",, J, {
    "^": "",
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var record, proto, objectProto, $constructor, interceptor;
      record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[$.$get$JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, $.$get$JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    Interceptor: {
      "^": "Object;",
      $eq: function(receiver, other) {
        return receiver === other;
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      toString$0: ["super$Interceptor$toString", function(receiver) {
        return "Instance of '" + H.Primitives_objectTypeName(receiver) + "'";
      }],
      noSuchMethod$1: ["super$Interceptor$noSuchMethod", function(receiver, invocation) {
        H.interceptedTypeCheck(invocation, "$isInvocation");
        throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, null, "get$noSuchMethod", 5, 0, null, 22],
      "%": "ANGLEInstancedArrays|ANGLE_instanced_arrays|AnimationEffectReadOnly|AnimationEffectTiming|AnimationEffectTimingReadOnly|AnimationTimeline|AnimationWorkletGlobalScope|AudioListener|AudioParam|AudioWorkletGlobalScope|AudioWorkletProcessor|AuthenticatorAssertionResponse|AuthenticatorAttestationResponse|AuthenticatorResponse|BackgroundFetchFetch|BackgroundFetchManager|BackgroundFetchSettledFetch|BarProp|BarcodeDetector|Bluetooth|BluetoothCharacteristicProperties|BluetoothRemoteGATTDescriptor|BluetoothRemoteGATTServer|BluetoothRemoteGATTService|BluetoothUUID|Body|BudgetService|BudgetState|CSS|CSSVariableReferenceValue|Cache|CacheStorage|CanvasGradient|CanvasPattern|CanvasRenderingContext2D|Clients|CookieStore|Coordinates|CredentialsContainer|Crypto|CryptoKey|CustomElementRegistry|DOMFileSystemSync|DOMImplementation|DOMMatrix|DOMMatrixReadOnly|DOMParser|DOMQuad|DataTransfer|Database|DeprecatedStorageInfo|DeprecatedStorageQuota|DeprecationReport|DetectedBarcode|DetectedFace|DetectedText|DeviceRotationRate|DirectoryEntrySync|DirectoryReader|DirectoryReaderSync|DocumentOrShadowRoot|DocumentTimeline|EXTBlendMinMax|EXTColorBufferFloat|EXTColorBufferHalfFloat|EXTDisjointTimerQuery|EXTDisjointTimerQueryWebGL2|EXTFragDepth|EXTShaderTextureLOD|EXTTextureFilterAnisotropic|EXT_blend_minmax|EXT_frag_depth|EXT_sRGB|EXT_shader_texture_lod|EXT_texture_filter_anisotropic|EXTsRGB|EntrySync|External|FaceDetector|FileEntrySync|FileReaderSync|FileWriterSync|FontFaceSource|FormData|GamepadButton|GamepadPose|Geolocation|HTMLAllCollection|HTMLHyperlinkElementUtils|Headers|IDBFactory|IDBObserver|IDBObserverChanges|IdleDeadline|ImageBitmapRenderingContext|ImageCapture|InputDeviceCapabilities|IntersectionObserver|InterventionReport|Iterator|KeyframeEffect|KeyframeEffectReadOnly|MediaCapabilities|MediaCapabilitiesInfo|MediaDeviceInfo|MediaError|MediaKeyStatusMap|MediaKeySystemAccess|MediaKeys|MediaKeysPolicy|MediaMetadata|MediaSession|MediaSettingsRange|MemoryInfo|MessageChannel|Metadata|Mojo|MojoHandle|MojoWatcher|MutationObserver|NFC|NavigationPreloadManager|Navigator|NavigatorAutomationInformation|NavigatorConcurrentHardware|NavigatorCookies|NodeFilter|NodeIterator|NonDocumentTypeChildNode|NonElementParentNode|NoncedElement|OESElementIndexUint|OESStandardDerivatives|OESTextureFloat|OESTextureFloatLinear|OESTextureHalfFloat|OESTextureHalfFloatLinear|OESVertexArrayObject|OES_element_index_uint|OES_standard_derivatives|OES_texture_float|OES_texture_float_linear|OES_texture_half_float|OES_texture_half_float_linear|OES_vertex_array_object|OffscreenCanvasRenderingContext2D|PagePopupController|PaintRenderingContext2D|PaintWorkletGlobalScope|Path2D|PaymentAddress|PaymentInstruments|PaymentManager|PaymentResponse|PerformanceNavigation|PerformanceObserver|PerformanceObserverEntryList|PerformanceTiming|PeriodicWave|Permissions|PhotoCapabilities|Position|PositionError|Presentation|PresentationReceiver|PushManager|PushMessageData|PushSubscription|PushSubscriptionOptions|RTCCertificate|RTCIceCandidate|RTCRtpContributingSource|RTCRtpReceiver|RTCRtpSender|RTCSessionDescription|RTCStatsResponse|Range|Report|ReportBody|ReportingObserver|Request|ResizeObserver|Response|SQLError|SQLResultSet|SQLTransaction|SVGAngle|SVGAnimatedAngle|SVGAnimatedBoolean|SVGAnimatedEnumeration|SVGAnimatedInteger|SVGAnimatedNumberList|SVGAnimatedPreserveAspectRatio|SVGAnimatedRect|SVGAnimatedTransformList|SVGMatrix|SVGPreserveAspectRatio|SVGUnitTypes|ScrollState|ScrollTimeline|Selection|SharedArrayBuffer|StaticRange|StorageManager|StyleMedia|StylePropertyMap|StylePropertyMapReadonly|SubtleCrypto|SyncManager|TextDetector|TreeWalker|TrustedHTML|TrustedScriptURL|TrustedURL|URLSearchParams|USBAlternateInterface|USBConfiguration|USBDevice|USBEndpoint|USBInTransferResult|USBInterface|USBIsochronousInTransferPacket|USBIsochronousInTransferResult|USBIsochronousOutTransferPacket|USBIsochronousOutTransferResult|USBOutTransferResult|UnderlyingSourceBase|VRCoordinateSystem|VRDisplayCapabilities|VREyeParameters|VRFrameData|VRFrameOfReference|VRPose|VRStageBounds|VRStageParameters|ValidityState|VideoPlaybackQuality|WEBGL_compressed_texture_atc|WEBGL_compressed_texture_etc1|WEBGL_compressed_texture_pvrtc|WEBGL_compressed_texture_s3tc|WEBGL_debug_renderer_info|WEBGL_debug_shaders|WEBGL_depth_texture|WEBGL_draw_buffers|WEBGL_lose_context|WebGL|WebGL2RenderingContext|WebGL2RenderingContextBase|WebGLBuffer|WebGLCanvas|WebGLColorBufferFloat|WebGLCompressedTextureASTC|WebGLCompressedTextureATC|WebGLCompressedTextureETC|WebGLCompressedTextureETC1|WebGLCompressedTexturePVRTC|WebGLCompressedTextureS3TC|WebGLCompressedTextureS3TCsRGB|WebGLDebugRendererInfo|WebGLDebugShaders|WebGLDepthTexture|WebGLDrawBuffers|WebGLExtensionLoseContext|WebGLFramebuffer|WebGLGetBufferSubDataAsync|WebGLLoseContext|WebGLProgram|WebGLQuery|WebGLRenderbuffer|WebGLRenderingContext|WebGLSampler|WebGLShader|WebGLShaderPrecisionFormat|WebGLSync|WebGLTexture|WebGLTimerQueryEXT|WebGLTransformFeedback|WebGLUniformLocation|WebGLVertexArrayObject|WebGLVertexArrayObjectOES|WebKitMutationObserver|WorkerLocation|WorkerNavigator|Worklet|WorkletAnimation|WorkletGlobalScope|XMLSerializer|XPathEvaluator|XPathExpression|XPathNSResolver|XPathResult|XSLTProcessor|mozRTCIceCandidate|mozRTCSessionDescription"
    },
    JSBool: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $and: function(receiver, other) {
        return H.checkBool(H.boolTypeCheck(other)) && receiver;
      },
      get$hashCode: function(receiver) {
        return receiver ? 519018 : 218159;
      },
      $isbool: 1
    },
    JSNull: {
      "^": "Interceptor;",
      $eq: function(receiver, other) {
        return null == other;
      },
      toString$0: function(receiver) {
        return "null";
      },
      get$hashCode: function(receiver) {
        return 0;
      },
      noSuchMethod$1: [function(receiver, invocation) {
        return this.super$Interceptor$noSuchMethod(receiver, H.interceptedTypeCheck(invocation, "$isInvocation"));
      }, null, "get$noSuchMethod", 5, 0, null, 22],
      $isNull: 1
    },
    JavaScriptObject: {
      "^": "Interceptor;",
      get$hashCode: function(receiver) {
        return 0;
      },
      toString$0: ["super$JavaScriptObject$toString", function(receiver) {
        return String(receiver);
      }],
      $isJsTestability: 1
    },
    PlainJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    UnknownJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    JavaScriptFunction: {
      "^": "JavaScriptObject;",
      toString$0: function(receiver) {
        var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
        if (dartClosure == null)
          return this.super$JavaScriptObject$toString(receiver);
        return "JavaScript function for " + H.S(J.toString$0$(dartClosure));
      },
      $signature: function() {
        return {func: 1, opt: [,,,,,,,,,,,,,,,,]};
      },
      $isFunction: 1
    },
    JSArray: {
      "^": "Interceptor;$ti",
      add$1: function(receiver, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("add"));
        receiver.push(value);
      },
      removeAt$1: function(receiver, index) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeAt"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.argumentErrorValue(index));
        if (index < 0 || index >= receiver.length)
          throw H.wrapException(P.RangeError$value(index, null, null));
        return receiver.splice(index, 1)[0];
      },
      insert$2: function(receiver, index, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("insert"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.argumentErrorValue(index));
        if (index < 0 || index > receiver.length)
          throw H.wrapException(P.RangeError$value(index, null, null));
        receiver.splice(index, 0, value);
      },
      insertAll$2: function(receiver, index, iterable) {
        var t1, insertionLength, end;
        H.assertSubtype(iterable, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("insertAll"));
        P.RangeError_checkValueInInterval(index, 0, receiver.length, "index", null);
        t1 = J.getInterceptor$(iterable);
        if (!t1.$isEfficientLengthIterable)
          iterable = t1.toList$0(iterable);
        insertionLength = J.get$length$asx(iterable);
        t1 = receiver.length;
        if (typeof insertionLength !== "number")
          return H.iae(insertionLength);
        this.set$length(receiver, t1 + insertionLength);
        end = index + insertionLength;
        this.setRange$4(receiver, end, receiver.length, receiver, index);
        this.setRange$3(receiver, index, end, iterable);
      },
      removeLast$0: function(receiver) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeLast"));
        if (receiver.length === 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, -1));
        return receiver.pop();
      },
      remove$1: function(receiver, element) {
        var i;
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("remove"));
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], element)) {
            receiver.splice(i, 1);
            return true;
          }
        return false;
      },
      removeWhere$1: function(receiver, test) {
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeWhere"));
        this._removeWhere$2(receiver, test, true);
      },
      _removeWhere$2: function(receiver, test, removeMatching) {
        var retained, end, i, element, t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        retained = [];
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          element = receiver[i];
          if (!test.call$1(element))
            retained.push(element);
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        t1 = retained.length;
        if (t1 === end)
          return;
        this.set$length(receiver, t1);
        for (i = 0; i < retained.length; ++i)
          receiver[i] = retained[i];
      },
      where$1: function(receiver, f) {
        var t1 = H.getTypeArgumentByIndex(receiver, 0);
        return new H.WhereIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      },
      addAll$1: function(receiver, collection) {
        var t1;
        H.assertSubtype(collection, "$isIterable", [H.getTypeArgumentByIndex(receiver, 0)], "$asIterable");
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("addAll"));
        for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
          receiver.push(t1.get$current(t1));
      },
      forEach$1: function(receiver, f) {
        var end, i;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          f.call$1(receiver[i]);
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
      },
      map$1$1: function(receiver, f, $T) {
        var t1 = H.getTypeArgumentByIndex(receiver, 0);
        return new H.MappedListIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      join$1: function(receiver, separator) {
        var list, i;
        list = new Array(receiver.length);
        list.fixed$length = Array;
        for (i = 0; i < receiver.length; ++i)
          this.$indexSet(list, i, H.S(receiver[i]));
        return list.join(separator);
      },
      skip$1: function(receiver, n) {
        return H.SubListIterable$(receiver, n, null, H.getTypeArgumentByIndex(receiver, 0));
      },
      fold$1$2: function(receiver, initialValue, combine, $T) {
        var $length, value, i;
        H.assertSubtypeOfRuntimeType(initialValue, $T);
        H.functionTypeCheck(combine, {func: 1, ret: $T, args: [$T, H.getTypeArgumentByIndex(receiver, 0)]});
        $length = receiver.length;
        for (value = initialValue, i = 0; i < $length; ++i) {
          value = combine.call$2(value, receiver[i]);
          if (receiver.length !== $length)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return value;
      },
      firstWhere$2$orElse: function(receiver, test, orElse) {
        var t1, end, i, element;
        t1 = H.getTypeArgumentByIndex(receiver, 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        H.functionTypeCheck(orElse, {func: 1, ret: t1});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          element = receiver[i];
          if (test.call$1(element))
            return element;
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return orElse.call$0();
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      sublist$2: function(receiver, start, end) {
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, "start", null));
        if (end == null)
          end = receiver.length;
        else if (end < start || end > receiver.length)
          throw H.wrapException(P.RangeError$range(end, start, receiver.length, "end", null));
        if (start === end)
          return H.setRuntimeTypeInfo([], [H.getTypeArgumentByIndex(receiver, 0)]);
        return H.setRuntimeTypeInfo(receiver.slice(start, end), [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      getRange$2: function(receiver, start, end) {
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        return H.SubListIterable$(receiver, start, end, H.getTypeArgumentByIndex(receiver, 0));
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      get$last: function(receiver) {
        var t1 = receiver.length;
        if (t1 > 0)
          return receiver[t1 - 1];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      get$single: function(receiver) {
        var t1 = receiver.length;
        if (t1 === 1) {
          if (0 >= t1)
            return H.ioore(receiver, 0);
          return receiver[0];
        }
        if (t1 === 0)
          throw H.wrapException(H.IterableElementError_noElement());
        throw H.wrapException(H.IterableElementError_tooMany());
      },
      removeRange$2: function(receiver, start, end) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeRange"));
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        receiver.splice(start, end - start);
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        var t1, $length, t2, otherStart, otherList, i;
        t1 = H.getTypeArgumentByIndex(receiver, 0);
        H.assertSubtype(iterable, "$isIterable", [t1], "$asIterable");
        if (!!receiver.immutable$list)
          H.throwExpression(P.UnsupportedError$("setRange"));
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        if (typeof end !== "number")
          return end.$sub();
        if (typeof start !== "number")
          return H.iae(start);
        $length = end - start;
        if ($length === 0)
          return;
        if (skipCount < 0)
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "skipCount", null));
        t2 = J.getInterceptor$(iterable);
        if (!!t2.$isList) {
          H.assertSubtype(iterable, "$isList", [t1], "$asList");
          otherStart = skipCount;
          otherList = iterable;
        } else {
          otherList = t2.skip$1(iterable, skipCount).toList$1$growable(0, false);
          otherStart = 0;
        }
        t1 = J.getInterceptor$asx(otherList);
        t2 = t1.get$length(otherList);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (otherStart + $length > t2)
          throw H.wrapException(H.IterableElementError_tooFew());
        if (otherStart < start)
          for (i = $length - 1; i >= 0; --i)
            receiver[start + i] = t1.$index(otherList, otherStart + i);
        else
          for (i = 0; i < $length; ++i)
            receiver[start + i] = t1.$index(otherList, otherStart + i);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      any$1: function(receiver, test) {
        var end, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          if (test.call$1(receiver[i]))
            return true;
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return false;
      },
      every$1: function(receiver, test) {
        var end, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          if (!test.call$1(receiver[i]))
            return false;
          if (receiver.length !== end)
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return true;
      },
      indexOf$2: function(receiver, element, start) {
        var i;
        if (start >= receiver.length)
          return -1;
        for (i = start; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], element))
            return i;
        return -1;
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      contains$1: function(receiver, other) {
        var i;
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq$(receiver[i], other))
            return true;
        return false;
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.length !== 0;
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      toList$1$growable: function(receiver, growable) {
        var t1 = H.setRuntimeTypeInfo(receiver.slice(0), [H.getTypeArgumentByIndex(receiver, 0)]);
        return t1;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      get$iterator: function(receiver) {
        return new J.ArrayIterator(receiver, receiver.length, 0, [H.getTypeArgumentByIndex(receiver, 0)]);
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      set$length: function(receiver, newLength) {
        if (!!receiver.fixed$length)
          H.throwExpression(P.UnsupportedError$("set length"));
        if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
          throw H.wrapException(P.ArgumentError$value(newLength, "newLength", null));
        if (newLength < 0)
          throw H.wrapException(P.RangeError$range(newLength, 0, null, "newLength", null));
        receiver.length = newLength;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(receiver, 0));
        if (!!receiver.immutable$list)
          H.throwExpression(P.UnsupportedError$("indexed set"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        receiver[index] = value;
      },
      $add: function(receiver, other) {
        var t1, totalLength;
        t1 = [H.getTypeArgumentByIndex(receiver, 0)];
        H.assertSubtype(other, "$isList", t1, "$asList");
        totalLength = C.JSInt_methods.$add(receiver.length, other.get$length(other));
        t1 = H.setRuntimeTypeInfo([], t1);
        this.set$length(t1, totalLength);
        this.setRange$3(t1, 0, receiver.length, receiver);
        this.setRange$3(t1, receiver.length, totalLength, other);
        return t1;
      },
      indexWhere$2: function(receiver, test, start) {
        var i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(receiver, 0)]});
        if (start >= receiver.length)
          return -1;
        for (i = start; i < receiver.length; ++i)
          if (test.call$1(receiver[i]))
            return i;
        return -1;
      },
      indexWhere$1: function($receiver, test) {
        return this.indexWhere$2($receiver, test, 0);
      },
      $isJSIndexable: 1,
      $asJSIndexable: Isolate.functionThatReturnsNull,
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1,
      static: {
        JSArray_JSArray$fixed: function($length, $E) {
          if (typeof $length !== "number" || Math.floor($length) !== $length)
            throw H.wrapException(P.ArgumentError$value($length, "length", "is not an integer"));
          if ($length < 0 || $length > 4294967295)
            throw H.wrapException(P.RangeError$range($length, 0, 4294967295, "length", null));
          return J.JSArray_JSArray$markFixed(new Array($length), $E);
        },
        JSArray_JSArray$markFixed: function(allocation, $E) {
          return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, [$E]));
        },
        JSArray_markFixedList: function(list) {
          H.listTypeCheck(list);
          list.fixed$length = Array;
          return list;
        },
        JSArray_markUnmodifiableList: function(list) {
          list.fixed$length = Array;
          list.immutable$list = Array;
          return list;
        }
      }
    },
    JSUnmodifiableArray: {
      "^": "JSArray;$ti"
    },
    ArrayIterator: {
      "^": "Object;_iterable,_length,__interceptors$_index,0__interceptors$_current,$ti",
      set$__interceptors$_current: function(_current) {
        this.__interceptors$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this.__interceptors$_current;
      },
      moveNext$0: function() {
        var t1, $length, t2;
        t1 = this._iterable;
        $length = t1.length;
        if (this._length !== $length)
          throw H.wrapException(H.throwConcurrentModificationError(t1));
        t2 = this.__interceptors$_index;
        if (t2 >= $length) {
          this.set$__interceptors$_current(null);
          return false;
        }
        this.set$__interceptors$_current(t1[t2]);
        ++this.__interceptors$_index;
        return true;
      },
      $isIterator: 1
    },
    JSNumber: {
      "^": "Interceptor;",
      compareTo$1: function(receiver, b) {
        var bIsNegative;
        H.numTypeCheck(b);
        if (typeof b !== "number")
          throw H.wrapException(H.argumentErrorValue(b));
        if (receiver < b)
          return -1;
        else if (receiver > b)
          return 1;
        else if (receiver === b) {
          if (receiver === 0) {
            bIsNegative = this.get$isNegative(b);
            if (this.get$isNegative(receiver) === bIsNegative)
              return 0;
            if (this.get$isNegative(receiver))
              return -1;
            return 1;
          }
          return 0;
        } else if (isNaN(receiver)) {
          if (isNaN(b))
            return 0;
          return 1;
        } else
          return -1;
      },
      get$isNegative: function(receiver) {
        return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
      },
      remainder$1: function(receiver, b) {
        return receiver % b;
      },
      abs$0: function(receiver) {
        return Math.abs(receiver);
      },
      toInt$0: function(receiver) {
        var t1;
        if (receiver >= -2147483648 && receiver <= 2147483647)
          return receiver | 0;
        if (isFinite(receiver)) {
          t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
          return t1 + 0;
        }
        throw H.wrapException(P.UnsupportedError$("" + receiver + ".toInt()"));
      },
      ceil$0: function(receiver) {
        var truncated, d;
        if (receiver >= 0) {
          if (receiver <= 2147483647) {
            truncated = receiver | 0;
            return receiver === truncated ? truncated : truncated + 1;
          }
        } else if (receiver >= -2147483648)
          return receiver | 0;
        d = Math.ceil(receiver);
        if (isFinite(d))
          return d;
        throw H.wrapException(P.UnsupportedError$("" + receiver + ".ceil()"));
      },
      floor$0: function(receiver) {
        var truncated, d;
        if (receiver >= 0) {
          if (receiver <= 2147483647)
            return receiver | 0;
        } else if (receiver >= -2147483648) {
          truncated = receiver | 0;
          return receiver === truncated ? truncated : truncated - 1;
        }
        d = Math.floor(receiver);
        if (isFinite(d))
          return d;
        throw H.wrapException(P.UnsupportedError$("" + receiver + ".floor()"));
      },
      round$0: function(receiver) {
        if (receiver > 0) {
          if (receiver !== 1 / 0)
            return Math.round(receiver);
        } else if (receiver > -1 / 0)
          return 0 - Math.round(0 - receiver);
        throw H.wrapException(P.UnsupportedError$("" + receiver + ".round()"));
      },
      clamp$2: function(receiver, lowerLimit, upperLimit) {
        if (C.JSInt_methods.compareTo$1(lowerLimit, upperLimit) > 0)
          throw H.wrapException(H.argumentErrorValue(lowerLimit));
        if (this.compareTo$1(receiver, lowerLimit) < 0)
          return lowerLimit;
        if (this.compareTo$1(receiver, upperLimit) > 0)
          return upperLimit;
        return receiver;
      },
      toDouble$0: function(receiver) {
        return receiver;
      },
      toRadixString$1: function(receiver, radix) {
        var result, match, t1, exponent;
        if (radix < 2 || radix > 36)
          throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
        result = receiver.toString(radix);
        if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
          return result;
        match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
        if (match == null)
          H.throwExpression(P.UnsupportedError$("Unexpected toString result: " + result));
        t1 = match.length;
        if (1 >= t1)
          return H.ioore(match, 1);
        result = match[1];
        if (3 >= t1)
          return H.ioore(match, 3);
        exponent = +match[3];
        t1 = match[2];
        if (t1 != null) {
          result += t1;
          exponent -= t1.length;
        }
        return result + C.JSString_methods.$mul("0", exponent);
      },
      toString$0: function(receiver) {
        if (receiver === 0 && 1 / receiver < 0)
          return "-0.0";
        else
          return "" + receiver;
      },
      get$hashCode: function(receiver) {
        return receiver & 0x1FFFFFFF;
      },
      $add: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver + other;
      },
      $sub: function(receiver, other) {
        H.numTypeCheck(other);
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver - other;
      },
      $mul: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver * other;
      },
      $mod: function(receiver, other) {
        var result = receiver % other;
        if (result === 0)
          return 0;
        if (result > 0)
          return result;
        if (other < 0)
          return result - other;
        else
          return result + other;
      },
      $tdiv: function(receiver, other) {
        if ((receiver | 0) === receiver)
          if (other >= 1 || other < -1)
            return receiver / other | 0;
        return this._tdivSlow$1(receiver, other);
      },
      _tdivFast$1: function(receiver, other) {
        return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
      },
      _tdivSlow$1: function(receiver, other) {
        var quotient = receiver / other;
        if (quotient >= -2147483648 && quotient <= 2147483647)
          return quotient | 0;
        if (quotient > 0) {
          if (quotient !== 1 / 0)
            return Math.floor(quotient);
        } else if (quotient > -1 / 0)
          return Math.ceil(quotient);
        throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + other));
      },
      _shrOtherPositive$1: function(receiver, other) {
        var t1;
        if (receiver > 0)
          t1 = this._shrBothPositive$1(receiver, other);
        else {
          t1 = other > 31 ? 31 : other;
          t1 = receiver >> t1 >>> 0;
        }
        return t1;
      },
      _shrReceiverPositive$1: function(receiver, other) {
        if (other < 0)
          throw H.wrapException(H.argumentErrorValue(other));
        return this._shrBothPositive$1(receiver, other);
      },
      _shrBothPositive$1: function(receiver, other) {
        return other > 31 ? 0 : receiver >>> other;
      },
      $and: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return (receiver & other) >>> 0;
      },
      $or: function(receiver, other) {
        H.numTypeCheck(other);
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return (receiver | other) >>> 0;
      },
      $lt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(H.argumentErrorValue(other));
        return receiver < other;
      },
      $isdouble: 1,
      $isnum: 1
    },
    JSInt: {
      "^": "JSNumber;",
      abs$0: function(receiver) {
        return Math.abs(receiver);
      },
      $isint: 1
    },
    JSDouble: {
      "^": "JSNumber;"
    },
    JSString: {
      "^": "Interceptor;",
      codeUnitAt$1: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        if (index >= receiver.length)
          H.throwExpression(H.diagnoseIndexError(receiver, index));
        return receiver.charCodeAt(index);
      },
      _codeUnitAt$1: function(receiver, index) {
        if (index >= receiver.length)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver.charCodeAt(index);
      },
      allMatches$2: function(receiver, string, start) {
        var t1;
        if (typeof string !== "string")
          H.throwExpression(H.argumentErrorValue(string));
        t1 = string.length;
        if (start > t1)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return new H._StringAllMatchesIterable(string, receiver, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      matchAsPrefix$2: function(receiver, string, start) {
        var t1, i;
        if (typeof start !== "number")
          return start.$lt();
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        t1 = receiver.length;
        if (start + t1 > string.length)
          return;
        for (i = 0; i < t1; ++i)
          if (this.codeUnitAt$1(string, start + i) !== this._codeUnitAt$1(receiver, i))
            return;
        return new H.StringMatch(start, string, receiver);
      },
      $add: function(receiver, other) {
        H.stringTypeCheck(other);
        if (typeof other !== "string")
          throw H.wrapException(P.ArgumentError$value(other, null, null));
        return receiver + other;
      },
      endsWith$1: function(receiver, other) {
        var otherLength, t1;
        otherLength = other.length;
        t1 = receiver.length;
        if (otherLength > t1)
          return false;
        return other === this.substring$1(receiver, t1 - otherLength);
      },
      replaceFirst$3: function(receiver, from, to, startIndex) {
        if (typeof to !== "string")
          H.throwExpression(H.argumentErrorValue(to));
        P.RangeError_checkValueInInterval(startIndex, 0, receiver.length, "startIndex", null);
        return H.stringReplaceFirstUnchecked(receiver, from, to, startIndex);
      },
      replaceFirst$2: function($receiver, from, to) {
        return this.replaceFirst$3($receiver, from, to, 0);
      },
      split$1: function(receiver, pattern) {
        if (pattern == null)
          H.throwExpression(H.argumentErrorValue(pattern));
        if (typeof pattern === "string")
          return H.setRuntimeTypeInfo(receiver.split(pattern), [P.String]);
        else if (pattern instanceof H.JSSyntaxRegExp && pattern.get$_nativeAnchoredVersion().exec("").length - 2 === 0)
          return H.setRuntimeTypeInfo(receiver.split(pattern._nativeRegExp), [P.String]);
        else
          return this._defaultSplit$1(receiver, pattern);
      },
      replaceRange$3: function(receiver, start, end, replacement) {
        if (typeof replacement !== "string")
          H.throwExpression(H.argumentErrorValue(replacement));
        if (typeof start !== "number" || Math.floor(start) !== start)
          H.throwExpression(H.argumentErrorValue(start));
        end = P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        if (typeof end !== "number" || Math.floor(end) !== end)
          H.throwExpression(H.argumentErrorValue(end));
        return H.stringReplaceRangeUnchecked(receiver, start, end, replacement);
      },
      _defaultSplit$1: function(receiver, pattern) {
        var result, t1, start, $length, match, matchStart, matchEnd;
        result = H.setRuntimeTypeInfo([], [P.String]);
        for (t1 = J.allMatches$1$s(pattern, receiver), t1 = t1.get$iterator(t1), start = 0, $length = 1; t1.moveNext$0();) {
          match = t1.get$current(t1);
          matchStart = match.get$start(match);
          matchEnd = match.get$end(match);
          if (typeof matchStart !== "number")
            return H.iae(matchStart);
          $length = matchEnd - matchStart;
          if ($length === 0 && start === matchStart)
            continue;
          C.JSArray_methods.add$1(result, this.substring$2(receiver, start, matchStart));
          start = matchEnd;
        }
        if (start < receiver.length || $length > 0)
          C.JSArray_methods.add$1(result, this.substring$1(receiver, start));
        return result;
      },
      startsWith$2: function(receiver, pattern, index) {
        var endIndex;
        if (typeof index !== "number" || Math.floor(index) !== index)
          H.throwExpression(H.argumentErrorValue(index));
        if (typeof index !== "number")
          return index.$lt();
        if (index < 0 || index > receiver.length)
          throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
        if (typeof pattern === "string") {
          endIndex = index + pattern.length;
          if (endIndex > receiver.length)
            return false;
          return pattern === receiver.substring(index, endIndex);
        }
        return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
      },
      startsWith$1: function($receiver, pattern) {
        return this.startsWith$2($receiver, pattern, 0);
      },
      substring$2: function(receiver, startIndex, endIndex) {
        H.intTypeCheck(endIndex);
        if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
          H.throwExpression(H.argumentErrorValue(startIndex));
        if (endIndex == null)
          endIndex = receiver.length;
        if (typeof startIndex !== "number")
          return startIndex.$lt();
        if (startIndex < 0)
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (startIndex > endIndex)
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (endIndex > receiver.length)
          throw H.wrapException(P.RangeError$value(endIndex, null, null));
        return receiver.substring(startIndex, endIndex);
      },
      substring$1: function($receiver, startIndex) {
        return this.substring$2($receiver, startIndex, null);
      },
      trim$0: function(receiver) {
        var result, endIndex, startIndex, t1, endIndex0;
        result = receiver.trim();
        endIndex = result.length;
        if (endIndex === 0)
          return result;
        if (this._codeUnitAt$1(result, 0) === 133) {
          startIndex = J.JSString__skipLeadingWhitespace(result, 1);
          if (startIndex === endIndex)
            return "";
        } else
          startIndex = 0;
        t1 = endIndex - 1;
        endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
        if (startIndex === 0 && endIndex0 === endIndex)
          return result;
        return result.substring(startIndex, endIndex0);
      },
      $mul: function(receiver, times) {
        var s, result;
        H.intTypeCheck(times);
        if (0 >= times)
          return "";
        if (times === 1 || receiver.length === 0)
          return receiver;
        if (times !== times >>> 0)
          throw H.wrapException(C.C_OutOfMemoryError);
        for (s = receiver, result = ""; true;) {
          if ((times & 1) === 1)
            result = s + result;
          times = times >>> 1;
          if (times === 0)
            break;
          s += s;
        }
        return result;
      },
      padLeft$2: function(receiver, width, padding) {
        var delta = width - receiver.length;
        if (delta <= 0)
          return receiver;
        return this.$mul(padding, delta) + receiver;
      },
      padRight$2: function(receiver, width, padding) {
        var delta;
        if (typeof width !== "number")
          return width.$sub();
        delta = width - receiver.length;
        if (delta <= 0)
          return receiver;
        return receiver + this.$mul(padding, delta);
      },
      padRight$1: function($receiver, width) {
        return this.padRight$2($receiver, width, " ");
      },
      indexOf$2: function(receiver, pattern, start) {
        var t1;
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
        t1 = receiver.indexOf(pattern, start);
        return t1;
      },
      indexOf$1: function($receiver, pattern) {
        return this.indexOf$2($receiver, pattern, 0);
      },
      lastIndexOf$2: function(receiver, pattern, start) {
        var t1, t2;
        if (start == null)
          start = receiver.length;
        else if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
        t1 = pattern.length;
        t2 = receiver.length;
        if (start + t1 > t2)
          start = t2 - t1;
        return receiver.lastIndexOf(pattern, start);
      },
      lastIndexOf$1: function($receiver, pattern) {
        return this.lastIndexOf$2($receiver, pattern, null);
      },
      contains$2: function(receiver, other, startIndex) {
        if (other == null)
          H.throwExpression(H.argumentErrorValue(other));
        if (startIndex > receiver.length)
          throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length, null, null));
        return H.stringContainsUnchecked(receiver, other, startIndex);
      },
      contains$1: function($receiver, other) {
        return this.contains$2($receiver, other, 0);
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      toString$0: function(receiver) {
        return receiver;
      },
      get$hashCode: function(receiver) {
        var t1, hash, i;
        for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
          hash = 536870911 & hash + receiver.charCodeAt(i);
          hash = 536870911 & hash + ((524287 & hash) << 10);
          hash ^= hash >> 6;
        }
        hash = 536870911 & hash + ((67108863 & hash) << 3);
        hash ^= hash >> 11;
        return 536870911 & hash + ((16383 & hash) << 15);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >= receiver.length || index < 0)
          throw H.wrapException(H.diagnoseIndexError(receiver, index));
        return receiver[index];
      },
      $isJSIndexable: 1,
      $asJSIndexable: Isolate.functionThatReturnsNull,
      $isPattern: 1,
      $isString: 1,
      static: {
        JSString__isWhitespace: function(codeUnit) {
          if (codeUnit < 256)
            switch (codeUnit) {
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
              case 133:
              case 160:
                return true;
              default:
                return false;
            }
          switch (codeUnit) {
            case 5760:
            case 8192:
            case 8193:
            case 8194:
            case 8195:
            case 8196:
            case 8197:
            case 8198:
            case 8199:
            case 8200:
            case 8201:
            case 8202:
            case 8232:
            case 8233:
            case 8239:
            case 8287:
            case 12288:
            case 65279:
              return true;
            default:
              return false;
          }
        },
        JSString__skipLeadingWhitespace: function(string, index) {
          var t1, codeUnit;
          for (t1 = string.length; index < t1;) {
            codeUnit = C.JSString_methods._codeUnitAt$1(string, index);
            if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
              break;
            ++index;
          }
          return index;
        },
        JSString__skipTrailingWhitespace: function(string, index) {
          var index0, codeUnit;
          for (; index > 0; index = index0) {
            index0 = index - 1;
            codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
            if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
              break;
          }
          return index;
        }
      }
    }
  }], ["dart._internal", "dart:_internal",, H, {
    "^": "",
    hexDigitValue: function(char) {
      var digit, letter;
      digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    _checkCount: function(count) {
      if (count < 0)
        H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
      return count;
    },
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooMany: function() {
      return new P.StateError("Too many elements");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    CodeUnits: {
      "^": "UnmodifiableListBase;__internal$_string",
      get$length: function(_) {
        return this.__internal$_string.length;
      },
      $index: function(_, i) {
        return C.JSString_methods.codeUnitAt$1(this.__internal$_string, H.intTypeCheck(i));
      },
      $asEfficientLengthIterable: function() {
        return [P.int];
      },
      $asUnmodifiableListMixin: function() {
        return [P.int];
      },
      $asListBase: function() {
        return [P.int];
      },
      $asListMixin: function() {
        return [P.int];
      },
      $asIterable: function() {
        return [P.int];
      },
      $asList: function() {
        return [P.int];
      }
    },
    EfficientLengthIterable: {
      "^": "Iterable;$ti"
    },
    ListIterable: {
      "^": "EfficientLengthIterable;$ti",
      get$iterator: function(_) {
        return new H.ListIterator(this, this.get$length(this), 0, [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
      },
      forEach$1: function(_, action) {
        var $length, i;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "ListIterable", 0)]});
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          action.call$1(this.elementAt$1(0, i));
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
      },
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      contains$1: function(_, element) {
        var $length, i;
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (J.$eq$(this.elementAt$1(0, i), element))
            return true;
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return false;
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1, $length, i, element;
        t1 = H.getRuntimeTypeArgument(this, "ListIterable", 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        H.functionTypeCheck(orElse, {func: 1, ret: t1});
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          element = this.elementAt$1(0, i);
          if (test.call$1(element))
            return element;
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return orElse.call$0();
      },
      join$1: function(_, separator) {
        var $length, first, t1, i;
        $length = this.get$length(this);
        if (separator.length !== 0) {
          if ($length === 0)
            return "";
          first = H.S(this.elementAt$1(0, 0));
          if ($length != this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = first;
          i = 1;
          for (; i < $length; ++i) {
            t1 = t1 + separator + H.S(this.elementAt$1(0, i));
            if ($length !== this.get$length(this))
              throw H.wrapException(P.ConcurrentModificationError$(this));
          }
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        } else {
          if (typeof $length !== "number")
            return H.iae($length);
          i = 0;
          t1 = "";
          for (; i < $length; ++i) {
            t1 += H.S(this.elementAt$1(0, i));
            if ($length !== this.get$length(this))
              throw H.wrapException(P.ConcurrentModificationError$(this));
          }
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }
      },
      join$0: function($receiver) {
        return this.join$1($receiver, "");
      },
      where$1: function(_, test) {
        return this.super$Iterable$where(0, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "ListIterable", 0)]}));
      },
      map$1$1: function(_, f, $T) {
        var t1 = H.getRuntimeTypeArgument(this, "ListIterable", 0);
        return new H.MappedListIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      fold$1$2: function(_, initialValue, combine, $T) {
        var $length, value, i;
        H.assertSubtypeOfRuntimeType(initialValue, $T);
        H.functionTypeCheck(combine, {func: 1, ret: $T, args: [$T, H.getRuntimeTypeArgument(this, "ListIterable", 0)]});
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        value = initialValue;
        i = 0;
        for (; i < $length; ++i) {
          value = combine.call$2(value, this.elementAt$1(0, i));
          if ($length !== this.get$length(this))
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return value;
      },
      skip$1: function(_, count) {
        return H.SubListIterable$(this, count, null, H.getRuntimeTypeArgument(this, "ListIterable", 0));
      },
      toList$1$growable: function(_, growable) {
        var result, i, t1;
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgument(this, "ListIterable", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(this));
        i = 0;
        while (true) {
          t1 = this.get$length(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          C.JSArray_methods.$indexSet(result, i, this.elementAt$1(0, i));
          ++i;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      }
    },
    SubListIterable: {
      "^": "ListIterable;__internal$_iterable,__internal$_start,_endOrLength,$ti",
      get$_endIndex: function() {
        var $length, t1, t2;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this._endOrLength;
        if (t1 != null) {
          if (typeof $length !== "number")
            return H.iae($length);
          t2 = t1 > $length;
        } else
          t2 = true;
        if (t2)
          return $length;
        return t1;
      },
      get$_startIndex: function() {
        var $length, t1;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this.__internal$_start;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t1 > $length)
          return $length;
        return t1;
      },
      get$length: function(_) {
        var $length, t1, t2;
        $length = J.get$length$asx(this.__internal$_iterable);
        t1 = this.__internal$_start;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t1 >= $length)
          return 0;
        t2 = this._endOrLength;
        if (t2 == null || t2 >= $length)
          return $length - t1;
        if (typeof t2 !== "number")
          return t2.$sub();
        return t2 - t1;
      },
      elementAt$1: function(_, index) {
        var t1, realIndex;
        t1 = this.get$_startIndex();
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof index !== "number")
          return H.iae(index);
        realIndex = t1 + index;
        if (index >= 0) {
          t1 = this.get$_endIndex();
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = realIndex >= t1;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.IndexError$(index, this, "index", null, null));
        return J.elementAt$1$ax(this.__internal$_iterable, realIndex);
      },
      skip$1: function(_, count) {
        var newStart, t1;
        if (count < 0)
          H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
        newStart = this.__internal$_start + count;
        t1 = this._endOrLength;
        if (t1 != null && newStart >= t1)
          return new H.EmptyIterable(this.$ti);
        return H.SubListIterable$(this.__internal$_iterable, newStart, t1, H.getTypeArgumentByIndex(this, 0));
      },
      take$1: function(_, count) {
        var t1, t2, newEnd;
        if (count < 0)
          H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
        t1 = this._endOrLength;
        t2 = this.__internal$_start;
        newEnd = t2 + count;
        if (t1 == null)
          return H.SubListIterable$(this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(this, 0));
        else {
          if (t1 < newEnd)
            return this;
          return H.SubListIterable$(this.__internal$_iterable, t2, newEnd, H.getTypeArgumentByIndex(this, 0));
        }
      },
      toList$1$growable: function(_, growable) {
        var start, t1, t2, end, end0, t3, $length, result, t4, i;
        start = this.__internal$_start;
        t1 = this.__internal$_iterable;
        t2 = J.getInterceptor$asx(t1);
        end = t2.get$length(t1);
        end0 = this._endOrLength;
        if (end0 != null) {
          if (typeof end !== "number")
            return H.iae(end);
          t3 = end0 < end;
        } else
          t3 = false;
        if (t3)
          end = end0;
        if (typeof end !== "number")
          return end.$sub();
        $length = end - start;
        if ($length < 0)
          $length = 0;
        t3 = this.$ti;
        if (growable) {
          result = H.setRuntimeTypeInfo([], t3);
          C.JSArray_methods.set$length(result, $length);
        } else {
          t4 = new Array($length);
          t4.fixed$length = Array;
          result = H.setRuntimeTypeInfo(t4, t3);
        }
        for (i = 0; i < $length; ++i) {
          C.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return t3.$lt();
          if (t3 < end)
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      static: {
        SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
          if (_start < 0)
            H.throwExpression(P.RangeError$range(_start, 0, null, "start", null));
          if (_endOrLength != null) {
            if (_endOrLength < 0)
              H.throwExpression(P.RangeError$range(_endOrLength, 0, null, "end", null));
            if (_start > _endOrLength)
              H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, "start", null));
          }
          return new H.SubListIterable(_iterable, _start, _endOrLength, [$E]);
        }
      }
    },
    ListIterator: {
      "^": "Object;__internal$_iterable,__internal$_length,__internal$_index,0__internal$_current,$ti",
      set$__internal$_current: function(_current) {
        this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this.__internal$_current;
      },
      moveNext$0: function() {
        var t1, t2, $length, t3;
        t1 = this.__internal$_iterable;
        t2 = J.getInterceptor$asx(t1);
        $length = t2.get$length(t1);
        if (this.__internal$_length != $length)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        t3 = this.__internal$_index;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t3 >= $length) {
          this.set$__internal$_current(null);
          return false;
        }
        this.set$__internal$_current(t2.elementAt$1(t1, t3));
        ++this.__internal$_index;
        return true;
      },
      $isIterator: 1
    },
    MappedIterable: {
      "^": "Iterable;__internal$_iterable,_f,$ti",
      get$iterator: function(_) {
        return new H.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti);
      },
      get$length: function(_) {
        return J.get$length$asx(this.__internal$_iterable);
      },
      get$isEmpty: function(_) {
        return J.get$isEmpty$asx(this.__internal$_iterable);
      },
      elementAt$1: function(_, index) {
        return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
      },
      $asIterable: function($S, $T) {
        return [$T];
      },
      static: {
        MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
          H.assertSubtype(iterable, "$isIterable", [$S], "$asIterable");
          H.functionTypeCheck($function, {func: 1, ret: $T, args: [$S]});
          if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
            return new H.EfficientLengthMappedIterable(iterable, $function, [$S, $T]);
          return new H.MappedIterable(iterable, $function, [$S, $T]);
        }
      }
    },
    EfficientLengthMappedIterable: {
      "^": "MappedIterable;__internal$_iterable,_f,$ti",
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function($S, $T) {
        return [$T];
      }
    },
    MappedIterator: {
      "^": "Iterator;0__internal$_current,_iterator,_f,$ti",
      set$__internal$_current: function(_current) {
        this.__internal$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
      },
      moveNext$0: function() {
        var t1 = this._iterator;
        if (t1.moveNext$0()) {
          this.set$__internal$_current(this._f.call$1(t1.get$current(t1)));
          return true;
        }
        this.set$__internal$_current(null);
        return false;
      },
      get$current: function(_) {
        return this.__internal$_current;
      },
      $asIterator: function($S, $T) {
        return [$T];
      }
    },
    MappedListIterable: {
      "^": "ListIterable;_source,_f,$ti",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        return this._f.call$1(J.elementAt$1$ax(this._source, index));
      },
      $asEfficientLengthIterable: function($S, $T) {
        return [$T];
      },
      $asListIterable: function($S, $T) {
        return [$T];
      },
      $asIterable: function($S, $T) {
        return [$T];
      }
    },
    WhereIterable: {
      "^": "Iterable;__internal$_iterable,_f,$ti",
      get$iterator: function(_) {
        return new H.WhereIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, this.$ti);
      },
      map$1$1: function(_, f, $T) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        return new H.MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      }
    },
    WhereIterator: {
      "^": "Iterator;_iterator,_f,$ti",
      moveNext$0: function() {
        var t1, t2;
        for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
          if (t2.call$1(t1.get$current(t1)))
            return true;
        return false;
      },
      get$current: function(_) {
        var t1 = this._iterator;
        return t1.get$current(t1);
      }
    },
    TakeIterable: {
      "^": "Iterable;__internal$_iterable,_takeCount,$ti",
      get$iterator: function(_) {
        return new H.TakeIterator(J.get$iterator$ax(this.__internal$_iterable), this._takeCount, this.$ti);
      },
      static: {
        TakeIterable_TakeIterable: function(iterable, takeCount, $E) {
          H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
          if (takeCount < 0)
            throw H.wrapException(P.ArgumentError$(takeCount));
          if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
            return new H.EfficientLengthTakeIterable(iterable, takeCount, [$E]);
          return new H.TakeIterable(iterable, takeCount, [$E]);
        }
      }
    },
    EfficientLengthTakeIterable: {
      "^": "TakeIterable;__internal$_iterable,_takeCount,$ti",
      get$length: function(_) {
        var iterableLength, t1;
        iterableLength = J.get$length$asx(this.__internal$_iterable);
        t1 = this._takeCount;
        if (typeof iterableLength !== "number")
          return iterableLength.$gt();
        if (iterableLength > t1)
          return t1;
        return iterableLength;
      },
      $isEfficientLengthIterable: 1
    },
    TakeIterator: {
      "^": "Iterator;_iterator,_remaining,$ti",
      moveNext$0: function() {
        if (--this._remaining >= 0)
          return this._iterator.moveNext$0();
        this._remaining = -1;
        return false;
      },
      get$current: function(_) {
        var t1;
        if (this._remaining < 0)
          return;
        t1 = this._iterator;
        return t1.get$current(t1);
      }
    },
    SkipIterable: {
      "^": "Iterable;__internal$_iterable,_skipCount,$ti",
      skip$1: function(_, count) {
        return new H.SkipIterable(this.__internal$_iterable, this._skipCount + H._checkCount(count), this.$ti);
      },
      get$iterator: function(_) {
        return new H.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount, this.$ti);
      },
      static: {
        SkipIterable_SkipIterable: function(iterable, count, $E) {
          H.assertSubtype(iterable, "$isIterable", [$E], "$asIterable");
          if (!!J.getInterceptor$(iterable).$isEfficientLengthIterable)
            return new H.EfficientLengthSkipIterable(iterable, H._checkCount(count), [$E]);
          return new H.SkipIterable(iterable, H._checkCount(count), [$E]);
        }
      }
    },
    EfficientLengthSkipIterable: {
      "^": "SkipIterable;__internal$_iterable,_skipCount,$ti",
      get$length: function(_) {
        var t1, $length;
        t1 = J.get$length$asx(this.__internal$_iterable);
        if (typeof t1 !== "number")
          return t1.$sub();
        $length = t1 - this._skipCount;
        if ($length >= 0)
          return $length;
        return 0;
      },
      skip$1: function(_, count) {
        return new H.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + H._checkCount(count), this.$ti);
      },
      $isEfficientLengthIterable: 1
    },
    SkipIterator: {
      "^": "Iterator;_iterator,_skipCount,$ti",
      moveNext$0: function() {
        var t1, i;
        for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
          t1.moveNext$0();
        this._skipCount = 0;
        return t1.moveNext$0();
      },
      get$current: function(_) {
        var t1 = this._iterator;
        return t1.get$current(t1);
      }
    },
    EmptyIterable: {
      "^": "EfficientLengthIterable;$ti",
      get$iterator: function(_) {
        return C.C_EmptyIterator;
      },
      forEach$1: function(_, action) {
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
      },
      get$isEmpty: function(_) {
        return true;
      },
      get$length: function(_) {
        return 0;
      },
      elementAt$1: function(_, index) {
        throw H.wrapException(P.RangeError$range(index, 0, 0, "index", null));
      },
      contains$1: function(_, element) {
        return false;
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        t1 = H.functionTypeCheck(orElse, {func: 1, ret: t1}).call$0();
        return t1;
      },
      join$1: function(_, separator) {
        return "";
      },
      where$1: function(_, test) {
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]});
        return this;
      },
      map$1$1: function(_, f, $T) {
        H.functionTypeCheck(f, {func: 1, ret: $T, args: [H.getTypeArgumentByIndex(this, 0)]});
        return new H.EmptyIterable([$T]);
      },
      skip$1: function(_, count) {
        if (count < 0)
          H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
        return this;
      },
      toList$1$growable: function(_, growable) {
        var t1, t2;
        t1 = this.$ti;
        if (growable)
          t1 = H.setRuntimeTypeInfo([], t1);
        else {
          t2 = new Array(0);
          t2.fixed$length = Array;
          t1 = H.setRuntimeTypeInfo(t2, t1);
        }
        return t1;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      }
    },
    EmptyIterator: {
      "^": "Object;$ti",
      moveNext$0: function() {
        return false;
      },
      get$current: function(_) {
        return;
      },
      $isIterator: 1
    },
    FixedLengthListMixin: {
      "^": "Object;$ti",
      set$length: function(receiver, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot change the length of a fixed-length list"));
      },
      add$1: function(receiver, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
      },
      insert$2: function(receiver, index, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to a fixed-length list"));
      },
      remove$1: function(receiver, element) {
        throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
      },
      removeWhere$1: function(receiver, test) {
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "FixedLengthListMixin", 0)]});
        throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
      },
      removeAt$1: function(receiver, index) {
        throw H.wrapException(P.UnsupportedError$("Cannot remove from a fixed-length list"));
      }
    },
    UnmodifiableListMixin: {
      "^": "Object;$ti",
      $indexSet: function(_, index, value) {
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot change the length of an unmodifiable list"));
      },
      add$1: function(_, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
      },
      insert$2: function(_, index, element) {
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to an unmodifiable list"));
      },
      remove$1: function(_, element) {
        throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
      },
      removeWhere$1: function(_, test) {
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0)]});
        throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
      },
      removeAt$1: function(_, index) {
        throw H.wrapException(P.UnsupportedError$("Cannot remove from an unmodifiable list"));
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [H.getRuntimeTypeArgument(this, "UnmodifiableListMixin", 0)], "$asIterable");
        throw H.wrapException(P.UnsupportedError$("Cannot modify an unmodifiable list"));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      }
    },
    UnmodifiableListBase: {
      "^": "ListBase+UnmodifiableListMixin;"
    },
    ReversedListIterable: {
      "^": "ListIterable;_source,$ti",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        var t1, t2, t3;
        t1 = this._source;
        t2 = J.getInterceptor$asx(t1);
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof index !== "number")
          return H.iae(index);
        return t2.elementAt$1(t1, t3 - 1 - index);
      }
    },
    Symbol: {
      "^": "Object;__internal$_name",
      get$hashCode: function(_) {
        var hash = this._hashCode;
        if (hash != null)
          return hash;
        hash = 536870911 & 664597 * J.get$hashCode$(this.__internal$_name);
        this._hashCode = hash;
        return hash;
      },
      toString$0: function(_) {
        return 'Symbol("' + H.S(this.__internal$_name) + '")';
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.Symbol && this.__internal$_name == other.__internal$_name;
      },
      $isSymbol0: 1
    }
  }], ["dart._js", "dart:_js",, H, {
    "^": "",
    isBrowserObject: function(o) {
      var t1 = J.getInterceptor$(o);
      return !!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isWindow || !!t1.$isWorkerGlobalScope;
    }
  }], ["_js_helper", "dart:_js_helper",, H, {
    "^": "",
    ConstantMap_ConstantMap$from: function(other, $K, $V) {
      var keys, allStrings, t1, _i, k, object, containsProto, protoValue, $length, v;
      keys = P.List_List$from(other.get$keys(other), true, $K);
      t1 = keys.length;
      _i = 0;
      while (true) {
        if (!(_i < t1)) {
          allStrings = true;
          break;
        }
        k = keys[_i];
        if (typeof k !== "string") {
          allStrings = false;
          break;
        }
        ++_i;
      }
      if (allStrings) {
        object = {};
        for (containsProto = false, protoValue = null, $length = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
          k = keys[_i];
          v = H.assertSubtypeOfRuntimeType(other.$index(0, k), $V);
          if (!J.$eq$(k, "__proto__")) {
            H.stringTypeCheck(k);
            if (!object.hasOwnProperty(k))
              ++$length;
            object[k] = v;
          } else {
            protoValue = v;
            containsProto = true;
          }
        }
        if (containsProto)
          return new H.ConstantProtoMap(H.assertSubtypeOfRuntimeType(protoValue, $V), $length + 1, object, H.assertSubtype(keys, "$isList", [$K], "$asList"), [$K, $V]);
        return new H.ConstantStringMap($length, object, H.assertSubtype(keys, "$isList", [$K], "$asList"), [$K, $V]);
      }
      return new H.ConstantMapView(P.LinkedHashMap_LinkedHashMap$from(other, $K, $V), [$K, $V]);
    },
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable Map"));
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.stringTypeCheck(init.mangledGlobalNames[rawClassName]);
      if (typeof preserved === "string")
        return preserved;
      return rawClassName;
    },
    getType: [function(index) {
      return init.types[H.intTypeCheck(index)];
    }, null, null, 4, 0, null, 31],
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return !!J.getInterceptor$(object).$isJavaScriptIndexingBehavior;
    },
    S: function(value) {
      var res;
      if (typeof value === "string")
        return value;
      if (typeof value === "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      if (typeof res !== "string")
        throw H.wrapException(H.argumentErrorValue(value));
      return res;
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives_parseInt: function(source, radix) {
      var match, decimalMatch, maxCharCode, digitsPart, t1, i;
      if (typeof source !== "string")
        H.throwExpression(H.argumentErrorValue(source));
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return;
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = H.stringTypeCheck(match[3]);
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return;
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods._codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble: function(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = C.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return;
      }
      return result;
    },
    Primitives_objectTypeName: function(object) {
      return H.Primitives__objectClassName(object) + H._joinArguments(H.getRuntimeTypeInfo(object), 0, null);
    },
    Primitives__objectClassName: function(object) {
      var interceptor, interceptorConstructor, interceptorConstructorName, $name, t1, dispatchName, objectConstructor, match, decompiledName;
      interceptor = J.getInterceptor$(object);
      interceptorConstructor = interceptor.constructor;
      if (typeof interceptorConstructor == "function") {
        interceptorConstructorName = interceptorConstructor.name;
        $name = typeof interceptorConstructorName === "string" ? interceptorConstructorName : null;
      } else
        $name = null;
      t1 = $name == null;
      if (t1 || interceptor === C.Interceptor_methods || !!interceptor.$isUnknownJavaScriptObject) {
        dispatchName = C.JS_CONST_u2C(object);
        if (t1)
          $name = dispatchName;
        if (dispatchName === "Object") {
          objectConstructor = object.constructor;
          if (typeof objectConstructor == "function") {
            match = String(objectConstructor).match(/^\s*function\s*([\w$]*)\s*\(/);
            decompiledName = match == null ? null : match[1];
            if (typeof decompiledName === "string" && /^\w+$/.test(decompiledName))
              $name = decompiledName;
          }
        }
        return $name;
      }
      $name = $name;
      return H.unminifyOrTag($name.length > 1 && C.JSString_methods._codeUnitAt$1($name, 0) === 36 ? C.JSString_methods.substring$1($name, 1) : $name);
    },
    Primitives_currentUri: function() {
      if (!!self.location)
        return self.location.href;
      return;
    },
    Primitives__fromCharCodeApply: function(array) {
      var end, result, i, i0, chunkEnd;
      end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var a, t1, _i, i;
      a = H.setRuntimeTypeInfo([], [P.int]);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (typeof i !== "number" || Math.floor(i) !== i)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i <= 65535)
          C.JSArray_methods.add$1(a, i);
        else if (i <= 1114111) {
          C.JSArray_methods.add$1(a, 55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          C.JSArray_methods.add$1(a, 56320 + (i & 1023));
        } else
          throw H.wrapException(H.argumentErrorValue(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (typeof i !== "number" || Math.floor(i) !== i)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i < 0)
          throw H.wrapException(H.argumentErrorValue(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (typeof end !== "number")
        return end.$le();
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        if (i0 < end)
          chunkEnd = i0;
        else
          chunkEnd = end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (typeof charCode !== "number")
        return H.iae(charCode);
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._value);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getProperty: function(object, key) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      return object[key];
    },
    Primitives_setProperty: function(object, key, value) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H.argumentErrorValue(object));
      object[key] = value;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, namedArgumentList, t2;
      t1 = {};
      H.assertSubtype(namedArguments, "$isMap", [P.String, null], "$asMap");
      t1.argumentCount = 0;
      $arguments = [];
      namedArgumentList = [];
      if (positionalArguments != null) {
        t2 = J.get$length$asx(positionalArguments);
        if (typeof t2 !== "number")
          return H.iae(t2);
        t1.argumentCount = t2;
        C.JSArray_methods.addAll$1($arguments, positionalArguments);
      }
      t1.names = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
      return J.noSuchMethod$1$($function, new H.JSInvocationMirror(C.Symbol_call, "call" + "$" + t1.argumentCount + t1.names, 0, $arguments, namedArgumentList, 0));
    },
    Primitives_applyFunctionWithPositionalArguments: function($function, positionalArguments) {
      var $arguments, t1;
      if (positionalArguments != null)
        $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, null);
      else
        $arguments = [];
      t1 = $arguments.length;
      if (t1 === 0) {
        if (!!$function.call$0)
          return $function.call$0();
      } else if (t1 === 1) {
        if (!!$function.call$1)
          return $function.call$1($arguments[0]);
      } else if (t1 === 2) {
        if (!!$function.call$2)
          return $function.call$2($arguments[0], $arguments[1]);
      } else if (t1 === 3) {
        if (!!$function.call$3)
          return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
      } else if (t1 === 4) {
        if (!!$function.call$4)
          return $function.call$4($arguments[0], $arguments[1], $arguments[2], $arguments[3]);
      } else if (t1 === 5)
        if (!!$function.call$5)
          return $function.call$5($arguments[0], $arguments[1], $arguments[2], $arguments[3], $arguments[4]);
      return H.Primitives__genericApplyFunctionWithPositionalArguments($function, $arguments);
    },
    Primitives__genericApplyFunctionWithPositionalArguments: function($function, $arguments) {
      var argumentCount, jsFunction, info, requiredArgumentCount, maxArgumentCount, pos;
      argumentCount = $arguments.length;
      jsFunction = $function["call" + "$" + argumentCount];
      if (jsFunction == null) {
        jsFunction = J.getInterceptor$($function)["call*"];
        if (jsFunction == null)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        info = H.ReflectionInfo_ReflectionInfo(jsFunction);
        requiredArgumentCount = info.requiredParameterCount;
        maxArgumentCount = requiredArgumentCount + info.optionalParameterCount;
        if (info.areOptionalParametersNamed || requiredArgumentCount > argumentCount || maxArgumentCount < argumentCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        $arguments = P.List_List$from($arguments, true, null);
        for (pos = argumentCount; pos < maxArgumentCount; ++pos)
          C.JSArray_methods.add$1($arguments, init.metadata[info.defaultValue$1(0, pos)]);
      }
      return jsFunction.apply($function, $arguments);
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, t1;
      if (typeof index !== "number" || Math.floor(index) !== index)
        return new P.ArgumentError(true, index, "index", null);
      $length = H.intTypeCheck(J.get$length$asx(indexable));
      if (!(index < 0)) {
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = index >= $length;
      } else
        t1 = true;
      if (t1)
        return P.IndexError$(index, indexable, "index", null, $length);
      return P.RangeError$value(index, "index", null);
    },
    diagnoseRangeError: function(start, end, $length) {
      if (typeof start !== "number" || Math.floor(start) !== start)
        return new P.ArgumentError(true, start, "start", null);
      if (start < 0 || start > $length)
        return new P.RangeError(0, $length, true, start, "start", "Invalid value");
      if (end != null)
        if (end < start || end > $length)
          return new P.RangeError(start, $length, true, end, "end", "Invalid value");
      return new P.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value !== "number")
        throw H.wrapException(H.argumentErrorValue(value));
      return value;
    },
    checkBool: function(value) {
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: [function() {
      return J.toString$0$(this.dartException);
    }, null, null, 0, 0, null],
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    unwrapException: function(ex) {
      var t1, message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t2;
      t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              return t1.call$1(H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(H.stringTypeCheck(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(H.NullError$(H.stringTypeCheck(message), match));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message === "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message === "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return t1.call$1(new P.ArgumentError(false, null, null, typeof message === "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message === "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      var trace;
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new H._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      return exception.$cachedTrace = new H._StackTrace(exception);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var $length, index, index0, index1;
      $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: [function(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      H.interceptedTypeCheck(closure, "$isFunction");
      switch (H.intTypeCheck(numberOfArguments)) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    }, null, null, 24, 0, null, 44, 42, 17, 18, 57, 47],
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      H.intTypeCheck(arity);
      if (closure == null)
        return;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $function, callName, functionType, $prototype, $constructor, t1, trampoline, signatureFunction, getReceiver, applyTrampoline, i, stub, stubCallName;
      $function = functions[0];
      callName = $function.$callName;
      if (!!J.getInterceptor$(reflectionInfo).$isList) {
        $function.$reflectionInfo = reflectionInfo;
        functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
      } else
        functionType = reflectionInfo;
      $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      if (typeof functionType == "number")
        signatureFunction = function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getType, functionType);
      else if (typeof functionType == "function")
        if (isStatic)
          signatureFunction = functionType;
        else {
          getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
          signatureFunction = function(f, r) {
            return function() {
              return f.apply({$receiver: r(this)}, arguments);
            };
          }(functionType, getReceiver);
        }
      else
        throw H.wrapException("Error in reflectionInfo.");
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + t1;
        t1 = "return function(){var " + selfName + " = this.";
        t2 = $.BoundClosure_selfFieldNameCache;
        if (t2 == null) {
          t2 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t2;
        }
        return new Function(t1 + H.S(t2) + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      $.Closure_functionCounter = t1 + 1;
      $arguments += t1;
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t2;
      }
      return new Function(t1 + H.S(t2) + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf, getReceiver;
      getSelf = H.BoundClosure_selfOf;
      getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(H.RuntimeError$("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var t1, t2, stubName, arity, lookedUpFunction, t3, t4, $arguments;
      t1 = $.BoundClosure_selfFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t1;
      }
      t2 = $.BoundClosure_receiverFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("receiver");
        $.BoundClosure_receiverFieldNameCache = t2;
      }
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t3 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t4 = !t3 || arity >= 28;
      if (t4)
        return H.Closure_cspForwardInterceptedCall(arity, !t3, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ");";
        t2 = $.Closure_functionCounter;
        if (typeof t2 !== "number")
          return t2.$add();
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + t2 + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(t1) + "." + H.S(stubName) + "(this." + H.S(t2) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      if (typeof t2 !== "number")
        return t2.$add();
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + t2 + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, H.intTypeCheck(applyTrampolineIndex), reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    instantiate1: function(f, T1) {
      var t1;
      H.interceptedTypeCheck(f, "$isClosure");
      t1 = new H.Instantiation1(f, [T1]);
      t1.Instantiation$1(f);
      return t1;
    },
    stringTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "String"));
    },
    stringTypeCast: function(value) {
      if (typeof value === "string" || value == null)
        return value;
      throw H.wrapException(H.CastErrorImplementation$(value, "String"));
    },
    doubleTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "double"));
    },
    numTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "num"));
    },
    boolTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "boolean")
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "bool"));
    },
    intTypeCheck: function(value) {
      if (value == null)
        return value;
      if (typeof value === "number" && Math.floor(value) === value)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "int"));
    },
    propertyTypeError: function(value, property) {
      throw H.wrapException(H.TypeErrorImplementation$(value, H.unminifyOrTag(H.stringTypeCheck(property).substring(3))));
    },
    propertyTypeCastError: function(value, property) {
      throw H.wrapException(H.CastErrorImplementation$(value, H.unminifyOrTag(H.stringTypeCheck(property).substring(3))));
    },
    interceptedTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if ((typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    interceptedTypeCast: function(value, property) {
      var t1;
      if (value != null)
        t1 = (typeof value === "object" || typeof value === "function") && J.getInterceptor$(value)[property];
      else
        t1 = true;
      if (t1)
        return value;
      H.propertyTypeCastError(value, property);
    },
    stringSuperNativeTypeCheck: function(value, property) {
      if (value == null)
        return value;
      if (typeof value === "string")
        return value;
      if (J.getInterceptor$(value)[property])
        return value;
      H.propertyTypeError(value, property);
    },
    listTypeCheck: function(value) {
      if (value == null)
        return value;
      if (!!J.getInterceptor$(value).$isList)
        return value;
      throw H.wrapException(H.TypeErrorImplementation$(value, "List<dynamic>"));
    },
    listSuperNativeTypeCheck: function(value, property) {
      var t1;
      if (value == null)
        return value;
      t1 = J.getInterceptor$(value);
      if (!!t1.$isList)
        return value;
      if (t1[property])
        return value;
      H.propertyTypeError(value, property);
    },
    extractFunctionTypeObjectFromInternal: function(o) {
      var signature;
      if ("$signature" in o) {
        signature = o.$signature;
        if (typeof signature == "number")
          return init.types[H.intTypeCheck(signature)];
        else
          return o.$signature();
      }
      return;
    },
    functionTypeTest: function(value, functionTypeRti) {
      var functionTypeObject;
      if (value == null)
        return false;
      if (typeof value == "function")
        return true;
      functionTypeObject = H.extractFunctionTypeObjectFromInternal(J.getInterceptor$(value));
      if (functionTypeObject == null)
        return false;
      return H._isFunctionSubtype(functionTypeObject, null, functionTypeRti, null);
    },
    functionTypeCheck: function(value, functionTypeRti) {
      var $self, t1;
      if (value == null)
        return value;
      if ($._inTypeAssertion)
        return value;
      $._inTypeAssertion = true;
      try {
        if (H.functionTypeTest(value, functionTypeRti))
          return value;
        $self = H.runtimeTypeToString(functionTypeRti);
        t1 = H.TypeErrorImplementation$(value, $self);
        throw H.wrapException(t1);
      } finally {
        $._inTypeAssertion = false;
      }
    },
    functionTypeCast: function(value, functionTypeRti) {
      if (value == null)
        return value;
      if (H.functionTypeTest(value, functionTypeRti))
        return value;
      throw H.wrapException(H.CastErrorImplementation$(value, H.runtimeTypeToString(functionTypeRti)));
    },
    futureOrCheck: function(o, futureOrRti) {
      if (o != null && !H.checkSubtypeOfRuntimeType(o, futureOrRti))
        H.throwExpression(H.TypeErrorImplementation$(o, H.runtimeTypeToString(futureOrRti)));
      return o;
    },
    _typeDescription: function(value) {
      var t1, functionTypeObject;
      t1 = J.getInterceptor$(value);
      if (!!t1.$isClosure) {
        functionTypeObject = H.extractFunctionTypeObjectFromInternal(t1);
        if (functionTypeObject != null)
          return H.runtimeTypeToString(functionTypeObject);
        return "Closure";
      }
      return H.Primitives_objectTypeName(value);
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(H.stringTypeCheck(staticName)));
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    createRuntimeType: function(rti) {
      return new H.TypeImpl(rti);
    },
    setRuntimeTypeInfo: function(target, rti) {
      target.$ti = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return;
      return target.$ti;
    },
    getRuntimeTypeArguments: function(interceptor, object, substitutionName) {
      return H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(object));
    },
    getRuntimeTypeArgumentIntercepted: function(interceptor, target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.substitute(interceptor["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
      return $arguments == null ? null : $arguments[index];
    },
    getRuntimeTypeArgument: function(target, substitutionName, index) {
      var $arguments;
      H.stringTypeCheck(substitutionName);
      H.intTypeCheck(index);
      $arguments = H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
      return $arguments == null ? null : $arguments[index];
    },
    getTypeArgumentByIndex: function(target, index) {
      var rti;
      H.intTypeCheck(index);
      rti = H.getRuntimeTypeInfo(target);
      return rti == null ? null : rti[index];
    },
    runtimeTypeToString: function(rti) {
      return H._runtimeTypeToString(rti, null);
    },
    _runtimeTypeToString: function(rti, genericContext) {
      var t1, t2;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (rti == null)
        return "dynamic";
      if (rti === -1)
        return "void";
      if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return H.unminifyOrTag(rti[0].builtin$cls) + H._joinArguments(rti, 1, genericContext);
      if (typeof rti == "function")
        return H.unminifyOrTag(rti.builtin$cls);
      if (rti === -2)
        return "dynamic";
      if (typeof rti === "number") {
        H.intTypeCheck(rti);
        if (genericContext == null || rti < 0 || rti >= genericContext.length)
          return "unexpected-generic-index:" + rti;
        t1 = genericContext.length;
        t2 = t1 - rti - 1;
        if (t2 < 0 || t2 >= t1)
          return H.ioore(genericContext, t2);
        return H.S(genericContext[t2]);
      }
      if ('func' in rti)
        return H._functionRtiToString(rti, genericContext);
      if ('futureOr' in rti)
        return "FutureOr<" + H._runtimeTypeToString("type" in rti ? rti.type : null, genericContext) + ">";
      return "unknown-reified-type";
    },
    _functionRtiToString: function(rti, genericContext) {
      var t1, boundsRti, outerContextLength, offset, i, i0, typeParameters, typeSep, t2, boundRti, returnTypeText, $arguments, argumentsText, sep, _i, argument, optionalArguments, namedArguments, t3;
      t1 = [P.String];
      H.assertSubtype(genericContext, "$isList", t1, "$asList");
      if ("bounds" in rti) {
        boundsRti = rti.bounds;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], t1);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsRti.length, i0 = i; i0 > 0; --i0)
          C.JSArray_methods.add$1(genericContext, "T" + (offset + i0));
        for (typeParameters = "<", typeSep = "", i0 = 0; i0 < i; ++i0, typeSep = ", ") {
          typeParameters += typeSep;
          t1 = genericContext.length;
          t2 = t1 - i0 - 1;
          if (t2 < 0)
            return H.ioore(genericContext, t2);
          typeParameters = C.JSString_methods.$add(typeParameters, genericContext[t2]);
          boundRti = boundsRti[i0];
          if (boundRti != null && boundRti !== P.Object)
            typeParameters += " extends " + H._runtimeTypeToString(boundRti, genericContext);
        }
        typeParameters += ">";
      } else {
        typeParameters = "";
        outerContextLength = null;
      }
      returnTypeText = !!rti.v ? "void" : H._runtimeTypeToString(rti.ret, genericContext);
      if ("args" in rti) {
        $arguments = rti.args;
        for (t1 = $arguments.length, argumentsText = "", sep = "", _i = 0; _i < t1; ++_i, sep = ", ") {
          argument = $arguments[_i];
          argumentsText = argumentsText + sep + H._runtimeTypeToString(argument, genericContext);
        }
      } else {
        argumentsText = "";
        sep = "";
      }
      if ("opt" in rti) {
        optionalArguments = rti.opt;
        argumentsText += sep + "[";
        for (t1 = optionalArguments.length, sep = "", _i = 0; _i < t1; ++_i, sep = ", ") {
          argument = optionalArguments[_i];
          argumentsText = argumentsText + sep + H._runtimeTypeToString(argument, genericContext);
        }
        argumentsText += "]";
      }
      if ("named" in rti) {
        namedArguments = rti.named;
        argumentsText += sep + "{";
        for (t1 = H.extractKeys(namedArguments), t2 = t1.length, sep = "", _i = 0; _i < t2; ++_i, sep = ", ") {
          t3 = H.stringTypeCheck(t1[_i]);
          argumentsText = argumentsText + sep + H._runtimeTypeToString(namedArguments[t3], genericContext) + (" " + H.S(t3));
        }
        argumentsText += "}";
      }
      if (outerContextLength != null)
        genericContext.length = outerContextLength;
      return typeParameters + "(" + argumentsText + ") => " + returnTypeText;
    },
    _joinArguments: function(types, startIndex, genericContext) {
      var buffer, index, separator, allDynamic, t1, argument;
      H.assertSubtype(genericContext, "$isList", [P.String], "$asList");
      if (types == null)
        return "";
      buffer = new P.StringBuffer("");
      for (index = startIndex, separator = "", allDynamic = true, t1 = ""; index < types.length; ++index, separator = ", ") {
        buffer._contents = t1 + separator;
        argument = types[index];
        if (argument != null)
          allDynamic = false;
        t1 = buffer._contents += H._runtimeTypeToString(argument, genericContext);
      }
      return "<" + buffer.toString$0(0) + ">";
    },
    getRti: function(o) {
      var t1, functionRti, type, rti;
      t1 = J.getInterceptor$(o);
      if (!!t1.$isClosure) {
        functionRti = H.extractFunctionTypeObjectFromInternal(t1);
        if (functionRti != null)
          return functionRti;
      }
      type = t1.constructor;
      if (o == null)
        return type;
      if (typeof o != "object")
        return type;
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return type;
    },
    substitute: function(substitution, $arguments) {
      if (substitution == null)
        return $arguments;
      substitution = substitution.apply(null, $arguments);
      if (substitution == null)
        return;
      if (typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
        return substitution;
      if (typeof substitution == "function")
        return substitution.apply(null, $arguments);
      return $arguments;
    },
    checkSubtype: function(object, isField, checks, asField) {
      var $arguments, interceptor;
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return false;
      $arguments = H.getRuntimeTypeInfo(object);
      interceptor = J.getInterceptor$(object);
      if (interceptor[isField] == null)
        return false;
      return H.areSubtypes(H.substitute(interceptor[asField], $arguments), null, checks, null);
    },
    subtypeCast: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.checkSubtype(object, isField, checks, asField))
        return object;
      throw H.wrapException(H.CastErrorImplementation$(object, function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.unminifyOrTag(isField.substring(3)) + H._joinArguments(checks, 0, null), init.mangledGlobalNames)));
    },
    assertSubtype: function(object, isField, checks, asField) {
      H.stringTypeCheck(isField);
      H.listTypeCheck(checks);
      H.stringTypeCheck(asField);
      if (object == null)
        return object;
      if (H.checkSubtype(object, isField, checks, asField))
        return object;
      throw H.wrapException(H.TypeErrorImplementation$(object, function(str, names) {
        return str.replace(/[^<,> ]+/g, function(m) {
          return names[m] || m;
        });
      }(H.unminifyOrTag(isField.substring(3)) + H._joinArguments(checks, 0, null), init.mangledGlobalNames)));
    },
    assertIsSubtype: function(subtype, supertype, prefix, infix, suffix) {
      H.stringTypeCheck(prefix);
      H.stringTypeCheck(infix);
      H.stringTypeCheck(suffix);
      if (!H._isSubtype(subtype, null, supertype, null))
        H.throwTypeError("TypeError: " + H.S(prefix) + H.runtimeTypeToString(subtype) + H.S(infix) + H.runtimeTypeToString(supertype) + H.S(suffix));
    },
    throwTypeError: function(message) {
      throw H.wrapException(new H.TypeErrorImplementation(H.stringTypeCheck(message)));
    },
    areSubtypes: function(s, sEnv, t, tEnv) {
      var len, i;
      if (t == null)
        return true;
      if (s == null) {
        len = t.length;
        for (i = 0; i < len; ++i)
          if (!H._isSubtype(null, null, t[i], tEnv))
            return false;
        return true;
      }
      len = s.length;
      for (i = 0; i < len; ++i)
        if (!H._isSubtype(s[i], sEnv, t[i], tEnv))
          return false;
      return true;
    },
    computeSignature: function(signature, context, contextName) {
      return signature.apply(context, H.substitute(J.getInterceptor$(context)["$as" + H.S(contextName)], H.getRuntimeTypeInfo(context)));
    },
    isSupertypeOfNullRecursive: function(type) {
      var typeArgument;
      if (typeof type === "number")
        return false;
      if ('futureOr' in type) {
        typeArgument = "type" in type ? type.type : null;
        return type == null || type.builtin$cls === "Object" || type.builtin$cls === "Null" || type === -1 || type === -2 || H.isSupertypeOfNullRecursive(typeArgument);
      }
      return false;
    },
    checkSubtypeOfRuntimeType: function(o, t) {
      var type, rti;
      if (o == null)
        return t == null || t.builtin$cls === "Object" || t.builtin$cls === "Null" || t === -1 || t === -2 || H.isSupertypeOfNullRecursive(t);
      if (t == null || t === -1 || t.builtin$cls === "Object" || t === -2)
        return true;
      if (typeof t == "object") {
        if ('futureOr' in t)
          if (H.checkSubtypeOfRuntimeType(o, "type" in t ? t.type : null))
            return true;
        if ('func' in t)
          return H.functionTypeTest(o, t);
      }
      type = J.getInterceptor$(o).constructor;
      rti = H.getRuntimeTypeInfo(o);
      if (rti != null) {
        rti = rti.slice();
        rti.splice(0, 0, type);
        type = rti;
      }
      return H._isSubtype(type, null, t, null);
    },
    subtypeOfRuntimeTypeCast: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.CastErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    assertSubtypeOfRuntimeType: function(object, type) {
      if (object != null && !H.checkSubtypeOfRuntimeType(object, type))
        throw H.wrapException(H.TypeErrorImplementation$(object, H.runtimeTypeToString(type)));
      return object;
    },
    _isSubtype: function(s, sEnv, t, tEnv) {
      var t1, typeOfS, tTypeArgument, futureSubstitution, futureArguments, t2, typeOfT, typeOfTString, substitution;
      if (s === t)
        return true;
      if (t == null || t === -1 || t.builtin$cls === "Object" || t === -2)
        return true;
      if (s === -2)
        return true;
      if (s == null || s === -1 || s.builtin$cls === "Object" || s === -2) {
        if (typeof t === "number")
          return false;
        if ('futureOr' in t)
          return H._isSubtype(s, sEnv, "type" in t ? t.type : null, tEnv);
        return false;
      }
      if (typeof s === "number")
        return false;
      if (typeof t === "number")
        return false;
      if (s.builtin$cls === "Null")
        return true;
      if ('func' in t)
        return H._isFunctionSubtype(s, sEnv, t, tEnv);
      if ('func' in s)
        return t.builtin$cls === "Function";
      t1 = typeof s === "object" && s !== null && s.constructor === Array;
      typeOfS = t1 ? s[0] : s;
      if ('futureOr' in t) {
        tTypeArgument = "type" in t ? t.type : null;
        if ('futureOr' in s)
          return H._isSubtype("type" in s ? s.type : null, sEnv, tTypeArgument, tEnv);
        else if (H._isSubtype(s, sEnv, tTypeArgument, tEnv))
          return true;
        else {
          if (!('$is' + "Future" in typeOfS.prototype))
            return false;
          futureSubstitution = typeOfS.prototype["$as" + "Future"];
          futureArguments = H.substitute(futureSubstitution, t1 ? s.slice(1) : null);
          return H._isSubtype(typeof futureArguments === "object" && futureArguments !== null && futureArguments.constructor === Array ? futureArguments[0] : null, sEnv, tTypeArgument, tEnv);
        }
      }
      t2 = typeof t === "object" && t !== null && t.constructor === Array;
      typeOfT = t2 ? t[0] : t;
      if (typeOfT !== typeOfS) {
        typeOfTString = typeOfT.builtin$cls;
        if (!('$is' + typeOfTString in typeOfS.prototype))
          return false;
        substitution = typeOfS.prototype["$as" + typeOfTString];
      } else
        substitution = null;
      if (!t2)
        return true;
      t1 = t1 ? s.slice(1) : null;
      t2 = t.slice(1);
      return H.areSubtypes(H.substitute(substitution, t1), sEnv, t2, tEnv);
    },
    _isFunctionSubtype: function(s, sEnv, t, tEnv) {
      var sBounds, tBounds, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, tPos, sPos, sNamedParameters, tNamedParameters;
      if (!('func' in s))
        return false;
      if ("bounds" in s) {
        if (!("bounds" in t))
          return false;
        sBounds = s.bounds;
        tBounds = t.bounds;
        if (sBounds.length !== tBounds.length)
          return false;
      } else if ("bounds" in t)
        return false;
      if (!H._isSubtype(s.ret, sEnv, t.ret, tEnv))
        return false;
      sParameterTypes = s.args;
      tParameterTypes = t.args;
      sOptionalParameterTypes = s.opt;
      tOptionalParameterTypes = t.opt;
      sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
      tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
      sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
      tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
      if (sParametersLen > tParametersLen)
        return false;
      if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
        return false;
      for (pos = 0; pos < sParametersLen; ++pos)
        if (!H._isSubtype(tParameterTypes[pos], tEnv, sParameterTypes[pos], sEnv))
          return false;
      for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos)
        if (!H._isSubtype(tParameterTypes[tPos], tEnv, sOptionalParameterTypes[sPos], sEnv))
          return false;
      for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos)
        if (!H._isSubtype(tOptionalParameterTypes[tPos], tEnv, sOptionalParameterTypes[sPos], sEnv))
          return false;
      sNamedParameters = s.named;
      tNamedParameters = t.named;
      if (tNamedParameters == null)
        return true;
      if (sNamedParameters == null)
        return false;
      return H.namedParametersSubtypeCheck(sNamedParameters, sEnv, tNamedParameters, tEnv);
    },
    namedParametersSubtypeCheck: function(s, sEnv, t, tEnv) {
      var names, t1, i, $name;
      names = Object.getOwnPropertyNames(t);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (!Object.hasOwnProperty.call(s, $name))
          return false;
        if (!H._isSubtype(t[$name], tEnv, s[$name], sEnv))
          return false;
      }
      return true;
    },
    instantiatedGenericFunctionType: function(genericFunctionRti, parameters) {
      if (genericFunctionRti == null)
        return;
      return H.finishBindInstantiatedFunctionType(genericFunctionRti, {func: 1}, parameters, 0);
    },
    finishBindInstantiatedFunctionType: function(rti, result, parameters, depth) {
      var namedParameters, boundNamed, names, t1, _i, $name;
      if ("v" in rti)
        result.v = rti.v;
      else if ("ret" in rti)
        result.ret = H.bindInstantiatedType(rti.ret, parameters, depth);
      if ("args" in rti)
        result.args = H.bindInstantiatedTypes(rti.args, parameters, depth);
      if ("opt" in rti)
        result.opt = H.bindInstantiatedTypes(rti.opt, parameters, depth);
      if ("named" in rti) {
        namedParameters = rti.named;
        boundNamed = {};
        names = Object.keys(namedParameters);
        for (t1 = names.length, _i = 0; _i < t1; ++_i) {
          $name = H.stringTypeCheck(names[_i]);
          boundNamed[$name] = H.bindInstantiatedType(namedParameters[$name], parameters, depth);
        }
        result.named = boundNamed;
      }
      return result;
    },
    bindInstantiatedType: function(rti, parameters, depth) {
      var result, bounds;
      if (rti == null)
        return rti;
      if (rti === -1)
        return rti;
      if (typeof rti == "function")
        return rti;
      if (typeof rti === "number") {
        if (rti < depth)
          return rti;
        return parameters[rti - depth];
      }
      if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return H.bindInstantiatedTypes(rti, parameters, depth);
      if ('func' in rti) {
        result = {func: 1};
        if ("bounds" in rti) {
          bounds = rti.bounds;
          depth += bounds.length;
          result.bounds = H.bindInstantiatedTypes(bounds, parameters, depth);
        }
        return H.finishBindInstantiatedFunctionType(rti, result, parameters, depth);
      }
      throw H.wrapException(P.ArgumentError$("Unknown RTI format in bindInstantiatedType."));
    },
    bindInstantiatedTypes: function(rti, parameters, depth) {
      var array, t1, i;
      array = rti.slice();
      for (t1 = array.length, i = 0; i < t1; ++i)
        C.JSArray_methods.$indexSet(array, i, H.bindInstantiatedType(array[i], parameters, depth));
      return array;
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, H.stringTypeCheck(property), {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var tag, record, interceptor, interceptorClass, mark, t1;
      tag = H.stringTypeCheck($.getTagFunction.call$1(obj));
      record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = H.stringTypeCheck($.alternateTagFunction.call$2(obj, tag));
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
      hooks = C.JS_CONST_bDt();
      hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc, H.applyHooksTransformer(C.JS_CONST_4hp, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_u2C), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1, t2;
      if (typeof other === "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else {
        t1 = J.getInterceptor$(other);
        if (!!t1.$isJSSyntaxRegExp) {
          t1 = C.JSString_methods.substring$1(receiver, startIndex);
          t2 = other._nativeRegExp;
          return t2.test(t1);
        } else {
          t1 = t1.allMatches$1(other, C.JSString_methods.substring$1(receiver, startIndex));
          return !t1.get$isEmpty(t1);
        }
      }
    },
    stringReplaceFirstRE: function(receiver, regexp, replacement, startIndex) {
      var match = regexp._execGlobal$2(receiver, startIndex);
      if (match == null)
        return receiver;
      return H.stringReplaceRangeUnchecked(receiver, match._match.index, match.get$end(match), replacement);
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var $length, t1, i, nativeRegexp;
      if (typeof pattern === "string")
        if (pattern === "")
          if (receiver === "")
            return replacement;
          else {
            $length = receiver.length;
            for (t1 = replacement, i = 0; i < $length; ++i)
              t1 = t1 + receiver[i] + replacement;
            return t1.charCodeAt(0) == 0 ? t1 : t1;
          }
        else
          return receiver.replace(new RegExp(pattern.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&"), 'g'), replacement.replace(/\$/g, "$$$$"));
      else if (pattern instanceof H.JSSyntaxRegExp) {
        nativeRegexp = pattern.get$_nativeGlobalVersion();
        nativeRegexp.lastIndex = 0;
        return receiver.replace(nativeRegexp, replacement.replace(/\$/g, "$$$$"));
      } else {
        if (pattern == null)
          H.throwExpression(H.argumentErrorValue(pattern));
        throw H.wrapException("String.replaceAll(Pattern) UNIMPLEMENTED");
      }
    },
    _stringIdentity: [function(string) {
      return string;
    }, "call$1", "_js_helper___stringIdentity$closure", 4, 0, 10],
    stringReplaceAllFuncUnchecked: function(receiver, pattern, onMatch, onNonMatch) {
      var t1, startIndex, t2, t3, t4, t5;
      if (!J.getInterceptor$(pattern).$isPattern)
        throw H.wrapException(P.ArgumentError$value(pattern, "pattern", "is not a Pattern"));
      for (t1 = pattern.allMatches$1(0, receiver), t1 = new H._AllMatchesIterator(t1._re, t1._string, t1._start), startIndex = 0, t2 = ""; t1.moveNext$0(); t2 = t3) {
        t3 = t1._current;
        t4 = t3._match;
        t5 = t4.index;
        t3 = t2 + H.S(H._js_helper___stringIdentity$closure().call$1(C.JSString_methods.substring$2(receiver, startIndex, t5))) + H.S(onMatch.call$1(t3));
        startIndex = t5 + t4[0].length;
      }
      t1 = t2 + H.S(H._js_helper___stringIdentity$closure().call$1(C.JSString_methods.substring$1(receiver, startIndex)));
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {
      var index, t1, matches, match;
      if (typeof pattern === "string") {
        index = receiver.indexOf(pattern, startIndex);
        if (index < 0)
          return receiver;
        return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
      }
      t1 = J.getInterceptor$(pattern);
      if (!!t1.$isJSSyntaxRegExp)
        return startIndex === 0 ? receiver.replace(pattern._nativeRegExp, replacement.replace(/\$/g, "$$$$")) : H.stringReplaceFirstRE(receiver, pattern, replacement, startIndex);
      if (pattern == null)
        H.throwExpression(H.argumentErrorValue(pattern));
      t1 = t1.allMatches$2(pattern, receiver, startIndex);
      matches = H.assertSubtype(t1.get$iterator(t1), "$isIterator", [P.Match], "$asIterator");
      if (!matches.moveNext$0())
        return receiver;
      match = matches.get$current(matches);
      return C.JSString_methods.replaceRange$3(receiver, match.get$start(match), match.get$end(match), replacement);
    },
    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {
      var prefix, suffix;
      prefix = receiver.substring(0, start);
      suffix = receiver.substring(end);
      return prefix + H.S(replacement) + suffix;
    },
    ConstantMapView: {
      "^": "UnmodifiableMapView;_collection$_map,$ti"
    },
    ConstantMap: {
      "^": "Object;$ti",
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) !== 0;
      },
      toString$0: function(_) {
        return P.MapBase_mapToString(this);
      },
      $indexSet: function(_, key, val) {
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(val, H.getTypeArgumentByIndex(this, 1));
        return H.ConstantMap__throwUnmodifiable();
      },
      $isMap: 1
    },
    ConstantStringMap: {
      "^": "ConstantMap;__js_helper$_length,_jsObject,__js_helper$_keys,$ti",
      get$length: function(_) {
        return this.__js_helper$_length;
      },
      containsKey$1: function(_, key) {
        if (typeof key !== "string")
          return false;
        if ("__proto__" === key)
          return false;
        return this._jsObject.hasOwnProperty(key);
      },
      $index: function(_, key) {
        if (!this.containsKey$1(0, key))
          return;
        return this._fetch$1(key);
      },
      _fetch$1: function(key) {
        return this._jsObject[H.stringTypeCheck(key)];
      },
      forEach$1: function(_, f) {
        var t1, keys, t2, i, key;
        t1 = H.getTypeArgumentByIndex(this, 1);
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), t1]});
        keys = this.__js_helper$_keys;
        for (t2 = keys.length, i = 0; i < t2; ++i) {
          key = keys[i];
          f.call$2(key, H.assertSubtypeOfRuntimeType(this._fetch$1(key), t1));
        }
      },
      get$keys: function(_) {
        return new H._ConstantMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
      },
      get$values: function(_) {
        return H.MappedIterable_MappedIterable(this.__js_helper$_keys, new H.ConstantStringMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
      }
    },
    ConstantStringMap_values_closure: {
      "^": "Closure;$this",
      call$1: [function(key) {
        var t1 = this.$this;
        return H.assertSubtypeOfRuntimeType(t1._fetch$1(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(t1, 0))), H.getTypeArgumentByIndex(t1, 1));
      }, null, null, 4, 0, null, 19, "call"],
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: H.getTypeArgumentByIndex(t1, 1), args: [H.getTypeArgumentByIndex(t1, 0)]};
      }
    },
    ConstantProtoMap: {
      "^": "ConstantStringMap;_protoValue,__js_helper$_length,_jsObject,__js_helper$_keys,$ti",
      containsKey$1: function(_, key) {
        if (typeof key !== "string")
          return false;
        if ("__proto__" === key)
          return true;
        return this._jsObject.hasOwnProperty(key);
      },
      _fetch$1: function(key) {
        return "__proto__" === key ? this._protoValue : this._jsObject[H.stringTypeCheck(key)];
      }
    },
    _ConstantMapKeyIterable: {
      "^": "Iterable;_map,$ti",
      get$iterator: function(_) {
        var t1 = this._map.__js_helper$_keys;
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      get$length: function(_) {
        return this._map.__js_helper$_keys.length;
      }
    },
    GeneralConstantMap: {
      "^": "ConstantMap;_jsData,$ti",
      _getMap$0: function() {
        var backingMap = this.$map;
        if (backingMap == null) {
          backingMap = new H.JsLinkedHashMap(0, 0, this.$ti);
          H.fillLiteralMap(this._jsData, backingMap);
          this.$map = backingMap;
        }
        return backingMap;
      },
      containsKey$1: function(_, key) {
        return this._getMap$0().containsKey$1(0, key);
      },
      $index: function(_, key) {
        return this._getMap$0().$index(0, key);
      },
      forEach$1: function(_, f) {
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]});
        this._getMap$0().forEach$1(0, f);
      },
      get$keys: function(_) {
        var t1 = this._getMap$0();
        return t1.get$keys(t1);
      },
      get$values: function(_) {
        var t1 = this._getMap$0();
        return t1.get$values(t1);
      },
      get$length: function(_) {
        var t1 = this._getMap$0();
        return t1.get$length(t1);
      }
    },
    JSInvocationMirror: {
      "^": "Object;_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_typeArgumentCount",
      get$memberName: function() {
        var t1 = this._memberName;
        return t1;
      },
      get$positionalArguments: function() {
        var t1, argumentCount, list, index;
        if (this._kind === 1)
          return C.List_empty;
        t1 = this._arguments;
        argumentCount = t1.length - this._namedArgumentNames.length - this._typeArgumentCount;
        if (argumentCount === 0)
          return C.List_empty;
        list = [];
        for (index = 0; index < argumentCount; ++index) {
          if (index >= t1.length)
            return H.ioore(t1, index);
          list.push(t1[index]);
        }
        return J.JSArray_markUnmodifiableList(list);
      },
      get$namedArguments: function() {
        var t1, namedArgumentCount, t2, namedArgumentsStartIndex, t3, map, i, t4, t5;
        if (this._kind !== 0)
          return C.Map_empty;
        t1 = this._namedArgumentNames;
        namedArgumentCount = t1.length;
        t2 = this._arguments;
        namedArgumentsStartIndex = t2.length - namedArgumentCount - this._typeArgumentCount;
        if (namedArgumentCount === 0)
          return C.Map_empty;
        t3 = P.Symbol0;
        map = new H.JsLinkedHashMap(0, 0, [t3, null]);
        for (i = 0; i < namedArgumentCount; ++i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          t4 = t1[i];
          t5 = namedArgumentsStartIndex + i;
          if (t5 < 0 || t5 >= t2.length)
            return H.ioore(t2, t5);
          map.$indexSet(0, new H.Symbol(t4), t2[t5]);
        }
        return new H.ConstantMapView(map, [t3, null]);
      },
      $isInvocation: 1
    },
    ReflectionInfo: {
      "^": "Object;jsFunction,data,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType,0cachedSortedIndices",
      defaultValue$1: function(_, parameter) {
        var t1 = this.requiredParameterCount;
        if (typeof parameter !== "number")
          return parameter.$lt();
        if (parameter < t1)
          return;
        return this.data[3 + parameter - t1];
      },
      static: {
        ReflectionInfo_ReflectionInfo: function(jsFunction) {
          var data, requiredParametersInfo, optionalParametersInfo;
          data = jsFunction.$reflectionInfo;
          if (data == null)
            return;
          data = J.JSArray_markFixedList(data);
          requiredParametersInfo = data[0];
          optionalParametersInfo = data[1];
          return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 2) === 2, requiredParametersInfo >> 2, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2]);
        }
      }
    },
    Primitives_functionNoSuchMethod_closure: {
      "^": "Closure:51;_box_0,namedArgumentList,$arguments",
      call$2: function($name, argument) {
        var t1;
        H.stringTypeCheck($name);
        t1 = this._box_0;
        t1.names = t1.names + "$" + H.S($name);
        C.JSArray_methods.add$1(this.namedArgumentList, $name);
        C.JSArray_methods.add$1(this.$arguments, argument);
        ++t1.argumentCount;
      }
    },
    TypeErrorDecoder: {
      "^": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,_receiver",
      matchTypeError$1: function(message) {
        var match, result, t1;
        match = new RegExp(this._pattern).exec(message);
        if (match == null)
          return;
        result = Object.create(null);
        t1 = this._arguments;
        if (t1 !== -1)
          result.arguments = match[t1 + 1];
        t1 = this._argumentsExpr;
        if (t1 !== -1)
          result.argumentsExpr = match[t1 + 1];
        t1 = this._expr;
        if (t1 !== -1)
          result.expr = match[t1 + 1];
        t1 = this._method;
        if (t1 !== -1)
          result.method = match[t1 + 1];
        t1 = this._receiver;
        if (t1 !== -1)
          result.receiver = match[t1 + 1];
        return result;
      },
      static: {
        TypeErrorDecoder_extractPattern: function(message) {
          var match, $arguments, argumentsExpr, expr, method, receiver;
          message = message.replace(String({}), '$receiver$').replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
          match = message.match(/\\\$[a-zA-Z]+\\\$/g);
          if (match == null)
            match = H.setRuntimeTypeInfo([], [P.String]);
          $arguments = match.indexOf("\\$arguments\\$");
          argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
          expr = match.indexOf("\\$expr\\$");
          method = match.indexOf("\\$method\\$");
          receiver = match.indexOf("\\$receiver\\$");
          return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
        },
        TypeErrorDecoder_provokeCallErrorOn: function(expression) {
          return function($expr$) {
            var $argumentsExpr$ = '$arguments$';
            try {
              $expr$.$method$($argumentsExpr$);
            } catch (e) {
              return e.message;
            }
          }(expression);
        },
        TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
          return function($expr$) {
            try {
              $expr$.$method$;
            } catch (e) {
              return e.message;
            }
          }(expression);
        }
      }
    },
    NullError: {
      "^": "Error;_message,_method",
      toString$0: function(_) {
        var t1 = this._method;
        if (t1 == null)
          return "NoSuchMethodError: " + H.S(this._message);
        return "NoSuchMethodError: method not found: '" + t1 + "' on null";
      },
      static: {
        NullError$: function(_message, match) {
          return new H.NullError(_message, match == null ? null : match.method);
        }
      }
    },
    JsNoSuchMethodError: {
      "^": "Error;_message,_method,_receiver",
      toString$0: function(_) {
        var t1, t2;
        t1 = this._method;
        if (t1 == null)
          return "NoSuchMethodError: " + H.S(this._message);
        t2 = this._receiver;
        if (t2 == null)
          return "NoSuchMethodError: method not found: '" + t1 + "' (" + H.S(this._message) + ")";
        return "NoSuchMethodError: method not found: '" + t1 + "' on '" + t2 + "' (" + H.S(this._message) + ")";
      },
      static: {
        JsNoSuchMethodError$: function(_message, match) {
          var t1, t2;
          t1 = match == null;
          t2 = t1 ? null : match.method;
          return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
        }
      }
    },
    UnknownJsTypeError: {
      "^": "Error;_message",
      toString$0: function(_) {
        var t1 = this._message;
        return t1.length === 0 ? "Error" : "Error: " + t1;
      }
    },
    ExceptionAndStackTrace: {
      "^": "Object;dartException,stackTrace"
    },
    unwrapException_saveStackTrace: {
      "^": "Closure:8;ex",
      call$1: function(error) {
        if (!!J.getInterceptor$(error).$isError)
          if (error.$thrownJsError == null)
            error.$thrownJsError = this.ex;
        return error;
      }
    },
    _StackTrace: {
      "^": "Object;_exception,0_trace",
      toString$0: function(_) {
        var t1, trace;
        t1 = this._trace;
        if (t1 != null)
          return t1;
        t1 = this._exception;
        trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
        t1 = trace == null ? "" : trace;
        this._trace = t1;
        return t1;
      },
      $isStackTrace: 1
    },
    Closure: {
      "^": "Object;",
      toString$0: function(_) {
        return "Closure '" + H.Primitives_objectTypeName(this).trim() + "'";
      },
      get$$call: function() {
        return this;
      },
      $isFunction: 1,
      get$$call: function() {
        return this;
      }
    },
    TearOffClosure: {
      "^": "Closure;"
    },
    StaticClosure: {
      "^": "TearOffClosure;",
      toString$0: function(_) {
        var $name = this.$static_name;
        if ($name == null)
          return "Closure of unknown static method";
        return "Closure '" + H.unminifyOrTag($name) + "'";
      }
    },
    BoundClosure: {
      "^": "TearOffClosure;_self,_target,_receiver,__js_helper$_name",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof H.BoundClosure))
          return false;
        return this._self === other._self && this._target === other._target && this._receiver === other._receiver;
      },
      get$hashCode: function(_) {
        var t1, receiverHashCode;
        t1 = this._receiver;
        if (t1 == null)
          receiverHashCode = H.Primitives_objectHashCode(this._self);
        else
          receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
        t1 = H.Primitives_objectHashCode(this._target);
        if (typeof receiverHashCode !== "number")
          return receiverHashCode.$xor();
        return (receiverHashCode ^ t1) >>> 0;
      },
      toString$0: function(_) {
        var receiver = this._receiver;
        if (receiver == null)
          receiver = this._self;
        return "Closure '" + H.S(this.__js_helper$_name) + "' of " + ("Instance of '" + H.Primitives_objectTypeName(receiver) + "'");
      },
      static: {
        BoundClosure_selfOf: function(closure) {
          return closure._self;
        },
        BoundClosure_receiverOf: function(closure) {
          return closure._receiver;
        },
        BoundClosure_computeFieldNamed: function(fieldName) {
          var template, names, t1, i, $name;
          template = new H.BoundClosure("self", "target", "receiver", "name");
          names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
          for (t1 = names.length, i = 0; i < t1; ++i) {
            $name = names[i];
            if (template[$name] === fieldName)
              return $name;
          }
        }
      }
    },
    Instantiation: {
      "^": "Closure;",
      Instantiation$1: function(_genericClosure) {
        if (false)
          H.instantiatedGenericFunctionType(0, 0);
      },
      toString$0: function(_) {
        var types = "<" + C.JSArray_methods.join$1([new H.TypeImpl(H.getTypeArgumentByIndex(this, 0))], ", ") + ">";
        return H.S(this._genericClosure) + " with " + types;
      }
    },
    Instantiation1: {
      "^": "Instantiation;_genericClosure,$ti",
      call$1: function(a0) {
        return this._genericClosure.call$1$1(a0, this.$ti[0]);
      },
      call$2: function(a0, a1) {
        return this._genericClosure.call$1$2(a0, a1, this.$ti[0]);
      },
      call$4: function(a0, a1, a2, a3) {
        return this._genericClosure.call$1$4(a0, a1, a2, a3, this.$ti[0]);
      },
      $signature: function() {
        return H.instantiatedGenericFunctionType(H.extractFunctionTypeObjectFromInternal(this._genericClosure), this.$ti);
      }
    },
    TypeErrorImplementation: {
      "^": "Error;message>",
      toString$0: function(_) {
        return this.message;
      },
      static: {
        TypeErrorImplementation$: function(value, type) {
          return new H.TypeErrorImplementation("TypeError: " + H.S(P.Error_safeToString(value)) + ": type '" + H._typeDescription(value) + "' is not a subtype of type '" + type + "'");
        }
      }
    },
    CastErrorImplementation: {
      "^": "Error;message>",
      toString$0: function(_) {
        return this.message;
      },
      static: {
        CastErrorImplementation$: function(value, type) {
          return new H.CastErrorImplementation("CastError: " + H.S(P.Error_safeToString(value)) + ": type '" + H._typeDescription(value) + "' is not a subtype of type '" + type + "'");
        }
      }
    },
    RuntimeError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "RuntimeError: " + H.S(this.message);
      },
      static: {
        RuntimeError$: function(message) {
          return new H.RuntimeError(message);
        }
      }
    },
    TypeImpl: {
      "^": "Object;_rti,0__typeName,0_unmangledName,0_hashCode",
      get$_typeName: function() {
        var t1 = this.__typeName;
        if (t1 == null) {
          t1 = H.runtimeTypeToString(this._rti);
          this.__typeName = t1;
        }
        return t1;
      },
      toString$0: function(_) {
        return this.get$_typeName();
      },
      get$hashCode: function(_) {
        var t1 = this._hashCode;
        if (t1 == null) {
          t1 = C.JSString_methods.get$hashCode(this.get$_typeName());
          this._hashCode = t1;
        }
        return t1;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.TypeImpl && this.get$_typeName() === other.get$_typeName();
      },
      $isType: 1
    },
    JsLinkedHashMap: {
      "^": "MapBase;__js_helper$_length,0_strings,0_nums,0_rest,0_first,0_last,_modifications,$ti",
      get$length: function(_) {
        return this.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this.__js_helper$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return !this.get$isEmpty(this);
      },
      get$keys: function(_) {
        return new H.LinkedHashMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
      },
      get$values: function(_) {
        return H.MappedIterable_MappedIterable(this.get$keys(this), new H.JsLinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
      },
      containsKey$1: function(_, key) {
        var strings, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return false;
          return this._containsTableEntry$2(strings, key);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return false;
          return this._containsTableEntry$2(nums, key);
        } else
          return this.internalContainsKey$1(key);
      },
      internalContainsKey$1: ["super$JsLinkedHashMap$internalContainsKey", function(key) {
        var rest = this._rest;
        if (rest == null)
          return false;
        return this.internalFindBucketIndex$2(this._getTableBucket$2(rest, this.internalComputeHashCode$1(key)), key) >= 0;
      }],
      addAll$1: function(_, other) {
        J.forEach$1$ax(H.assertSubtype(other, "$isMap", this.$ti, "$asMap"), new H.JsLinkedHashMap_addAll_closure(this));
      },
      $index: function(_, key) {
        var strings, cell, t1, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return;
          cell = this._getTableCell$2(strings, key);
          t1 = cell == null ? null : cell.hashMapCellValue;
          return t1;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return;
          cell = this._getTableCell$2(nums, key);
          t1 = cell == null ? null : cell.hashMapCellValue;
          return t1;
        } else
          return this.internalGet$1(key);
      },
      internalGet$1: ["super$JsLinkedHashMap$internalGet", function(key) {
        var rest, bucket, index;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableBucket$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].hashMapCellValue;
      }],
      $indexSet: function(_, key, value) {
        var strings, nums;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null) {
            strings = this._newHashTable$0();
            this._strings = strings;
          }
          this._addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null) {
            nums = this._newHashTable$0();
            this._nums = nums;
          }
          this._addHashTableEntry$3(nums, key, value);
        } else
          this.internalSet$2(key, value);
      },
      internalSet$2: ["super$JsLinkedHashMap$internalSet", function(key, value) {
        var rest, hash, bucket, index;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        rest = this._rest;
        if (rest == null) {
          rest = this._newHashTable$0();
          this._rest = rest;
        }
        hash = this.internalComputeHashCode$1(key);
        bucket = this._getTableBucket$2(rest, hash);
        if (bucket == null)
          this._setTableEntry$3(rest, hash, [this._newLinkedCell$2(key, value)]);
        else {
          index = this.internalFindBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].hashMapCellValue = value;
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      }],
      putIfAbsent$2: function(_, key, ifAbsent) {
        var value;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.functionTypeCheck(ifAbsent, {func: 1, ret: H.getTypeArgumentByIndex(this, 1)});
        if (this.containsKey$1(0, key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (typeof key === "string")
          return this.__js_helper$_removeHashTableEntry$2(this._strings, key);
        else if (typeof key === "number" && (key & 0x3ffffff) === key)
          return this.__js_helper$_removeHashTableEntry$2(this._nums, key);
        else
          return this.internalRemove$1(key);
      },
      internalRemove$1: ["super$JsLinkedHashMap$internalRemove", function(key) {
        var rest, bucket, index, cell;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableBucket$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this.__js_helper$_unlinkCell$1(cell);
        return cell.hashMapCellValue;
      }],
      clear$0: function(_) {
        if (this.__js_helper$_length > 0) {
          this._last = null;
          this._first = null;
          this._rest = null;
          this._nums = null;
          this._strings = null;
          this.__js_helper$_length = 0;
          this._modified$0();
        }
      },
      forEach$1: function(_, action) {
        var cell, modifications;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]});
        cell = this._first;
        modifications = this._modifications;
        for (; cell != null;) {
          action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
          if (modifications !== this._modifications)
            throw H.wrapException(P.ConcurrentModificationError$(this));
          cell = cell._next;
        }
      },
      _addHashTableEntry$3: function(table, key, value) {
        var cell;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        cell = this._getTableCell$2(table, key);
        if (cell == null)
          this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));
        else
          cell.hashMapCellValue = value;
      },
      __js_helper$_removeHashTableEntry$2: function(table, key) {
        var cell;
        if (table == null)
          return;
        cell = this._getTableCell$2(table, key);
        if (cell == null)
          return;
        this.__js_helper$_unlinkCell$1(cell);
        this._deleteTableEntry$2(table, key);
        return cell.hashMapCellValue;
      },
      _modified$0: function() {
        this._modifications = this._modifications + 1 & 67108863;
      },
      _newLinkedCell$2: function(key, value) {
        var cell, last;
        cell = new H.LinkedHashMapCell(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1)));
        if (this._first == null) {
          this._last = cell;
          this._first = cell;
        } else {
          last = this._last;
          cell._previous = last;
          last._next = cell;
          this._last = cell;
        }
        ++this.__js_helper$_length;
        this._modified$0();
        return cell;
      },
      __js_helper$_unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell._previous;
        next = cell._next;
        if (previous == null)
          this._first = next;
        else
          previous._next = next;
        if (next == null)
          this._last = previous;
        else
          next._previous = previous;
        --this.__js_helper$_length;
        this._modified$0();
      },
      internalComputeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq$(bucket[i].hashMapCellKey, key))
            return i;
        return -1;
      },
      toString$0: function(_) {
        return P.MapBase_mapToString(this);
      },
      _getTableCell$2: function(table, key) {
        return table[key];
      },
      _getTableBucket$2: function(table, key) {
        return table[key];
      },
      _setTableEntry$3: function(table, key, value) {
        table[key] = value;
      },
      _deleteTableEntry$2: function(table, key) {
        delete table[key];
      },
      _containsTableEntry$2: function(table, key) {
        return this._getTableCell$2(table, key) != null;
      },
      _newHashTable$0: function() {
        var table = Object.create(null);
        this._setTableEntry$3(table, "<non-identifier-key>", table);
        this._deleteTableEntry$2(table, "<non-identifier-key>");
        return table;
      },
      $isLinkedHashMap: 1
    },
    JsLinkedHashMap_values_closure: {
      "^": "Closure;$this",
      call$1: [function(each) {
        var t1 = this.$this;
        return t1.$index(0, H.assertSubtypeOfRuntimeType(each, H.getTypeArgumentByIndex(t1, 0)));
      }, null, null, 4, 0, null, 20, "call"],
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: H.getTypeArgumentByIndex(t1, 1), args: [H.getTypeArgumentByIndex(t1, 0)]};
      }
    },
    JsLinkedHashMap_addAll_closure: {
      "^": "Closure;$this",
      call$2: function(key, value) {
        var t1 = this.$this;
        t1.$indexSet(0, H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(t1, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(t1, 1)));
      },
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: P.Null, args: [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]};
      }
    },
    LinkedHashMapCell: {
      "^": "Object;hashMapCellKey,hashMapCellValue,0_next,0_previous"
    },
    LinkedHashMapKeyIterable: {
      "^": "EfficientLengthIterable;_map,$ti",
      get$length: function(_) {
        return this._map.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this._map.__js_helper$_length === 0;
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this._map;
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti);
        t2._cell = t1._first;
        return t2;
      },
      contains$1: function(_, element) {
        return this._map.containsKey$1(0, element);
      },
      forEach$1: function(_, f) {
        var t1, cell, modifications;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._map;
        cell = t1._first;
        modifications = t1._modifications;
        for (; cell != null;) {
          f.call$1(cell.hashMapCellKey);
          if (modifications !== t1._modifications)
            throw H.wrapException(P.ConcurrentModificationError$(t1));
          cell = cell._next;
        }
      }
    },
    LinkedHashMapKeyIterator: {
      "^": "Object;_map,_modifications,0_cell,0_current,$ti",
      set$_current: function(_current) {
        this._current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this._current;
      },
      moveNext$0: function() {
        var t1 = this._map;
        if (this._modifications !== t1._modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        else {
          t1 = this._cell;
          if (t1 == null) {
            this.set$_current(null);
            return false;
          } else {
            this.set$_current(t1.hashMapCellKey);
            this._cell = this._cell._next;
            return true;
          }
        }
      },
      $isIterator: 1
    },
    initHooks_closure: {
      "^": "Closure:8;getTag",
      call$1: function(o) {
        return this.getTag(o);
      }
    },
    initHooks_closure0: {
      "^": "Closure:244;getUnknownTag",
      call$2: function(o, tag) {
        return this.getUnknownTag(o, tag);
      }
    },
    initHooks_closure1: {
      "^": "Closure:175;prototypeForTag",
      call$1: function(tag) {
        return this.prototypeForTag(H.stringTypeCheck(tag));
      }
    },
    JSSyntaxRegExp: {
      "^": "Object;pattern,_nativeRegExp,0_nativeGlobalRegExp,0_nativeAnchoredRegExp",
      toString$0: function(_) {
        return "RegExp/" + this.pattern + "/";
      },
      get$_nativeGlobalVersion: function() {
        var t1 = this._nativeGlobalRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern, t1.multiline, !t1.ignoreCase, true);
        this._nativeGlobalRegExp = t1;
        return t1;
      },
      get$_nativeAnchoredVersion: function() {
        var t1 = this._nativeAnchoredRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern + "|()", t1.multiline, !t1.ignoreCase, true);
        this._nativeAnchoredRegExp = t1;
        return t1;
      },
      allMatches$2: function(_, string, start) {
        var t1;
        if (typeof string !== "string")
          H.throwExpression(H.argumentErrorValue(string));
        t1 = string.length;
        if (start > t1)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return new H._AllMatchesIterable(this, string, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      _execGlobal$2: function(string, start) {
        var regexp, match;
        regexp = this.get$_nativeGlobalVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        return new H._MatchImplementation(this, match);
      },
      _execAnchored$2: function(string, start) {
        var regexp, match;
        regexp = this.get$_nativeAnchoredVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        if (0 >= match.length)
          return H.ioore(match, -1);
        if (match.pop() != null)
          return;
        return new H._MatchImplementation(this, match);
      },
      matchAsPrefix$2: function(_, string, start) {
        if (typeof start !== "number")
          return start.$lt();
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return this._execAnchored$2(string, start);
      },
      $isPattern: 1,
      $isRegExp: 1,
      static: {
        JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, global) {
          var m, i, g, regexp;
          m = multiLine ? "m" : "";
          i = caseSensitive ? "" : "i";
          g = global ? "g" : "";
          regexp = function(source, modifiers) {
            try {
              return new RegExp(source, modifiers);
            } catch (e) {
              return e;
            }
          }(source, m + i + g);
          if (regexp instanceof RegExp)
            return regexp;
          throw H.wrapException(P.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
        }
      }
    },
    _MatchImplementation: {
      "^": "Object;pattern,_match",
      get$start: function(_) {
        return this._match.index;
      },
      get$end: function(_) {
        var t1 = this._match;
        return t1.index + t1[0].length;
      },
      $index: function(_, index) {
        var t1;
        H.intTypeCheck(index);
        t1 = this._match;
        if (index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $isMatch: 1
    },
    _AllMatchesIterable: {
      "^": "IterableBase;_re,_string,_start",
      get$iterator: function(_) {
        return new H._AllMatchesIterator(this._re, this._string, this._start);
      },
      $asIterable: function() {
        return [P.Match];
      }
    },
    _AllMatchesIterator: {
      "^": "Object;_regExp,_string,_nextIndex,0_current",
      get$current: function(_) {
        return this._current;
      },
      moveNext$0: function() {
        var t1, t2, match, nextIndex;
        t1 = this._string;
        if (t1 == null)
          return false;
        t2 = this._nextIndex;
        if (t2 <= t1.length) {
          match = this._regExp._execGlobal$2(t1, t2);
          if (match != null) {
            this._current = match;
            nextIndex = match.get$end(match);
            this._nextIndex = match._match.index === nextIndex ? nextIndex + 1 : nextIndex;
            return true;
          }
        }
        this._current = null;
        this._string = null;
        return false;
      },
      $isIterator: 1,
      $asIterator: function() {
        return [P.Match];
      }
    },
    StringMatch: {
      "^": "Object;start>,input,pattern",
      get$end: function(_) {
        var t1 = this.start;
        if (typeof t1 !== "number")
          return t1.$add();
        return t1 + this.pattern.length;
      },
      $index: function(_, g) {
        H.intTypeCheck(g);
        if (g !== 0)
          H.throwExpression(P.RangeError$value(g, null, null));
        return this.pattern;
      },
      $isMatch: 1
    },
    _StringAllMatchesIterable: {
      "^": "Iterable;_input,_pattern,_index",
      get$iterator: function(_) {
        return new H._StringAllMatchesIterator(this._input, this._pattern, this._index);
      },
      $asIterable: function() {
        return [P.Match];
      }
    },
    _StringAllMatchesIterator: {
      "^": "Object;_input,_pattern,_index,0_current",
      moveNext$0: function() {
        var t1, t2, t3, t4, t5, index, end;
        t1 = this._index;
        t2 = this._pattern;
        t3 = t2.length;
        t4 = this._input;
        t5 = t4.length;
        if (t1 + t3 > t5) {
          this._current = null;
          return false;
        }
        index = t4.indexOf(t2, t1);
        if (index < 0) {
          this._index = t5 + 1;
          this._current = null;
          return false;
        }
        end = index + t3;
        this._current = new H.StringMatch(index, t4, t2);
        this._index = end === this._index ? end + 1 : end;
        return true;
      },
      get$current: function(_) {
        return this._current;
      },
      $isIterator: 1,
      $asIterator: function() {
        return [P.Match];
      }
    }
  }], ["dart._js_names", "dart:_js_names",, H, {
    "^": "",
    extractKeys: function(victim) {
      return J.JSArray_JSArray$markFixed(victim ? Object.keys(victim) : [], null);
    }
  }], ["dart2js._js_primitives", "dart:_js_primitives",, H, {
    "^": "",
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  }], ["dart.typed_data.implementation", "dart:_native_typed_data",, H, {
    "^": "",
    _ensureNativeList: function(list) {
      var t1, t2, result, i;
      t1 = J.getInterceptor$(list);
      if (!!t1.$isJSIndexable)
        return list;
      t2 = t1.get$length(list);
      if (typeof t2 !== "number")
        return H.iae(t2);
      result = new Array(t2);
      result.fixed$length = Array;
      i = 0;
      while (true) {
        t2 = t1.get$length(list);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        C.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
        ++i;
      }
      return result;
    },
    NativeInt8List__create1: function(arg) {
      return new Int8Array(arg);
    },
    NativeUint8List_NativeUint8List$view: function(buffer, offsetInBytes, $length) {
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    _checkValidRange: function(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        if (!(end >>> 0 !== end)) {
          if (typeof start !== "number")
            return start.$gt();
          t1 = start > end || end > $length;
        } else
          t1 = true;
      else
        t1 = true;
      if (t1)
        throw H.wrapException(H.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: {
      "^": "Interceptor;",
      $isNativeByteBuffer: 1,
      $isByteBuffer: 1,
      "%": "ArrayBuffer"
    },
    NativeTypedData: {
      "^": "Interceptor;",
      _invalidPosition$3: function(receiver, position, $length, $name) {
        if (typeof position !== "number" || Math.floor(position) !== position)
          throw H.wrapException(P.ArgumentError$value(position, $name, "Invalid list position"));
        else
          throw H.wrapException(P.RangeError$range(position, 0, $length, $name, null));
      },
      _checkPosition$3: function(receiver, position, $length, $name) {
        if (position >>> 0 !== position || position > $length)
          this._invalidPosition$3(receiver, position, $length, $name);
      },
      $isNativeTypedData: 1,
      $isTypedData: 1,
      "%": "DataView;ArrayBufferView;NativeTypedArray|_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin|_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfDouble|_NativeTypedArrayOfInt_NativeTypedArray_ListMixin|_NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfInt"
    },
    NativeTypedArray: {
      "^": "NativeTypedData;",
      get$length: function(receiver) {
        return receiver.length;
      },
      _setRangeFast$4: function(receiver, start, end, source, skipCount) {
        var targetLength, count, sourceLength;
        targetLength = receiver.length;
        this._checkPosition$3(receiver, start, targetLength, "start");
        this._checkPosition$3(receiver, end, targetLength, "end");
        if (typeof end !== "number")
          return H.iae(end);
        if (start > end)
          throw H.wrapException(P.RangeError$range(start, 0, end, null, null));
        count = end - start;
        if (skipCount < 0)
          throw H.wrapException(P.ArgumentError$(skipCount));
        sourceLength = source.length;
        if (sourceLength - skipCount < count)
          throw H.wrapException(P.StateError$("Not enough elements"));
        if (skipCount !== 0 || sourceLength !== count)
          source = source.subarray(skipCount, skipCount + count);
        receiver.set(source, start);
      },
      $isJSIndexable: 1,
      $asJSIndexable: Isolate.functionThatReturnsNull,
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: Isolate.functionThatReturnsNull
    },
    NativeTypedArrayOfDouble: {
      "^": "_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin;",
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.doubleTypeCheck(value);
        H._checkValidIndex(index, receiver, receiver.length);
        receiver[index] = value;
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [P.double], "$asIterable");
        if (!!J.getInterceptor$(iterable).$isNativeTypedArrayOfDouble) {
          this._setRangeFast$4(receiver, start, end, iterable, skipCount);
          return;
        }
        this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.double];
      },
      $asFixedLengthListMixin: function() {
        return [P.double];
      },
      $asListMixin: function() {
        return [P.double];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.double];
      },
      $isList: 1,
      $asList: function() {
        return [P.double];
      },
      "%": "Float32Array|Float64Array"
    },
    NativeTypedArrayOfInt: {
      "^": "_NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin;",
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.intTypeCheck(value);
        H._checkValidIndex(index, receiver, receiver.length);
        receiver[index] = value;
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [P.int], "$asIterable");
        if (!!J.getInterceptor$(iterable).$isNativeTypedArrayOfInt) {
          this._setRangeFast$4(receiver, start, end, iterable, skipCount);
          return;
        }
        this.super$ListMixin$setRange(receiver, start, end, iterable, skipCount);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.int];
      },
      $asFixedLengthListMixin: function() {
        return [P.int];
      },
      $asListMixin: function() {
        return [P.int];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.int];
      },
      $isList: 1,
      $asList: function() {
        return [P.int];
      }
    },
    NativeInt16List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Int16Array"
    },
    NativeInt32List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Int32Array"
    },
    NativeInt8List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Int8Array"
    },
    NativeUint16List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "Uint16Array"
    },
    NativeUint32List: {
      "^": "NativeTypedArrayOfInt;",
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint32Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      $isUint32List: 1,
      "%": "Uint32Array"
    },
    NativeUint8ClampedList: {
      "^": "NativeTypedArrayOfInt;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      "%": "CanvasPixelArray|Uint8ClampedArray"
    },
    NativeUint8List: {
      "^": "NativeTypedArrayOfInt;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        H._checkValidIndex(index, receiver, receiver.length);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint8Array(receiver.subarray(start, H._checkValidRange(start, end, receiver.length)));
      },
      $isNativeUint8List: 1,
      $isUint8List: 1,
      "%": ";Uint8Array"
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: {
      "^": "NativeTypedArray+ListMixin;"
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: {
      "^": "_NativeTypedArrayOfDouble_NativeTypedArray_ListMixin+FixedLengthListMixin;"
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: {
      "^": "NativeTypedArray+ListMixin;"
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: {
      "^": "_NativeTypedArrayOfInt_NativeTypedArray_ListMixin+FixedLengthListMixin;"
    }
  }], ["dart.async", "dart:async",, P, {
    "^": "",
    _AsyncRun__initializeScheduleImmediate: function() {
      var t1, div, span;
      t1 = {};
      if (self.scheduleImmediate != null)
        return P.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: [function(callback) {
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    }, "call$1", "async__AsyncRun__scheduleImmediateJsOverride$closure", 4, 0, 45],
    _AsyncRun__scheduleImmediateWithSetImmediate: [function(callback) {
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(H.functionTypeCheck(callback, {func: 1, ret: -1})), 0));
    }, "call$1", "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", 4, 0, 45],
    _AsyncRun__scheduleImmediateWithTimer: [function(callback) {
      P.Timer__createTimer(C.Duration_0, H.functionTypeCheck(callback, {func: 1, ret: -1}));
    }, "call$1", "async__AsyncRun__scheduleImmediateWithTimer$closure", 4, 0, 45],
    Timer__createTimer: function(duration, callback) {
      var milliseconds;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _makeAsyncAwaitCompleter: function($T) {
      return new P._AsyncAwaitCompleter(new P._SyncCompleter(new P._Future(0, $.Zone__current, [$T]), [$T]), false, [$T]);
    },
    _asyncStartSync: function(bodyFunction, completer) {
      H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]});
      H.interceptedTypeCheck(completer, "$is_AsyncAwaitCompleter");
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._completer.future;
    },
    _asyncAwait: function(object, bodyFunction) {
      P._awaitOnObject(object, H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]}));
    },
    _asyncReturn: function(object, completer) {
      H.interceptedTypeCheck(completer, "$isCompleter").complete$1(0, object);
    },
    _asyncRethrow: function(object, completer) {
      H.interceptedTypeCheck(completer, "$isCompleter").completeError$2(H.unwrapException(object), H.getTraceFromException(object));
    },
    _awaitOnObject: function(object, bodyFunction) {
      var thenCallback, errorCallback, t1, t2, future;
      H.functionTypeCheck(bodyFunction, {func: 1, ret: -1, args: [P.int,,]});
      thenCallback = new P._awaitOnObject_closure(bodyFunction);
      errorCallback = new P._awaitOnObject_closure0(bodyFunction);
      t1 = J.getInterceptor$(object);
      if (!!t1.$is_Future)
        object._thenNoZoneRegistration$1$2(H.functionTypeCheck(thenCallback, {func: 1, ret: {futureOr: 1}, args: [,]}), errorCallback, null);
      else {
        t2 = {func: 1, ret: {futureOr: 1}, args: [,]};
        if (!!t1.$isFuture)
          object.then$1$2$onError(H.functionTypeCheck(thenCallback, t2), errorCallback, null);
        else {
          future = new P._Future(0, $.Zone__current, [null]);
          H.assertSubtypeOfRuntimeType(object, null);
          future._state = 4;
          future._resultOrListeners = object;
          future._thenNoZoneRegistration$1$2(H.functionTypeCheck(thenCallback, t2), null, null);
        }
      }
    },
    _wrapJsFunctionForAsync: function($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true)
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$3$1(new P._wrapJsFunctionForAsync_closure($protected), P.Null, P.int, null);
    },
    _asyncStarHelper: function(object, bodyFunctionOrErrorCode, controller) {
      var t1, t2, stream;
      H.interceptedTypeCheck(controller, "$is_AsyncStarStreamController");
      if (bodyFunctionOrErrorCode === 0) {
        t1 = controller.cancelationCompleter;
        if (t1 != null)
          t1.complete$0(0);
        else
          controller.controller.close$0(0);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        t1 = controller.cancelationCompleter;
        if (t1 != null)
          t1.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        else {
          t1 = H.unwrapException(object);
          t2 = H.getTraceFromException(object);
          controller.controller.addError$2(t1, t2);
          controller.controller.close$0(0);
        }
        return;
      }
      if (object instanceof P._IterationMarker) {
        if (controller.cancelationCompleter != null) {
          bodyFunctionOrErrorCode.call$2(2, null);
          return;
        }
        t1 = object.state;
        if (t1 === 0) {
          t1 = object.value;
          controller.controller.add$1(0, H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(controller, 0)));
          P.scheduleMicrotask(new P._asyncStarHelper_closure(controller, bodyFunctionOrErrorCode));
          return;
        } else if (t1 === 1) {
          stream = H.interceptedTypeCheck(object.value, "$isStream");
          controller.toString;
          H.assertSubtype(stream, "$isStream", [H.getTypeArgumentByIndex(controller, 0)], "$asStream");
          controller.controller.addStream$2$cancelOnError(0, stream, false).then$1(new P._asyncStarHelper_closure0(controller, bodyFunctionOrErrorCode));
          return;
        }
      }
      P._awaitOnObject(object, H.functionTypeCheck(bodyFunctionOrErrorCode, {func: 1, ret: -1, args: [P.int,,]}));
    },
    _streamOfController: function(controller) {
      var t1 = H.interceptedTypeCheck(controller, "$is_AsyncStarStreamController").controller;
      t1.toString;
      return new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
    },
    _makeAsyncStarStreamController: function(body, $T) {
      return P._AsyncStarStreamController$(H.functionTypeCheck(body, {func: 1, ret: -1, args: [P.int,,]}), $T);
    },
    _makeSyncStarIterable: function(body, $T) {
      return new P._SyncStarIterable(body, [$T]);
    },
    Future_Future: function(computation, $T) {
      var result;
      H.functionTypeCheck(computation, {func: 1, ret: {futureOr: 1, type: $T}});
      result = new P._Future(0, $.Zone__current, [$T]);
      P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(result, computation));
      return result;
    },
    Future_Future$microtask: function(computation, $T) {
      var result;
      H.functionTypeCheck(computation, {func: 1, ret: {futureOr: 1, type: $T}});
      result = new P._Future(0, $.Zone__current, [$T]);
      P.scheduleMicrotask(new P.Future_Future$microtask_closure(result, computation));
      return result;
    },
    Future_Future$error: function(error, stackTrace, $T) {
      var t1, replacement;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      if (error == null)
        error = new P.NullThrownError();
      t1 = $.Zone__current;
      if (t1 !== C.C__RootZone) {
        replacement = t1.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
      }
      t1 = new P._Future(0, $.Zone__current, [$T]);
      t1._asyncCompleteError$2(error, stackTrace);
      return t1;
    },
    Future_wait: function(futures, cleanUp, eagerError, $T) {
      var _box_0, result, handleError, future, pos, e, st, t1, t2, t3, t4, _i, t5, exception;
      _box_0 = {};
      H.assertSubtype(futures, "$isIterable", [[P.Future, $T]], "$asIterable");
      t1 = [P.List, $T];
      t2 = [t1];
      result = new P._Future(0, $.Zone__current, t2);
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0.error = null;
      _box_0.stackTrace = null;
      handleError = new P.Future_wait_handleError(_box_0, cleanUp, false, result);
      try {
        for (t3 = futures, t4 = t3.length, _i = 0, t5 = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i) {
          future = t3[_i];
          pos = t5;
          future.then$1$2$onError(new P.Future_wait_closure(_box_0, pos, result, cleanUp, false, $T), handleError, null);
          t5 = ++_box_0.remaining;
        }
        if (t5 === 0) {
          t2 = new P._Future(0, $.Zone__current, t2);
          t2._asyncComplete$1(C.List_empty1);
          return t2;
        }
        t2 = new Array(t5);
        t2.fixed$length = Array;
        _box_0.values = H.setRuntimeTypeInfo(t2, [$T]);
      } catch (exception) {
        e = H.unwrapException(exception);
        st = H.getTraceFromException(exception);
        if (_box_0.remaining === 0 || false)
          return P.Future_Future$error(e, st, t1);
        else {
          _box_0.error = e;
          _box_0.stackTrace = st;
        }
      }
      return result;
    },
    _completeWithErrorCallback: function(result, error, stackTrace) {
      var t1, replacement;
      t1 = $.Zone__current;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      replacement = t1.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        if (error == null)
          error = new P.NullThrownError();
        stackTrace = replacement.stackTrace;
      }
      result._completeError$2(error, stackTrace);
    },
    _registerErrorHandler: function(errorHandler, zone) {
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object, P.StackTrace]}))
        return zone.registerBinaryCallback$3$1(errorHandler, null, P.Object, P.StackTrace);
      if (H.functionTypeTest(errorHandler, {func: 1, args: [P.Object]}))
        return zone.registerUnaryCallback$2$1(errorHandler, null, P.Object);
      throw H.wrapException(P.ArgumentError$value(errorHandler, "onError", "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a a valid result"));
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.next;
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        t1.callback.call$0();
      }
    },
    _startMicrotaskLoop: [function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      }
    }, "call$0", "async___startMicrotaskLoop$closure", 0, 0, 2],
    _scheduleAsyncCallback: function(callback) {
      var newEntry = new P._AsyncCallbackEntry(H.functionTypeCheck(callback, {func: 1, ret: -1}));
      if ($._nextCallback == null) {
        $._lastCallback = newEntry;
        $._nextCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(P.async___startMicrotaskLoop$closure());
      } else {
        $._lastCallback.next = newEntry;
        $._lastCallback = newEntry;
      }
    },
    _schedulePriorityAsyncCallback: function(callback) {
      var t1, entry, t2;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new P._AsyncCallbackEntry(callback);
      t2 = $._lastPriorityCallback;
      if (t2 == null) {
        entry.next = t1;
        $._lastPriorityCallback = entry;
        $._nextCallback = entry;
      } else {
        entry.next = t2.next;
        t2.next = entry;
        $._lastPriorityCallback = entry;
        if (entry.next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask: function(callback) {
      var currentZone, t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(null, null, C.C__RootZone, callback);
        return;
      }
      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().zone)
        t1 = C.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        P._rootScheduleMicrotask(null, null, currentZone, currentZone.registerCallback$1$1(callback, -1));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallbackGuarded$1(callback));
    },
    Stream_Stream$fromFuture: function(future, $T) {
      var controller;
      H.assertSubtype(future, "$isFuture", [$T], "$asFuture");
      controller = H.assertSubtype(P.StreamController_StreamController(null, null, null, null, true, $T), "$is_StreamController", [$T], "$as_StreamController");
      future.then$1$2$onError(new P.Stream_Stream$fromFuture_closure(controller, $T), new P.Stream_Stream$fromFuture_closure0(controller), null);
      return new P._ControllerStream(controller, [H.getTypeArgumentByIndex(controller, 0)]);
    },
    Stream_Stream$fromIterable: function(elements, $T) {
      return new P._GeneratedStreamImpl(new P.Stream_Stream$fromIterable_closure(H.assertSubtype(elements, "$isIterable", [$T], "$asIterable"), $T), false, [$T]);
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      return new P._StreamIterator(H.assertSubtype(stream, "$isStream", [$T], "$asStream"), false, [$T]);
    },
    StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
      var t1 = {func: 1, ret: -1};
      H.functionTypeCheck(onListen, t1);
      H.functionTypeCheck(onResume, t1);
      H.functionTypeCheck(onCancel, {func: 1});
      return sync ? new P._SyncStreamController(0, onListen, onPause, onResume, onCancel, [$T]) : new P._AsyncStreamController(0, onListen, onPause, onResume, onCancel, [$T]);
    },
    _runGuarded: function(notificationHandler) {
      var e, s, exception;
      H.functionTypeCheck(notificationHandler, {func: 1});
      if (notificationHandler == null)
        return;
      try {
        notificationHandler.call$0();
      } catch (exception) {
        e = H.unwrapException(exception);
        s = H.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _nullDataHandler: [function(value) {
    }, "call$1", "async___nullDataHandler$closure", 4, 0, 14, 1],
    _nullErrorHandler: [function(error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    }, function(error) {
      return P._nullErrorHandler(error, null);
    }, "call$2", "call$1", "async___nullErrorHandler$closure", 4, 2, 38, 3, 2, 4],
    _nullDoneHandler: [function() {
    }, "call$0", "async___nullDoneHandler$closure", 0, 0, 2],
    _cancelAndValue: function(subscription, future, value) {
      var cancelFuture = subscription.cancel$0(0);
      if (!!J.getInterceptor$(cancelFuture).$isFuture && cancelFuture !== $.$get$Future__nullFuture())
        cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    _addErrorWithReplacement: function(sink, error, stackTrace) {
      var t1, replacement;
      t1 = $.Zone__current;
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      replacement = t1.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = replacement.error;
        if (error == null)
          error = new P.NullThrownError();
        stackTrace = replacement.stackTrace;
      }
      sink._addError$2(error, stackTrace);
    },
    Timer_Timer: function(duration, callback) {
      var t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1});
      t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return t1.createTimer$2(duration, callback);
      return t1.createTimer$2(duration, t1.bindCallbackGuarded$1(callback));
    },
    _parentDelegate: function(zone) {
      if (zone.get$parent(zone) == null)
        return;
      return zone.get$parent(zone).get$_delegate();
    },
    _rootHandleUncaughtError: [function($self, $parent, zone, error, stackTrace) {
      var t1 = {};
      t1.error = error;
      P._schedulePriorityAsyncCallback(new P._rootHandleUncaughtError_closure(t1, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
    }, "call$5", "async___rootHandleUncaughtError$closure", 20, 0, 70],
    _rootRun: [1, function($self, $parent, zone, f, $R) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R});
      t1 = $.Zone__current;
      if (t1 == null ? zone == null : t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, function($self, $parent, zone, f) {
      return P._rootRun($self, $parent, zone, f, null);
    }, "call$1$4", "call$4", "async___rootRun$closure", 16, 0, 65, 10, 14, 15, 21],
    _rootRunUnary: [1, function($self, $parent, zone, f, arg, $R, $T) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      H.assertSubtypeOfRuntimeType(arg, $T);
      t1 = $.Zone__current;
      if (t1 == null ? zone == null : t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, function($self, $parent, zone, f, arg) {
      return P._rootRunUnary($self, $parent, zone, f, arg, null, null);
    }, "call$2$5", "call$5", "async___rootRunUnary$closure", 20, 0, 49, 10, 14, 15, 21, 11],
    _rootRunBinary: [1, function($self, $parent, zone, f, arg1, arg2, $R, T1, T2) {
      var old, t1;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      H.assertSubtypeOfRuntimeType(arg1, T1);
      H.assertSubtypeOfRuntimeType(arg2, T2);
      t1 = $.Zone__current;
      if (t1 == null ? zone == null : t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, function($self, $parent, zone, f, arg1, arg2) {
      return P._rootRunBinary($self, $parent, zone, f, arg1, arg2, null, null, null);
    }, "call$3$6", "call$6", "async___rootRunBinary$closure", 24, 0, 73, 10, 14, 15, 21, 17, 18],
    _rootRegisterCallback: [function($self, $parent, zone, f, $R) {
      return H.functionTypeCheck(f, {func: 1, ret: $R});
    }, function($self, $parent, zone, f) {
      return P._rootRegisterCallback($self, $parent, zone, f, null);
    }, "call$1$4", "call$4", "async___rootRegisterCallback$closure", 16, 0, 211],
    _rootRegisterUnaryCallback: [function($self, $parent, zone, f, $R, $T) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
    }, function($self, $parent, zone, f) {
      return P._rootRegisterUnaryCallback($self, $parent, zone, f, null, null);
    }, "call$2$4", "call$4", "async___rootRegisterUnaryCallback$closure", 16, 0, 212],
    _rootRegisterBinaryCallback: [function($self, $parent, zone, f, $R, T1, T2) {
      return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
    }, function($self, $parent, zone, f) {
      return P._rootRegisterBinaryCallback($self, $parent, zone, f, null, null, null);
    }, "call$3$4", "call$4", "async___rootRegisterBinaryCallback$closure", 16, 0, 213],
    _rootErrorCallback: [function($self, $parent, zone, error, stackTrace) {
      H.interceptedTypeCheck(stackTrace, "$isStackTrace");
      return;
    }, "call$5", "async___rootErrorCallback$closure", 20, 0, 214],
    _rootScheduleMicrotask: [function($self, $parent, zone, f) {
      var t1;
      H.functionTypeCheck(f, {func: 1, ret: -1});
      t1 = C.C__RootZone !== zone;
      if (t1)
        f = !(!t1 || C.C__RootZone.get$errorZone() === zone.get$errorZone()) ? zone.bindCallbackGuarded$1(f) : zone.bindCallback$1$1(f, -1);
      P._scheduleAsyncCallback(f);
    }, "call$4", "async___rootScheduleMicrotask$closure", 16, 0, 58],
    _rootCreateTimer: [function($self, $parent, zone, duration, callback) {
      H.interceptedTypeCheck(duration, "$isDuration");
      callback = zone.bindCallback$1$1(H.functionTypeCheck(callback, {func: 1, ret: -1}), -1);
      return P.Timer__createTimer(duration, callback);
    }, "call$5", "async___rootCreateTimer$closure", 20, 0, 50],
    _rootCreatePeriodicTimer: [function($self, $parent, zone, duration, callback) {
      var milliseconds;
      H.interceptedTypeCheck(duration, "$isDuration");
      callback = zone.bindUnaryCallback$2$1(H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.Timer]}), null, P.Timer);
      milliseconds = C.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return P._TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    }, "call$5", "async___rootCreatePeriodicTimer$closure", 20, 0, 215],
    _rootPrint: [function($self, $parent, zone, line) {
      H.printString(H.stringTypeCheck(line));
    }, "call$4", "async___rootPrint$closure", 16, 0, 216],
    _printToZone: [function(line) {
      $.Zone__current.print$1(0, line);
    }, "call$1", "async___printToZone$closure", 4, 0, 61],
    _rootFork: [function($self, $parent, zone, specification, zoneValues) {
      var valueMap, t1, t2;
      H.interceptedTypeCheck($self, "$isZone");
      H.interceptedTypeCheck($parent, "$isZoneDelegate");
      H.interceptedTypeCheck(zone, "$isZone");
      H.interceptedTypeCheck(specification, "$isZoneSpecification");
      H.interceptedTypeCheck(zoneValues, "$isMap");
      $.printToZone = P.async___printToZone$closure();
      if (specification == null)
        specification = C._ZoneSpecification_ALf;
      if (zoneValues == null)
        valueMap = zone instanceof P._Zone ? zone.get$_async$_map() : P.HashMap_HashMap(null, null, null, null, null);
      else
        valueMap = P.HashMap_HashMap$from(zoneValues, null, null);
      t1 = new P._CustomZone(zone, valueMap);
      t2 = specification.run;
      t1.set$_async$_run(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_run());
      t2 = specification.runUnary;
      t1.set$_async$_runUnary(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_runUnary());
      t2 = specification.runBinary;
      t1.set$_async$_runBinary(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_async$_runBinary());
      t2 = specification.registerCallback;
      t1.set$_registerCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerCallback());
      t2 = specification.registerUnaryCallback;
      t1.set$_registerUnaryCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerUnaryCallback());
      t2 = specification.registerBinaryCallback;
      t1.set$_registerBinaryCallback(t2 != null ? new P._ZoneFunction(t1, t2, [P.Function]) : zone.get$_registerBinaryCallback());
      t2 = specification.errorCallback;
      t1.set$_errorCallback(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]) : zone.get$_errorCallback());
      t2 = specification.scheduleMicrotask;
      t1.set$_scheduleMicrotask(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]) : zone.get$_scheduleMicrotask());
      t2 = specification.createTimer;
      t1.set$_async$_createTimer(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}]) : zone.get$_async$_createTimer());
      t2 = zone.get$_createPeriodicTimer();
      t1.set$_createPeriodicTimer(t2);
      t2 = zone.get$_print();
      t1.set$_print(t2);
      t2 = zone.get$_fork();
      t1.set$_fork(t2);
      t2 = specification.handleUncaughtError;
      t1.set$_handleUncaughtError(t2 != null ? new P._ZoneFunction(t1, t2, [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]) : zone.get$_handleUncaughtError());
      return t1;
    }, "call$5", "async___rootFork$closure", 20, 0, 217, 10, 14, 15, 51, 39],
    _AsyncRun__initializeScheduleImmediate_internalCallback: {
      "^": "Closure:4;_box_0",
      call$1: [function(_) {
        var t1, f;
        t1 = this._box_0;
        f = t1.storedCallback;
        t1.storedCallback = null;
        f.call$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    _AsyncRun__initializeScheduleImmediate_closure: {
      "^": "Closure:252;_box_0,div,span",
      call$1: function(callback) {
        var t1, t2;
        this._box_0.storedCallback = H.functionTypeCheck(callback, {func: 1, ret: -1});
        t1 = this.div;
        t2 = this.span;
        t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
      }
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: {
      "^": "Closure:0;callback",
      call$0: [function() {
        this.callback.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: {
      "^": "Closure:0;callback",
      call$0: [function() {
        this.callback.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _TimerImpl: {
      "^": "Object;_once,0_handle,_tick",
      _TimerImpl$2: function(milliseconds, callback) {
        if (self.setTimeout != null)
          this._handle = self.setTimeout(H.convertDartClosureToJS(new P._TimerImpl_internalCallback(this, callback), 0), milliseconds);
        else
          throw H.wrapException(P.UnsupportedError$("`setTimeout()` not found."));
      },
      _TimerImpl$periodic$2: function(milliseconds, callback) {
        if (self.setTimeout != null)
          this._handle = self.setInterval(H.convertDartClosureToJS(new P._TimerImpl$periodic_closure(this, milliseconds, Date.now(), callback), 0), milliseconds);
        else
          throw H.wrapException(P.UnsupportedError$("Periodic timer."));
      },
      cancel$0: function(_) {
        var t1;
        if (self.setTimeout != null) {
          t1 = this._handle;
          if (t1 == null)
            return;
          if (this._once)
            self.clearTimeout(t1);
          else
            self.clearInterval(t1);
          this._handle = null;
        } else
          throw H.wrapException(P.UnsupportedError$("Canceling a timer."));
      },
      $isTimer: 1,
      static: {
        _TimerImpl$: function(milliseconds, callback) {
          var t1 = new P._TimerImpl(true, 0);
          t1._TimerImpl$2(milliseconds, callback);
          return t1;
        },
        _TimerImpl$periodic: function(milliseconds, callback) {
          var t1 = new P._TimerImpl(false, 0);
          t1._TimerImpl$periodic$2(milliseconds, callback);
          return t1;
        }
      }
    },
    _TimerImpl_internalCallback: {
      "^": "Closure:2;$this,callback",
      call$0: [function() {
        var t1 = this.$this;
        t1._handle = null;
        t1._tick = 1;
        this.callback.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _TimerImpl$periodic_closure: {
      "^": "Closure:0;$this,milliseconds,start,callback",
      call$0: [function() {
        var t1, tick, t2, duration;
        t1 = this.$this;
        tick = t1._tick + 1;
        t2 = this.milliseconds;
        if (t2 > 0) {
          duration = Date.now() - this.start;
          if (duration > (tick + 1) * t2)
            tick = C.JSInt_methods.$tdiv(duration, t2);
        }
        t1._tick = tick;
        this.callback.call$1(t1);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncAwaitCompleter: {
      "^": "Object;_completer,isSync,$ti",
      complete$1: function(_, value) {
        var t1;
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        if (this.isSync)
          this._completer.complete$1(0, value);
        else if (H.checkSubtype(value, "$isFuture", this.$ti, "$asFuture")) {
          t1 = this._completer;
          value.then$1$2$onError(t1.get$complete(t1), t1.get$completeError(), -1);
        } else
          P.scheduleMicrotask(new P._AsyncAwaitCompleter_complete_closure(this, value));
      },
      completeError$2: function(e, st) {
        if (this.isSync)
          this._completer.completeError$2(e, st);
        else
          P.scheduleMicrotask(new P._AsyncAwaitCompleter_completeError_closure(this, e, st));
      },
      get$future: function() {
        return this._completer.future;
      },
      $isCompleter: 1
    },
    _AsyncAwaitCompleter_complete_closure: {
      "^": "Closure:0;$this,value",
      call$0: [function() {
        this.$this._completer.complete$1(0, this.value);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncAwaitCompleter_completeError_closure: {
      "^": "Closure:0;$this,e,st",
      call$0: [function() {
        this.$this._completer.completeError$2(this.e, this.st);
      }, null, null, 0, 0, null, "call"]
    },
    _awaitOnObject_closure: {
      "^": "Closure:1;bodyFunction",
      call$1: [function(result) {
        return this.bodyFunction.call$2(0, result);
      }, null, null, 4, 0, null, 7, "call"]
    },
    _awaitOnObject_closure0: {
      "^": "Closure:253;bodyFunction",
      call$2: [function(error, stackTrace) {
        this.bodyFunction.call$2(1, new H.ExceptionAndStackTrace(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace")));
      }, null, null, 8, 0, null, 2, 4, "call"]
    },
    _wrapJsFunctionForAsync_closure: {
      "^": "Closure:97;$protected",
      call$2: [function(errorCode, result) {
        this.$protected(H.intTypeCheck(errorCode), result);
      }, null, null, 8, 0, null, 53, 7, "call"]
    },
    _asyncStarHelper_closure: {
      "^": "Closure:0;controller,bodyFunctionOrErrorCode",
      call$0: [function() {
        var t1, t2;
        t1 = this.controller;
        t2 = t1.controller;
        if ((t2.get$_state() & 1) !== 0 ? (t2.get$_subscription()._state & 4) !== 0 : (t2.get$_state() & 2) === 0) {
          t1.isSuspended = true;
          return;
        }
        this.bodyFunctionOrErrorCode.call$2(null, 0);
      }, null, null, 0, 0, null, "call"]
    },
    _asyncStarHelper_closure0: {
      "^": "Closure:4;controller,bodyFunctionOrErrorCode",
      call$1: [function(_) {
        var errorCode = this.controller.cancelationCompleter != null ? 2 : 0;
        this.bodyFunctionOrErrorCode.call$2(errorCode, null);
      }, null, null, 4, 0, null, 0, "call"]
    },
    _AsyncStarStreamController: {
      "^": "Object;0controller,isSuspended,0cancelationCompleter,$ti",
      set$controller: function(_, controller) {
        this.controller = H.assertSubtype(controller, "$isStreamController", this.$ti, "$asStreamController");
      },
      add$1: function(_, $event) {
        return this.controller.add$1(0, H.assertSubtypeOfRuntimeType($event, H.getTypeArgumentByIndex(this, 0)));
      },
      close$0: function(_) {
        return this.controller.close$0(0);
      },
      _AsyncStarStreamController$1: function(body, $T) {
        var t1 = new P._AsyncStarStreamController__resumeBody(body);
        this.set$controller(0, P.StreamController_StreamController(new P._AsyncStarStreamController_closure(this, body), new P._AsyncStarStreamController_closure0(t1), null, new P._AsyncStarStreamController_closure1(this, t1), false, $T));
      },
      static: {
        _AsyncStarStreamController$: function(body, $T) {
          var t1 = new P._AsyncStarStreamController(false, [$T]);
          t1._AsyncStarStreamController$1(body, $T);
          return t1;
        }
      }
    },
    _AsyncStarStreamController__resumeBody: {
      "^": "Closure:0;body",
      call$0: function() {
        P.scheduleMicrotask(new P._AsyncStarStreamController__resumeBody_closure(this.body));
      }
    },
    _AsyncStarStreamController__resumeBody_closure: {
      "^": "Closure:0;body",
      call$0: [function() {
        this.body.call$2(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncStarStreamController_closure0: {
      "^": "Closure:0;_resumeBody",
      call$0: function() {
        this._resumeBody.call$0();
      }
    },
    _AsyncStarStreamController_closure1: {
      "^": "Closure:0;$this,_resumeBody",
      call$0: function() {
        var t1 = this.$this;
        if (t1.isSuspended) {
          t1.isSuspended = false;
          this._resumeBody.call$0();
        }
      }
    },
    _AsyncStarStreamController_closure: {
      "^": "Closure:22;$this,body",
      call$0: [function() {
        var t1 = this.$this;
        if ((t1.controller.get$_state() & 4) === 0) {
          t1.cancelationCompleter = new P._AsyncCompleter(new P._Future(0, $.Zone__current, [null]), [null]);
          if (t1.isSuspended) {
            t1.isSuspended = false;
            P.scheduleMicrotask(new P._AsyncStarStreamController__closure(this.body));
          }
          return t1.cancelationCompleter.future;
        }
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncStarStreamController__closure: {
      "^": "Closure:0;body",
      call$0: [function() {
        this.body.call$2(2, null);
      }, null, null, 0, 0, null, "call"]
    },
    _IterationMarker: {
      "^": "Object;value,state",
      toString$0: function(_) {
        return "IterationMarker(" + this.state + ", " + H.S(this.value) + ")";
      },
      static: {
        _IterationMarker_yieldStar: function(values) {
          return new P._IterationMarker(values, 1);
        },
        _IterationMarker_endOfIteration: function() {
          return C._IterationMarker_null_2;
        },
        _IterationMarker_yieldSingle: function(value) {
          return new P._IterationMarker(value, 0);
        },
        _IterationMarker_uncaughtError: function(error) {
          return new P._IterationMarker(error, 3);
        }
      }
    },
    _SyncStarIterator: {
      "^": "Object;_body,0_async$_current,0_nestedIterator,0_suspendedBodies,$ti",
      set$_async$_current: function(_current) {
        this._async$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        var t1 = this._nestedIterator;
        if (t1 == null)
          return this._async$_current;
        return H.assertSubtypeOfRuntimeType(t1.get$current(t1), H.getTypeArgumentByIndex(this, 0));
      },
      moveNext$0: function() {
        var t1, value, state, inner;
        for (; true;) {
          t1 = this._nestedIterator;
          if (t1 != null)
            if (t1.moveNext$0())
              return true;
            else
              this._nestedIterator = null;
          value = function(body, SUCCESS, ERROR) {
            var errorValue,
              errorCode = SUCCESS;
            while (true)
              try {
                return body(errorCode, errorValue);
              } catch (error) {
                errorValue = error;
                errorCode = ERROR;
              }
          }(this._body, 0, 1);
          if (value instanceof P._IterationMarker) {
            state = value.state;
            if (state === 2) {
              t1 = this._suspendedBodies;
              if (t1 == null || t1.length === 0) {
                this.set$_async$_current(null);
                return false;
              }
              if (0 >= t1.length)
                return H.ioore(t1, -1);
              this._body = t1.pop();
              continue;
            } else {
              t1 = value.value;
              if (state === 3)
                throw t1;
              else {
                inner = J.get$iterator$ax(t1);
                if (!!inner.$is_SyncStarIterator) {
                  t1 = this._suspendedBodies;
                  if (t1 == null) {
                    t1 = [];
                    this._suspendedBodies = t1;
                  }
                  C.JSArray_methods.add$1(t1, this._body);
                  this._body = inner._body;
                  continue;
                } else {
                  this._nestedIterator = inner;
                  continue;
                }
              }
            }
          } else {
            this.set$_async$_current(value);
            return true;
          }
        }
        return false;
      },
      $isIterator: 1
    },
    _SyncStarIterable: {
      "^": "IterableBase;_outerHelper,$ti",
      get$iterator: function(_) {
        return new P._SyncStarIterator(this._outerHelper(), this.$ti);
      }
    },
    _BroadcastStream: {
      "^": "_ControllerStream;_controller,$ti"
    },
    _BroadcastSubscription: {
      "^": "_ControllerSubscription;_eventState,0_async$_next,0_async$_previous,_controller,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      set$_async$_next: function(_next) {
        this._async$_next = H.assertSubtype(_next, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      set$_async$_previous: function(_previous) {
        this._async$_previous = H.assertSubtype(_previous, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 2]
    },
    _BroadcastStreamController: {
      "^": "Object;onCancel>,_state<,0_firstSubscription,0_lastSubscription,$ti",
      set$_firstSubscription: function(_firstSubscription) {
        this._firstSubscription = H.assertSubtype(_firstSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      set$_lastSubscription: function(_lastSubscription) {
        this._lastSubscription = H.assertSubtype(_lastSubscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
      },
      get$_mayAddEvent: function() {
        return this._state < 4;
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 != null)
          return t1;
        t1 = new P._Future(0, $.Zone__current, [null]);
        this._doneFuture = t1;
        return t1;
      },
      _removeListener$1: function(subscription) {
        var previous, next;
        H.assertSubtype(subscription, "$is_BroadcastSubscription", this.$ti, "$as_BroadcastSubscription");
        previous = subscription._async$_previous;
        next = subscription._async$_next;
        if (previous == null)
          this.set$_firstSubscription(next);
        else
          previous.set$_async$_next(next);
        if (next == null)
          this.set$_lastSubscription(previous);
        else
          next.set$_async$_previous(previous);
        subscription.set$_async$_previous(subscription);
        subscription.set$_async$_next(subscription);
      },
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4, subscription, oldLast;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        if ((this._state & 4) !== 0) {
          if (onDone == null)
            onDone = P.async___nullDoneHandler$closure();
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone, this.$ti);
          t1._schedule$0();
          return t1;
        }
        t2 = $.Zone__current;
        t3 = cancelOnError ? 1 : 0;
        t4 = this.$ti;
        subscription = new P._BroadcastSubscription(0, this, t2, t3, t4);
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        subscription.set$_async$_previous(subscription);
        subscription.set$_async$_next(subscription);
        H.assertSubtype(subscription, "$is_BroadcastSubscription", t4, "$as_BroadcastSubscription");
        subscription._eventState = this._state & 1;
        oldLast = this._lastSubscription;
        this.set$_lastSubscription(subscription);
        subscription.set$_async$_next(null);
        subscription.set$_async$_previous(oldLast);
        if (oldLast == null)
          this.set$_firstSubscription(subscription);
        else
          oldLast.set$_async$_next(subscription);
        t1 = this._firstSubscription;
        t2 = this._lastSubscription;
        if (t1 == null ? t2 == null : t1 === t2)
          P._runGuarded(this.onListen);
        return subscription;
      },
      _recordCancel$1: function(sub) {
        var t1 = this.$ti;
        sub = H.assertSubtype(H.assertSubtype(sub, "$isStreamSubscription", t1, "$asStreamSubscription"), "$is_BroadcastSubscription", t1, "$as_BroadcastSubscription");
        if (sub._async$_next === sub)
          return;
        t1 = sub._eventState;
        if ((t1 & 2) !== 0)
          sub._eventState = t1 | 4;
        else {
          this._removeListener$1(sub);
          if ((this._state & 2) === 0 && this._firstSubscription == null)
            this._callOnCancel$0();
        }
        return;
      },
      _recordPause$1: function(subscription) {
        H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
      },
      _recordResume$1: function(subscription) {
        H.assertSubtype(subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
      },
      _addEventError$0: ["super$_BroadcastStreamController$_addEventError", function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add new events after calling close");
        return new P.StateError("Cannot add new events while doing an addStream");
      }],
      add$1: ["super$_BroadcastStreamController$add", function(_, data) {
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._sendData$1(data);
      }, null, "get$add", 5, 0, null, 9],
      addError$2: function(error, stackTrace) {
        var replacement;
        if (error == null)
          error = new P.NullThrownError();
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this._sendError$2(error, stackTrace);
      },
      close$0: ["super$_BroadcastStreamController$close", function(_) {
        var doneFuture;
        if ((this._state & 4) !== 0)
          return this._doneFuture;
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._state |= 4;
        doneFuture = this._ensureDoneFuture$0();
        this._sendDone$0();
        return doneFuture;
      }],
      get$done: function() {
        return this._ensureDoneFuture$0();
      },
      _add$1: [function(_, data) {
        this._sendData$1(H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0)));
      }, null, "get$_add", 5, 0, null, 9],
      _forEachListener$1: function(action) {
        var t1, subscription, id, next;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this, 0)]]});
        t1 = this._state;
        if ((t1 & 2) !== 0)
          throw H.wrapException(P.StateError$("Cannot fire new event. Controller is already firing an event"));
        subscription = this._firstSubscription;
        if (subscription == null)
          return;
        id = t1 & 1;
        this._state = t1 ^ 3;
        for (; subscription != null;) {
          t1 = subscription._eventState;
          if ((t1 & 1) === id) {
            subscription._eventState = t1 | 2;
            action.call$1(subscription);
            t1 = subscription._eventState ^= 1;
            next = subscription._async$_next;
            if ((t1 & 4) !== 0)
              this._removeListener$1(subscription);
            subscription._eventState &= 4294967293;
            subscription = next;
          } else
            subscription = subscription._async$_next;
        }
        this._state &= 4294967293;
        if (this._firstSubscription == null)
          this._callOnCancel$0();
      },
      _callOnCancel$0: ["super$_BroadcastStreamController$_callOnCancel", function() {
        if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
          this._doneFuture._asyncComplete$1(null);
        P._runGuarded(this.onCancel);
      }],
      $isEventSink: 1,
      $isStreamController: 1,
      $is_StreamControllerLifecycle: 1,
      $is_EventSink: 1,
      $is_EventDispatch: 1
    },
    _SyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;onListen,onCancel,_state,0_firstSubscription,0_lastSubscription,0_addStreamState,0_doneFuture,$ti",
      get$_mayAddEvent: function() {
        return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
      },
      _addEventError$0: function() {
        if ((this._state & 2) !== 0)
          return new P.StateError("Cannot fire new event. Controller is already firing an event");
        return this.super$_BroadcastStreamController$_addEventError();
      },
      _sendData$1: function(data) {
        var t1;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        t1 = this._firstSubscription;
        if (t1 == null)
          return;
        if (t1 === this._lastSubscription) {
          this._state |= 2;
          t1._add$1(0, data);
          this._state &= 4294967293;
          if (this._firstSubscription == null)
            this._callOnCancel$0();
          return;
        }
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
      },
      _sendError$2: function(error, stackTrace) {
        if (this._firstSubscription == null)
          return;
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
      },
      _sendDone$0: function() {
        if (this._firstSubscription != null)
          this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _SyncBroadcastStreamController__sendData_closure: {
      "^": "Closure;$this,data",
      call$1: function(subscription) {
        H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._add$1(0, this.data);
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    _SyncBroadcastStreamController__sendError_closure: {
      "^": "Closure;$this,error,stackTrace",
      call$1: function(subscription) {
        H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._addError$2(this.error, this.stackTrace);
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    _SyncBroadcastStreamController__sendDone_closure: {
      "^": "Closure;$this",
      call$1: function(subscription) {
        H.assertSubtype(subscription, "$is_BufferingStreamSubscription", [H.getTypeArgumentByIndex(this.$this, 0)], "$as_BufferingStreamSubscription")._close$0();
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P._BufferingStreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]]};
      }
    },
    _AsyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;onListen,onCancel,_state,0_firstSubscription,0_lastSubscription,0_addStreamState,0_doneFuture,$ti",
      _sendData$1: function(data) {
        var subscription, t1;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        for (subscription = this._firstSubscription, t1 = this.$ti; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(new P._DelayedData(data, t1));
      },
      _sendError$2: function(error, stackTrace) {
        var subscription;
        for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(new P._DelayedError(error, stackTrace));
      },
      _sendDone$0: function() {
        var subscription = this._firstSubscription;
        if (subscription != null)
          for (; subscription != null; subscription = subscription._async$_next)
            subscription._addPending$1(C.C__DelayedDone);
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _AsBroadcastStreamController: {
      "^": "_SyncBroadcastStreamController;0_pending,onListen,onCancel,_state,0_firstSubscription,0_lastSubscription,0_addStreamState,0_doneFuture,$ti",
      set$_pending: function(_pending) {
        this._pending = H.assertSubtype(_pending, "$is_StreamImplEvents", this.$ti, "$as_StreamImplEvents");
      },
      get$_hasPending: function() {
        var t1 = this._pending;
        return t1 != null && t1.lastPendingEvent != null;
      },
      _addPendingEvent$1: function($event) {
        if (this._pending == null)
          this.set$_pending(new P._StreamImplEvents(0, this.$ti));
        this._pending.add$1(0, $event);
      },
      add$1: [function(_, data) {
        var t1, $event, t2;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(new P._DelayedData(data, this.$ti));
          return;
        }
        this.super$_BroadcastStreamController$add(0, data);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          t1.toString;
          H.assertSubtype(this, "$is_EventDispatch", [H.getTypeArgumentByIndex(t1, 0)], "$as_EventDispatch");
          $event = t1.firstPendingEvent;
          t2 = $event.get$next($event);
          t1.firstPendingEvent = t2;
          if (t2 == null)
            t1.lastPendingEvent = null;
          $event.perform$1(this);
        }
      }, "call$1", "get$add", 5, 0, 14, 9],
      addError$2: [function(error, stackTrace) {
        var t1, $event, t2;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(new P._DelayedError(error, stackTrace));
          return;
        }
        if (!(P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0))
          throw H.wrapException(this._addEventError$0());
        this._sendError$2(error, stackTrace);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          t1.toString;
          H.assertSubtype(this, "$is_EventDispatch", [H.getTypeArgumentByIndex(t1, 0)], "$as_EventDispatch");
          $event = t1.firstPendingEvent;
          t2 = $event.get$next($event);
          t1.firstPendingEvent = t2;
          if (t2 == null)
            t1.lastPendingEvent = null;
          $event.perform$1(this);
        }
      }, function(error) {
        return this.addError$2(error, null);
      }, "addError$1", "call$2", "call$1", "get$addError", 4, 2, 38, 3, 2, 4],
      close$0: [function(_) {
        var t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(C.C__DelayedDone);
          this._state |= 4;
          return P._BroadcastStreamController.prototype.get$done.call(this);
        }
        return this.super$_BroadcastStreamController$close(0);
      }, "call$0", "get$close", 1, 0, 22],
      _callOnCancel$0: function() {
        if (this.get$_hasPending()) {
          var t1 = this._pending;
          if (t1._state === 1)
            t1._state = 3;
          t1.lastPendingEvent = null;
          t1.firstPendingEvent = null;
          this.set$_pending(null);
        }
        this.super$_BroadcastStreamController$_callOnCancel();
      }
    },
    Future: {
      "^": "Object;$ti"
    },
    Future_Future_closure: {
      "^": "Closure:0;result,computation",
      call$0: [function() {
        var e, s, exception;
        try {
          this.result._complete$1(this.computation.call$0());
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this.result, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    Future_Future$microtask_closure: {
      "^": "Closure:0;result,computation",
      call$0: [function() {
        var e, s, exception;
        try {
          this.result._complete$1(this.computation.call$0());
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this.result, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    Future_wait_handleError: {
      "^": "Closure:5;_box_0,cleanUp,eagerError,result",
      call$2: [function(theError, theStackTrace) {
        var t1, t2;
        t1 = this._box_0;
        t2 = --t1.remaining;
        if (t1.values != null) {
          t1.values = null;
          if (t1.remaining === 0 || this.eagerError)
            this.result._completeError$2(theError, H.interceptedTypeCheck(theStackTrace, "$isStackTrace"));
          else {
            t1.error = theError;
            t1.stackTrace = H.interceptedTypeCheck(theStackTrace, "$isStackTrace");
          }
        } else if (t2 === 0 && !this.eagerError)
          this.result._completeError$2(t1.error, t1.stackTrace);
      }, null, null, 8, 0, null, 62, 48, "call"]
    },
    Future_wait_closure: {
      "^": "Closure;_box_0,pos,result,cleanUp,eagerError,T",
      call$1: [function(value) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType(value, this.T);
        t1 = this._box_0;
        --t1.remaining;
        t2 = t1.values;
        if (t2 != null) {
          C.JSArray_methods.$indexSet(t2, this.pos, value);
          if (t1.remaining === 0)
            this.result._completeWithValue$1(t1.values);
        } else if (t1.remaining === 0 && !this.eagerError)
          this.result._completeError$2(t1.error, t1.stackTrace);
      }, null, null, 4, 0, null, 1, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    _Completer: {
      "^": "Object;future<,$ti",
      completeError$2: [function(error, stackTrace) {
        var replacement;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        if (error == null)
          error = new P.NullThrownError();
        if (this.future._state !== 0)
          throw H.wrapException(P.StateError$("Future already completed"));
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this._completeError$2(error, stackTrace);
      }, function(error) {
        return this.completeError$2(error, null);
      }, "completeError$1", "call$2", "call$1", "get$completeError", 4, 2, 38, 3, 2, 4],
      $isCompleter: 1
    },
    _AsyncCompleter: {
      "^": "_Completer;future,$ti",
      complete$1: [function(_, value) {
        var t1;
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        t1 = this.future;
        if (t1._state !== 0)
          throw H.wrapException(P.StateError$("Future already completed"));
        t1._asyncComplete$1(value);
      }, function($receiver) {
        return this.complete$1($receiver, null);
      }, "complete$0", "call$1", "call$0", "get$complete", 1, 2, 82, 3, 1],
      _completeError$2: function(error, stackTrace) {
        this.future._asyncCompleteError$2(error, stackTrace);
      }
    },
    _SyncCompleter: {
      "^": "_Completer;future,$ti",
      complete$1: [function(_, value) {
        var t1;
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        t1 = this.future;
        if (t1._state !== 0)
          throw H.wrapException(P.StateError$("Future already completed"));
        t1._complete$1(value);
      }, function($receiver) {
        return this.complete$1($receiver, null);
      }, "complete$0", "call$1", "call$0", "get$complete", 1, 2, 82, 3, 1],
      _completeError$2: function(error, stackTrace) {
        this.future._completeError$2(error, stackTrace);
      }
    },
    _FutureListener: {
      "^": "Object;0_nextListener,result,state,callback,errorCallback,$ti",
      matchesErrorTest$1: function(asyncError) {
        if (this.state !== 6)
          return true;
        return this.result._zone.runUnary$2$2(H.functionTypeCheck(this.callback, {func: 1, ret: P.bool, args: [P.Object]}), asyncError.error, P.bool, P.Object);
      },
      handleError$1: function(asyncError) {
        var errorCallback, t1, t2, t3;
        errorCallback = this.errorCallback;
        t1 = P.Object;
        t2 = {futureOr: 1, type: H.getTypeArgumentByIndex(this, 1)};
        t3 = this.result._zone;
        if (H.functionTypeTest(errorCallback, {func: 1, args: [P.Object, P.StackTrace]}))
          return H.futureOrCheck(t3.runBinary$3$3(errorCallback, asyncError.error, asyncError.stackTrace, null, t1, P.StackTrace), t2);
        else
          return H.futureOrCheck(t3.runUnary$2$2(H.functionTypeCheck(errorCallback, {func: 1, args: [P.Object]}), asyncError.error, null, t1), t2);
      }
    },
    _Future: {
      "^": "Object;_state<,_zone,0_resultOrListeners<,$ti",
      then$1$2$onError: function(f, onError, $R) {
        var t1, currentZone;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $R}, args: [t1]});
        currentZone = $.Zone__current;
        if (currentZone !== C.C__RootZone) {
          f = currentZone.registerUnaryCallback$2$1(f, {futureOr: 1, type: $R}, t1);
          if (onError != null)
            onError = P._registerErrorHandler(onError, currentZone);
        }
        return this._thenNoZoneRegistration$1$2(f, onError, $R);
      },
      then$1$1: function(f, $R) {
        return this.then$1$2$onError(f, null, $R);
      },
      then$1: function(f) {
        return this.then$1$2$onError(f, null, null);
      },
      _thenNoZoneRegistration$1$2: function(f, onError, $E) {
        var t1, result, t2;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(f, {func: 1, ret: {futureOr: 1, type: $E}, args: [t1]});
        result = new P._Future(0, $.Zone__current, [$E]);
        t2 = onError == null ? 1 : 3;
        this._addListener$1(new P._FutureListener(result, t2, f, onError, [t1, $E]));
        return result;
      },
      catchError$2$test: function(onError, test) {
        var t1, result;
        t1 = $.Zone__current;
        result = new P._Future(0, t1, this.$ti);
        if (t1 !== C.C__RootZone)
          onError = P._registerErrorHandler(onError, t1);
        t1 = H.getTypeArgumentByIndex(this, 0);
        this._addListener$1(new P._FutureListener(result, 2, test, onError, [t1, t1]));
        return result;
      },
      catchError$1: function(onError) {
        return this.catchError$2$test(onError, null);
      },
      whenComplete$1: function(action) {
        var t1, result;
        H.functionTypeCheck(action, {func: 1});
        t1 = $.Zone__current;
        result = new P._Future(0, t1, this.$ti);
        if (t1 !== C.C__RootZone)
          action = t1.registerCallback$1$1(action, null);
        t1 = H.getTypeArgumentByIndex(this, 0);
        this._addListener$1(new P._FutureListener(result, 8, action, null, [t1, t1]));
        return result;
      },
      asStream$0: function() {
        return P.Stream_Stream$fromFuture(this, H.getTypeArgumentByIndex(this, 0));
      },
      _addListener$1: function(listener) {
        var t1, source;
        t1 = this._state;
        if (t1 <= 1) {
          listener._nextListener = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
          this._resultOrListeners = listener;
        } else {
          if (t1 === 2) {
            source = H.interceptedTypeCheck(this._resultOrListeners, "$is_Future");
            t1 = source._state;
            if (t1 < 4) {
              source._addListener$1(listener);
              return;
            }
            this._state = t1;
            this._resultOrListeners = source._resultOrListeners;
          }
          this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(this, listener));
        }
      },
      _prependListeners$1: function(listeners) {
        var _box_0, t1, existingListeners, cursor, cursor0, source;
        _box_0 = {};
        _box_0.listeners = listeners;
        if (listeners == null)
          return;
        t1 = this._state;
        if (t1 <= 1) {
          existingListeners = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
          this._resultOrListeners = listeners;
          if (existingListeners != null) {
            for (cursor = listeners; cursor0 = cursor._nextListener, cursor0 != null; cursor = cursor0)
              ;
            cursor._nextListener = existingListeners;
          }
        } else {
          if (t1 === 2) {
            source = H.interceptedTypeCheck(this._resultOrListeners, "$is_Future");
            t1 = source._state;
            if (t1 < 4) {
              source._prependListeners$1(listeners);
              return;
            }
            this._state = t1;
            this._resultOrListeners = source._resultOrListeners;
          }
          _box_0.listeners = this._reverseListeners$1(listeners);
          this._zone.scheduleMicrotask$1(new P._Future__prependListeners_closure(_box_0, this));
        }
      },
      _removeListeners$0: function() {
        var current = H.interceptedTypeCheck(this._resultOrListeners, "$is_FutureListener");
        this._resultOrListeners = null;
        return this._reverseListeners$1(current);
      },
      _reverseListeners$1: function(listeners) {
        var current, prev, next;
        for (current = listeners, prev = null; current != null; prev = current, current = next) {
          next = current._nextListener;
          current._nextListener = prev;
        }
        return prev;
      },
      _complete$1: function(value) {
        var t1, t2, listeners;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.futureOrCheck(value, {futureOr: 1, type: t1});
        t2 = this.$ti;
        if (H.checkSubtype(value, "$isFuture", t2, "$asFuture"))
          if (H.checkSubtype(value, "$is_Future", t2, null))
            P._Future__chainCoreFuture(value, this);
          else
            P._Future__chainForeignFuture(value, this);
        else {
          listeners = this._removeListeners$0();
          H.assertSubtypeOfRuntimeType(value, t1);
          this._state = 4;
          this._resultOrListeners = value;
          P._Future__propagateToListeners(this, listeners);
        }
      },
      _completeWithValue$1: function(value) {
        var listeners;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        listeners = this._removeListeners$0();
        this._state = 4;
        this._resultOrListeners = value;
        P._Future__propagateToListeners(this, listeners);
      },
      _completeError$2: [function(error, stackTrace) {
        var listeners;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        listeners = this._removeListeners$0();
        this._state = 8;
        this._resultOrListeners = new P.AsyncError(error, stackTrace);
        P._Future__propagateToListeners(this, listeners);
      }, function(error) {
        return this._completeError$2(error, null);
      }, "_completeError$1", "call$2", "call$1", "get$_completeError", 4, 2, 38, 3, 2, 4],
      _asyncComplete$1: function(value) {
        H.futureOrCheck(value, {futureOr: 1, type: H.getTypeArgumentByIndex(this, 0)});
        if (H.checkSubtype(value, "$isFuture", this.$ti, "$asFuture")) {
          this._chainFuture$1(value);
          return;
        }
        this._state = 1;
        this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(this, value));
      },
      _chainFuture$1: function(value) {
        var t1 = this.$ti;
        H.assertSubtype(value, "$isFuture", t1, "$asFuture");
        if (H.checkSubtype(value, "$is_Future", t1, null)) {
          if (value.get$_state() === 8) {
            this._state = 1;
            this._zone.scheduleMicrotask$1(new P._Future__chainFuture_closure(this, value));
          } else
            P._Future__chainCoreFuture(value, this);
          return;
        }
        P._Future__chainForeignFuture(value, this);
      },
      _asyncCompleteError$2: function(error, stackTrace) {
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        this._state = 1;
        this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
      },
      $isFuture: 1,
      static: {
        _Future$zoneValue: function(value, _zone, $T) {
          var t1 = new P._Future(0, _zone, [$T]);
          H.assertSubtypeOfRuntimeType(value, $T);
          t1._state = 4;
          t1._resultOrListeners = value;
          return t1;
        },
        _Future__chainForeignFuture: function(source, target) {
          var e, s, exception;
          target._state = 1;
          try {
            source.then$1$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target), null);
          } catch (exception) {
            e = H.unwrapException(exception);
            s = H.getTraceFromException(exception);
            P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
          }
        },
        _Future__chainCoreFuture: function(source, target) {
          var t1, listeners;
          for (; t1 = source._state, t1 === 2;)
            source = H.interceptedTypeCheck(source._resultOrListeners, "$is_Future");
          if (t1 >= 4) {
            listeners = target._removeListeners$0();
            target._state = source._state;
            target._resultOrListeners = source._resultOrListeners;
            P._Future__propagateToListeners(target, listeners);
          } else {
            listeners = H.interceptedTypeCheck(target._resultOrListeners, "$is_FutureListener");
            target._state = 2;
            target._resultOrListeners = source;
            source._prependListeners$1(listeners);
          }
        },
        _Future__propagateToListeners: function(source, listeners) {
          var _box_1, t1, _box_0, hasError, asyncError, listeners0, sourceResult, t2, t3, zone, oldZone, current, result;
          _box_1 = {};
          _box_1.source = source;
          for (t1 = source; true;) {
            _box_0 = {};
            hasError = t1._state === 8;
            if (listeners == null) {
              if (hasError) {
                asyncError = H.interceptedTypeCheck(t1._resultOrListeners, "$isAsyncError");
                t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
              }
              return;
            }
            for (; listeners0 = listeners._nextListener, listeners0 != null; listeners = listeners0) {
              listeners._nextListener = null;
              P._Future__propagateToListeners(_box_1.source, listeners);
            }
            t1 = _box_1.source;
            sourceResult = t1._resultOrListeners;
            _box_0.listenerHasError = hasError;
            _box_0.listenerValueOrError = sourceResult;
            t2 = !hasError;
            if (t2) {
              t3 = listeners.state;
              t3 = (t3 & 1) !== 0 || t3 === 8;
            } else
              t3 = true;
            if (t3) {
              t3 = listeners.result;
              zone = t3._zone;
              if (hasError) {
                t1 = t1._zone;
                t1.toString;
                t1 = !((t1 == null ? zone == null : t1 === zone) || t1.get$errorZone() === zone.get$errorZone());
              } else
                t1 = false;
              if (t1) {
                t1 = _box_1.source;
                asyncError = H.interceptedTypeCheck(t1._resultOrListeners, "$isAsyncError");
                t1._zone.handleUncaughtError$2(asyncError.error, asyncError.stackTrace);
                return;
              }
              oldZone = $.Zone__current;
              if (oldZone == null ? zone != null : oldZone !== zone)
                $.Zone__current = zone;
              else
                oldZone = null;
              t1 = listeners.state;
              if (t1 === 8)
                new P._Future__propagateToListeners_handleWhenCompleteCallback(_box_1, _box_0, listeners, hasError).call$0();
              else if (t2) {
                if ((t1 & 1) !== 0)
                  new P._Future__propagateToListeners_handleValueCallback(_box_0, listeners, sourceResult).call$0();
              } else if ((t1 & 2) !== 0)
                new P._Future__propagateToListeners_handleError(_box_1, _box_0, listeners).call$0();
              if (oldZone != null)
                $.Zone__current = oldZone;
              t1 = _box_0.listenerValueOrError;
              if (!!J.getInterceptor$(t1).$isFuture) {
                if (!!t1.$is_Future)
                  if (t1._state >= 4) {
                    current = H.interceptedTypeCheck(t3._resultOrListeners, "$is_FutureListener");
                    t3._resultOrListeners = null;
                    listeners = t3._reverseListeners$1(current);
                    t3._state = t1._state;
                    t3._resultOrListeners = t1._resultOrListeners;
                    _box_1.source = t1;
                    continue;
                  } else
                    P._Future__chainCoreFuture(t1, t3);
                else
                  P._Future__chainForeignFuture(t1, t3);
                return;
              }
            }
            result = listeners.result;
            current = H.interceptedTypeCheck(result._resultOrListeners, "$is_FutureListener");
            result._resultOrListeners = null;
            listeners = result._reverseListeners$1(current);
            t1 = _box_0.listenerHasError;
            t2 = _box_0.listenerValueOrError;
            if (!t1) {
              H.assertSubtypeOfRuntimeType(t2, H.getTypeArgumentByIndex(result, 0));
              result._state = 4;
              result._resultOrListeners = t2;
            } else {
              H.interceptedTypeCheck(t2, "$isAsyncError");
              result._state = 8;
              result._resultOrListeners = t2;
            }
            _box_1.source = result;
            t1 = result;
          }
        }
      }
    },
    _Future__addListener_closure: {
      "^": "Closure:0;$this,listener",
      call$0: [function() {
        P._Future__propagateToListeners(this.$this, this.listener);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__prependListeners_closure: {
      "^": "Closure:0;_box_0,$this",
      call$0: [function() {
        P._Future__propagateToListeners(this.$this, this._box_0.listeners);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__chainForeignFuture_closure: {
      "^": "Closure:4;target",
      call$1: [function(value) {
        var t1 = this.target;
        t1._state = 0;
        t1._complete$1(value);
      }, null, null, 4, 0, null, 1, "call"]
    },
    _Future__chainForeignFuture_closure0: {
      "^": "Closure:98;target",
      call$2: [function(error, stackTrace) {
        this.target._completeError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
      }, function(error) {
        return this.call$2(error, null);
      }, "call$1", null, null, null, 4, 2, null, 3, 2, 4, "call"]
    },
    _Future__chainForeignFuture_closure1: {
      "^": "Closure:0;target,e,s",
      call$0: [function() {
        this.target._completeError$2(this.e, this.s);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncComplete_closure: {
      "^": "Closure:0;$this,value",
      call$0: [function() {
        var t1 = this.$this;
        t1._completeWithValue$1(H.assertSubtypeOfRuntimeType(this.value, H.getTypeArgumentByIndex(t1, 0)));
      }, null, null, 0, 0, null, "call"]
    },
    _Future__chainFuture_closure: {
      "^": "Closure:0;$this,value",
      call$0: [function() {
        P._Future__chainCoreFuture(this.value, this.$this);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncCompleteError_closure: {
      "^": "Closure:0;$this,error,stackTrace",
      call$0: [function() {
        this.$this._completeError$2(this.error, this.stackTrace);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: {
      "^": "Closure:2;_box_1,_box_0,listener,hasError",
      call$0: function() {
        var completeResult, e, s, t1, exception, t2, originalSource;
        completeResult = null;
        try {
          t1 = this.listener;
          completeResult = t1.result._zone.run$1$1(H.functionTypeCheck(t1.callback, {func: 1}), null);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          if (this.hasError) {
            t1 = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError").error;
            t2 = e;
            t2 = t1 == null ? t2 == null : t1 === t2;
            t1 = t2;
          } else
            t1 = false;
          t2 = this._box_0;
          if (t1)
            t2.listenerValueOrError = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError");
          else
            t2.listenerValueOrError = new P.AsyncError(e, s);
          t2.listenerHasError = true;
          return;
        }
        if (!!J.getInterceptor$(completeResult).$isFuture) {
          if (completeResult instanceof P._Future && completeResult.get$_state() >= 4) {
            if (completeResult.get$_state() === 8) {
              t1 = this._box_0;
              t1.listenerValueOrError = H.interceptedTypeCheck(completeResult.get$_resultOrListeners(), "$isAsyncError");
              t1.listenerHasError = true;
            }
            return;
          }
          originalSource = this._box_1.source;
          t1 = this._box_0;
          t1.listenerValueOrError = completeResult.then$1$1(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), null);
          t1.listenerHasError = false;
        }
      }
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: {
      "^": "Closure:101;originalSource",
      call$1: [function(_) {
        return this.originalSource;
      }, null, null, 4, 0, null, 0, "call"]
    },
    _Future__propagateToListeners_handleValueCallback: {
      "^": "Closure:2;_box_0,listener,sourceResult",
      call$0: function() {
        var e, s, t1, t2, t3, t4, exception;
        try {
          t1 = this.listener;
          t1.toString;
          t2 = H.getTypeArgumentByIndex(t1, 0);
          t3 = H.assertSubtypeOfRuntimeType(this.sourceResult, t2);
          t4 = H.getTypeArgumentByIndex(t1, 1);
          this._box_0.listenerValueOrError = t1.result._zone.runUnary$2$2(H.functionTypeCheck(t1.callback, {func: 1, ret: {futureOr: 1, type: t4}, args: [t2]}), t3, {futureOr: 1, type: t4}, t2);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = this._box_0;
          t1.listenerValueOrError = new P.AsyncError(e, s);
          t1.listenerHasError = true;
        }
      }
    },
    _Future__propagateToListeners_handleError: {
      "^": "Closure:2;_box_1,_box_0,listener",
      call$0: function() {
        var asyncError, e, s, t1, t2, exception, t3, t4;
        try {
          asyncError = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError");
          t1 = this.listener;
          if (t1.matchesErrorTest$1(asyncError) && t1.errorCallback != null) {
            t2 = this._box_0;
            t2.listenerValueOrError = t1.handleError$1(asyncError);
            t2.listenerHasError = false;
          }
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = H.interceptedTypeCheck(this._box_1.source._resultOrListeners, "$isAsyncError");
          t2 = t1.error;
          t3 = e;
          t4 = this._box_0;
          if (t2 == null ? t3 == null : t2 === t3)
            t4.listenerValueOrError = t1;
          else
            t4.listenerValueOrError = new P.AsyncError(e, s);
          t4.listenerHasError = true;
        }
      }
    },
    _AsyncCallbackEntry: {
      "^": "Object;callback,0next"
    },
    Stream: {
      "^": "Object;$ti",
      where$1: function(_, test) {
        var t1 = H.getRuntimeTypeArgument(this, "Stream", 0);
        return new P._WhereStream(H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), this, [t1]);
      },
      get$length: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, [P.int]);
        t1.count = 0;
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1, this), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
        return future;
      },
      get$isEmpty: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, [P.bool]);
        t1.subscription = null;
        t1.subscription = this.listen$4$cancelOnError$onDone$onError(new P.Stream_isEmpty_closure(t1, this, future), true, new P.Stream_isEmpty_closure0(future), future.get$_completeError());
        return future;
      },
      distinct$1: function(equals) {
        var t1 = H.getRuntimeTypeArgument(this, "Stream", 0);
        return new P._DistinctStream(H.functionTypeCheck(equals, {func: 1, ret: P.bool, args: [t1, t1]}), this, [t1]);
      },
      get$first: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, [H.getRuntimeTypeArgument(this, "Stream", 0)]);
        t1.subscription = null;
        t1.subscription = this.listen$4$cancelOnError$onDone$onError(new P.Stream_first_closure(t1, this, future), true, new P.Stream_first_closure0(future), future.get$_completeError());
        return future;
      }
    },
    Stream_Stream$fromFuture_closure: {
      "^": "Closure;controller,T",
      call$1: [function(value) {
        var t1 = this.controller;
        t1._add$1(0, H.assertSubtypeOfRuntimeType(value, this.T));
        t1._closeUnchecked$0();
      }, null, null, 4, 0, null, 1, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    Stream_Stream$fromFuture_closure0: {
      "^": "Closure:5;controller",
      call$2: [function(error, stackTrace) {
        var t1 = this.controller;
        t1._addError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
        t1._closeUnchecked$0();
      }, null, null, 8, 0, null, 2, 4, "call"]
    },
    Stream_Stream$fromIterable_closure: {
      "^": "Closure;elements,T",
      call$0: function() {
        var t1 = this.elements;
        return new P._IterablePendingEvents(new J.ArrayIterator(t1, 1, 0, [H.getTypeArgumentByIndex(t1, 0)]), 0, [this.T]);
      },
      $signature: function() {
        return {func: 1, ret: [P._IterablePendingEvents, this.T]};
      }
    },
    Stream_length_closure: {
      "^": "Closure;_box_0,$this",
      call$1: [function(_) {
        H.assertSubtypeOfRuntimeType(_, H.getRuntimeTypeArgument(this.$this, "Stream", 0));
        ++this._box_0.count;
      }, null, null, 4, 0, null, 0, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [H.getRuntimeTypeArgument(this.$this, "Stream", 0)]};
      }
    },
    Stream_length_closure0: {
      "^": "Closure:0;_box_0,future",
      call$0: [function() {
        this.future._complete$1(this._box_0.count);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_isEmpty_closure: {
      "^": "Closure;_box_0,$this,future",
      call$1: [function(_) {
        H.assertSubtypeOfRuntimeType(_, H.getRuntimeTypeArgument(this.$this, "Stream", 0));
        P._cancelAndValue(this._box_0.subscription, this.future, false);
      }, null, null, 4, 0, null, 0, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [H.getRuntimeTypeArgument(this.$this, "Stream", 0)]};
      }
    },
    Stream_isEmpty_closure0: {
      "^": "Closure:0;future",
      call$0: [function() {
        this.future._complete$1(true);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_first_closure: {
      "^": "Closure;_box_0,$this,future",
      call$1: [function(value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this.$this, "Stream", 0));
        P._cancelAndValue(this._box_0.subscription, this.future, value);
      }, null, null, 4, 0, null, 1, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [H.getRuntimeTypeArgument(this.$this, "Stream", 0)]};
      }
    },
    Stream_first_closure0: {
      "^": "Closure:0;future",
      call$0: [function() {
        var e, s, t1, exception;
        try {
          t1 = H.IterableElementError_noElement();
          throw H.wrapException(t1);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this.future, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    StreamSubscription: {
      "^": "Object;$ti"
    },
    EventSink: {
      "^": "Object;$ti"
    },
    StreamView: {
      "^": "Stream;$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._stream.listen$4$cancelOnError$onDone$onError(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "StreamView", 0)]}), cancelOnError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), onError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      }
    },
    StreamTransformerBase: {
      "^": "Object;",
      $isStreamTransformer: 1
    },
    _StreamController: {
      "^": "Object;_state<,onCancel>,$ti",
      get$_pendingEvents: function() {
        if ((this._state & 8) === 0)
          return H.assertSubtype(this._varData, "$is_PendingEvents", this.$ti, "$as_PendingEvents");
        var t1 = this.$ti;
        return H.assertSubtype(H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").varData, "$is_PendingEvents", t1, "$as_PendingEvents");
      },
      _ensurePendingEvents$0: function() {
        var t1, state, t2;
        if ((this._state & 8) === 0) {
          t1 = this._varData;
          if (t1 == null) {
            t1 = new P._StreamImplEvents(0, this.$ti);
            this._varData = t1;
          }
          return H.assertSubtype(t1, "$is_StreamImplEvents", this.$ti, "$as_StreamImplEvents");
        }
        t1 = this.$ti;
        state = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState");
        t2 = state.varData;
        if (t2 == null) {
          t2 = new P._StreamImplEvents(0, t1);
          state.varData = t2;
        }
        return H.assertSubtype(t2, "$is_StreamImplEvents", t1, "$as_StreamImplEvents");
      },
      get$_subscription: function() {
        if ((this._state & 8) !== 0) {
          var t1 = this.$ti;
          return H.assertSubtype(H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").varData, "$is_ControllerSubscription", t1, "$as_ControllerSubscription");
        }
        return H.assertSubtype(this._varData, "$is_ControllerSubscription", this.$ti, "$as_ControllerSubscription");
      },
      _badEventState$0: function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add event after closing");
        return new P.StateError("Cannot add event while adding a stream");
      },
      addStream$2$cancelOnError: function(_, source, cancelOnError) {
        var t1, t2, t3, t4, t5;
        t1 = this.$ti;
        H.assertSubtype(source, "$isStream", t1, "$asStream");
        t2 = this._state;
        if (t2 >= 4)
          throw H.wrapException(this._badEventState$0());
        if ((t2 & 2) !== 0) {
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        t2 = this._varData;
        H.assertSubtype(source, "$isStream", t1, "$asStream");
        t3 = new P._Future(0, $.Zone__current, [null]);
        t4 = source.listen$4$cancelOnError$onDone$onError(this.get$_add(this), false, this.get$_close(), this.get$_addError());
        t5 = this._state;
        if ((t5 & 1) !== 0 ? (this.get$_subscription()._state & 4) !== 0 : (t5 & 2) === 0)
          t4.pause$0(0);
        this._varData = new P._StreamControllerAddStreamState(t2, t3, t4, t1);
        this._state |= 8;
        return t3;
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 == null) {
          t1 = (this._state & 2) !== 0 ? $.$get$Future__nullFuture() : new P._Future(0, $.Zone__current, [null]);
          this._doneFuture = t1;
        }
        return t1;
      },
      add$1: [function(_, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        this._add$1(0, value);
      }, "call$1", "get$add", 5, 0, 14, 1],
      addError$2: function(error, stackTrace) {
        var replacement;
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        if (error == null)
          error = new P.NullThrownError();
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = replacement.error;
          if (error == null)
            error = new P.NullThrownError();
          stackTrace = replacement.stackTrace;
        }
        this._addError$2(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._state;
        if ((t1 & 4) !== 0)
          return this._ensureDoneFuture$0();
        if (t1 >= 4)
          throw H.wrapException(this._badEventState$0());
        this._closeUnchecked$0();
        return this._ensureDoneFuture$0();
      },
      _closeUnchecked$0: function() {
        var t1 = this._state |= 4;
        if ((t1 & 1) !== 0)
          this._sendDone$0();
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
      },
      _add$1: [function(_, value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendData$1(value);
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, new P._DelayedData(value, this.$ti));
      }, "call$1", "get$_add", 5, 0, 14, 1],
      _addError$2: [function(error, stackTrace) {
        var t1;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendError$2(error, stackTrace);
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace));
      }, "call$2", "get$_addError", 8, 0, 102, 2, 4],
      _close$0: [function() {
        var addState = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", this.$ti, "$as_StreamControllerAddStreamState");
        this._varData = addState.varData;
        this._state &= 4294967287;
        addState.addStreamFuture._asyncComplete$1(null);
      }, "call$0", "get$_close", 0, 0, 2],
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4, subscription, pendingEvents, addState;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        if ((this._state & 3) !== 0)
          throw H.wrapException(P.StateError$("Stream has already been listened to."));
        t2 = $.Zone__current;
        t3 = cancelOnError ? 1 : 0;
        t4 = this.$ti;
        subscription = new P._ControllerSubscription(this, t2, t3, t4);
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        pendingEvents = this.get$_pendingEvents();
        t1 = this._state |= 1;
        if ((t1 & 8) !== 0) {
          addState = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t4, "$as_StreamControllerAddStreamState");
          addState.varData = subscription;
          addState.addSubscription.resume$0(0);
        } else
          this._varData = subscription;
        subscription._setPendingEvents$1(pendingEvents);
        subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
        return subscription;
      },
      _recordCancel$1: function(subscription) {
        var result, e, s, t1, exception, result0;
        t1 = this.$ti;
        H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
        result = null;
        if ((this._state & 8) !== 0)
          result = H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").cancel$0(0);
        this._varData = null;
        this._state = this._state & 4294967286 | 2;
        t1 = this.onCancel;
        if (t1 != null)
          if (result == null)
            try {
              result = H.interceptedTypeCheck(this.onCancel.call$0(), "$isFuture");
            } catch (exception) {
              e = H.unwrapException(exception);
              s = H.getTraceFromException(exception);
              result0 = new P._Future(0, $.Zone__current, [null]);
              result0._asyncCompleteError$2(e, s);
              result = result0;
            }
          else
            result = result.whenComplete$1(t1);
        t1 = new P._StreamController__recordCancel_complete(this);
        if (result != null)
          result = result.whenComplete$1(t1);
        else
          t1.call$0();
        return result;
      },
      _recordPause$1: function(subscription) {
        var t1 = this.$ti;
        H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
        if ((this._state & 8) !== 0)
          H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").addSubscription.pause$0(0);
        P._runGuarded(this.onPause);
      },
      _recordResume$1: function(subscription) {
        var t1 = this.$ti;
        H.assertSubtype(subscription, "$isStreamSubscription", t1, "$asStreamSubscription");
        if ((this._state & 8) !== 0)
          H.assertSubtype(this._varData, "$is_StreamControllerAddStreamState", t1, "$as_StreamControllerAddStreamState").addSubscription.resume$0(0);
        P._runGuarded(this.onResume);
      },
      $isEventSink: 1,
      $isStreamController: 1,
      $is_StreamControllerLifecycle: 1,
      $is_EventSink: 1,
      $is_EventDispatch: 1
    },
    _StreamController__subscribe_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        P._runGuarded(this.$this.onListen);
      }
    },
    _StreamController__recordCancel_complete: {
      "^": "Closure:2;$this",
      call$0: [function() {
        var t1 = this.$this._doneFuture;
        if (t1 != null && t1._state === 0)
          t1._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _SyncStreamControllerDispatch: {
      "^": "Object;$ti",
      _sendData$1: function(data) {
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        this.get$_subscription()._add$1(0, data);
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addError$2(error, stackTrace);
      },
      _sendDone$0: function() {
        this.get$_subscription()._close$0();
      }
    },
    _AsyncStreamControllerDispatch: {
      "^": "Object;$ti",
      _sendData$1: function(data) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(data, t1);
        this.get$_subscription()._addPending$1(new P._DelayedData(data, [t1]));
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace));
      },
      _sendDone$0: function() {
        this.get$_subscription()._addPending$1(C.C__DelayedDone);
      }
    },
    _AsyncStreamController: {
      "^": "_StreamController+_AsyncStreamControllerDispatch;0_varData,_state,0_doneFuture,onListen,onPause,onResume,onCancel,$ti"
    },
    _SyncStreamController: {
      "^": "_StreamController+_SyncStreamControllerDispatch;0_varData,_state,0_doneFuture,onListen,onPause,onResume,onCancel,$ti"
    },
    _ControllerStream: {
      "^": "_StreamImpl;_controller,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return this._controller._subscribe$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError);
      },
      get$hashCode: function(_) {
        return (H.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof P._ControllerStream))
          return false;
        return other._controller === this._controller;
      }
    },
    _ControllerSubscription: {
      "^": "_BufferingStreamSubscription;_controller,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      _async$_onCancel$0: function() {
        return this._controller._recordCancel$1(this);
      },
      _onPause$0: [function() {
        this._controller._recordPause$1(this);
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
        this._controller._recordResume$1(this);
      }, "call$0", "get$_onResume", 0, 0, 2]
    },
    _AddStreamState: {
      "^": "Object;$ti",
      cancel$0: function(_) {
        var cancel = this.addSubscription.cancel$0(0);
        if (cancel == null) {
          this.addStreamFuture._asyncComplete$1(null);
          return;
        }
        return cancel.whenComplete$1(new P._AddStreamState_cancel_closure(this));
      }
    },
    _AddStreamState_cancel_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        this.$this.addStreamFuture._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamControllerAddStreamState: {
      "^": "_AddStreamState;varData,addStreamFuture,addSubscription,$ti"
    },
    _BufferingStreamSubscription: {
      "^": "Object;0_onData,0_async$_onError,0_onDone,_zone,_state<,0_cancelFuture,0_pending,$ti",
      set$_onData: function(_onData) {
        this._onData = H.functionTypeCheck(_onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)]});
      },
      set$_onDone: function(_onDone) {
        this._onDone = H.functionTypeCheck(_onDone, {func: 1, ret: -1});
      },
      set$_pending: function(_pending) {
        this._pending = H.assertSubtype(_pending, "$is_PendingEvents", [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)], "$as_PendingEvents");
      },
      _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
        var t1, handleData, t2, handleError, handleDone;
        t1 = H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        handleData = onData == null ? P.async___nullDataHandler$closure() : onData;
        t2 = this._zone;
        this.set$_onData(t2.registerUnaryCallback$2$1(handleData, null, t1));
        handleError = onError == null ? P.async___nullErrorHandler$closure() : onError;
        if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
          this._async$_onError = t2.registerBinaryCallback$3$1(handleError, null, P.Object, P.StackTrace);
        else if (H.functionTypeTest(handleError, {func: 1, ret: -1, args: [P.Object]}))
          this._async$_onError = t2.registerUnaryCallback$2$1(handleError, null, P.Object);
        else
          H.throwExpression(P.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace."));
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        handleDone = onDone == null ? P.async___nullDoneHandler$closure() : onDone;
        this.set$_onDone(t2.registerCallback$1$1(handleDone, -1));
      },
      _setPendingEvents$1: function(pendingEvents) {
        H.assertSubtype(pendingEvents, "$is_PendingEvents", [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)], "$as_PendingEvents");
        if (pendingEvents == null)
          return;
        this.set$_pending(pendingEvents);
        if (!pendingEvents.get$isEmpty(pendingEvents)) {
          this._state = (this._state | 64) >>> 0;
          this._pending.schedule$1(this);
        }
      },
      pause$1: function(_, resumeSignal) {
        var t1, t2, t3;
        t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        t2 = (t1 + 128 | 4) >>> 0;
        this._state = t2;
        if (t1 < 128 && this._pending != null) {
          t3 = this._pending;
          if (t3._state === 1)
            t3._state = 3;
        }
        if ((t1 & 4) === 0 && (t2 & 32) === 0)
          this._guardCallback$1(this.get$_onPause());
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 >= 128) {
          t1 -= 128;
          this._state = t1;
          if (t1 < 128) {
            if ((t1 & 64) !== 0) {
              t1 = this._pending;
              t1 = !t1.get$isEmpty(t1);
            } else
              t1 = false;
            if (t1)
              this._pending.schedule$1(this);
            else {
              t1 = (this._state & 4294967291) >>> 0;
              this._state = t1;
              if ((t1 & 32) === 0)
                this._guardCallback$1(this.get$_onResume());
            }
          }
        }
      },
      cancel$0: function(_) {
        var t1 = (this._state & 4294967279) >>> 0;
        this._state = t1;
        if ((t1 & 8) === 0)
          this._cancel$0();
        t1 = this._cancelFuture;
        return t1 == null ? $.$get$Future__nullFuture() : t1;
      },
      _cancel$0: function() {
        var t1, t2;
        t1 = (this._state | 8) >>> 0;
        this._state = t1;
        if ((t1 & 64) !== 0) {
          t2 = this._pending;
          if (t2._state === 1)
            t2._state = 3;
        }
        if ((t1 & 32) === 0)
          this.set$_pending(null);
        this._cancelFuture = this._async$_onCancel$0();
      },
      _add$1: ["super$_BufferingStreamSubscription$_add", function(_, data) {
        var t1, t2;
        t1 = H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0);
        H.assertSubtypeOfRuntimeType(data, t1);
        t2 = this._state;
        if ((t2 & 8) !== 0)
          return;
        if (t2 < 32)
          this._sendData$1(data);
        else
          this._addPending$1(new P._DelayedData(data, [t1]));
      }],
      _addError$2: ["super$_BufferingStreamSubscription$_addError", function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 < 32)
          this._sendError$2(error, stackTrace);
        else
          this._addPending$1(new P._DelayedError(error, stackTrace));
      }],
      _close$0: ["super$_BufferingStreamSubscription$_close", function() {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        t1 = (t1 | 2) >>> 0;
        this._state = t1;
        if (t1 < 32)
          this._sendDone$0();
        else
          this._addPending$1(C.C__DelayedDone);
      }],
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 2],
      _async$_onCancel$0: function() {
        return;
      },
      _addPending$1: function($event) {
        var t1, pending;
        t1 = [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)];
        pending = H.assertSubtype(this._pending, "$is_StreamImplEvents", t1, "$as_StreamImplEvents");
        if (pending == null) {
          pending = new P._StreamImplEvents(0, t1);
          this.set$_pending(pending);
        }
        pending.add$1(0, $event);
        t1 = this._state;
        if ((t1 & 64) === 0) {
          t1 = (t1 | 64) >>> 0;
          this._state = t1;
          if (t1 < 128)
            this._pending.schedule$1(this);
        }
      },
      _sendData$1: function(data) {
        var t1, t2;
        t1 = H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0);
        H.assertSubtypeOfRuntimeType(data, t1);
        t2 = this._state;
        this._state = (t2 | 32) >>> 0;
        this._zone.runUnaryGuarded$1$2(this._onData, data, t1);
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t2 & 4) !== 0);
      },
      _sendError$2: function(error, stackTrace) {
        var t1, t2;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        t1 = this._state;
        t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
        if ((t1 & 1) !== 0) {
          this._state = (t1 | 16) >>> 0;
          this._cancel$0();
          t1 = this._cancelFuture;
          if (!!J.getInterceptor$(t1).$isFuture && t1 !== $.$get$Future__nullFuture())
            t1.whenComplete$1(t2);
          else
            t2.call$0();
        } else {
          t2.call$0();
          this._checkState$1((t1 & 4) !== 0);
        }
      },
      _sendDone$0: function() {
        var t1, t2;
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
        this._cancel$0();
        this._state = (this._state | 16) >>> 0;
        t2 = this._cancelFuture;
        if (!!J.getInterceptor$(t2).$isFuture && t2 !== $.$get$Future__nullFuture())
          t2.whenComplete$1(t1);
        else
          t1.call$0();
      },
      _guardCallback$1: function(callback) {
        var t1;
        H.functionTypeCheck(callback, {func: 1, ret: -1});
        t1 = this._state;
        this._state = (t1 | 32) >>> 0;
        callback.call$0();
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t1 & 4) !== 0);
      },
      _checkState$1: function(wasInputPaused) {
        var t1, isInputPaused;
        if ((this._state & 64) !== 0) {
          t1 = this._pending;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = (this._state & 4294967231) >>> 0;
          this._state = t1;
          if ((t1 & 4) !== 0)
            if (t1 < 128) {
              t1 = this._pending;
              t1 = t1 == null || t1.get$isEmpty(t1);
            } else
              t1 = false;
          else
            t1 = false;
          if (t1)
            this._state = (this._state & 4294967291) >>> 0;
        }
        for (; true; wasInputPaused = isInputPaused) {
          t1 = this._state;
          if ((t1 & 8) !== 0) {
            this.set$_pending(null);
            return;
          }
          isInputPaused = (t1 & 4) !== 0;
          if (wasInputPaused === isInputPaused)
            break;
          this._state = (t1 ^ 32) >>> 0;
          if (isInputPaused)
            this._onPause$0();
          else
            this._onResume$0();
          this._state = (this._state & 4294967263) >>> 0;
        }
        t1 = this._state;
        if ((t1 & 64) !== 0 && t1 < 128)
          this._pending.schedule$1(this);
      },
      $isStreamSubscription: 1,
      $is_EventSink: 1,
      $is_EventDispatch: 1,
      static: {
        _BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
          var t1, t2;
          t1 = $.Zone__current;
          t2 = cancelOnError ? 1 : 0;
          t2 = new P._BufferingStreamSubscription(t1, t2, [$T]);
          t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          return t2;
        }
      }
    },
    _BufferingStreamSubscription__sendError_sendError: {
      "^": "Closure:2;$this,error,stackTrace",
      call$0: [function() {
        var t1, t2, onError, t3, t4;
        t1 = this.$this;
        t2 = t1._state;
        if ((t2 & 8) !== 0 && (t2 & 16) === 0)
          return;
        t1._state = (t2 | 32) >>> 0;
        onError = t1._async$_onError;
        t2 = this.error;
        t3 = P.Object;
        t4 = t1._zone;
        if (H.functionTypeTest(onError, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}))
          t4.runBinaryGuarded$2$3(onError, t2, this.stackTrace, t3, P.StackTrace);
        else
          t4.runUnaryGuarded$1$2(H.functionTypeCheck(t1._async$_onError, {func: 1, ret: -1, args: [P.Object]}), t2, t3);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _BufferingStreamSubscription__sendDone_sendDone: {
      "^": "Closure:2;$this",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._state;
        if ((t2 & 16) === 0)
          return;
        t1._state = (t2 | 42) >>> 0;
        t1._zone.runGuarded$1(t1._onDone);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImpl: {
      "^": "Stream;$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === cancelOnError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        return P._BufferingStreamSubscription$(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError, t1);
      }
    },
    _GeneratedStreamImpl: {
      "^": "_StreamImpl;_pending,_isUsed,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        if (this._isUsed)
          throw H.wrapException(P.StateError$("Stream has already been listened to."));
        this._isUsed = true;
        t1 = P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, t1);
        t1._setPendingEvents$1(this._pending.call$0());
        return t1;
      }
    },
    _IterablePendingEvents: {
      "^": "_PendingEvents;_async$_iterator,_state,$ti",
      set$_async$_iterator: function(_iterator) {
        this._async$_iterator = H.assertSubtype(_iterator, "$isIterator", this.$ti, "$asIterator");
      },
      get$isEmpty: function(_) {
        return this._async$_iterator == null;
      },
      handleNext$1: function(dispatch) {
        var hasMore, e, s, t1, exception;
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch");
        t1 = this._async$_iterator;
        if (t1 == null)
          throw H.wrapException(P.StateError$("No events pending."));
        hasMore = null;
        try {
          hasMore = t1.moveNext$0();
          if (hasMore) {
            t1 = this._async$_iterator;
            dispatch._sendData$1(t1.get$current(t1));
          } else {
            this.set$_async$_iterator(null);
            dispatch._sendDone$0();
          }
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          if (hasMore == null) {
            this.set$_async$_iterator(C.C_EmptyIterator);
            dispatch._sendError$2(e, s);
          } else
            dispatch._sendError$2(e, s);
        }
      }
    },
    _DelayedEvent: {
      "^": "Object;0next>,$ti",
      set$next: function(_, next) {
        this.next = H.interceptedTypeCheck(next, "$is_DelayedEvent");
      }
    },
    _DelayedData: {
      "^": "_DelayedEvent;value,0next,$ti",
      perform$1: function(dispatch) {
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch")._sendData$1(this.value);
      }
    },
    _DelayedError: {
      "^": "_DelayedEvent;error,stackTrace,0next",
      perform$1: function(dispatch) {
        dispatch._sendError$2(this.error, this.stackTrace);
      },
      $as_DelayedEvent: Isolate.functionThatReturnsNull
    },
    _DelayedDone: {
      "^": "Object;",
      perform$1: function(dispatch) {
        dispatch._sendDone$0();
      },
      get$next: function(_) {
        return;
      },
      set$next: function(_, _0) {
        throw H.wrapException(P.StateError$("No events after a done."));
      },
      $is_DelayedEvent: 1,
      $as_DelayedEvent: Isolate.functionThatReturnsNull
    },
    _PendingEvents: {
      "^": "Object;_state<,$ti",
      schedule$1: function(dispatch) {
        var t1;
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch");
        t1 = this._state;
        if (t1 === 1)
          return;
        if (t1 >= 1) {
          this._state = 1;
          return;
        }
        P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
        this._state = 1;
      }
    },
    _PendingEvents_schedule_closure: {
      "^": "Closure:0;$this,dispatch",
      call$0: [function() {
        var t1, oldState;
        t1 = this.$this;
        oldState = t1._state;
        t1._state = 0;
        if (oldState === 3)
          return;
        t1.handleNext$1(this.dispatch);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImplEvents: {
      "^": "_PendingEvents;0firstPendingEvent,0lastPendingEvent,_state,$ti",
      get$isEmpty: function(_) {
        return this.lastPendingEvent == null;
      },
      add$1: function(_, $event) {
        var t1;
        H.interceptedTypeCheck($event, "$is_DelayedEvent");
        t1 = this.lastPendingEvent;
        if (t1 == null) {
          this.lastPendingEvent = $event;
          this.firstPendingEvent = $event;
        } else {
          t1.set$next(0, $event);
          this.lastPendingEvent = $event;
        }
      },
      handleNext$1: function(dispatch) {
        var $event, t1;
        H.assertSubtype(dispatch, "$is_EventDispatch", this.$ti, "$as_EventDispatch");
        $event = this.firstPendingEvent;
        t1 = $event.get$next($event);
        this.firstPendingEvent = t1;
        if (t1 == null)
          this.lastPendingEvent = null;
        $event.perform$1(dispatch);
      }
    },
    _DoneStreamSubscription: {
      "^": "Object;_zone,_state<,_onDone,$ti",
      _schedule$0: function() {
        if ((this._state & 2) !== 0)
          return;
        this._zone.scheduleMicrotask$1(this.get$_sendDone());
        this._state = (this._state | 2) >>> 0;
      },
      pause$1: function(_, resumeSignal) {
        this._state += 4;
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        var t1 = this._state;
        if (t1 >= 4) {
          t1 -= 4;
          this._state = t1;
          if (t1 < 4 && (t1 & 1) === 0)
            this._schedule$0();
        }
      },
      cancel$0: function(_) {
        return $.$get$Future__nullFuture();
      },
      _sendDone$0: [function() {
        var t1 = (this._state & 4294967293) >>> 0;
        this._state = t1;
        if (t1 >= 4)
          return;
        this._state = (t1 | 1) >>> 0;
        t1 = this._onDone;
        if (t1 != null)
          this._zone.runGuarded$1(t1);
      }, "call$0", "get$_sendDone", 0, 0, 2],
      $isStreamSubscription: 1
    },
    _AsBroadcastStream: {
      "^": "Stream;_async$_source,_onListenHandler,_onCancelHandler,_zone,0_controller,0_subscription,$ti",
      set$_controller: function(_controller) {
        this._controller = H.assertSubtype(_controller, "$is_AsBroadcastStreamController", this.$ti, "$as_AsBroadcastStreamController");
      },
      set$_subscription: function(_subscription) {
        this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", this.$ti, "$asStreamSubscription");
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2, t3;
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        t1 = this._controller;
        if (t1 == null || (t1._state & 4) !== 0) {
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone, this.$ti);
          t1._schedule$0();
          return t1;
        }
        if (this._subscription == null) {
          t2 = t1.get$add(t1);
          t3 = t1.get$addError();
          this.set$_subscription(this._async$_source.listen$3$onDone$onError(t2, t1.get$close(t1), t3));
        }
        return this._controller._subscribe$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      _async$_onCancel$0: [function() {
        var t1, shutdown;
        t1 = this._controller;
        shutdown = t1 == null || (t1._state & 4) !== 0;
        t1 = this._onCancelHandler;
        if (t1 != null)
          this._zone.runUnary$2$2(t1, new P._BroadcastSubscriptionWrapper(this, this.$ti), -1, [P._BroadcastSubscriptionWrapper, H.getTypeArgumentByIndex(this, 0)]);
        if (shutdown) {
          t1 = this._subscription;
          if (t1 != null) {
            t1.cancel$0(0);
            this.set$_subscription(null);
          }
        }
      }, "call$0", "get$_async$_onCancel", 0, 0, 2],
      _onListen$0: [function() {
        var t1 = this._onListenHandler;
        if (t1 != null)
          this._zone.runUnary$2$2(t1, new P._BroadcastSubscriptionWrapper(this, this.$ti), -1, [P._BroadcastSubscriptionWrapper, H.getTypeArgumentByIndex(this, 0)]);
      }, "call$0", "get$_onListen", 0, 0, 2],
      _cancelSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        this.set$_subscription(null);
        this.set$_controller(null);
        t1.cancel$0(0);
      },
      _pauseSubscription$1: function(resumeSignal) {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$1(0, resumeSignal);
      },
      _resumeSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0(0);
      },
      static: {
        _AsBroadcastStream$: function(_source, onListenHandler, onCancelHandler, $T) {
          var t1 = [P.StreamSubscription, $T];
          t1 = new P._AsBroadcastStream(_source, $.Zone__current.registerUnaryCallback$2$1(onListenHandler, null, t1), $.Zone__current.registerUnaryCallback$2$1(onCancelHandler, null, t1), $.Zone__current, [$T]);
          t1.set$_controller(new P._AsBroadcastStreamController(t1.get$_onListen(), t1.get$_async$_onCancel(), 0, [$T]));
          return t1;
        }
      }
    },
    _BroadcastSubscriptionWrapper: {
      "^": "Object;_stream,$ti",
      pause$1: function(_, resumeSignal) {
        this._stream._pauseSubscription$1(resumeSignal);
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        this._stream._resumeSubscription$0();
      },
      cancel$0: function(_) {
        this._stream._cancelSubscription$0();
        return $.$get$Future__nullFuture();
      },
      $isStreamSubscription: 1
    },
    _StreamIterator: {
      "^": "Object;0_subscription,_stateData,_isPaused,$ti"
    },
    _cancelAndValue_closure: {
      "^": "Closure:2;future,value",
      call$0: [function() {
        return this.future._complete$1(this.value);
      }, null, null, 0, 0, null, "call"]
    },
    _ForwardingStream: {
      "^": "Stream;$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(H.functionTypeCheck(onData, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "_ForwardingStream", 1)]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), true === cancelOnError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
        return P._ForwardingStreamSubscription$(this, H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0), t1);
      },
      _handleData$2: function(data, sink) {
        var t1;
        H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0));
        t1 = H.getRuntimeTypeArgument(this, "_ForwardingStream", 1);
        H.assertSubtype(sink, "$is_EventSink", [t1], "$as_EventSink")._add$1(0, H.assertSubtypeOfRuntimeType(data, t1));
      },
      $asStream: function($S, $T) {
        return [$T];
      }
    },
    _ForwardingStreamSubscription: {
      "^": "_BufferingStreamSubscription;_stream,0_subscription,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      set$_subscription: function(_subscription) {
        this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", [H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 0)], "$asStreamSubscription");
      },
      _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
        this.set$_subscription(this._stream._async$_source.listen$3$onDone$onError(this.get$_handleData(), this.get$_handleDone(), this.get$_handleError()));
      },
      _add$1: function(_, data) {
        H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 1));
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_add(0, data);
      },
      _addError$2: function(error, stackTrace) {
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      _onPause$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$0(0);
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0(0);
      }, "call$0", "get$_onResume", 0, 0, 2],
      _async$_onCancel$0: function() {
        var t1 = this._subscription;
        if (t1 != null) {
          this.set$_subscription(null);
          return t1.cancel$0(0);
        }
        return;
      },
      _handleData$1: [function(data) {
        this._stream._handleData$2(H.assertSubtypeOfRuntimeType(data, H.getRuntimeTypeArgument(this, "_ForwardingStreamSubscription", 0)), this);
      }, "call$1", "get$_handleData", 4, 0, 14, 9],
      _handleError$2: [function(error, stackTrace) {
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        H.assertSubtype(this, "$is_EventSink", [H.getRuntimeTypeArgument(this._stream, "_ForwardingStream", 1)], "$as_EventSink")._addError$2(error, stackTrace);
      }, "call$2", "get$_handleError", 8, 0, 104, 2, 4],
      _handleDone$0: [function() {
        H.assertSubtype(this, "$is_EventSink", [H.getRuntimeTypeArgument(this._stream, "_ForwardingStream", 1)], "$as_EventSink")._close$0();
      }, "call$0", "get$_handleDone", 0, 0, 2],
      $asStreamSubscription: function($S, $T) {
        return [$T];
      },
      $as_EventSink: function($S, $T) {
        return [$T];
      },
      $as_EventDispatch: function($S, $T) {
        return [$T];
      },
      $as_BufferingStreamSubscription: function($S, $T) {
        return [$T];
      },
      static: {
        _ForwardingStreamSubscription$: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
          var t1, t2;
          t1 = $.Zone__current;
          t2 = cancelOnError ? 1 : 0;
          t2 = new P._ForwardingStreamSubscription(_stream, t1, t2, [$S, $T]);
          t2._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          t2._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T);
          return t2;
        }
      }
    },
    _WhereStream: {
      "^": "_ForwardingStream;_test,_async$_source,$ti",
      _handleData$2: function(inputEvent, sink) {
        var satisfies, e, s, exception;
        H.assertSubtypeOfRuntimeType(inputEvent, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtype(sink, "$is_EventSink", this.$ti, "$as_EventSink");
        satisfies = null;
        try {
          satisfies = this._test.call$1(inputEvent);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._addErrorWithReplacement(sink, e, s);
          return;
        }
        if (satisfies)
          J._add$1$x(sink, inputEvent);
      },
      $asStream: null,
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      }
    },
    _TakeStream: {
      "^": "_ForwardingStream;_count,_async$_source,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        t2 = this._count;
        if (t2 === 0) {
          this._async$_source.listen$1(null).cancel$0(0);
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone, this.$ti);
          t1._schedule$0();
          return t1;
        }
        t3 = $.Zone__current;
        t4 = cancelOnError ? 1 : 0;
        t4 = new P._StateStreamSubscription(t2, this, t3, t4, this.$ti);
        t4._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        t4._ForwardingStreamSubscription$5(this, onData, onError, onDone, cancelOnError, t1, t1);
        return t4;
      },
      _handleData$2: function(inputEvent, sink) {
        var t1, count;
        H.assertSubtypeOfRuntimeType(inputEvent, H.getTypeArgumentByIndex(this, 0));
        t1 = this.$ti;
        sink = H.assertSubtype(H.assertSubtype(sink, "$is_EventSink", t1, "$as_EventSink"), "$is_StateStreamSubscription", t1, "$as_StateStreamSubscription");
        count = H.intTypeCheck(sink._sharedState);
        if (typeof count !== "number")
          return count.$gt();
        if (count > 0) {
          sink._add$1(0, inputEvent);
          --count;
          sink._sharedState = count;
          if (count === 0)
            sink._close$0();
        }
      },
      $asStream: null,
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      }
    },
    _StateStreamSubscription: {
      "^": "_ForwardingStreamSubscription;_sharedState,_stream,0_subscription,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      $asStreamSubscription: null,
      $as_EventSink: null,
      $as_EventDispatch: null,
      $as_BufferingStreamSubscription: null,
      $as_ForwardingStreamSubscription: function($T) {
        return [$T, $T];
      }
    },
    _DistinctStream: {
      "^": "_ForwardingStream;_async$_equals,_async$_source,$ti",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        var t1, t2, t3, t4;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        t2 = $.$get$_DistinctStream__SENTINEL();
        t3 = $.Zone__current;
        t4 = cancelOnError ? 1 : 0;
        t4 = new P._StateStreamSubscription(t2, this, t3, t4, this.$ti);
        t4._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        t4._ForwardingStreamSubscription$5(this, onData, onError, onDone, cancelOnError, t1, t1);
        return t4;
      },
      _handleData$2: function(inputEvent, sink) {
        var previousEvent, isEqual, e, s, t1, t2, subscription, previous, exception;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(inputEvent, t1);
        t2 = this.$ti;
        H.assertSubtype(sink, "$is_EventSink", t2, "$as_EventSink");
        subscription = H.assertSubtype(sink, "$is_StateStreamSubscription", t2, "$as_StateStreamSubscription");
        previous = subscription._sharedState;
        t2 = $.$get$_DistinctStream__SENTINEL();
        if (previous == null ? t2 == null : previous === t2) {
          subscription._sharedState = inputEvent;
          J._add$1$x(sink, inputEvent);
        } else {
          previousEvent = H.assertSubtypeOfRuntimeType(previous, t1);
          isEqual = null;
          try {
            t1 = this._async$_equals;
            if (t1 == null)
              isEqual = J.$eq$(previousEvent, inputEvent);
            else
              isEqual = t1.call$2(previousEvent, inputEvent);
          } catch (exception) {
            e = H.unwrapException(exception);
            s = H.getTraceFromException(exception);
            P._addErrorWithReplacement(sink, e, s);
            return;
          }
          if (!isEqual) {
            J._add$1$x(sink, inputEvent);
            subscription._sharedState = inputEvent;
          }
        }
      },
      $asStream: null,
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      }
    },
    _EventSinkWrapper: {
      "^": "Object;_async$_sink,$ti",
      add$1: [function(_, data) {
        var t1 = this._async$_sink;
        data = H.assertSubtypeOfRuntimeType(H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0)), H.getTypeArgumentByIndex(t1, 1));
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_add(0, data);
      }, "call$1", "get$add", 5, 0, 14, 9],
      addError$2: function(error, stackTrace) {
        var t1 = this._async$_sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._async$_sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_close();
      },
      $isEventSink: 1
    },
    _SinkTransformerStreamSubscription: {
      "^": "_BufferingStreamSubscription;0_transformerSink,0_subscription,0_onData,0_async$_onError,0_onDone,_zone,_state,0_cancelFuture,0_pending,$ti",
      set$_transformerSink: function(_transformerSink) {
        this._transformerSink = H.assertSubtype(_transformerSink, "$isEventSink", [H.getTypeArgumentByIndex(this, 0)], "$asEventSink");
      },
      set$_subscription: function(_subscription) {
        this._subscription = H.assertSubtype(_subscription, "$isStreamSubscription", [H.getTypeArgumentByIndex(this, 0)], "$asStreamSubscription");
      },
      _add$1: function(_, data) {
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 1));
        if ((this._state & 2) !== 0)
          throw H.wrapException(P.StateError$("Stream is already closed"));
        this.super$_BufferingStreamSubscription$_add(0, data);
      },
      _onPause$0: [function() {
        var t1 = this._subscription;
        if (t1 != null)
          t1.pause$0(0);
      }, "call$0", "get$_onPause", 0, 0, 2],
      _onResume$0: [function() {
        var t1 = this._subscription;
        if (t1 != null)
          t1.resume$0(0);
      }, "call$0", "get$_onResume", 0, 0, 2],
      _async$_onCancel$0: function() {
        var t1 = this._subscription;
        if (t1 != null) {
          this.set$_subscription(null);
          return t1.cancel$0(0);
        }
        return;
      },
      _handleData$1: [function(data) {
        var e, s, exception, t1;
        H.assertSubtypeOfRuntimeType(data, H.getTypeArgumentByIndex(this, 0));
        try {
          this._transformerSink.add$1(0, data);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = H.interceptedTypeCheck(s, "$isStackTrace");
          if ((this._state & 2) !== 0)
            H.throwExpression(P.StateError$("Stream is already closed"));
          this.super$_BufferingStreamSubscription$_addError(e, t1);
        }
      }, "call$1", "get$_handleData", 4, 0, 14, 9],
      _handleError$2: [function(error, stackTrace) {
        var e, s, exception, t1;
        try {
          this._transformerSink.addError$2(error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = e;
          if (t1 == null ? error == null : t1 === error) {
            H.interceptedTypeCheck(stackTrace, "$isStackTrace");
            if ((this._state & 2) !== 0)
              H.throwExpression(P.StateError$("Stream is already closed"));
            this.super$_BufferingStreamSubscription$_addError(error, stackTrace);
          } else {
            t1 = H.interceptedTypeCheck(s, "$isStackTrace");
            if ((this._state & 2) !== 0)
              H.throwExpression(P.StateError$("Stream is already closed"));
            this.super$_BufferingStreamSubscription$_addError(e, t1);
          }
        }
      }, function(error) {
        return this._handleError$2(error, null);
      }, "_handleError$1", "call$2", "call$1", "get$_handleError", 4, 2, 172, 3, 2, 4],
      _handleDone$0: [function() {
        var e, s, exception, t1;
        try {
          this.set$_subscription(null);
          this._transformerSink.close$0(0);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          t1 = H.interceptedTypeCheck(s, "$isStackTrace");
          if ((this._state & 2) !== 0)
            H.throwExpression(P.StateError$("Stream is already closed"));
          this.super$_BufferingStreamSubscription$_addError(e, t1);
        }
      }, "call$0", "get$_handleDone", 0, 0, 2],
      $asStreamSubscription: function($S, $T) {
        return [$T];
      },
      $as_EventSink: function($S, $T) {
        return [$T];
      },
      $as_EventDispatch: function($S, $T) {
        return [$T];
      },
      $as_BufferingStreamSubscription: function($S, $T) {
        return [$T];
      }
    },
    _BoundSinkStream: {
      "^": "Stream;_sinkMapper,_stream,$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2, t3, subscription;
        t1 = H.getTypeArgumentByIndex(this, 1);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        cancelOnError = true === cancelOnError;
        t2 = $.Zone__current;
        t3 = cancelOnError ? 1 : 0;
        subscription = new P._SinkTransformerStreamSubscription(t2, t3, this.$ti);
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, t1);
        subscription.set$_transformerSink(this._sinkMapper.call$1(new P._EventSinkWrapper(subscription, [t1])));
        subscription.set$_subscription(this._stream.listen$3$onDone$onError(subscription.get$_handleData(), subscription.get$_handleDone(), subscription.get$_handleError()));
        return subscription;
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      $asStream: function($S, $T) {
        return [$T];
      }
    },
    Timer: {
      "^": "Object;"
    },
    AsyncError: {
      "^": "Object;error,stackTrace",
      toString$0: function(_) {
        return H.S(this.error);
      },
      $isError: 1
    },
    _ZoneFunction: {
      "^": "Object;zone,$function,$ti"
    },
    ZoneSpecification: {
      "^": "Object;"
    },
    _ZoneSpecification: {
      "^": "Object;handleUncaughtError,run,runUnary,runBinary,registerCallback,registerUnaryCallback,registerBinaryCallback,errorCallback,scheduleMicrotask,createTimer,createPeriodicTimer,print,fork",
      $isZoneSpecification: 1,
      static: {
        _ZoneSpecification$: function(createPeriodicTimer, createTimer, errorCallback, fork, handleUncaughtError, $print, registerBinaryCallback, registerCallback, registerUnaryCallback, run, runBinary, runUnary, scheduleMicrotask) {
          return new P._ZoneSpecification(handleUncaughtError, run, runUnary, runBinary, registerCallback, registerUnaryCallback, registerBinaryCallback, errorCallback, scheduleMicrotask, createTimer, createPeriodicTimer, $print, fork);
        }
      }
    },
    ZoneDelegate: {
      "^": "Object;"
    },
    Zone: {
      "^": "Object;"
    },
    _ZoneDelegate: {
      "^": "Object;_delegationTarget",
      $isZoneDelegate: 1
    },
    _Zone: {
      "^": "Object;",
      $isZone: 1
    },
    _CustomZone: {
      "^": "_Zone;0_async$_run<,0_async$_runUnary<,0_async$_runBinary<,0_registerCallback<,0_registerUnaryCallback<,0_registerBinaryCallback<,0_errorCallback<,0_scheduleMicrotask<,0_async$_createTimer<,0_createPeriodicTimer<,0_print<,0_fork<,0_handleUncaughtError<,0_delegateCache,parent>,_async$_map<",
      set$_async$_run: function(_run) {
        this._async$_run = H.assertSubtype(_run, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_async$_runUnary: function(_runUnary) {
        this._async$_runUnary = H.assertSubtype(_runUnary, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_async$_runBinary: function(_runBinary) {
        this._async$_runBinary = H.assertSubtype(_runBinary, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_registerCallback: function(_registerCallback) {
        this._registerCallback = H.assertSubtype(_registerCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_registerUnaryCallback: function(_registerUnaryCallback) {
        this._registerUnaryCallback = H.assertSubtype(_registerUnaryCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_registerBinaryCallback: function(_registerBinaryCallback) {
        this._registerBinaryCallback = H.assertSubtype(_registerBinaryCallback, "$is_ZoneFunction", [P.Function], "$as_ZoneFunction");
      },
      set$_errorCallback: function(_errorCallback) {
        this._errorCallback = H.assertSubtype(_errorCallback, "$is_ZoneFunction", [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}], "$as_ZoneFunction");
      },
      set$_scheduleMicrotask: function(_scheduleMicrotask) {
        this._scheduleMicrotask = H.assertSubtype(_scheduleMicrotask, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}], "$as_ZoneFunction");
      },
      set$_async$_createTimer: function(_createTimer) {
        this._async$_createTimer = H.assertSubtype(_createTimer, "$is_ZoneFunction", [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}], "$as_ZoneFunction");
      },
      set$_createPeriodicTimer: function(_createPeriodicTimer) {
        this._createPeriodicTimer = H.assertSubtype(_createPeriodicTimer, "$is_ZoneFunction", [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}], "$as_ZoneFunction");
      },
      set$_print: function(_print) {
        this._print = H.assertSubtype(_print, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}], "$as_ZoneFunction");
      },
      set$_fork: function(_fork) {
        this._fork = H.assertSubtype(_fork, "$is_ZoneFunction", [{func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}], "$as_ZoneFunction");
      },
      set$_handleUncaughtError: function(_handleUncaughtError) {
        this._handleUncaughtError = H.assertSubtype(_handleUncaughtError, "$is_ZoneFunction", [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}], "$as_ZoneFunction");
      },
      get$_delegate: function() {
        var t1 = this._delegateCache;
        if (t1 != null)
          return t1;
        t1 = new P._ZoneDelegate(this);
        this._delegateCache = t1;
        return t1;
      },
      get$errorZone: function() {
        return this._handleUncaughtError.zone;
      },
      runGuarded$1: function(f) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        try {
          this.run$1$1(f, -1);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
        }
      },
      runUnaryGuarded$1$2: function(f, arg, $T) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        try {
          this.runUnary$2$2(f, arg, -1, $T);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
        }
      },
      runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        try {
          this.runBinary$3$3(f, arg1, arg2, -1, T1, T2);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
        }
      },
      bindCallback$1$1: function(f, $R) {
        return new P._CustomZone_bindCallback_closure(this, this.registerCallback$1$1(H.functionTypeCheck(f, {func: 1, ret: $R}), $R), $R);
      },
      bindUnaryCallback$2$1: function(f, $R, $T) {
        return new P._CustomZone_bindUnaryCallback_closure(this, this.registerUnaryCallback$2$1(H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]}), $R, $T), $T, $R);
      },
      bindCallbackGuarded$1: function(f) {
        return new P._CustomZone_bindCallbackGuarded_closure(this, this.registerCallback$1$1(H.functionTypeCheck(f, {func: 1, ret: -1}), -1));
      },
      bindUnaryCallbackGuarded$1$1: function(f, $T) {
        return new P._CustomZone_bindUnaryCallbackGuarded_closure(this, this.registerUnaryCallback$2$1(H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), -1, $T), $T);
      },
      $index: function(_, key) {
        var t1, result, t2, value;
        t1 = this._async$_map;
        result = t1.$index(0, key);
        if (result != null || t1.containsKey$1(0, key))
          return result;
        t2 = this.parent;
        if (t2 != null) {
          value = t2.$index(0, key);
          if (value != null)
            t1.$indexSet(0, key, value);
          return value;
        }
        return;
      },
      handleUncaughtError$2: function(error, stackTrace) {
        var implementation, t1, parentDelegate;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        implementation = this._handleUncaughtError;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, error, stackTrace);
      },
      fork$2$specification$zoneValues: function(specification, zoneValues) {
        var implementation, t1, parentDelegate;
        implementation = this._fork;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, specification, zoneValues);
      },
      run$1$1: function(f, $R) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: $R});
        implementation = this._async$_run;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(t1, parentDelegate, this, f, $R);
      },
      runUnary$2$2: function(f, arg, $R, $T) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        implementation = this._async$_runUnary;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}).call$2$5(t1, parentDelegate, this, f, arg, $R, $T);
      },
      runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        implementation = this._async$_runBinary;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}).call$3$6(t1, parentDelegate, this, f, arg1, arg2, $R, T1, T2);
      },
      registerCallback$1$1: function(callback, $R) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(callback, {func: 1, ret: $R});
        implementation = this._registerCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: {func: 1, ret: 0}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(t1, parentDelegate, this, callback, $R);
      },
      registerUnaryCallback$2$1: function(callback, $R, $T) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(callback, {func: 1, ret: $R, args: [$T]});
        implementation = this._registerUnaryCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: {func: 1, ret: 0, args: [1]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}]}).call$2$4(t1, parentDelegate, this, callback, $R, $T);
      },
      registerBinaryCallback$3$1: function(callback, $R, T1, T2) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(callback, {func: 1, ret: $R, args: [T1, T2]});
        implementation = this._registerBinaryCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: {func: 1, ret: 0, args: [1, 2]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}]}).call$3$4(t1, parentDelegate, this, callback, $R, T1, T2);
      },
      errorCallback$2: function(error, stackTrace) {
        var implementation, implementationZone, parentDelegate;
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        implementation = this._errorCallback;
        implementationZone = implementation.zone;
        if (implementationZone === C.C__RootZone)
          return;
        parentDelegate = P._parentDelegate(implementationZone);
        return implementation.$function.call$5(implementationZone, parentDelegate, this, error, stackTrace);
      },
      scheduleMicrotask$1: function(f) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        implementation = this._scheduleMicrotask;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      },
      createTimer$2: function(duration, f) {
        var implementation, t1, parentDelegate;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        implementation = this._async$_createTimer;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, duration, f);
      },
      print$1: function(_, line) {
        var implementation, t1, parentDelegate;
        implementation = this._print;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, line);
      }
    },
    _CustomZone_bindCallback_closure: {
      "^": "Closure;$this,registered,R",
      call$0: [function() {
        return this.$this.run$1$1(this.registered, this.R);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: this.R};
      }
    },
    _CustomZone_bindUnaryCallback_closure: {
      "^": "Closure;$this,registered,T,R",
      call$1: function(arg) {
        var t1 = this.T;
        return this.$this.runUnary$2$2(this.registered, H.assertSubtypeOfRuntimeType(arg, t1), this.R, t1);
      },
      $signature: function() {
        return {func: 1, ret: this.R, args: [this.T]};
      }
    },
    _CustomZone_bindCallbackGuarded_closure: {
      "^": "Closure:2;$this,registered",
      call$0: [function() {
        return this.$this.runGuarded$1(this.registered);
      }, null, null, 0, 0, null, "call"]
    },
    _CustomZone_bindUnaryCallbackGuarded_closure: {
      "^": "Closure;$this,registered,T",
      call$1: [function(arg) {
        var t1 = this.T;
        return this.$this.runUnaryGuarded$1$2(this.registered, H.assertSubtypeOfRuntimeType(arg, t1), t1);
      }, null, null, 4, 0, null, 11, "call"],
      $signature: function() {
        return {func: 1, ret: -1, args: [this.T]};
      }
    },
    _rootHandleUncaughtError_closure: {
      "^": "Closure:0;_box_0,stackTrace",
      call$0: function() {
        var t1, t2, error;
        t1 = this._box_0;
        t2 = t1.error;
        if (t2 == null) {
          error = new P.NullThrownError();
          t1.error = error;
          t1 = error;
        } else
          t1 = t2;
        t2 = this.stackTrace;
        if (t2 == null)
          throw H.wrapException(t1);
        error = H.wrapException(t1);
        error.stack = t2.toString$0(0);
        throw error;
      }
    },
    _RootZone: {
      "^": "_Zone;",
      get$_async$_run: function() {
        return C._ZoneFunction__RootZone__rootRun;
      },
      get$_async$_runUnary: function() {
        return C._ZoneFunction__RootZone__rootRunUnary;
      },
      get$_async$_runBinary: function() {
        return C._ZoneFunction__RootZone__rootRunBinary;
      },
      get$_registerCallback: function() {
        return C._ZoneFunction__RootZone__rootRegisterCallback;
      },
      get$_registerUnaryCallback: function() {
        return C._ZoneFunction_Eeh;
      },
      get$_registerBinaryCallback: function() {
        return C._ZoneFunction_7G2;
      },
      get$_errorCallback: function() {
        return C._ZoneFunction__RootZone__rootErrorCallback;
      },
      get$_scheduleMicrotask: function() {
        return C._ZoneFunction__RootZone__rootScheduleMicrotask;
      },
      get$_async$_createTimer: function() {
        return C._ZoneFunction__RootZone__rootCreateTimer;
      },
      get$_createPeriodicTimer: function() {
        return C._ZoneFunction_3bB;
      },
      get$_print: function() {
        return C._ZoneFunction__RootZone__rootPrint;
      },
      get$_fork: function() {
        return C._ZoneFunction__RootZone__rootFork;
      },
      get$_handleUncaughtError: function() {
        return C._ZoneFunction_NMc;
      },
      get$parent: function(_) {
        return;
      },
      get$_async$_map: function() {
        return $.$get$_RootZone__rootMap();
      },
      get$_delegate: function() {
        var t1 = $._RootZone__rootDelegate;
        if (t1 != null)
          return t1;
        t1 = new P._ZoneDelegate(this);
        $._RootZone__rootDelegate = t1;
        return t1;
      },
      get$errorZone: function() {
        return this;
      },
      runGuarded$1: function(f) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1});
        try {
          if (C.C__RootZone === $.Zone__current) {
            f.call$0();
            return;
          }
          P._rootRun(null, null, this, f, -1);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._rootHandleUncaughtError(null, null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
        }
      },
      runUnaryGuarded$1$2: function(f, arg, $T) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        try {
          if (C.C__RootZone === $.Zone__current) {
            f.call$1(arg);
            return;
          }
          P._rootRunUnary(null, null, this, f, arg, -1, $T);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._rootHandleUncaughtError(null, null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
        }
      },
      runBinaryGuarded$2$3: function(f, arg1, arg2, T1, T2) {
        var e, s, exception;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        try {
          if (C.C__RootZone === $.Zone__current) {
            f.call$2(arg1, arg2);
            return;
          }
          P._rootRunBinary(null, null, this, f, arg1, arg2, -1, T1, T2);
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          P._rootHandleUncaughtError(null, null, this, e, H.interceptedTypeCheck(s, "$isStackTrace"));
        }
      },
      bindCallback$1$1: function(f, $R) {
        return new P._RootZone_bindCallback_closure(this, H.functionTypeCheck(f, {func: 1, ret: $R}), $R);
      },
      bindCallbackGuarded$1: function(f) {
        return new P._RootZone_bindCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1}));
      },
      bindUnaryCallbackGuarded$1$1: function(f, $T) {
        return new P._RootZone_bindUnaryCallbackGuarded_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1, args: [$T]}), $T);
      },
      $index: function(_, key) {
        return;
      },
      handleUncaughtError$2: function(error, stackTrace) {
        P._rootHandleUncaughtError(null, null, this, error, H.interceptedTypeCheck(stackTrace, "$isStackTrace"));
      },
      fork$2$specification$zoneValues: function(specification, zoneValues) {
        return P._rootFork(null, null, this, specification, zoneValues);
      },
      run$1$1: function(f, $R) {
        H.functionTypeCheck(f, {func: 1, ret: $R});
        if ($.Zone__current === C.C__RootZone)
          return f.call$0();
        return P._rootRun(null, null, this, f, $R);
      },
      runUnary$2$2: function(f, arg, $R, $T) {
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        if ($.Zone__current === C.C__RootZone)
          return f.call$1(arg);
        return P._rootRunUnary(null, null, this, f, arg, $R, $T);
      },
      runBinary$3$3: function(f, arg1, arg2, $R, T1, T2) {
        H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        if ($.Zone__current === C.C__RootZone)
          return f.call$2(arg1, arg2);
        return P._rootRunBinary(null, null, this, f, arg1, arg2, $R, T1, T2);
      },
      registerCallback$1$1: function(f, $R) {
        return H.functionTypeCheck(f, {func: 1, ret: $R});
      },
      registerUnaryCallback$2$1: function(f, $R, $T) {
        return H.functionTypeCheck(f, {func: 1, ret: $R, args: [$T]});
      },
      registerBinaryCallback$3$1: function(f, $R, T1, T2) {
        return H.functionTypeCheck(f, {func: 1, ret: $R, args: [T1, T2]});
      },
      errorCallback$2: function(error, stackTrace) {
        H.interceptedTypeCheck(stackTrace, "$isStackTrace");
        return;
      },
      scheduleMicrotask$1: function(f) {
        P._rootScheduleMicrotask(null, null, this, H.functionTypeCheck(f, {func: 1, ret: -1}));
      },
      createTimer$2: function(duration, f) {
        return P.Timer__createTimer(duration, H.functionTypeCheck(f, {func: 1, ret: -1}));
      },
      print$1: function(_, line) {
        H.printString(line);
      }
    },
    _RootZone_bindCallback_closure: {
      "^": "Closure;$this,f,R",
      call$0: [function() {
        return this.$this.run$1$1(this.f, this.R);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: this.R};
      }
    },
    _RootZone_bindCallbackGuarded_closure: {
      "^": "Closure:2;$this,f",
      call$0: [function() {
        return this.$this.runGuarded$1(this.f);
      }, null, null, 0, 0, null, "call"]
    },
    _RootZone_bindUnaryCallbackGuarded_closure: {
      "^": "Closure;$this,f,T",
      call$1: [function(arg) {
        var t1 = this.T;
        return this.$this.runUnaryGuarded$1$2(this.f, H.assertSubtypeOfRuntimeType(arg, t1), t1);
      }, null, null, 4, 0, null, 11, "call"],
      $signature: function() {
        return {func: 1, ret: -1, args: [this.T]};
      }
    }
  }], ["dart.collection", "dart:collection",, P, {
    "^": "",
    HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
      return new P._HashMap(0, [$K, $V]);
    },
    LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
      H.functionTypeCheck(equals, {func: 1, ret: P.bool, args: [$K, $K]});
      H.functionTypeCheck(hashCode, {func: 1, ret: P.int, args: [$K]});
      if (hashCode == null) {
        if (equals == null)
          return new H.JsLinkedHashMap(0, 0, [$K, $V]);
        hashCode = P.collection___defaultHashCode$closure();
      } else {
        if (P.core__identityHashCode$closure() === hashCode && P.core__identical$closure() === equals)
          return P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6($K, $V);
        if (equals == null)
          equals = P.collection___defaultEquals$closure();
      }
      return P._LinkedCustomHashMap$(equals, hashCode, isValidKey, $K, $V);
    },
    LinkedHashMap_LinkedHashMap$_literal: function(keyValuePairs, $K, $V) {
      H.listTypeCheck(keyValuePairs);
      return H.assertSubtype(H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap(0, 0, [$K, $V])), "$isLinkedHashMap", [$K, $V], "$asLinkedHashMap");
    },
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      return new H.JsLinkedHashMap(0, 0, [$K, $V]);
    },
    LinkedHashMap__makeEmpty: function() {
      return new H.JsLinkedHashMap(0, 0, [null, null]);
    },
    LinkedHashMap__makeLiteral: function(keyValuePairs) {
      return H.fillLiteralMap(keyValuePairs, new H.JsLinkedHashMap(0, 0, [null, null]));
    },
    LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
      return new P._LinkedHashSet(0, 0, [$E]);
    },
    _defaultEquals: [function(a, b) {
      return J.$eq$(a, b);
    }, "call$2", "collection___defaultEquals$closure", 8, 0, 64],
    _defaultHashCode: [function(a) {
      return J.get$hashCode$(a);
    }, "call$1", "collection___defaultHashCode$closure", 4, 0, 219, 27],
    HashMap_HashMap$from: function(other, $K, $V) {
      var result = P.HashMap_HashMap(null, null, null, $K, $V);
      J.forEach$1$ax(other, new P.HashMap_HashMap$from_closure(result, $K, $V));
      return H.assertSubtype(result, "$isHashMap", [$K, $V], "$asHashMap");
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = [];
      t1 = $.$get$_toStringVisiting();
      C.JSArray_methods.add$1(t1, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, H.listSuperNativeTypeCheck(parts, "$isIterable"), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1, t2;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      t1 = $.$get$_toStringVisiting();
      C.JSArray_methods.add$1(t1, iterable);
      try {
        t2 = buffer;
        t2.set$_contents(P.StringBuffer__writeAll(t2.get$_contents(), iterable, ", "));
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = buffer;
      t1.set$_contents(t1.get$_contents() + rightDelimiter);
      t1 = buffer.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var i, t1;
      for (i = 0; t1 = $.$get$_toStringVisiting(), i < t1.length; ++i)
        if (o === t1[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
      it = iterable.get$iterator(iterable);
      $length = 0;
      count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current(it));
        C.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current(it);
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            C.JSArray_methods.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current(it);
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current(it);
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              C.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        C.JSArray_methods.add$1(parts, elision);
      C.JSArray_methods.add$1(parts, penultimateString);
      C.JSArray_methods.add$1(parts, ultimateString);
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      other.forEach$1(0, new P.LinkedHashMap_LinkedHashMap$from_closure(result, $K, $V));
      return result;
    },
    MapBase_mapToString: function(m) {
      var t1, result, t2;
      t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        C.JSArray_methods.add$1($.$get$_toStringVisiting(), m);
        t2 = result;
        t2.set$_contents(t2.get$_contents() + "{");
        t1.first = true;
        J.forEach$1$ax(m, new P.MapBase_mapToString_closure(t1, result));
        t1 = result;
        t1.set$_contents(t1.get$_contents() + "}");
      } finally {
        t1 = $.$get$_toStringVisiting();
        if (0 >= t1.length)
          return H.ioore(t1, -1);
        t1.pop();
      }
      t1 = result.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: {
      "^": "MapBase;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_keys,$ti",
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      get$keys: function(_) {
        return new P._HashMapKeyIterable(this, [H.getTypeArgumentByIndex(this, 0)]);
      },
      get$values: function(_) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        return H.MappedIterable_MappedIterable(new P._HashMapKeyIterable(this, [t1]), new P._HashMap_values_closure(this), t1, H.getTypeArgumentByIndex(this, 1));
      },
      containsKey$1: function(_, key) {
        var strings, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          return strings == null ? false : strings[key] != null;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          return nums == null ? false : nums[key] != null;
        } else
          return this._containsKey$1(key);
      },
      _containsKey$1: function(key) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
      },
      $index: function(_, key) {
        var strings, t1, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          t1 = strings == null ? null : P._HashMap__getTableEntry(strings, key);
          return t1;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          t1 = nums == null ? null : P._HashMap__getTableEntry(nums, key);
          return t1;
        } else
          return this._get$1(0, key);
      },
      _get$1: function(_, key) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = this._getBucket$2(rest, key);
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      },
      $indexSet: function(_, key, value) {
        var strings, nums;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            strings = P._HashMap__newHashTable();
            this._collection$_strings = strings;
          }
          this._collection$_addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          if (nums == null) {
            nums = P._HashMap__newHashTable();
            this._collection$_nums = nums;
          }
          this._collection$_addHashTableEntry$3(nums, key, value);
        } else
          this._set$2(key, value);
      },
      _set$2: function(key, value) {
        var rest, hash, bucket, index;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          ++this._collection$_length;
          this._keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            ++this._collection$_length;
            this._keys = null;
          }
        }
      },
      forEach$1: function(_, action) {
        var t1, keys, $length, i, key;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1, H.getTypeArgumentByIndex(this, 1)]});
        keys = this._computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          key = keys[i];
          action.call$2(H.assertSubtypeOfRuntimeType(key, t1), this.$index(0, key));
          if (keys !== this._keys)
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
      },
      _computeKeys$0: function() {
        var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
        t1 = this._keys;
        if (t1 != null)
          return t1;
        result = new Array(this._collection$_length);
        result.fixed$length = Array;
        strings = this._collection$_strings;
        if (strings != null) {
          names = Object.getOwnPropertyNames(strings);
          entries = names.length;
          for (index = 0, i = 0; i < entries; ++i) {
            result[index] = names[i];
            ++index;
          }
        } else
          index = 0;
        nums = this._collection$_nums;
        if (nums != null) {
          names = Object.getOwnPropertyNames(nums);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            result[index] = +names[i];
            ++index;
          }
        }
        rest = this._collection$_rest;
        if (rest != null) {
          names = Object.getOwnPropertyNames(rest);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            bucket = rest[names[i]];
            $length = bucket.length;
            for (i0 = 0; i0 < $length; i0 += 2) {
              result[index] = bucket[i0];
              ++index;
            }
          }
        }
        this._keys = result;
        return result;
      },
      _collection$_addHashTableEntry$3: function(table, key, value) {
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        if (table[key] == null) {
          ++this._collection$_length;
          this._keys = null;
        }
        P._HashMap__setTableEntry(table, key, value);
      },
      _computeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      _getBucket$2: function(table, key) {
        return table[this._computeHashCode$1(key)];
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2)
          if (J.$eq$(bucket[i], key))
            return i;
        return -1;
      },
      $isHashMap: 1,
      static: {
        _HashMap__getTableEntry: function(table, key) {
          var entry = table[key];
          return entry === table ? null : entry;
        },
        _HashMap__setTableEntry: function(table, key, value) {
          if (value == null)
            table[key] = table;
          else
            table[key] = value;
        },
        _HashMap__newHashTable: function() {
          var table = Object.create(null);
          P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
          delete table["<non-identifier-key>"];
          return table;
        }
      }
    },
    _HashMap_values_closure: {
      "^": "Closure;$this",
      call$1: [function(each) {
        var t1 = this.$this;
        return t1.$index(0, H.assertSubtypeOfRuntimeType(each, H.getTypeArgumentByIndex(t1, 0)));
      }, null, null, 4, 0, null, 20, "call"],
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: H.getTypeArgumentByIndex(t1, 1), args: [H.getTypeArgumentByIndex(t1, 0)]};
      }
    },
    _HashMapKeyIterable: {
      "^": "EfficientLengthIterable;_collection$_map,$ti",
      get$length: function(_) {
        return this._collection$_map._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_map._collection$_length === 0;
      },
      get$iterator: function(_) {
        var t1 = this._collection$_map;
        return new P._HashMapKeyIterator(t1, t1._computeKeys$0(), 0, this.$ti);
      },
      contains$1: function(_, element) {
        return this._collection$_map.containsKey$1(0, element);
      },
      forEach$1: function(_, f) {
        var t1, keys, $length, i;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._collection$_map;
        keys = t1._computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          f.call$1(keys[i]);
          if (keys !== t1._keys)
            throw H.wrapException(P.ConcurrentModificationError$(t1));
        }
      }
    },
    _HashMapKeyIterator: {
      "^": "Object;_collection$_map,_keys,_offset,0_collection$_current,$ti",
      set$_collection$_current: function(_current) {
        this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var keys, offset, t1;
        keys = this._keys;
        offset = this._offset;
        t1 = this._collection$_map;
        if (keys !== t1._keys)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        else if (offset >= keys.length) {
          this.set$_collection$_current(null);
          return false;
        } else {
          this.set$_collection$_current(keys[offset]);
          this._offset = offset + 1;
          return true;
        }
      },
      $isIterator: 1
    },
    _LinkedIdentityHashMap: {
      "^": "JsLinkedHashMap;__js_helper$_length,0_strings,0_nums,0_rest,0_first,0_last,_modifications,$ti",
      internalComputeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i) {
          t1 = bucket[i].hashMapCellKey;
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      },
      static: {
        _LinkedIdentityHashMap__LinkedIdentityHashMap$es6: function($K, $V) {
          return new P._LinkedIdentityHashMap(0, 0, [$K, $V]);
        }
      }
    },
    _LinkedCustomHashMap: {
      "^": "JsLinkedHashMap;_equals,_collection$_hashCode,_validKey,__js_helper$_length,0_strings,0_nums,0_rest,0_first,0_last,_modifications,$ti",
      $index: function(_, key) {
        if (!this._validKey.call$1(key))
          return;
        return this.super$JsLinkedHashMap$internalGet(key);
      },
      $indexSet: function(_, key, value) {
        this.super$JsLinkedHashMap$internalSet(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1)));
      },
      containsKey$1: function(_, key) {
        if (!this._validKey.call$1(key))
          return false;
        return this.super$JsLinkedHashMap$internalContainsKey(key);
      },
      remove$1: function(_, key) {
        if (!this._validKey.call$1(key))
          return;
        return this.super$JsLinkedHashMap$internalRemove(key);
      },
      internalComputeHashCode$1: function(key) {
        return this._collection$_hashCode.call$1(H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0))) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, t1, t2, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (t1 = H.getTypeArgumentByIndex(this, 0), t2 = this._equals, i = 0; i < $length; ++i)
          if (t2.call$2(H.assertSubtypeOfRuntimeType(bucket[i].hashMapCellKey, t1), H.assertSubtypeOfRuntimeType(key, t1)))
            return i;
        return -1;
      },
      static: {
        _LinkedCustomHashMap$: function(_equals, _hashCode, validKey, $K, $V) {
          return new P._LinkedCustomHashMap(_equals, _hashCode, new P._LinkedCustomHashMap_closure($K), 0, 0, [$K, $V]);
        }
      }
    },
    _LinkedCustomHashMap_closure: {
      "^": "Closure:20;K",
      call$1: function(v) {
        return H.checkSubtypeOfRuntimeType(v, this.K);
      }
    },
    _LinkedHashSet: {
      "^": "_HashSetBase;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_collection$_first,0_collection$_last,_collection$_modifications,$ti",
      get$iterator: function(_) {
        var t1 = new P._LinkedHashSetIterator(this, this._collection$_modifications, this.$ti);
        t1._collection$_cell = this._collection$_first;
        return t1;
      },
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      contains$1: function(_, object) {
        var strings, nums;
        if (typeof object === "string" && object !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null)
            return false;
          return H.interceptedTypeCheck(strings[object], "$is_LinkedHashSetCell") != null;
        } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
          nums = this._collection$_nums;
          if (nums == null)
            return false;
          return H.interceptedTypeCheck(nums[object], "$is_LinkedHashSetCell") != null;
        } else
          return this._contains$1(object);
      },
      _contains$1: function(object) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(this._getBucket$2(rest, object), object) >= 0;
      },
      forEach$1: function(_, action) {
        var t1, cell, modifications;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [t1]});
        cell = this._collection$_first;
        modifications = this._collection$_modifications;
        for (; cell != null;) {
          action.call$1(H.assertSubtypeOfRuntimeType(cell._element, t1));
          if (modifications !== this._collection$_modifications)
            throw H.wrapException(P.ConcurrentModificationError$(this));
          cell = cell._collection$_next;
        }
      },
      add$1: function(_, element) {
        var strings, nums;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        if (typeof element === "string" && element !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            strings = P._LinkedHashSet__newHashTable();
            this._collection$_strings = strings;
          }
          return this._collection$_addHashTableEntry$2(strings, element);
        } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
          nums = this._collection$_nums;
          if (nums == null) {
            nums = P._LinkedHashSet__newHashTable();
            this._collection$_nums = nums;
          }
          return this._collection$_addHashTableEntry$2(nums, element);
        } else
          return this._collection$_add$1(0, element);
      },
      _collection$_add$1: function(_, element) {
        var rest, hash, bucket;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._LinkedHashSet__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._collection$_newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._collection$_newLinkedCell$1(element));
        }
        return true;
      },
      remove$1: function(_, object) {
        if (typeof object === "string" && object !== "__proto__")
          return this._removeHashTableEntry$2(this._collection$_strings, object);
        else if (typeof object === "number" && (object & 0x3ffffff) === object)
          return this._removeHashTableEntry$2(this._collection$_nums, object);
        else
          return this._remove$1(0, object);
      },
      _remove$1: function(_, object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return false;
        bucket = this._getBucket$2(rest, object);
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      },
      _collection$_addHashTableEntry$2: function(table, element) {
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        if (H.interceptedTypeCheck(table[element], "$is_LinkedHashSetCell") != null)
          return false;
        table[element] = this._collection$_newLinkedCell$1(element);
        return true;
      },
      _removeHashTableEntry$2: function(table, element) {
        var cell;
        if (table == null)
          return false;
        cell = H.interceptedTypeCheck(table[element], "$is_LinkedHashSetCell");
        if (cell == null)
          return false;
        this._unlinkCell$1(cell);
        delete table[element];
        return true;
      },
      _collection$_modified$0: function() {
        this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
      },
      _collection$_newLinkedCell$1: function(element) {
        var cell, last;
        cell = new P._LinkedHashSetCell(H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0)));
        if (this._collection$_first == null) {
          this._collection$_last = cell;
          this._collection$_first = cell;
        } else {
          last = this._collection$_last;
          cell._collection$_previous = last;
          last._collection$_next = cell;
          this._collection$_last = cell;
        }
        ++this._collection$_length;
        this._collection$_modified$0();
        return cell;
      },
      _unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell._collection$_previous;
        next = cell._collection$_next;
        if (previous == null)
          this._collection$_first = next;
        else
          previous._collection$_next = next;
        if (next == null)
          this._collection$_last = previous;
        else
          next._collection$_previous = previous;
        --this._collection$_length;
        this._collection$_modified$0();
      },
      _computeHashCode$1: function(element) {
        return J.get$hashCode$(element) & 0x3ffffff;
      },
      _getBucket$2: function(table, element) {
        return table[this._computeHashCode$1(element)];
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq$(bucket[i]._element, element))
            return i;
        return -1;
      },
      static: {
        _LinkedHashSet__newHashTable: function() {
          var table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          return table;
        }
      }
    },
    _LinkedIdentityHashSet: {
      "^": "_LinkedHashSet;_collection$_length,0_collection$_strings,0_collection$_nums,0_collection$_rest,0_collection$_first,0_collection$_last,_collection$_modifications,$ti",
      _computeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i) {
          t1 = bucket[i]._element;
          if (t1 == null ? element == null : t1 === element)
            return i;
        }
        return -1;
      }
    },
    _LinkedHashSetCell: {
      "^": "Object;_element,0_collection$_next,0_collection$_previous"
    },
    _LinkedHashSetIterator: {
      "^": "Object;_set,_collection$_modifications,0_collection$_cell,0_collection$_current,$ti",
      set$_collection$_current: function(_current) {
        this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      get$current: function(_) {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1 = this._set;
        if (this._collection$_modifications !== t1._collection$_modifications)
          throw H.wrapException(P.ConcurrentModificationError$(t1));
        else {
          t1 = this._collection$_cell;
          if (t1 == null) {
            this.set$_collection$_current(null);
            return false;
          } else {
            this.set$_collection$_current(H.assertSubtypeOfRuntimeType(t1._element, H.getTypeArgumentByIndex(this, 0)));
            this._collection$_cell = this._collection$_cell._collection$_next;
            return true;
          }
        }
      },
      $isIterator: 1,
      static: {
        _LinkedHashSetIterator$: function(_set, _modifications, $E) {
          var t1 = new P._LinkedHashSetIterator(_set, _modifications, [$E]);
          t1._collection$_cell = _set._collection$_first;
          return t1;
        }
      }
    },
    UnmodifiableListView: {
      "^": "UnmodifiableListBase;_collection$_source,$ti",
      get$length: function(_) {
        return J.get$length$asx(this._collection$_source);
      },
      $index: function(_, index) {
        return J.elementAt$1$ax(this._collection$_source, H.intTypeCheck(index));
      }
    },
    HashMap_HashMap$from_closure: {
      "^": "Closure:5;result,K,V",
      call$2: function(k, v) {
        this.result.$indexSet(0, H.assertSubtypeOfRuntimeType(k, this.K), H.assertSubtypeOfRuntimeType(v, this.V));
      }
    },
    _HashSetBase: {
      "^": "SetBase;$ti"
    },
    IterableBase: {
      "^": "Iterable;"
    },
    LinkedHashMap_LinkedHashMap$from_closure: {
      "^": "Closure:5;result,K,V",
      call$2: function(k, v) {
        this.result.$indexSet(0, H.assertSubtypeOfRuntimeType(k, this.K), H.assertSubtypeOfRuntimeType(v, this.V));
      }
    },
    ListBase: {
      "^": "_ListBase_Object_ListMixin;$ti",
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1
    },
    ListMixin: {
      "^": "Object;$ti",
      get$iterator: function(receiver) {
        return new H.ListIterator(receiver, this.get$length(receiver), 0, [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]);
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      forEach$1: function(receiver, action) {
        var $length, i;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]});
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          action.call$1(this.$index(receiver, i));
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
      },
      get$isEmpty: function(receiver) {
        return this.get$length(receiver) === 0;
      },
      get$isNotEmpty: function(receiver) {
        return !this.get$isEmpty(receiver);
      },
      contains$1: function(receiver, element) {
        var $length, i;
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (J.$eq$(this.$index(receiver, i), element))
            return true;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return false;
      },
      every$1: function(receiver, test) {
        var $length, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]});
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (!test.call$1(this.$index(receiver, i)))
            return false;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return true;
      },
      any$1: function(receiver, test) {
        var $length, i;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]});
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (test.call$1(this.$index(receiver, i)))
            return true;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return false;
      },
      firstWhere$2$orElse: function(receiver, test, orElse) {
        var t1, $length, i, element;
        t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        H.functionTypeCheck(orElse, {func: 1, ret: t1});
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          element = this.$index(receiver, i);
          if (test.call$1(element))
            return element;
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        return orElse.call$0();
      },
      join$1: function(receiver, separator) {
        var t1;
        if (this.get$length(receiver) === 0)
          return "";
        t1 = P.StringBuffer__writeAll("", receiver, separator);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      where$1: function(receiver, test) {
        var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        return new H.WhereIterable(receiver, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      },
      map$1$1: function(receiver, f, $T) {
        var t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        return new H.MappedListIterable(receiver, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      skip$1: function(receiver, count) {
        return H.SubListIterable$(receiver, count, null, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
      },
      toList$1$growable: function(receiver, growable) {
        var result, i, t1;
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]);
        C.JSArray_methods.set$length(result, this.get$length(receiver));
        i = 0;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          C.JSArray_methods.$indexSet(result, i, this.$index(receiver, i));
          ++i;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      add$1: function(receiver, element) {
        var t1;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$length(receiver, t1 + 1);
        this.$indexSet(receiver, t1, element);
      },
      remove$1: function(receiver, element) {
        var i, t1;
        i = 0;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (J.$eq$(this.$index(receiver, i), element)) {
            this._closeGap$2(receiver, i, i + 1);
            return true;
          }
          ++i;
        }
        return false;
      },
      _closeGap$2: function(receiver, start, end) {
        var $length, size, i;
        $length = this.get$length(receiver);
        size = end - start;
        if (typeof $length !== "number")
          return H.iae($length);
        i = end;
        for (; i < $length; ++i)
          this.$indexSet(receiver, i - size, this.$index(receiver, i));
        this.set$length(receiver, $length - size);
      },
      removeWhere$1: function(receiver, test) {
        this._collection$_filter$2(receiver, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]}), false);
      },
      _collection$_filter$2: function(receiver, test, retainMatching) {
        var t1, retained, $length, i, element;
        t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        retained = H.setRuntimeTypeInfo([], [t1]);
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          element = this.$index(receiver, i);
          if (J.$eq$(test.call$1(element), false))
            C.JSArray_methods.add$1(retained, element);
          if ($length !== this.get$length(receiver))
            throw H.wrapException(P.ConcurrentModificationError$(receiver));
        }
        if (retained.length !== this.get$length(receiver)) {
          this.setRange$3(receiver, 0, retained.length, retained);
          this.set$length(receiver, retained.length);
        }
      },
      $add: function(receiver, other) {
        var t1, result, t2;
        t1 = [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)];
        H.assertSubtype(other, "$isList", t1, "$asList");
        result = H.setRuntimeTypeInfo([], t1);
        t1 = this.get$length(receiver);
        t2 = other.get$length(other);
        if (typeof t1 !== "number")
          return t1.$add();
        C.JSArray_methods.set$length(result, C.JSInt_methods.$add(t1, t2));
        C.JSArray_methods.setRange$3(result, 0, this.get$length(receiver), receiver);
        C.JSArray_methods.setRange$3(result, this.get$length(receiver), result.length, other);
        return result;
      },
      sublist$2: function(receiver, start, end) {
        var listLength, $length, result, i;
        listLength = this.get$length(receiver);
        if (end == null)
          end = listLength;
        P.RangeError_checkValidRange(start, end, listLength, null, null, null);
        if (typeof end !== "number")
          return end.$sub();
        $length = end - start;
        result = H.setRuntimeTypeInfo([], [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]);
        C.JSArray_methods.set$length(result, $length);
        for (i = 0; i < $length; ++i)
          C.JSArray_methods.$indexSet(result, i, this.$index(receiver, start + i));
        return result;
      },
      getRange$2: function(receiver, start, end) {
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        return H.SubListIterable$(receiver, start, end, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
      },
      fillRange$3: function(receiver, start, end, fill) {
        var i;
        H.assertSubtypeOfRuntimeType(fill, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        for (i = start; i < end; ++i)
          this.$indexSet(receiver, i, fill);
      },
      setRange$4: ["super$ListMixin$setRange", function(receiver, start, end, iterable, skipCount) {
        var t1, $length, otherStart, otherList, t2, i;
        t1 = H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0);
        H.assertSubtype(iterable, "$isIterable", [t1], "$asIterable");
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        if (typeof end !== "number")
          return end.$sub();
        $length = end - start;
        if ($length === 0)
          return;
        if (skipCount < 0)
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "skipCount", null));
        if (H.checkSubtype(iterable, "$isList", [t1], "$asList")) {
          otherStart = skipCount;
          otherList = iterable;
        } else {
          otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
          otherStart = 0;
        }
        t1 = J.getInterceptor$asx(otherList);
        t2 = t1.get$length(otherList);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (otherStart + $length > t2)
          throw H.wrapException(H.IterableElementError_tooFew());
        if (otherStart < start)
          for (i = $length - 1; i >= 0; --i)
            this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
        else
          for (i = 0; i < $length; ++i)
            this.$indexSet(receiver, start + i, t1.$index(otherList, otherStart + i));
      }, function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      }, "setRange$3", null, null, "get$setRange", 13, 2, null],
      indexOf$2: function(receiver, element, start) {
        var i, t1;
        i = start;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (J.$eq$(this.$index(receiver, i), element))
            return i;
          ++i;
        }
        return -1;
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      indexWhere$2: function(receiver, test, start) {
        var i, t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0)]});
        i = start;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (test.call$1(this.$index(receiver, i)))
            return i;
          ++i;
        }
        return -1;
      },
      indexWhere$1: function($receiver, test) {
        return this.indexWhere$2($receiver, test, 0);
      },
      insert$2: function(receiver, index, element) {
        var t1;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ListMixin", 0));
        P.RangeError_checkValueInInterval(index, 0, this.get$length(receiver), "index", null);
        if (index === this.get$length(receiver)) {
          this.add$1(receiver, element);
          return;
        }
        t1 = this.get$length(receiver);
        if (typeof t1 !== "number")
          return t1.$add();
        this.set$length(receiver, t1 + 1);
        this.setRange$4(receiver, index + 1, this.get$length(receiver), receiver, index);
        this.$indexSet(receiver, index, element);
      },
      removeAt$1: function(receiver, index) {
        var result = this.$index(receiver, index);
        this._closeGap$2(receiver, index, index + 1);
        return result;
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1
    },
    MapBase: {
      "^": "MapMixin;"
    },
    MapBase_mapToString_closure: {
      "^": "Closure:5;_box_0,result",
      call$2: function(k, v) {
        var t1, t2;
        t1 = this._box_0;
        if (!t1.first)
          this.result._contents += ", ";
        t1.first = false;
        t1 = this.result;
        t2 = t1._contents += H.S(k);
        t1._contents = t2 + ": ";
        t1._contents += H.S(v);
      }
    },
    MapMixin: {
      "^": "Object;$ti",
      forEach$1: function(receiver, action) {
        var t1, key;
        H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 0), H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 1)]});
        for (t1 = J.get$iterator$ax(this.get$keys(receiver)); t1.moveNext$0();) {
          key = t1.get$current(t1);
          action.call$2(key, this.$index(receiver, key));
        }
      },
      containsKey$1: function(receiver, key) {
        return J.contains$1$asx(this.get$keys(receiver), key);
      },
      get$length: function(receiver) {
        return J.get$length$asx(this.get$keys(receiver));
      },
      get$isEmpty: function(receiver) {
        return J.get$isEmpty$asx(this.get$keys(receiver));
      },
      get$isNotEmpty: function(receiver) {
        return J.get$isNotEmpty$asx(this.get$keys(receiver));
      },
      get$values: function(receiver) {
        return new P._MapBaseValueIterable(receiver, [H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 0), H.getRuntimeTypeArgumentIntercepted(this, receiver, "MapMixin", 1)]);
      },
      toString$0: function(receiver) {
        return P.MapBase_mapToString(receiver);
      },
      $isMap: 1
    },
    _MapBaseValueIterable: {
      "^": "EfficientLengthIterable;_collection$_map,$ti",
      get$length: function(_) {
        return J.get$length$asx(this._collection$_map);
      },
      get$isEmpty: function(_) {
        return J.get$isEmpty$asx(this._collection$_map);
      },
      get$isNotEmpty: function(_) {
        return J.get$isNotEmpty$asx(this._collection$_map);
      },
      get$iterator: function(_) {
        var t1 = this._collection$_map;
        return new P._MapBaseValueIterator(J.get$iterator$ax(J.get$keys$x(t1)), t1, this.$ti);
      },
      $asEfficientLengthIterable: function($K, $V) {
        return [$V];
      },
      $asIterable: function($K, $V) {
        return [$V];
      }
    },
    _MapBaseValueIterator: {
      "^": "Object;_keys,_collection$_map,0_collection$_current,$ti",
      set$_collection$_current: function(_current) {
        this._collection$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 1));
      },
      moveNext$0: function() {
        var t1 = this._keys;
        if (t1.moveNext$0()) {
          this.set$_collection$_current(J.$index$asx(this._collection$_map, t1.get$current(t1)));
          return true;
        }
        this.set$_collection$_current(null);
        return false;
      },
      get$current: function(_) {
        return this._collection$_current;
      },
      $isIterator: 1,
      $asIterator: function($K, $V) {
        return [$V];
      }
    },
    _UnmodifiableMapMixin: {
      "^": "Object;$ti",
      $indexSet: function(_, key, value) {
        H.assertSubtypeOfRuntimeType(key, H.getRuntimeTypeArgument(this, "_UnmodifiableMapMixin", 0));
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(this, "_UnmodifiableMapMixin", 1));
        throw H.wrapException(P.UnsupportedError$("Cannot modify unmodifiable map"));
      }
    },
    MapView: {
      "^": "Object;$ti",
      $index: function(_, key) {
        return J.$index$asx(this._collection$_map, key);
      },
      $indexSet: function(_, key, value) {
        J.$indexSet$ax(this._collection$_map, H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1)));
      },
      containsKey$1: function(_, key) {
        return J.containsKey$1$x(this._collection$_map, key);
      },
      forEach$1: function(_, action) {
        J.forEach$1$ax(this._collection$_map, H.functionTypeCheck(action, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
      },
      get$isEmpty: function(_) {
        return J.get$isEmpty$asx(this._collection$_map);
      },
      get$isNotEmpty: function(_) {
        return J.get$isNotEmpty$asx(this._collection$_map);
      },
      get$length: function(_) {
        return J.get$length$asx(this._collection$_map);
      },
      get$keys: function(_) {
        return J.get$keys$x(this._collection$_map);
      },
      toString$0: function(_) {
        return J.toString$0$(this._collection$_map);
      },
      get$values: function(_) {
        return J.get$values$x(this._collection$_map);
      },
      $isMap: 1
    },
    UnmodifiableMapView: {
      "^": "_UnmodifiableMapView_MapView__UnmodifiableMapMixin;_collection$_map,$ti"
    },
    SetMixin: {
      "^": "Object;$ti",
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) !== 0;
      },
      addAll$1: function(_, elements) {
        var t1;
        H.assertSubtype(elements, "$isIterable", [H.getRuntimeTypeArgument(this, "SetMixin", 0)], "$asIterable");
        for (t1 = elements.get$iterator(elements); t1.moveNext$0();)
          this.add$1(0, t1.get$current(t1));
      },
      removeAll$1: function(elements) {
        var t1;
        for (t1 = J.get$iterator$ax(H.assertSubtype(elements, "$isIterable", [P.Object], "$asIterable")); t1.moveNext$0();)
          this.remove$1(0, t1.get$current(t1));
      },
      map$1$1: function(_, f, $T) {
        var t1 = H.getRuntimeTypeArgument(this, "SetMixin", 0);
        return new H.EfficientLengthMappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), [t1, $T]);
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this, "{", "}");
      },
      where$1: function(_, f) {
        var t1 = H.getRuntimeTypeArgument(this, "SetMixin", 0);
        return new H.WhereIterable(this, H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      },
      forEach$1: function(_, f) {
        var t1;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "SetMixin", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1._collection$_current);
      },
      join$1: function(_, separator) {
        var iterator, t1;
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          return "";
        if (separator === "") {
          t1 = "";
          do
            t1 += H.S(iterator._collection$_current);
          while (iterator.moveNext$0());
        } else {
          t1 = H.S(iterator._collection$_current);
          for (; iterator.moveNext$0();)
            t1 = t1 + separator + H.S(iterator._collection$_current);
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      skip$1: function(_, n) {
        return H.SkipIterable_SkipIterable(this, n, H.getRuntimeTypeArgument(this, "SetMixin", 0));
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1, element;
        t1 = H.getRuntimeTypeArgument(this, "SetMixin", 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        H.functionTypeCheck(orElse, {func: 1, ret: t1});
        for (t1 = this.get$iterator(this); t1.moveNext$0();) {
          element = t1._collection$_current;
          if (test.call$1(element))
            return element;
        }
        return orElse.call$0();
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$notNull("index"));
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
          element = t1._collection$_current;
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isSet: 1
    },
    SetBase: {
      "^": "SetMixin;"
    },
    _ListBase_Object_ListMixin: {
      "^": "Object+ListMixin;"
    },
    _UnmodifiableMapView_MapView__UnmodifiableMapMixin: {
      "^": "MapView+_UnmodifiableMapMixin;$ti"
    }
  }], ["dart.convert", "dart:convert",, P, {
    "^": "",
    _parseJson: function(source, reviver) {
      var parsed, e, exception, t1;
      if (typeof source !== "string")
        throw H.wrapException(H.argumentErrorValue(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = H.unwrapException(exception);
        t1 = P.FormatException$(String(e), null, null);
        throw H.wrapException(t1);
      }
      t1 = P._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    Encoding_getByName: function($name) {
      if ($name == null)
        return;
      $name = $name.toLowerCase();
      return $.$get$Encoding__nameToEncoding().$index(0, $name);
    },
    _defaultToEncodable: [function(object) {
      return object.toJson$0();
    }, "call$1", "convert___defaultToEncodable$closure", 4, 0, 8, 16],
    _JsonMap: {
      "^": "MapBase;_original,_processed,0_data",
      $index: function(_, key) {
        var t1, result;
        t1 = this._processed;
        if (t1 == null)
          return this._data.$index(0, key);
        else if (typeof key !== "string")
          return;
        else {
          result = t1[key];
          return typeof result == "undefined" ? this._process$1(key) : result;
        }
      },
      get$length: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._convert$_computeKeys$0().length;
        return t1;
      },
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) > 0;
      },
      get$keys: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          return t1.get$keys(t1);
        }
        return new P._JsonMapKeyIterable(this);
      },
      get$values: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          return t1.get$values(t1);
        }
        return H.MappedIterable_MappedIterable(this._convert$_computeKeys$0(), new P._JsonMap_values_closure(this), P.String, null);
      },
      $indexSet: function(_, key, value) {
        var processed, original;
        H.stringTypeCheck(key);
        if (this._processed == null)
          this._data.$indexSet(0, key, value);
        else if (this.containsKey$1(0, key)) {
          processed = this._processed;
          processed[key] = value;
          original = this._original;
          if (original == null ? processed != null : original !== processed)
            original[key] = null;
        } else
          this._upgrade$0().$indexSet(0, key, value);
      },
      containsKey$1: function(_, key) {
        if (this._processed == null)
          return this._data.containsKey$1(0, key);
        if (typeof key !== "string")
          return false;
        return Object.prototype.hasOwnProperty.call(this._original, key);
      },
      forEach$1: function(_, f) {
        var keys, i, key, value;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        if (this._processed == null)
          return this._data.forEach$1(0, f);
        keys = this._convert$_computeKeys$0();
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          value = this._processed[key];
          if (typeof value == "undefined") {
            value = P._convertJsonToDartLazy(this._original[key]);
            this._processed[key] = value;
          }
          f.call$2(key, value);
          if (keys !== this._data)
            throw H.wrapException(P.ConcurrentModificationError$(this));
        }
      },
      _convert$_computeKeys$0: function() {
        var keys = H.listTypeCheck(this._data);
        if (keys == null) {
          keys = H.setRuntimeTypeInfo(Object.keys(this._original), [P.String]);
          this._data = keys;
        }
        return keys;
      },
      _upgrade$0: function() {
        var result, keys, i, t1, key;
        if (this._processed == null)
          return this._data;
        result = P.LinkedHashMap_LinkedHashMap$_empty(P.String, null);
        keys = this._convert$_computeKeys$0();
        for (i = 0; t1 = keys.length, i < t1; ++i) {
          key = keys[i];
          result.$indexSet(0, key, this.$index(0, key));
        }
        if (t1 === 0)
          C.JSArray_methods.add$1(keys, null);
        else
          C.JSArray_methods.set$length(keys, 0);
        this._processed = null;
        this._original = null;
        this._data = result;
        return result;
      },
      _process$1: function(key) {
        var result;
        if (!Object.prototype.hasOwnProperty.call(this._original, key))
          return;
        result = P._convertJsonToDartLazy(this._original[key]);
        return this._processed[key] = result;
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $asMap: function() {
        return [P.String, null];
      }
    },
    _JsonMap_values_closure: {
      "^": "Closure:8;$this",
      call$1: [function(each) {
        return this.$this.$index(0, each);
      }, null, null, 4, 0, null, 20, "call"]
    },
    _JsonMapKeyIterable: {
      "^": "ListIterable;_convert$_parent",
      get$length: function(_) {
        var t1 = this._convert$_parent;
        return t1.get$length(t1);
      },
      elementAt$1: function(_, index) {
        var t1 = this._convert$_parent;
        return t1._processed == null ? t1.get$keys(t1).elementAt$1(0, index) : C.JSArray_methods.$index(t1._convert$_computeKeys$0(), index);
      },
      get$iterator: function(_) {
        var t1 = this._convert$_parent;
        if (t1._processed == null) {
          t1 = t1.get$keys(t1);
          t1 = t1.get$iterator(t1);
        } else {
          t1 = t1._convert$_computeKeys$0();
          t1 = new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
        }
        return t1;
      },
      contains$1: function(_, key) {
        return this._convert$_parent.containsKey$1(0, key);
      },
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $asListIterable: function() {
        return [P.String];
      },
      $asIterable: function() {
        return [P.String];
      }
    },
    AsciiCodec: {
      "^": "Encoding;_allowInvalid",
      get$name: function(_) {
        return "us-ascii";
      },
      encode$1: function(source) {
        return C.AsciiEncoder_127.convert$1(source);
      },
      decode$2$allowInvalid: function(_, bytes, allowInvalid) {
        var t1;
        H.assertSubtype(bytes, "$isList", [P.int], "$asList");
        t1 = C.AsciiDecoder_false_127.convert$1(bytes);
        return t1;
      },
      decode$1: function($receiver, bytes) {
        return this.decode$2$allowInvalid($receiver, bytes, null);
      },
      get$encoder: function() {
        return C.AsciiEncoder_127;
      }
    },
    _UnicodeSubsetEncoder: {
      "^": "Converter;",
      convert$3: function(string, start, end) {
        var stringLength, $length, result, t1, t2, t3, i, codeUnit;
        H.stringTypeCheck(string);
        stringLength = string.length;
        P.RangeError_checkValidRange(start, end, stringLength, null, null, null);
        $length = stringLength - start;
        result = new Uint8Array($length);
        for (t1 = result.length, t2 = ~this._subsetMask, t3 = J.getInterceptor$s(string), i = 0; i < $length; ++i) {
          codeUnit = t3._codeUnitAt$1(string, start + i);
          if ((codeUnit & t2) !== 0)
            throw H.wrapException(P.ArgumentError$("String contains invalid characters."));
          if (i >= t1)
            return H.ioore(result, i);
          result[i] = codeUnit;
        }
        return result;
      },
      convert$1: function(string) {
        return this.convert$3(string, 0, null);
      },
      $asStreamTransformer: function() {
        return [P.String, [P.List, P.int]];
      },
      $asConverter: function() {
        return [P.String, [P.List, P.int]];
      }
    },
    AsciiEncoder: {
      "^": "_UnicodeSubsetEncoder;_subsetMask"
    },
    _UnicodeSubsetDecoder: {
      "^": "Converter;",
      convert$3: function(bytes, start, end) {
        var t1, byteCount, t2, i, byte;
        H.assertSubtype(bytes, "$isList", [P.int], "$asList");
        t1 = J.getInterceptor$asx(bytes);
        byteCount = t1.get$length(bytes);
        P.RangeError_checkValidRange(start, end, byteCount, null, null, null);
        if (typeof byteCount !== "number")
          return H.iae(byteCount);
        t2 = ~this._subsetMask;
        i = start;
        for (; i < byteCount; ++i) {
          byte = t1.$index(bytes, i);
          if (typeof byte !== "number")
            return byte.$and();
          if ((byte & t2) >>> 0 !== 0) {
            if (!this._allowInvalid)
              throw H.wrapException(P.FormatException$("Invalid value in input: " + byte, null, null));
            return this._convertInvalid$3(bytes, start, byteCount);
          }
        }
        return P.String_String$fromCharCodes(bytes, start, byteCount);
      },
      convert$1: function(bytes) {
        return this.convert$3(bytes, 0, null);
      },
      _convertInvalid$3: function(bytes, start, end) {
        var t1, t2, i, t3, value;
        H.assertSubtype(bytes, "$isList", [P.int], "$asList");
        if (typeof end !== "number")
          return H.iae(end);
        t1 = ~this._subsetMask;
        t2 = J.getInterceptor$asx(bytes);
        i = start;
        t3 = "";
        for (; i < end; ++i) {
          value = t2.$index(bytes, i);
          if (typeof value !== "number")
            return value.$and();
          if ((value & t1) >>> 0 !== 0)
            value = 65533;
          t3 += H.Primitives_stringFromCharCode(value);
        }
        return t3.charCodeAt(0) == 0 ? t3 : t3;
      },
      $asStreamTransformer: function() {
        return [[P.List, P.int], P.String];
      },
      $asConverter: function() {
        return [[P.List, P.int], P.String];
      }
    },
    AsciiDecoder: {
      "^": "_UnicodeSubsetDecoder;_allowInvalid,_subsetMask"
    },
    Base64Codec: {
      "^": "Codec;_encoder",
      get$encoder: function() {
        return this._encoder;
      },
      normalize$3: function(_, source, start, end) {
        var inverseAlphabet, t1, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t2, endLength, $length;
        end = P.RangeError_checkValidRange(start, end, source.length, null, null, null);
        inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
        if (typeof end !== "number")
          return H.iae(end);
        t1 = J.getInterceptor$asx(source);
        i = start;
        sliceStart = i;
        buffer = null;
        firstPadding = -1;
        firstPaddingSourceIndex = -1;
        paddingCount = 0;
        for (; i < end; i = i0) {
          i0 = i + 1;
          char = t1._codeUnitAt$1(source, i);
          if (char === 37) {
            i1 = i0 + 2;
            if (i1 <= end) {
              digit1 = H.hexDigitValue(C.JSString_methods._codeUnitAt$1(source, i0));
              digit2 = H.hexDigitValue(C.JSString_methods._codeUnitAt$1(source, i0 + 1));
              char0 = digit1 * 16 + digit2 - (digit2 & 256);
              if (char0 === 37)
                char0 = -1;
              i0 = i1;
            } else
              char0 = -1;
          } else
            char0 = char;
          if (0 <= char0 && char0 <= 127) {
            if (char0 < 0 || char0 >= inverseAlphabet.length)
              return H.ioore(inverseAlphabet, char0);
            value = inverseAlphabet[char0];
            if (value >= 0) {
              char0 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", value);
              if (char0 === char)
                continue;
              char = char0;
            } else {
              if (value === -1) {
                if (firstPadding < 0) {
                  t2 = buffer == null ? null : buffer._contents.length;
                  if (t2 == null)
                    t2 = 0;
                  firstPadding = t2 + (i - sliceStart);
                  firstPaddingSourceIndex = i;
                }
                ++paddingCount;
                if (char === 61)
                  continue;
              }
              char = char0;
            }
            if (value !== -2) {
              if (buffer == null)
                buffer = new P.StringBuffer("");
              buffer._contents += C.JSString_methods.substring$2(source, sliceStart, i);
              buffer._contents += H.Primitives_stringFromCharCode(char);
              sliceStart = i0;
              continue;
            }
          }
          throw H.wrapException(P.FormatException$("Invalid base64 data", source, i));
        }
        if (buffer != null) {
          t1 = buffer._contents += t1.substring$2(source, sliceStart, end);
          t2 = t1.length;
          if (firstPadding >= 0)
            P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
          else {
            endLength = C.JSInt_methods.$mod(t2 - 1, 4) + 1;
            if (endLength === 1)
              throw H.wrapException(P.FormatException$("Invalid base64 encoding length ", source, end));
            for (; endLength < 4;) {
              t1 += "=";
              buffer._contents = t1;
              ++endLength;
            }
          }
          t1 = buffer._contents;
          return C.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
        }
        $length = end - start;
        if (firstPadding >= 0)
          P.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
        else {
          endLength = C.JSInt_methods.$mod($length, 4);
          if (endLength === 1)
            throw H.wrapException(P.FormatException$("Invalid base64 encoding length ", source, end));
          if (endLength > 1)
            source = t1.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
        }
        return source;
      },
      $asCodec: function() {
        return [[P.List, P.int], P.String];
      },
      static: {
        Base64Codec__checkPadding: function(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
          if (C.JSInt_methods.$mod($length, 4) !== 0)
            throw H.wrapException(P.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
          if (firstPadding + paddingCount !== $length)
            throw H.wrapException(P.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
          if (paddingCount > 2)
            throw H.wrapException(P.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
        }
      }
    },
    Base64Encoder: {
      "^": "Converter;_urlSafe",
      convert$1: function(input) {
        var t1;
        H.assertSubtype(input, "$isList", [P.int], "$asList");
        t1 = J.getInterceptor$asx(input);
        if (t1.get$isEmpty(input))
          return "";
        return P.String_String$fromCharCodes(new P._Base64Encoder(0, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/").encode$4(input, 0, t1.get$length(input), true), 0, null);
      },
      $asStreamTransformer: function() {
        return [[P.List, P.int], P.String];
      },
      $asConverter: function() {
        return [[P.List, P.int], P.String];
      }
    },
    _Base64Encoder: {
      "^": "Object;_convert$_state,_alphabet",
      createBuffer$1: function(_, bufferLength) {
        return new Uint8Array(bufferLength);
      },
      encode$4: function(bytes, start, end, isLast) {
        var byteCount, fullChunks, bufferLength, output;
        H.assertSubtype(bytes, "$isList", [P.int], "$asList");
        if (typeof end !== "number")
          return end.$sub();
        byteCount = (this._convert$_state & 3) + (end - start);
        fullChunks = C.JSInt_methods._tdivFast$1(byteCount, 3);
        bufferLength = fullChunks * 4;
        if (isLast && byteCount - fullChunks * 3 > 0)
          bufferLength += 4;
        output = this.createBuffer$1(0, bufferLength);
        this._convert$_state = P._Base64Encoder_encodeChunk(this._alphabet, bytes, start, end, isLast, output, 0, this._convert$_state);
        if (bufferLength > 0)
          return output;
        return;
      },
      static: {
        _Base64Encoder_encodeChunk: function(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
          var bits, expectedChars, t1, t2, i, byteOr, byte, outputIndex0, t3, outputIndex1;
          H.assertSubtype(bytes, "$isList", [P.int], "$asList");
          bits = state >>> 2;
          expectedChars = 3 - (state & 3);
          if (typeof end !== "number")
            return H.iae(end);
          t1 = J.getInterceptor$asx(bytes);
          t2 = output.length;
          i = start;
          byteOr = 0;
          for (; i < end; ++i) {
            byte = t1.$index(bytes, i);
            if (typeof byte !== "number")
              return H.iae(byte);
            byteOr = (byteOr | byte) >>> 0;
            bits = (bits << 8 | byte) & 16777215;
            --expectedChars;
            if (expectedChars === 0) {
              outputIndex0 = outputIndex + 1;
              t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 18 & 63);
              if (outputIndex >= t2)
                return H.ioore(output, outputIndex);
              output[outputIndex] = t3;
              outputIndex = outputIndex0 + 1;
              t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 12 & 63);
              if (outputIndex0 >= t2)
                return H.ioore(output, outputIndex0);
              output[outputIndex0] = t3;
              outputIndex0 = outputIndex + 1;
              t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 6 & 63);
              if (outputIndex >= t2)
                return H.ioore(output, outputIndex);
              output[outputIndex] = t3;
              outputIndex = outputIndex0 + 1;
              t3 = C.JSString_methods._codeUnitAt$1(alphabet, bits & 63);
              if (outputIndex0 >= t2)
                return H.ioore(output, outputIndex0);
              output[outputIndex0] = t3;
              bits = 0;
              expectedChars = 3;
            }
          }
          if (byteOr >= 0 && byteOr <= 255) {
            if (isLast && expectedChars < 3) {
              outputIndex0 = outputIndex + 1;
              outputIndex1 = outputIndex0 + 1;
              if (3 - expectedChars === 1) {
                t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 2 & 63);
                if (outputIndex >= t2)
                  return H.ioore(output, outputIndex);
                output[outputIndex] = t1;
                t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits << 4 & 63);
                if (outputIndex0 >= t2)
                  return H.ioore(output, outputIndex0);
                output[outputIndex0] = t1;
                outputIndex = outputIndex1 + 1;
                if (outputIndex1 >= t2)
                  return H.ioore(output, outputIndex1);
                output[outputIndex1] = 61;
                if (outputIndex >= t2)
                  return H.ioore(output, outputIndex);
                output[outputIndex] = 61;
              } else {
                t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 10 & 63);
                if (outputIndex >= t2)
                  return H.ioore(output, outputIndex);
                output[outputIndex] = t1;
                t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits >>> 4 & 63);
                if (outputIndex0 >= t2)
                  return H.ioore(output, outputIndex0);
                output[outputIndex0] = t1;
                outputIndex = outputIndex1 + 1;
                t1 = C.JSString_methods._codeUnitAt$1(alphabet, bits << 2 & 63);
                if (outputIndex1 >= t2)
                  return H.ioore(output, outputIndex1);
                output[outputIndex1] = t1;
                if (outputIndex >= t2)
                  return H.ioore(output, outputIndex);
                output[outputIndex] = 61;
              }
              return 0;
            }
            return (bits << 2 | 3 - expectedChars) >>> 0;
          }
          for (i = start; i < end;) {
            byte = t1.$index(bytes, i);
            if (typeof byte !== "number")
              return byte.$lt();
            if (byte < 0 || byte > 255)
              break;
            ++i;
          }
          throw H.wrapException(P.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + J.toRadixString$1$n(t1.$index(bytes, i), 16), null));
        }
      }
    },
    ByteConversionSink: {
      "^": "ChunkedConversionSink;",
      $asChunkedConversionSink: function() {
        return [[P.List, P.int]];
      }
    },
    ByteConversionSinkBase: {
      "^": "ByteConversionSink;"
    },
    _ByteCallbackSink: {
      "^": "ByteConversionSinkBase;_callback,_buffer,_bufferIndex",
      set$_buffer: function(_buffer) {
        this._buffer = H.assertSubtype(_buffer, "$isList", [P.int], "$asList");
      },
      add$1: [function(_, chunk) {
        var t1, t2, t3, t4, v, grown;
        H.assertSubtype(chunk, "$isIterable", [P.int], "$asIterable");
        t1 = this._buffer;
        t2 = this._bufferIndex;
        t3 = J.getInterceptor$asx(chunk);
        t4 = t3.get$length(chunk);
        if (typeof t4 !== "number")
          return t4.$gt();
        if (t4 > t1.length - t2) {
          t1 = this._buffer;
          t2 = t3.get$length(chunk);
          if (typeof t2 !== "number")
            return t2.$add();
          v = t2 + t1.length - 1;
          v |= C.JSInt_methods._shrOtherPositive$1(v, 1);
          v |= v >>> 2;
          v |= v >>> 4;
          v |= v >>> 8;
          grown = new Uint8Array((((v | v >>> 16) >>> 0) + 1) * 2);
          t1 = this._buffer;
          C.NativeUint8List_methods.setRange$3(grown, 0, t1.length, t1);
          this.set$_buffer(grown);
        }
        t1 = this._buffer;
        t2 = this._bufferIndex;
        t4 = t3.get$length(chunk);
        if (typeof t4 !== "number")
          return H.iae(t4);
        C.NativeUint8List_methods.setRange$3(t1, t2, t2 + t4, chunk);
        t4 = this._bufferIndex;
        t3 = t3.get$length(chunk);
        if (typeof t3 !== "number")
          return H.iae(t3);
        this._bufferIndex = t4 + t3;
      }, "call$1", "get$add", 5, 0, 14, 41],
      close$0: [function(_) {
        this._callback.call$1(C.NativeUint8List_methods.sublist$2(this._buffer, 0, this._bufferIndex));
      }, "call$0", "get$close", 1, 0, 2]
    },
    ChunkedConversionSink: {
      "^": "Object;$ti"
    },
    Codec: {
      "^": "Object;$ti",
      encode$1: function(input) {
        H.assertSubtypeOfRuntimeType(input, H.getRuntimeTypeArgument(this, "Codec", 0));
        return this.get$encoder().convert$1(input);
      }
    },
    Converter: {
      "^": "StreamTransformerBase;$ti"
    },
    Encoding: {
      "^": "Codec;",
      $asCodec: function() {
        return [P.String, [P.List, P.int]];
      }
    },
    JsonUnsupportedObjectError: {
      "^": "Error;unsupportedObject,cause,partialResult",
      toString$0: function(_) {
        var safeString = P.Error_safeToString(this.unsupportedObject);
        return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + H.S(safeString);
      },
      static: {
        JsonUnsupportedObjectError$: function(unsupportedObject, cause, partialResult) {
          return new P.JsonUnsupportedObjectError(unsupportedObject, cause, partialResult);
        }
      }
    },
    JsonCyclicError: {
      "^": "JsonUnsupportedObjectError;unsupportedObject,cause,partialResult",
      toString$0: function(_) {
        return "Cyclic error in JSON stringify";
      }
    },
    JsonCodec: {
      "^": "Codec;_reviver,_toEncodable",
      decode$2$reviver: function(_, source, reviver) {
        var t1 = P._parseJson(source, this.get$decoder()._reviver);
        return t1;
      },
      decode$1: function($receiver, source) {
        return this.decode$2$reviver($receiver, source, null);
      },
      encode$2$toEncodable: function(value, toEncodable) {
        var t1 = this.get$encoder();
        t1 = P._JsonStringStringifier_stringify(value, t1._toEncodable, t1.indent);
        return t1;
      },
      encode$1: function(value) {
        return this.encode$2$toEncodable(value, null);
      },
      get$encoder: function() {
        return C.JsonEncoder_null_null;
      },
      get$decoder: function() {
        return C.JsonDecoder_null;
      },
      $asCodec: function() {
        return [P.Object, P.String];
      }
    },
    JsonEncoder: {
      "^": "Converter;indent,_toEncodable",
      convert$1: function(object) {
        var output, t1;
        output = new P.StringBuffer("");
        P._JsonStringStringifier_printOn(object, output, this._toEncodable, this.indent);
        t1 = output._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      $asStreamTransformer: function() {
        return [P.Object, P.String];
      },
      $asConverter: function() {
        return [P.Object, P.String];
      }
    },
    JsonDecoder: {
      "^": "Converter;_reviver",
      convert$1: function(input) {
        return P._parseJson(H.stringTypeCheck(input), this._reviver);
      },
      $asStreamTransformer: function() {
        return [P.String, P.Object];
      },
      $asConverter: function() {
        return [P.String, P.Object];
      }
    },
    _JsonStringifier: {
      "^": "Object;",
      writeStringContent$1: function(s) {
        var $length, t1, offset, i, charCode, t2;
        $length = s.length;
        for (t1 = J.getInterceptor$s(s), offset = 0, i = 0; i < $length; ++i) {
          charCode = t1._codeUnitAt$1(s, i);
          if (charCode > 92)
            continue;
          if (charCode < 32) {
            if (i > offset)
              this.writeStringSlice$3(s, offset, i);
            offset = i + 1;
            this.writeCharCode$1(92);
            switch (charCode) {
              case 8:
                this.writeCharCode$1(98);
                break;
              case 9:
                this.writeCharCode$1(116);
                break;
              case 10:
                this.writeCharCode$1(110);
                break;
              case 12:
                this.writeCharCode$1(102);
                break;
              case 13:
                this.writeCharCode$1(114);
                break;
              default:
                this.writeCharCode$1(117);
                this.writeCharCode$1(48);
                this.writeCharCode$1(48);
                t2 = charCode >>> 4 & 15;
                this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
                t2 = charCode & 15;
                this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
                break;
            }
          } else if (charCode === 34 || charCode === 92) {
            if (i > offset)
              this.writeStringSlice$3(s, offset, i);
            offset = i + 1;
            this.writeCharCode$1(92);
            this.writeCharCode$1(charCode);
          }
        }
        if (offset === 0)
          this.writeString$1(s);
        else if (offset < $length)
          this.writeStringSlice$3(s, offset, $length);
      },
      _checkCycle$1: function(object) {
        var t1, t2, i, t3;
        for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
          t3 = t1[i];
          if (object == null ? t3 == null : object === t3)
            throw H.wrapException(new P.JsonCyclicError(object, null, null));
        }
        C.JSArray_methods.add$1(t1, object);
      },
      writeObject$1: function(object) {
        var customJson, e, t1, exception;
        if (this.writeJsonValue$1(object))
          return;
        this._checkCycle$1(object);
        try {
          customJson = this._toEncodable.call$1(object);
          if (!this.writeJsonValue$1(customJson)) {
            t1 = P.JsonUnsupportedObjectError$(object, null, this.get$_partialResult());
            throw H.wrapException(t1);
          }
          t1 = this._seen;
          if (0 >= t1.length)
            return H.ioore(t1, -1);
          t1.pop();
        } catch (exception) {
          e = H.unwrapException(exception);
          t1 = P.JsonUnsupportedObjectError$(object, e, this.get$_partialResult());
          throw H.wrapException(t1);
        }
      },
      writeJsonValue$1: function(object) {
        var t1, success;
        if (typeof object === "number") {
          if (!isFinite(object))
            return false;
          this.writeNumber$1(object);
          return true;
        } else if (object === true) {
          this.writeString$1("true");
          return true;
        } else if (object === false) {
          this.writeString$1("false");
          return true;
        } else if (object == null) {
          this.writeString$1("null");
          return true;
        } else if (typeof object === "string") {
          this.writeString$1('"');
          this.writeStringContent$1(object);
          this.writeString$1('"');
          return true;
        } else {
          t1 = J.getInterceptor$(object);
          if (!!t1.$isList) {
            this._checkCycle$1(object);
            this.writeList$1(object);
            t1 = this._seen;
            if (0 >= t1.length)
              return H.ioore(t1, -1);
            t1.pop();
            return true;
          } else if (!!t1.$isMap) {
            this._checkCycle$1(object);
            success = this.writeMap$1(object);
            t1 = this._seen;
            if (0 >= t1.length)
              return H.ioore(t1, -1);
            t1.pop();
            return success;
          } else
            return false;
        }
      },
      writeList$1: function(list) {
        var t1, t2, i;
        this.writeString$1("[");
        t1 = J.getInterceptor$asx(list);
        t2 = t1.get$length(list);
        if (typeof t2 !== "number")
          return t2.$gt();
        if (t2 > 0) {
          this.writeObject$1(t1.$index(list, 0));
          i = 1;
          while (true) {
            t2 = t1.get$length(list);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            this.writeString$1(",");
            this.writeObject$1(t1.$index(list, i));
            ++i;
          }
        }
        this.writeString$1("]");
      },
      writeMap$1: function(map) {
        var _box_0, t1, t2, keyValueList, separator, i;
        _box_0 = {};
        t1 = J.getInterceptor$asx(map);
        if (t1.get$isEmpty(map)) {
          this.writeString$1("{}");
          return true;
        }
        t2 = t1.get$length(map);
        if (typeof t2 !== "number")
          return t2.$mul();
        t2 *= 2;
        keyValueList = new Array(t2);
        keyValueList.fixed$length = Array;
        _box_0.i = 0;
        _box_0.allStringKeys = true;
        t1.forEach$1(map, new P._JsonStringifier_writeMap_closure(_box_0, keyValueList));
        if (!_box_0.allStringKeys)
          return false;
        this.writeString$1("{");
        for (separator = '"', i = 0; i < t2; i += 2, separator = ',"') {
          this.writeString$1(separator);
          this.writeStringContent$1(H.stringTypeCheck(keyValueList[i]));
          this.writeString$1('":');
          t1 = i + 1;
          if (t1 >= t2)
            return H.ioore(keyValueList, t1);
          this.writeObject$1(keyValueList[t1]);
        }
        this.writeString$1("}");
        return true;
      }
    },
    _JsonStringifier_writeMap_closure: {
      "^": "Closure:5;_box_0,keyValueList",
      call$2: function(key, value) {
        var t1, t2;
        if (typeof key !== "string")
          this._box_0.allStringKeys = false;
        t1 = this.keyValueList;
        t2 = this._box_0;
        C.JSArray_methods.$indexSet(t1, t2.i++, key);
        C.JSArray_methods.$indexSet(t1, t2.i++, value);
      }
    },
    _JsonStringStringifier: {
      "^": "_JsonStringifier;_sink,_seen,_toEncodable",
      get$_partialResult: function() {
        var t1 = this._sink;
        return !!t1.$isStringBuffer ? t1.toString$0(0) : null;
      },
      writeNumber$1: function(number) {
        this._sink.write$1(0, C.JSNumber_methods.toString$0(number));
      },
      writeString$1: function(string) {
        this._sink.write$1(0, string);
      },
      writeStringSlice$3: function(string, start, end) {
        this._sink.write$1(0, J.substring$2$s(string, start, end));
      },
      writeCharCode$1: function(charCode) {
        this._sink.writeCharCode$1(charCode);
      },
      static: {
        _JsonStringStringifier_stringify: function(object, toEncodable, indent) {
          var output, t1;
          output = new P.StringBuffer("");
          P._JsonStringStringifier_printOn(object, output, toEncodable, indent);
          t1 = output._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        },
        _JsonStringStringifier_printOn: function(object, output, toEncodable, indent) {
          var stringifier = new P._JsonStringStringifier(output, [], P.convert___defaultToEncodable$closure());
          stringifier.writeObject$1(object);
        }
      }
    },
    Latin1Codec: {
      "^": "Encoding;_allowInvalid",
      get$name: function(_) {
        return "iso-8859-1";
      },
      encode$1: function(source) {
        return C.Latin1Encoder_255.convert$1(source);
      },
      decode$2$allowInvalid: function(_, bytes, allowInvalid) {
        var t1;
        H.assertSubtype(bytes, "$isList", [P.int], "$asList");
        t1 = C.Latin1Decoder_false_255.convert$1(bytes);
        return t1;
      },
      decode$1: function($receiver, bytes) {
        return this.decode$2$allowInvalid($receiver, bytes, null);
      },
      get$encoder: function() {
        return C.Latin1Encoder_255;
      }
    },
    Latin1Encoder: {
      "^": "_UnicodeSubsetEncoder;_subsetMask"
    },
    Latin1Decoder: {
      "^": "_UnicodeSubsetDecoder;_allowInvalid,_subsetMask"
    },
    Utf8Codec: {
      "^": "Encoding;_allowMalformed",
      get$name: function(_) {
        return "utf-8";
      },
      decode$2$allowMalformed: function(_, codeUnits, allowMalformed) {
        H.assertSubtype(codeUnits, "$isList", [P.int], "$asList");
        return new P.Utf8Decoder(false).convert$1(codeUnits);
      },
      decode$1: function($receiver, codeUnits) {
        return this.decode$2$allowMalformed($receiver, codeUnits, null);
      },
      get$encoder: function() {
        return C.C_Utf8Encoder;
      }
    },
    Utf8Encoder: {
      "^": "Converter;",
      convert$3: function(string, start, end) {
        var stringLength, $length, t1, encoder;
        H.stringTypeCheck(string);
        stringLength = string.length;
        P.RangeError_checkValidRange(start, end, stringLength, null, null, null);
        $length = stringLength - start;
        if ($length === 0)
          return new Uint8Array(0);
        t1 = new Uint8Array($length * 3);
        encoder = new P._Utf8Encoder(0, 0, t1);
        if (encoder._fillBuffer$3(string, start, stringLength) !== stringLength)
          encoder._writeSurrogate$2(J.codeUnitAt$1$s(string, stringLength - 1), 0);
        return C.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
      },
      convert$1: function(string) {
        return this.convert$3(string, 0, null);
      },
      $asStreamTransformer: function() {
        return [P.String, [P.List, P.int]];
      },
      $asConverter: function() {
        return [P.String, [P.List, P.int]];
      }
    },
    _Utf8Encoder: {
      "^": "Object;_carry,_bufferIndex,_buffer",
      _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
        var t1, t2, t3, t4, rune;
        t1 = this._buffer;
        t2 = this._bufferIndex;
        t3 = t2 + 1;
        t4 = t1.length;
        if ((nextCodeUnit & 64512) === 56320) {
          rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 240 | rune >>> 18;
          t2 = t3 + 1;
          this._bufferIndex = t2;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | rune >>> 12 & 63;
          t3 = t2 + 1;
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 128 | rune >>> 6 & 63;
          this._bufferIndex = t3 + 1;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | rune & 63;
          return true;
        } else {
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 224 | leadingSurrogate >>> 12;
          t2 = t3 + 1;
          this._bufferIndex = t2;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | leadingSurrogate >>> 6 & 63;
          this._bufferIndex = t2 + 1;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 128 | leadingSurrogate & 63;
          return false;
        }
      },
      _fillBuffer$3: function(str, start, end) {
        var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5;
        if (start !== end && (J.codeUnitAt$1$s(str, end - 1) & 64512) === 55296)
          --end;
        for (t1 = this._buffer, t2 = t1.length, t3 = J.getInterceptor$s(str), stringIndex = start; stringIndex < end; ++stringIndex) {
          codeUnit = t3._codeUnitAt$1(str, stringIndex);
          if (codeUnit <= 127) {
            t4 = this._bufferIndex;
            if (t4 >= t2)
              break;
            this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit;
          } else if ((codeUnit & 64512) === 55296) {
            if (this._bufferIndex + 3 >= t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (this._writeSurrogate$2(codeUnit, C.JSString_methods._codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (codeUnit <= 2047) {
            t4 = this._bufferIndex;
            t5 = t4 + 1;
            if (t5 >= t2)
              break;
            this._bufferIndex = t5;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 192 | codeUnit >>> 6;
            this._bufferIndex = t5 + 1;
            t1[t5] = 128 | codeUnit & 63;
          } else {
            t4 = this._bufferIndex;
            if (t4 + 2 >= t2)
              break;
            t5 = t4 + 1;
            this._bufferIndex = t5;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 224 | codeUnit >>> 12;
            t4 = t5 + 1;
            this._bufferIndex = t4;
            if (t5 >= t2)
              return H.ioore(t1, t5);
            t1[t5] = 128 | codeUnit >>> 6 & 63;
            this._bufferIndex = t4 + 1;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 128 | codeUnit & 63;
          }
        }
        return stringIndex;
      }
    },
    Utf8Decoder: {
      "^": "Converter;_allowMalformed",
      convert$3: function(codeUnits, start, end) {
        var result, $length, buffer, decoder, t1;
        H.assertSubtype(codeUnits, "$isList", [P.int], "$asList");
        result = P.Utf8Decoder__convertIntercepted(false, codeUnits, start, end);
        if (result != null)
          return result;
        $length = J.get$length$asx(codeUnits);
        P.RangeError_checkValidRange(start, end, $length, null, null, null);
        buffer = new P.StringBuffer("");
        decoder = new P._Utf8Decoder(false, buffer, true, 0, 0, 0);
        decoder.convert$3(codeUnits, start, $length);
        decoder.flush$2(0, codeUnits, $length);
        t1 = buffer._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      convert$1: function(codeUnits) {
        return this.convert$3(codeUnits, 0, null);
      },
      $asStreamTransformer: function() {
        return [[P.List, P.int], P.String];
      },
      $asConverter: function() {
        return [[P.List, P.int], P.String];
      },
      static: {
        Utf8Decoder__convertIntercepted: function(allowMalformed, codeUnits, start, end) {
          H.assertSubtype(codeUnits, "$isList", [P.int], "$asList");
          if (codeUnits instanceof Uint8Array)
            return P.Utf8Decoder__convertInterceptedUint8List(false, codeUnits, start, end);
          return;
        },
        Utf8Decoder__convertInterceptedUint8List: function(allowMalformed, codeUnits, start, end) {
          var decoder, t1, $length;
          decoder = $.$get$Utf8Decoder__decoder();
          if (decoder == null)
            return;
          t1 = 0 === start;
          if (t1 && true)
            return P.Utf8Decoder__useTextDecoderChecked(decoder, codeUnits);
          $length = codeUnits.length;
          end = P.RangeError_checkValidRange(start, end, $length, null, null, null);
          if (t1 && end === $length)
            return P.Utf8Decoder__useTextDecoderChecked(decoder, codeUnits);
          return P.Utf8Decoder__useTextDecoderChecked(decoder, codeUnits.subarray(start, end));
        },
        Utf8Decoder__useTextDecoderChecked: function(decoder, codeUnits) {
          if (P.Utf8Decoder__unsafe(codeUnits))
            return;
          return P.Utf8Decoder__useTextDecoderUnchecked(decoder, codeUnits);
        },
        Utf8Decoder__useTextDecoderUnchecked: function(decoder, codeUnits) {
          var t1, exception;
          try {
            t1 = decoder.decode(codeUnits);
            return t1;
          } catch (exception) {
            H.unwrapException(exception);
          }
          return;
        },
        Utf8Decoder__unsafe: function(codeUnits) {
          var limit, i;
          limit = codeUnits.length - 2;
          for (i = 0; i < limit; ++i)
            if (codeUnits[i] === 237)
              if ((codeUnits[i + 1] & 224) === 160)
                return true;
          return false;
        },
        Utf8Decoder__makeDecoder: function() {
          var t1, exception;
          try {
            t1 = new TextDecoder("utf-8", {fatal: true});
            return t1;
          } catch (exception) {
            H.unwrapException(exception);
          }
          return;
        }
      }
    },
    _Utf8Decoder: {
      "^": "Object;_allowMalformed,_stringSink,_isFirstCharacter,_convert$_value,_expectedUnits,_extraUnits",
      close$0: function(_) {
        this.flush$0(0);
      },
      flush$2: function(_, source, offset) {
        var t1;
        H.assertSubtype(source, "$isList", [P.int], "$asList");
        if (this._expectedUnits > 0) {
          t1 = P.FormatException$("Unfinished UTF-8 octet sequence", source, offset);
          throw H.wrapException(t1);
        }
      },
      flush$0: function($receiver) {
        return this.flush$2($receiver, null, null);
      },
      convert$3: function(codeUnits, startIndex, endIndex) {
        var value, expectedUnits, extraUnits, scanOneByteCharacters, addSingleBytes, t1, t2, i, unit, t3, oneBytes, i0, i1, t4;
        H.assertSubtype(codeUnits, "$isList", [P.int], "$asList");
        value = this._convert$_value;
        expectedUnits = this._expectedUnits;
        extraUnits = this._extraUnits;
        this._convert$_value = 0;
        this._expectedUnits = 0;
        this._extraUnits = 0;
        scanOneByteCharacters = new P._Utf8Decoder_convert_scanOneByteCharacters(endIndex);
        addSingleBytes = new P._Utf8Decoder_convert_addSingleBytes(this, startIndex, endIndex, codeUnits);
        $label0$0:
          for (t1 = J.getInterceptor$asx(codeUnits), t2 = this._stringSink, i = startIndex; true; i = i1) {
            $label1$1:
              if (expectedUnits > 0) {
                do {
                  if (i === endIndex)
                    break $label0$0;
                  unit = t1.$index(codeUnits, i);
                  if (typeof unit !== "number")
                    return unit.$and();
                  if ((unit & 192) !== 128) {
                    t3 = P.FormatException$("Bad UTF-8 encoding 0x" + C.JSInt_methods.toRadixString$1(unit, 16), codeUnits, i);
                    throw H.wrapException(t3);
                  } else {
                    value = (value << 6 | unit & 63) >>> 0;
                    --expectedUnits;
                    ++i;
                  }
                } while (expectedUnits > 0);
                t3 = extraUnits - 1;
                if (t3 < 0 || t3 >= 4)
                  return H.ioore(C.List_127_2047_65535_1114111, t3);
                if (value <= C.List_127_2047_65535_1114111[t3]) {
                  t3 = P.FormatException$("Overlong encoding of 0x" + C.JSInt_methods.toRadixString$1(value, 16), codeUnits, i - extraUnits - 1);
                  throw H.wrapException(t3);
                }
                if (value > 1114111) {
                  t3 = P.FormatException$("Character outside valid Unicode range: 0x" + C.JSInt_methods.toRadixString$1(value, 16), codeUnits, i - extraUnits - 1);
                  throw H.wrapException(t3);
                }
                if (!this._isFirstCharacter || value !== 65279)
                  t2._contents += H.Primitives_stringFromCharCode(value);
                this._isFirstCharacter = false;
              }
            if (typeof endIndex !== "number")
              return H.iae(endIndex);
            t3 = i < endIndex;
            for (; t3;) {
              oneBytes = scanOneByteCharacters.call$2(codeUnits, i);
              if (typeof oneBytes !== "number")
                return oneBytes.$gt();
              if (oneBytes > 0) {
                this._isFirstCharacter = false;
                i0 = i + oneBytes;
                addSingleBytes.call$2(i, i0);
                if (i0 === endIndex)
                  break;
              } else
                i0 = i;
              i1 = i0 + 1;
              unit = t1.$index(codeUnits, i0);
              if (typeof unit !== "number")
                return unit.$lt();
              if (unit < 0) {
                t4 = P.FormatException$("Negative UTF-8 code unit: -0x" + C.JSInt_methods.toRadixString$1(-unit, 16), codeUnits, i1 - 1);
                throw H.wrapException(t4);
              } else {
                if ((unit & 224) === 192) {
                  value = unit & 31;
                  expectedUnits = 1;
                  extraUnits = 1;
                  continue $label0$0;
                }
                if ((unit & 240) === 224) {
                  value = unit & 15;
                  expectedUnits = 2;
                  extraUnits = 2;
                  continue $label0$0;
                }
                if ((unit & 248) === 240 && unit < 245) {
                  value = unit & 7;
                  expectedUnits = 3;
                  extraUnits = 3;
                  continue $label0$0;
                }
                t4 = P.FormatException$("Bad UTF-8 encoding 0x" + C.JSInt_methods.toRadixString$1(unit, 16), codeUnits, i1 - 1);
                throw H.wrapException(t4);
              }
            }
            break $label0$0;
          }
        if (expectedUnits > 0) {
          this._convert$_value = value;
          this._expectedUnits = expectedUnits;
          this._extraUnits = extraUnits;
        }
      }
    },
    _Utf8Decoder_convert_scanOneByteCharacters: {
      "^": "Closure:201;endIndex",
      call$2: function(units, from) {
        var to, t1, i, unit;
        H.assertSubtype(units, "$isList", [P.int], "$asList");
        to = this.endIndex;
        if (typeof to !== "number")
          return H.iae(to);
        t1 = J.getInterceptor$asx(units);
        i = from;
        for (; i < to; ++i) {
          unit = t1.$index(units, i);
          if (typeof unit !== "number")
            return unit.$and();
          if ((unit & 127) !== unit)
            return i - from;
        }
        return to - from;
      }
    },
    _Utf8Decoder_convert_addSingleBytes: {
      "^": "Closure:231;$this,startIndex,endIndex,codeUnits",
      call$2: function(from, to) {
        this.$this._stringSink._contents += P.String_String$fromCharCodes(this.codeUnits, from, to);
      }
    }
  }], ["dart.core", "dart:core",, P, {
    "^": "",
    identityHashCode: [function(object) {
      return H.objectHashCode(object);
    }, "call$1", "core__identityHashCode$closure", 4, 0, 220, 16],
    Function_apply: function($function, positionalArguments, namedArguments) {
      var t1 = H.Primitives_applyFunctionWithPositionalArguments($function, positionalArguments);
      return t1;
    },
    int_parse: function(source, onError, radix) {
      var value;
      H.stringTypeCheck(source);
      H.functionTypeCheck(onError, {func: 1, ret: P.int, args: [P.String]});
      value = H.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      if (onError != null)
        return onError.call$1(source);
      throw H.wrapException(P.FormatException$(source, null, null));
    },
    double_parse: function(source, onError) {
      var value = H.Primitives_parseDouble(source);
      if (value != null)
        return value;
      throw H.wrapException(P.FormatException$("Invalid double", source, null));
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    List_List$filled: function($length, fill, growable, $E) {
      var result, i;
      H.assertSubtypeOfRuntimeType(fill, $E);
      result = J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && true)
        for (i = 0; i < result.length; ++i)
          C.JSArray_methods.$indexSet(result, i, fill);
      return H.assertSubtype(result, "$isList", [$E], "$asList");
    },
    List_List$from: function(elements, growable, $E) {
      var t1, list, t2;
      t1 = [$E];
      list = H.setRuntimeTypeInfo([], t1);
      for (t2 = J.get$iterator$ax(elements); t2.moveNext$0();)
        C.JSArray_methods.add$1(list, H.assertSubtypeOfRuntimeType(t2.get$current(t2), $E));
      if (growable)
        return list;
      return H.assertSubtype(J.JSArray_markFixedList(list), "$isList", t1, "$asList");
    },
    List_List$unmodifiable: function(elements, $E) {
      var t1 = [$E];
      return H.assertSubtype(J.JSArray_markUnmodifiableList(H.assertSubtype(P.List_List$from(elements, false, $E), "$isList", t1, "$asList")), "$isList", t1, "$asList");
    },
    String_String$fromCharCodes: function(charCodes, start, end) {
      var t1, len;
      t1 = P.int;
      H.assertSubtype(charCodes, "$isIterable", [t1], "$asIterable");
      if (typeof charCodes === "object" && charCodes !== null && charCodes.constructor === Array) {
        H.assertSubtype(charCodes, "$isJSArray", [t1], "$asJSArray");
        len = charCodes.length;
        end = P.RangeError_checkValidRange(start, end, len, null, null, null);
        if (start <= 0) {
          if (typeof end !== "number")
            return end.$lt();
          t1 = end < len;
        } else
          t1 = true;
        return H.Primitives_stringFromCharCodes(t1 ? C.JSArray_methods.sublist$2(charCodes, start, end) : charCodes);
      }
      if (!!J.getInterceptor$(charCodes).$isNativeUint8List)
        return H.Primitives_stringFromNativeUint8List(charCodes, start, P.RangeError_checkValidRange(start, end, charCodes.length, null, null, null));
      return P.String__stringFromIterable(charCodes, start, end);
    },
    String_String$fromCharCode: function(charCode) {
      return H.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromIterable: function(charCodes, start, end) {
      var t1, it, i, list;
      H.assertSubtype(charCodes, "$isIterable", [P.int], "$asIterable");
      if (start < 0)
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$asx(charCodes), null, null));
      t1 = end == null;
      if (!t1 && end < start)
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$asx(charCodes), null, null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw H.wrapException(P.RangeError$range(start, 0, i, null, null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current(it));
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw H.wrapException(P.RangeError$range(end, start, i, null, null));
          list.push(it.get$current(it));
        }
      return H.Primitives_stringFromCharCodes(list);
    },
    RegExp_RegExp: function(source, caseSensitive, multiLine) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, multiLine, true, false));
    },
    identical: [function(a, b) {
      return a == null ? b == null : a === b;
    }, "call$2", "core__identical$closure", 8, 0, 221, 27, 25],
    Uri_base: function() {
      var uri = H.Primitives_currentUri();
      if (uri != null)
        return P.Uri_parse(uri, 0, null);
      throw H.wrapException(P.UnsupportedError$("'Uri.base' is not supported"));
    },
    StackTrace_current: function() {
      var stackTrace, exception;
      if ($.$get$_hasErrorStackProperty())
        return H.getTraceFromException(new Error());
      try {
        throw H.wrapException("");
      } catch (exception) {
        H.unwrapException(exception);
        stackTrace = H.getTraceFromException(exception);
        return stackTrace;
      }
    },
    Error_safeToString: function(object) {
      if (typeof object === "number" || typeof object === "boolean" || null == object)
        return J.toString$0$(object);
      if (typeof object === "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    List_List$generate: function($length, generator, growable, $E) {
      var result, i;
      H.functionTypeCheck(generator, {func: 1, ret: $E, args: [P.int]});
      result = H.setRuntimeTypeInfo([], [$E]);
      C.JSArray_methods.set$length(result, $length);
      for (i = 0; i < $length; ++i)
        C.JSArray_methods.$indexSet(result, i, generator.call$1(i));
      return result;
    },
    print: function(object) {
      var t1 = $.printToZone;
      if (t1 == null)
        H.printString(object);
      else
        t1.call$1(object);
    },
    Uri_parse: function(uri, start, end) {
      var t1, delta, t2, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t3, schemeAuth;
      end = uri.length;
      t1 = start + 5;
      if (end >= t1) {
        delta = ((J._codeUnitAt$1$s(uri, start + 4) ^ 58) * 3 | C.JSString_methods._codeUnitAt$1(uri, start) ^ 100 | C.JSString_methods._codeUnitAt$1(uri, start + 1) ^ 97 | C.JSString_methods._codeUnitAt$1(uri, start + 2) ^ 116 | C.JSString_methods._codeUnitAt$1(uri, start + 3) ^ 97) >>> 0;
        if (delta === 0)
          return P.UriData__parse(start > 0 || end < end ? C.JSString_methods.substring$2(uri, start, end) : uri, 5, null).get$uri();
        else if (delta === 32)
          return P.UriData__parse(C.JSString_methods.substring$2(uri, t1, end), 0, null).get$uri();
      }
      t2 = new Array(8);
      t2.fixed$length = Array;
      indices = H.setRuntimeTypeInfo(t2, [P.int]);
      C.JSArray_methods.$indexSet(indices, 0, 0);
      t2 = start - 1;
      C.JSArray_methods.$indexSet(indices, 1, t2);
      C.JSArray_methods.$indexSet(indices, 2, t2);
      C.JSArray_methods.$indexSet(indices, 7, t2);
      C.JSArray_methods.$indexSet(indices, 3, start);
      C.JSArray_methods.$indexSet(indices, 4, start);
      C.JSArray_methods.$indexSet(indices, 5, end);
      C.JSArray_methods.$indexSet(indices, 6, end);
      if (P._scan(uri, start, end, 0, indices) >= 14)
        C.JSArray_methods.$indexSet(indices, 7, end);
      schemeEnd = indices[1];
      if (typeof schemeEnd !== "number")
        return schemeEnd.$ge();
      if (schemeEnd >= start)
        if (P._scan(uri, start, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      t2 = indices[2];
      if (typeof t2 !== "number")
        return t2.$add();
      hostStart = t2 + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (typeof fragmentStart !== "number")
        return fragmentStart.$lt();
      if (typeof queryStart !== "number")
        return H.iae(queryStart);
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (typeof pathStart !== "number")
        return pathStart.$lt();
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (typeof portStart !== "number")
        return portStart.$lt();
      if (portStart < hostStart)
        portStart = pathStart;
      t2 = indices[7];
      if (typeof t2 !== "number")
        return t2.$lt();
      isSimple = t2 < start;
      if (isSimple)
        if (hostStart > schemeEnd + 3) {
          scheme = null;
          isSimple = false;
        } else {
          t2 = portStart > start;
          if (t2 && portStart + 1 === pathStart) {
            scheme = null;
            isSimple = false;
          } else {
            if (!(queryStart < end && queryStart === pathStart + 2 && J.startsWith$2$s(uri, "..", pathStart)))
              t3 = queryStart > pathStart + 2 && J.startsWith$2$s(uri, "/..", queryStart - 3);
            else
              t3 = true;
            if (t3) {
              scheme = null;
              isSimple = false;
            } else {
              if (schemeEnd === start + 4)
                if (J.startsWith$2$s(uri, "file", start)) {
                  if (hostStart <= start) {
                    if (!C.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                      schemeAuth = "file:///";
                      delta = 3;
                    } else {
                      schemeAuth = "file://";
                      delta = 2;
                    }
                    uri = schemeAuth + C.JSString_methods.substring$2(uri, pathStart, end);
                    schemeEnd -= start;
                    t1 = delta - start;
                    queryStart += t1;
                    fragmentStart += t1;
                    end = uri.length;
                    start = 0;
                    hostStart = 7;
                    portStart = 7;
                    pathStart = 7;
                  } else if (pathStart === queryStart)
                    if (start === 0 && true) {
                      uri = C.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++queryStart;
                      ++fragmentStart;
                      ++end;
                    } else {
                      uri = C.JSString_methods.substring$2(uri, start, pathStart) + "/" + C.JSString_methods.substring$2(uri, queryStart, end);
                      schemeEnd -= start;
                      hostStart -= start;
                      portStart -= start;
                      pathStart -= start;
                      t1 = 1 - start;
                      queryStart += t1;
                      fragmentStart += t1;
                      end = uri.length;
                      start = 0;
                    }
                  scheme = "file";
                } else if (C.JSString_methods.startsWith$2(uri, "http", start)) {
                  if (t2 && portStart + 3 === pathStart && C.JSString_methods.startsWith$2(uri, "80", portStart + 1))
                    if (start === 0 && true) {
                      uri = C.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      pathStart -= 3;
                      queryStart -= 3;
                      fragmentStart -= 3;
                      end -= 3;
                    } else {
                      uri = C.JSString_methods.substring$2(uri, start, portStart) + C.JSString_methods.substring$2(uri, pathStart, end);
                      schemeEnd -= start;
                      hostStart -= start;
                      portStart -= start;
                      t1 = 3 + start;
                      pathStart -= t1;
                      queryStart -= t1;
                      fragmentStart -= t1;
                      end = uri.length;
                      start = 0;
                    }
                  scheme = "http";
                } else
                  scheme = null;
              else if (schemeEnd === t1 && J.startsWith$2$s(uri, "https", start)) {
                if (t2 && portStart + 4 === pathStart && J.startsWith$2$s(uri, "443", portStart + 1)) {
                  t1 = start === 0 && true;
                  t2 = J.getInterceptor$asx(uri);
                  if (t1) {
                    uri = t2.replaceRange$3(uri, portStart, pathStart, "");
                    pathStart -= 4;
                    queryStart -= 4;
                    fragmentStart -= 4;
                    end -= 3;
                  } else {
                    uri = t2.substring$2(uri, start, portStart) + C.JSString_methods.substring$2(uri, pathStart, end);
                    schemeEnd -= start;
                    hostStart -= start;
                    portStart -= start;
                    t1 = 4 + start;
                    pathStart -= t1;
                    queryStart -= t1;
                    fragmentStart -= t1;
                    end = uri.length;
                    start = 0;
                  }
                }
                scheme = "https";
              } else
                scheme = null;
              isSimple = true;
            }
          }
        }
      else
        scheme = null;
      if (isSimple) {
        if (start > 0 || end < uri.length) {
          uri = J.substring$2$s(uri, start, end);
          schemeEnd -= start;
          hostStart -= start;
          portStart -= start;
          pathStart -= start;
          queryStart -= start;
          fragmentStart -= start;
        }
        return new P._SimpleUri(uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      }
      return P._Uri__Uri$notSimple(uri, start, end, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
    },
    Uri_decodeComponent: [function(encodedComponent) {
      H.stringTypeCheck(encodedComponent);
      return P._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, C.Utf8Codec_false, false);
    }, "call$1", "core_Uri_decodeComponent$closure", 4, 0, 10, 43],
    Uri_splitQueryString: function(query, encoding) {
      var t1 = P.String;
      return C.JSArray_methods.fold$1$2(H.setRuntimeTypeInfo(query.split("&"), [t1]), P.LinkedHashMap_LinkedHashMap$_empty(t1, t1), new P.Uri_splitQueryString_closure(encoding), [P.Map, P.String, P.String]);
    },
    Uri__parseIPv4Address: function(host, start, end) {
      var error, result, t1, i, partStart, partIndex, char, part, partIndex0;
      error = new P.Uri__parseIPv4Address_error(host);
      result = new Uint8Array(4);
      for (t1 = result.length, i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = C.JSString_methods.codeUnitAt$1(host, i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2("IPv4 address should contain exactly 4 parts", i);
          part = P.int_parse(C.JSString_methods.substring$2(host, partStart, i), null, null);
          if (typeof part !== "number")
            return part.$gt();
          if (part > 255)
            error.call$2("each part must be in the range 0..255", partStart);
          partIndex0 = partIndex + 1;
          if (partIndex >= t1)
            return H.ioore(result, partIndex);
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2("IPv4 address should contain exactly 4 parts", end);
      part = P.int_parse(C.JSString_methods.substring$2(host, partStart, end), null, null);
      if (typeof part !== "number")
        return part.$gt();
      if (part > 255)
        error.call$2("each part must be in the range 0..255", partStart);
      if (partIndex >= t1)
        return H.ioore(result, partIndex);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address: function(host, start, end) {
      var error, parseHex, parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, t2, bytes, wildCardLength, index, value, j, t3;
      if (end == null)
        end = host.length;
      error = new P.Uri_parseIPv6Address_error(host);
      parseHex = new P.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$1("address is too short");
      parts = H.setRuntimeTypeInfo([], [P.int]);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = C.JSString_methods.codeUnitAt$1(host, i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (C.JSString_methods.codeUnitAt$1(host, i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            C.JSArray_methods.add$1(parts, -1);
            wildcardSeen = true;
          } else
            C.JSArray_methods.add$1(parts, parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$1("too few parts");
      atEnd = partStart === end;
      t1 = C.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          C.JSArray_methods.add$1(parts, parseHex.call$2(partStart, end));
        else {
          last = P.Uri__parseIPv4Address(host, partStart, end);
          t1 = last[0];
          if (typeof t1 !== "number")
            return t1.$shl();
          t2 = last[1];
          if (typeof t2 !== "number")
            return H.iae(t2);
          C.JSArray_methods.add$1(parts, (t1 << 8 | t2) >>> 0);
          t2 = last[2];
          if (typeof t2 !== "number")
            return t2.$shl();
          t1 = last[3];
          if (typeof t1 !== "number")
            return H.iae(t1);
          C.JSArray_methods.add$1(parts, (t2 << 8 | t1) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$1("an address with a wildcard must have less than 7 parts");
      } else if (parts.length !== 8)
        error.call$1("an address without a wildcard must contain exactly 8 parts");
      bytes = new Uint8Array(16);
      for (t1 = parts.length, t2 = bytes.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            if (index < 0 || index >= t2)
              return H.ioore(bytes, index);
            bytes[index] = 0;
            t3 = index + 1;
            if (t3 >= t2)
              return H.ioore(bytes, t3);
            bytes[t3] = 0;
            index += 2;
          }
        else {
          if (typeof value !== "number")
            return value.$shr();
          t3 = C.JSInt_methods._shrOtherPositive$1(value, 8);
          if (index < 0 || index >= t2)
            return H.ioore(bytes, index);
          bytes[index] = t3;
          t3 = index + 1;
          if (t3 >= t2)
            return H.ioore(bytes, t3);
          bytes[t3] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _createTables: function() {
      var tables, t1, t2, t3, b;
      tables = P.List_List$generate(22, new P._createTables_closure(), true, P.Uint8List);
      t1 = new P._createTables_build(tables);
      t2 = new P._createTables_setChars();
      t3 = new P._createTables_setRange();
      b = H.interceptedTypeCheck(t1.call$2(0, 225), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 1);
      t2.call$3(b, ".", 14);
      t2.call$3(b, ":", 34);
      t2.call$3(b, "/", 3);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(14, 225), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 1);
      t2.call$3(b, ".", 15);
      t2.call$3(b, ":", 34);
      t2.call$3(b, "/", 234);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(15, 225), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, ":", 34);
      t2.call$3(b, "/", 9);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(1, 225), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 1);
      t2.call$3(b, ":", 34);
      t2.call$3(b, "/", 10);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(2, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 139);
      t2.call$3(b, "/", 131);
      t2.call$3(b, ".", 146);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(3, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, "/", 68);
      t2.call$3(b, ".", 18);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(4, 229), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, ":", 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, "/", 138);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(5, 229), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, ":", 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "/", 138);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(6, 231), "$isUint8List");
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "/", 138);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(7, 231), "$isUint8List");
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "/", 138);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      t2.call$3(H.interceptedTypeCheck(t1.call$2(8, 8), "$isUint8List"), "]", 5);
      b = H.interceptedTypeCheck(t1.call$2(9, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, ".", 16);
      t2.call$3(b, "/", 234);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(16, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, ".", 17);
      t2.call$3(b, "/", 234);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(17, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, "/", 9);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(10, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, ".", 18);
      t2.call$3(b, "/", 234);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(18, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, ".", 19);
      t2.call$3(b, "/", 234);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(19, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, "/", 234);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(11, 235), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 11);
      t2.call$3(b, "/", 10);
      t2.call$3(b, "?", 172);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(12, 236), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 12);
      t2.call$3(b, "?", 12);
      t2.call$3(b, "#", 205);
      b = H.interceptedTypeCheck(t1.call$2(13, 237), "$isUint8List");
      t2.call$3(b, "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=", 13);
      t2.call$3(b, "?", 13);
      t3.call$3(H.interceptedTypeCheck(t1.call$2(20, 245), "$isUint8List"), "az", 21);
      b = H.interceptedTypeCheck(t1.call$2(21, 245), "$isUint8List");
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan: function(uri, start, end, state, indices) {
      var tables, t1, i, table, char, transition;
      H.assertSubtype(indices, "$isList", [P.int], "$asList");
      tables = $.$get$_scannerTables();
      if (typeof end !== "number")
        return H.iae(end);
      t1 = J.getInterceptor$s(uri);
      i = start;
      for (; i < end; ++i) {
        if (state < 0 || state >= tables.length)
          return H.ioore(tables, state);
        table = tables[state];
        char = t1._codeUnitAt$1(uri, i) ^ 96;
        if (char > 95)
          char = 31;
        if (char >= table.length)
          return H.ioore(table, char);
        transition = table[char];
        state = transition & 31;
        C.JSArray_methods.$indexSet(indices, transition >>> 5, i);
      }
      return state;
    },
    NoSuchMethodError_toString_closure: {
      "^": "Closure:234;_box_0,sb",
      call$2: function(key, value) {
        var t1, t2, t3;
        H.interceptedTypeCheck(key, "$isSymbol0");
        t1 = this.sb;
        t2 = this._box_0;
        t1._contents += t2.comma;
        t3 = t1._contents += H.S(key.__internal$_name);
        t1._contents = t3 + ": ";
        t1._contents += H.S(P.Error_safeToString(value));
        t2.comma = ", ";
      }
    },
    bool: {
      "^": "Object;"
    },
    "+bool": 0,
    DateTime: {
      "^": "Object;_value,isUtc",
      add$1: function(_, duration) {
        return P.DateTime$_withValue(this._value + C.JSInt_methods._tdivFast$1(H.interceptedTypeCheck(duration, "$isDuration")._duration, 1000), this.isUtc);
      },
      DateTime$_withValue$2$isUtc: function(_value, isUtc) {
        var t1, t2;
        t1 = this._value;
        if (Math.abs(t1) <= 864e13)
          t2 = false;
        else
          t2 = true;
        if (t2)
          throw H.wrapException(P.ArgumentError$("DateTime is outside valid range: " + t1));
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.DateTime))
          return false;
        return this._value === other._value && this.isUtc === other.isUtc;
      },
      get$hashCode: function(_) {
        var t1 = this._value;
        return (t1 ^ C.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
      },
      toString$0: function(_) {
        var y, m, d, h, min, sec, ms;
        y = P.DateTime__fourDigits(H.Primitives_getYear(this));
        m = P.DateTime__twoDigits(H.Primitives_getMonth(this));
        d = P.DateTime__twoDigits(H.Primitives_getDay(this));
        h = P.DateTime__twoDigits(H.Primitives_getHours(this));
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(this));
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(this));
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(this));
        if (this.isUtc)
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
        else
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
      },
      static: {
        DateTime$_withValue: function(_value, isUtc) {
          var t1 = new P.DateTime(_value, isUtc);
          t1.DateTime$_withValue$2$isUtc(_value, isUtc);
          return t1;
        },
        DateTime__fourDigits: function(n) {
          var absN, sign;
          absN = Math.abs(n);
          sign = n < 0 ? "-" : "";
          if (absN >= 1000)
            return "" + n;
          if (absN >= 100)
            return sign + "0" + absN;
          if (absN >= 10)
            return sign + "00" + absN;
          return sign + "000" + absN;
        },
        DateTime__threeDigits: function(n) {
          if (n >= 100)
            return "" + n;
          if (n >= 10)
            return "0" + n;
          return "00" + n;
        },
        DateTime__twoDigits: function(n) {
          if (n >= 10)
            return "" + n;
          return "0" + n;
        }
      }
    },
    double: {
      "^": "num;"
    },
    "+double": 0,
    Duration: {
      "^": "Object;_duration",
      $add: function(_, other) {
        return new P.Duration(C.JSInt_methods.$add(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration));
      },
      $sub: function(_, other) {
        return new P.Duration(this._duration - H.interceptedTypeCheck(other, "$isDuration")._duration);
      },
      $mul: function(_, factor) {
        return new P.Duration(C.JSInt_methods.round$0(this._duration * factor));
      },
      $tdiv: function(_, quotient) {
        if (quotient === 0)
          throw H.wrapException(new P.IntegerDivisionByZeroException());
        return new P.Duration(C.JSInt_methods.$tdiv(this._duration, quotient));
      },
      $lt: function(_, other) {
        return C.JSInt_methods.$lt(this._duration, H.interceptedTypeCheck(other, "$isDuration")._duration);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.Duration))
          return false;
        return this._duration === other._duration;
      },
      get$hashCode: function(_) {
        return this._duration & 0x1FFFFFFF;
      },
      toString$0: function(_) {
        var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
        t1 = new P.Duration_toString_twoDigits();
        t2 = this._duration;
        if (t2 < 0)
          return "-" + new P.Duration(0 - t2).toString$0(0);
        twoDigitMinutes = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 60000000) % 60);
        twoDigitSeconds = t1.call$1(C.JSInt_methods._tdivFast$1(t2, 1000000) % 60);
        sixDigitUs = new P.Duration_toString_sixDigits().call$1(t2 % 1000000);
        return "" + C.JSInt_methods._tdivFast$1(t2, 3600000000) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
      },
      get$isNegative: function(_) {
        return this._duration < 0;
      },
      abs$0: function(_) {
        return new P.Duration(Math.abs(this._duration));
      },
      static: {
        Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
          return new P.Duration(864e8 * days + 3600000000 * hours + 60000000 * minutes + 1000000 * seconds + 1000 * milliseconds + microseconds);
        }
      }
    },
    Duration_toString_sixDigits: {
      "^": "Closure:15;",
      call$1: function(n) {
        if (n >= 100000)
          return "" + n;
        if (n >= 10000)
          return "0" + n;
        if (n >= 1000)
          return "00" + n;
        if (n >= 100)
          return "000" + n;
        if (n >= 10)
          return "0000" + n;
        return "00000" + n;
      }
    },
    Duration_toString_twoDigits: {
      "^": "Closure:15;",
      call$1: function(n) {
        if (n >= 10)
          return "" + n;
        return "0" + n;
      }
    },
    Error: {
      "^": "Object;"
    },
    NullThrownError: {
      "^": "Error;",
      toString$0: function(_) {
        return "Throw of null.";
      }
    },
    ArgumentError: {
      "^": "Error;_hasValue,invalidValue,name>,message>",
      get$_errorName: function() {
        return "Invalid argument" + (!this._hasValue ? "(s)" : "");
      },
      get$_errorExplanation: function() {
        return "";
      },
      toString$0: function(_) {
        var t1, nameString, message, prefix, explanation, errorValue;
        t1 = this.name;
        nameString = t1 != null ? " (" + t1 + ")" : "";
        t1 = this.message;
        message = t1 == null ? "" : ": " + H.S(t1);
        prefix = this.get$_errorName() + nameString + message;
        if (!this._hasValue)
          return prefix;
        explanation = this.get$_errorExplanation();
        errorValue = P.Error_safeToString(this.invalidValue);
        return prefix + explanation + ": " + H.S(errorValue);
      },
      static: {
        ArgumentError$: function(message) {
          return new P.ArgumentError(false, null, null, message);
        },
        ArgumentError$value: function(value, $name, message) {
          return new P.ArgumentError(true, value, $name, message);
        },
        ArgumentError$notNull: function($name) {
          return new P.ArgumentError(false, null, $name, "Must not be null");
        }
      }
    },
    RangeError: {
      "^": "ArgumentError;start,end,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        var t1, explanation, t2;
        t1 = this.start;
        if (t1 == null) {
          t1 = this.end;
          explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
        } else {
          t2 = this.end;
          if (t2 == null)
            explanation = ": Not greater than or equal to " + H.S(t1);
          else if (t2 > t1)
            explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
          else
            explanation = t2 < t1 ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
        }
        return explanation;
      },
      static: {
        RangeError$: function(message) {
          return new P.RangeError(null, null, false, null, null, message);
        },
        RangeError$value: function(value, $name, message) {
          return new P.RangeError(null, null, true, value, $name, "Value not in range");
        },
        RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
          return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
        },
        RangeError_checkValueInInterval: function(value, minValue, maxValue, $name, message) {
          var t1;
          if (value >= minValue) {
            if (typeof maxValue !== "number")
              return H.iae(maxValue);
            t1 = value > maxValue;
          } else
            t1 = true;
          if (t1)
            throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, message));
        },
        RangeError_checkValidRange: function(start, end, $length, startName, endName, message) {
          var t1;
          if (typeof start !== "number")
            return H.iae(start);
          if (0 <= start) {
            if (typeof $length !== "number")
              return H.iae($length);
            t1 = start > $length;
          } else
            t1 = true;
          if (t1)
            throw H.wrapException(P.RangeError$range(start, 0, $length, "start", message));
          if (end != null) {
            if (!(start > end)) {
              if (typeof $length !== "number")
                return H.iae($length);
              t1 = end > $length;
            } else
              t1 = true;
            if (t1)
              throw H.wrapException(P.RangeError$range(end, start, $length, "end", message));
            return end;
          }
          return $length;
        }
      }
    },
    IndexError: {
      "^": "ArgumentError;indexable,length>,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        if (J.$lt$n(this.invalidValue, 0))
          return ": index must not be negative";
        var t1 = this.length;
        if (t1 === 0)
          return ": no indices are valid";
        return ": index should be less than " + H.S(t1);
      },
      static: {
        IndexError$: function(invalidValue, indexable, $name, message, $length) {
          var t1 = H.intTypeCheck($length != null ? $length : J.get$length$asx(indexable));
          return new P.IndexError(indexable, t1, true, invalidValue, $name, "Index out of range");
        }
      }
    },
    NoSuchMethodError: {
      "^": "Error;_core$_receiver,_core$_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
      toString$0: function(_) {
        var _box_0, sb, t1, t2, _i, t3, t4, argument, receiverText, actualParameters;
        _box_0 = {};
        sb = new P.StringBuffer("");
        _box_0.comma = "";
        for (t1 = this._core$_arguments, t2 = t1.length, _i = 0, t3 = "", t4 = ""; _i < t2; ++_i, t4 = ", ") {
          argument = t1[_i];
          sb._contents = t3 + t4;
          t3 = sb._contents += H.S(P.Error_safeToString(argument));
          _box_0.comma = ", ";
        }
        this._namedArguments.forEach$1(0, new P.NoSuchMethodError_toString_closure(_box_0, sb));
        receiverText = P.Error_safeToString(this._core$_receiver);
        actualParameters = sb.toString$0(0);
        t1 = "NoSuchMethodError: method not found: '" + H.S(this._core$_memberName.__internal$_name) + "'\nReceiver: " + H.S(receiverText) + "\nArguments: [" + actualParameters + "]";
        return t1;
      },
      static: {
        NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
          return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
        }
      }
    },
    UnsupportedError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "Unsupported operation: " + this.message;
      },
      static: {
        UnsupportedError$: function(message) {
          return new P.UnsupportedError(message);
        }
      }
    },
    UnimplementedError: {
      "^": "Error;message>",
      toString$0: function(_) {
        var t1 = this.message;
        return t1 != null ? "UnimplementedError: " + t1 : "UnimplementedError";
      },
      static: {
        UnimplementedError$: function(message) {
          return new P.UnimplementedError(message);
        }
      }
    },
    StateError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "Bad state: " + this.message;
      },
      static: {
        StateError$: function(message) {
          return new P.StateError(message);
        }
      }
    },
    ConcurrentModificationError: {
      "^": "Error;modifiedObject",
      toString$0: function(_) {
        var t1 = this.modifiedObject;
        if (t1 == null)
          return "Concurrent modification during iteration.";
        return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
      },
      static: {
        ConcurrentModificationError$: function(modifiedObject) {
          return new P.ConcurrentModificationError(modifiedObject);
        }
      }
    },
    OutOfMemoryError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Out of Memory";
      },
      $isError: 1
    },
    StackOverflowError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Stack Overflow";
      },
      $isError: 1
    },
    CyclicInitializationError: {
      "^": "Error;variableName",
      toString$0: function(_) {
        var t1 = this.variableName;
        return t1 == null ? "Reading static variable during its initialization" : "Reading static variable '" + t1 + "' during its initialization";
      }
    },
    _Exception: {
      "^": "Object;message>",
      toString$0: function(_) {
        return "Exception: " + this.message;
      }
    },
    FormatException: {
      "^": "Object;message>,source>,offset>",
      toString$0: function(_) {
        var t1, report, offset, source, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix, slice;
        t1 = this.message;
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException";
        offset = this.offset;
        source = this.source;
        if (typeof source !== "string")
          return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = C.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = C.JSString_methods._codeUnitAt$1(source, i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < source.length; ++i) {
          char = C.JSString_methods.codeUnitAt$1(source, i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        if (lineEnd - lineStart > 78)
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = C.JSString_methods.substring$2(source, start, end);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      },
      static: {
        FormatException$: function(message, source, offset) {
          return new P.FormatException(message, source, offset);
        }
      }
    },
    IntegerDivisionByZeroException: {
      "^": "Object;",
      toString$0: function(_) {
        return "IntegerDivisionByZeroException";
      }
    },
    Expando: {
      "^": "Object;_jsWeakMapOrKey,name>,$ti",
      $index: function(_, object) {
        var t1, t2, values;
        t1 = this._jsWeakMapOrKey;
        if (typeof t1 !== "string") {
          if (object != null)
            t2 = typeof object === "number" || typeof object === "string";
          else
            t2 = true;
          if (t2)
            H.throwExpression(P.ArgumentError$value(object, "Expandos are not allowed on strings, numbers, booleans or null", null));
          return t1.get(object);
        }
        values = H.Primitives_getProperty(object, "expando$values");
        t1 = values == null ? null : H.Primitives_getProperty(values, t1);
        return H.assertSubtypeOfRuntimeType(t1, H.getTypeArgumentByIndex(this, 0));
      },
      $indexSet: function(_, object, value) {
        var t1, values;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._jsWeakMapOrKey;
        if (typeof t1 !== "string")
          t1.set(object, value);
        else {
          values = H.Primitives_getProperty(object, "expando$values");
          if (values == null) {
            values = new P.Object();
            H.Primitives_setProperty(object, "expando$values", values);
          }
          H.Primitives_setProperty(values, t1, value);
        }
      },
      toString$0: function(_) {
        return "Expando:" + H.S(this.name);
      },
      static: {
        Expando$: function($name, $T) {
          var t1;
          if (typeof WeakMap == "function")
            t1 = new WeakMap();
          else {
            t1 = $.Expando__keyCount;
            $.Expando__keyCount = t1 + 1;
            t1 = "expando$key$" + t1;
          }
          return new P.Expando(t1, $name, [$T]);
        }
      }
    },
    Function: {
      "^": "Object;"
    },
    int: {
      "^": "num;"
    },
    "+int": 0,
    Iterable: {
      "^": "Object;$ti",
      map$1$1: function(_, f, $T) {
        var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
        return H.MappedIterable_MappedIterable(this, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t1]}), t1, $T);
      },
      where$1: ["super$Iterable$where", function(_, test) {
        var t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
        return new H.WhereIterable(this, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), [t1]);
      }],
      contains$1: function(_, element) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          if (J.$eq$(t1.get$current(t1), element))
            return true;
        return false;
      },
      forEach$1: function(_, f) {
        var t1;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "Iterable", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1.get$current(t1));
      },
      every$1: function(_, test) {
        var t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "Iterable", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          if (!test.call$1(t1.get$current(t1)))
            return false;
        return true;
      },
      join$1: function(_, separator) {
        var iterator, t1;
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          return "";
        if (separator === "") {
          t1 = "";
          do
            t1 += H.S(iterator.get$current(iterator));
          while (iterator.moveNext$0());
        } else {
          t1 = H.S(iterator.get$current(iterator));
          for (; iterator.moveNext$0();)
            t1 = t1 + separator + H.S(iterator.get$current(iterator));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      any$1: function(_, test) {
        var t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgument(this, "Iterable", 0)]});
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          if (test.call$1(t1.get$current(t1)))
            return true;
        return false;
      },
      toList$1$growable: function(_, growable) {
        return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "Iterable", 0));
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      get$length: function(_) {
        var it, count;
        it = this.get$iterator(this);
        for (count = 0; it.moveNext$0();)
          ++count;
        return count;
      },
      get$isEmpty: function(_) {
        return !this.get$iterator(this).moveNext$0();
      },
      get$isNotEmpty: function(_) {
        return !this.get$isEmpty(this);
      },
      take$1: function(_, count) {
        return H.TakeIterable_TakeIterable(this, count, H.getRuntimeTypeArgument(this, "Iterable", 0));
      },
      skip$1: function(_, count) {
        return H.SkipIterable_SkipIterable(this, count, H.getRuntimeTypeArgument(this, "Iterable", 0));
      },
      get$first: function(_) {
        var it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        return it.get$current(it);
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1, element;
        t1 = H.getRuntimeTypeArgument(this, "Iterable", 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]});
        H.functionTypeCheck(orElse, {func: 1, ret: t1});
        for (t1 = this.get$iterator(this); t1.moveNext$0();) {
          element = t1.get$current(t1);
          if (test.call$1(element))
            return element;
        }
        return orElse.call$0();
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$notNull("index"));
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
          element = t1.get$current(t1);
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToShortString(this, "(", ")");
      }
    },
    Iterator: {
      "^": "Object;$ti"
    },
    List: {
      "^": "Object;$ti",
      $isEfficientLengthIterable: 1,
      $isIterable: 1
    },
    "+List": 0,
    Map: {
      "^": "Object;$ti"
    },
    Null: {
      "^": "Object;",
      get$hashCode: function(_) {
        return P.Object.prototype.get$hashCode.call(this, this);
      },
      toString$0: function(_) {
        return "null";
      }
    },
    "+Null": 0,
    num: {
      "^": "Object;"
    },
    "+num": 0,
    Object: {
      "^": ";",
      $eq: function(_, other) {
        return this === other;
      },
      get$hashCode: function(_) {
        return H.Primitives_objectHashCode(this);
      },
      toString$0: ["super$Object$toString", function(_) {
        return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
      }],
      noSuchMethod$1: [function(_, invocation) {
        H.interceptedTypeCheck(invocation, "$isInvocation");
        throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, null, "get$noSuchMethod", 5, 0, null, 22],
      toString: function() {
        return this.toString$0(this);
      }
    },
    Match: {
      "^": "Object;"
    },
    Set: {
      "^": "EfficientLengthIterable;$ti"
    },
    StackTrace: {
      "^": "Object;"
    },
    _StringStackTrace: {
      "^": "Object;_stackTrace",
      toString$0: function(_) {
        return this._stackTrace;
      },
      $isStackTrace: 1
    },
    String: {
      "^": "Object;",
      $isPattern: 1
    },
    "+String": 0,
    StringBuffer: {
      "^": "Object;_contents<",
      set$_contents: function(_contents) {
        this._contents = H.stringTypeCheck(_contents);
      },
      get$length: function(_) {
        return this._contents.length;
      },
      write$1: function(_, obj) {
        this._contents += H.S(obj);
      },
      writeCharCode$1: function(charCode) {
        this._contents += H.Primitives_stringFromCharCode(charCode);
      },
      toString$0: function(_) {
        var t1 = this._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      get$isEmpty: function(_) {
        return this._contents.length === 0;
      },
      $isStringSink: 1,
      static: {
        StringBuffer__writeAll: function(string, objects, separator) {
          var iterator = J.get$iterator$ax(objects);
          if (!iterator.moveNext$0())
            return string;
          if (separator.length === 0) {
            do
              string += H.S(iterator.get$current(iterator));
            while (iterator.moveNext$0());
          } else {
            string += H.S(iterator.get$current(iterator));
            for (; iterator.moveNext$0();)
              string = string + separator + H.S(iterator.get$current(iterator));
          }
          return string;
        }
      }
    },
    Symbol0: {
      "^": "Object;"
    },
    Type: {
      "^": "Object;"
    },
    Uri_splitQueryString_closure: {
      "^": "Closure:245;encoding",
      call$2: function(map, element) {
        var t1, index, key, value;
        t1 = P.String;
        H.assertSubtype(map, "$isMap", [t1, t1], "$asMap");
        H.stringTypeCheck(element);
        index = J.getInterceptor$asx(element).indexOf$1(element, "=");
        if (index === -1) {
          if (element !== "")
            J.$indexSet$ax(map, P._Uri__uriDecode(element, 0, element.length, this.encoding, true), "");
        } else if (index !== 0) {
          key = C.JSString_methods.substring$2(element, 0, index);
          value = C.JSString_methods.substring$1(element, index + 1);
          t1 = this.encoding;
          J.$indexSet$ax(map, P._Uri__uriDecode(key, 0, key.length, t1, true), P._Uri__uriDecode(value, 0, value.length, t1, true));
        }
        return map;
      }
    },
    Uri__parseIPv4Address_error: {
      "^": "Closure:248;host",
      call$2: function(msg, position) {
        throw H.wrapException(P.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
      }
    },
    Uri_parseIPv6Address_error: {
      "^": "Closure:249;host",
      call$2: function(msg, position) {
        throw H.wrapException(P.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
      },
      call$1: function(msg) {
        return this.call$2(msg, null);
      }
    },
    Uri_parseIPv6Address_parseHex: {
      "^": "Closure:251;error,host",
      call$2: function(start, end) {
        var value;
        if (end - start > 4)
          this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
        value = P.int_parse(C.JSString_methods.substring$2(this.host, start, end), null, 16);
        if (typeof value !== "number")
          return value.$lt();
        if (value < 0 || value > 65535)
          this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
        return value;
      }
    },
    _Uri: {
      "^": "Object;scheme<,_userInfo,_host,_port,path>,_query,_fragment,0_pathSegments,0_text,0_hashCodeCache,0_queryParameters,0_queryParameterLists",
      set$_pathSegments: function(_pathSegments) {
        this._pathSegments = H.assertSubtype(_pathSegments, "$isList", [P.String], "$asList");
      },
      set$_queryParameters: function(_queryParameters) {
        var t1 = P.String;
        this._queryParameters = H.assertSubtype(_queryParameters, "$isMap", [t1, t1], "$asMap");
      },
      get$userInfo: function() {
        return this._userInfo;
      },
      get$host: function(_) {
        var t1 = this._host;
        if (t1 == null)
          return "";
        if (C.JSString_methods.startsWith$1(t1, "["))
          return C.JSString_methods.substring$2(t1, 1, t1.length - 1);
        return t1;
      },
      get$port: function(_) {
        var t1 = this._port;
        if (t1 == null)
          return P._Uri__defaultPort(this.scheme);
        return t1;
      },
      get$query: function(_) {
        var t1 = this._query;
        return t1 == null ? "" : t1;
      },
      get$fragment: function() {
        var t1 = this._fragment;
        return t1 == null ? "" : t1;
      },
      get$pathSegments: function() {
        var result, pathToSplit, t1, t2, t3;
        result = this._pathSegments;
        if (result != null)
          return result;
        pathToSplit = this.path;
        if (pathToSplit.length !== 0 && J._codeUnitAt$1$s(pathToSplit, 0) === 47)
          pathToSplit = J.substring$1$s(pathToSplit, 1);
        if (pathToSplit === "")
          result = C.List_empty0;
        else {
          t1 = P.String;
          t2 = H.setRuntimeTypeInfo(pathToSplit.split("/"), [t1]);
          t3 = H.getTypeArgumentByIndex(t2, 0);
          result = P.List_List$unmodifiable(new H.MappedListIterable(t2, H.functionTypeCheck(P.core_Uri_decodeComponent$closure(), {func: 1, ret: null, args: [t3]}), [t3, null]), t1);
        }
        this.set$_pathSegments(result);
        return result;
      },
      get$queryParameters: function() {
        var t1, t2;
        if (this._queryParameters == null) {
          t1 = this._query;
          t2 = P.String;
          this.set$_queryParameters(new P.UnmodifiableMapView(P.Uri_splitQueryString(t1 == null ? "" : t1, C.Utf8Codec_false), [t2, t2]));
        }
        return this._queryParameters;
      },
      _mergePaths$2: function(base, reference) {
        var t1, backCount, refStart, baseEnd, newEnd, delta;
        for (t1 = J.getInterceptor$s(reference), backCount = 0, refStart = 0; t1.startsWith$2(reference, "../", refStart);) {
          refStart += 3;
          ++backCount;
        }
        baseEnd = J.getInterceptor$s(base).lastIndexOf$1(base, "/");
        while (true) {
          if (!(baseEnd > 0 && backCount > 0))
            break;
          newEnd = C.JSString_methods.lastIndexOf$2(base, "/", baseEnd - 1);
          if (newEnd < 0)
            break;
          delta = baseEnd - newEnd;
          t1 = delta !== 2;
          if (!t1 || delta === 3)
            if (C.JSString_methods.codeUnitAt$1(base, newEnd + 1) === 46)
              t1 = !t1 || C.JSString_methods.codeUnitAt$1(base, newEnd + 2) === 46;
            else
              t1 = false;
          else
            t1 = false;
          if (t1)
            break;
          --backCount;
          baseEnd = newEnd;
        }
        return C.JSString_methods.replaceRange$3(base, baseEnd + 1, null, C.JSString_methods.substring$1(reference, refStart - 3 * backCount));
      },
      resolve$1: function(reference) {
        return this.resolveUri$1(P.Uri_parse(reference, 0, null));
      },
      resolveUri$1: function(reference) {
        var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, t1, mergedPath, t2;
        if (reference.get$scheme().length !== 0) {
          targetScheme = reference.get$scheme();
          if (reference.get$hasAuthority()) {
            targetUserInfo = reference.get$userInfo();
            targetHost = reference.get$host(reference);
            targetPort = reference.get$hasPort() ? reference.get$port(reference) : null;
          } else {
            targetUserInfo = "";
            targetHost = null;
            targetPort = null;
          }
          targetPath = P._Uri__removeDotSegments(reference.get$path(reference));
          targetQuery = reference.get$hasQuery() ? reference.get$query(reference) : null;
        } else {
          targetScheme = this.scheme;
          if (reference.get$hasAuthority()) {
            targetUserInfo = reference.get$userInfo();
            targetHost = reference.get$host(reference);
            targetPort = P._Uri__makePort(reference.get$hasPort() ? reference.get$port(reference) : null, targetScheme);
            targetPath = P._Uri__removeDotSegments(reference.get$path(reference));
            targetQuery = reference.get$hasQuery() ? reference.get$query(reference) : null;
          } else {
            targetUserInfo = this._userInfo;
            targetHost = this._host;
            targetPort = this._port;
            if (reference.get$path(reference) === "") {
              targetPath = this.path;
              targetQuery = reference.get$hasQuery() ? reference.get$query(reference) : this._query;
            } else {
              if (reference.get$hasAbsolutePath())
                targetPath = P._Uri__removeDotSegments(reference.get$path(reference));
              else {
                t1 = this.path;
                if (t1.length === 0)
                  if (targetHost == null)
                    targetPath = targetScheme.length === 0 ? reference.get$path(reference) : P._Uri__removeDotSegments(reference.get$path(reference));
                  else
                    targetPath = P._Uri__removeDotSegments(C.JSString_methods.$add("/", reference.get$path(reference)));
                else {
                  mergedPath = this._mergePaths$2(t1, reference.get$path(reference));
                  t2 = targetScheme.length === 0;
                  if (!t2 || targetHost != null || J.startsWith$1$s(t1, "/"))
                    targetPath = P._Uri__removeDotSegments(mergedPath);
                  else
                    targetPath = P._Uri__normalizeRelativePath(mergedPath, !t2 || targetHost != null);
                }
              }
              targetQuery = reference.get$hasQuery() ? reference.get$query(reference) : null;
            }
          }
        }
        return new P._Uri(targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, reference.get$hasFragment() ? reference.get$fragment() : null);
      },
      get$hasAuthority: function() {
        return this._host != null;
      },
      get$hasPort: function() {
        return this._port != null;
      },
      get$hasQuery: function() {
        return this._query != null;
      },
      get$hasFragment: function() {
        return this._fragment != null;
      },
      get$hasAbsolutePath: function() {
        return J.startsWith$1$s(this.path, "/");
      },
      toFilePath$1$windows: function(windows) {
        var t1, pathSegments;
        t1 = this.scheme;
        if (t1 !== "" && t1 !== "file")
          throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a " + H.S(t1) + " URI"));
        t1 = this._query;
        if ((t1 == null ? "" : t1) !== "")
          throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a query component"));
        t1 = this._fragment;
        if ((t1 == null ? "" : t1) !== "")
          throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a fragment component"));
        windows = $.$get$_Uri__isWindowsCached();
        if (windows)
          t1 = P._Uri__toWindowsFilePath(this);
        else {
          if (this._host != null && this.get$host(this) !== "")
            H.throwExpression(P.UnsupportedError$("Cannot extract a non-Windows file path from a file URI with an authority"));
          pathSegments = this.get$pathSegments();
          P._Uri__checkNonWindowsPathReservedCharacters(pathSegments, false);
          t1 = P.StringBuffer__writeAll(J.startsWith$1$s(this.path, "/") ? "/" : "", pathSegments, "/");
          t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
        }
        return t1;
      },
      toFilePath$0: function() {
        return this.toFilePath$1$windows(null);
      },
      toString$0: function(_) {
        var t1, t2, t3, t4;
        t1 = this._text;
        if (t1 == null) {
          t1 = this.scheme;
          t2 = t1.length !== 0 ? H.S(t1) + ":" : "";
          t3 = this._host;
          t4 = t3 == null;
          if (!t4 || t1 === "file") {
            t1 = t2 + "//";
            t2 = this._userInfo;
            if (t2.length !== 0)
              t1 = t1 + H.S(t2) + "@";
            if (!t4)
              t1 += t3;
            t2 = this._port;
            if (t2 != null)
              t1 = t1 + ":" + H.S(t2);
          } else
            t1 = t2;
          t1 += H.S(this.path);
          t2 = this._query;
          if (t2 != null)
            t1 = t1 + "?" + t2;
          t2 = this._fragment;
          if (t2 != null)
            t1 = t1 + "#" + t2;
          t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
          this._text = t1;
        }
        return t1;
      },
      $eq: function(_, other) {
        var t1, t2;
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!!J.getInterceptor$(other).$isUri) {
          if (this.scheme == other.get$scheme())
            if (this._host != null === other.get$hasAuthority())
              if (this._userInfo == other.get$userInfo())
                if (this.get$host(this) == other.get$host(other))
                  if (this.get$port(this) == other.get$port(other))
                    if (this.path == other.get$path(other)) {
                      t1 = this._query;
                      t2 = t1 == null;
                      if (!t2 === other.get$hasQuery()) {
                        if (t2)
                          t1 = "";
                        if (t1 === other.get$query(other)) {
                          t1 = this._fragment;
                          t2 = t1 == null;
                          if (!t2 === other.get$hasFragment()) {
                            if (t2)
                              t1 = "";
                            t1 = t1 === other.get$fragment();
                          } else
                            t1 = false;
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  else
                    t1 = false;
                else
                  t1 = false;
              else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
          return t1;
        }
        return false;
      },
      get$hashCode: function(_) {
        var t1 = this._hashCodeCache;
        if (t1 == null) {
          t1 = C.JSString_methods.get$hashCode(this.toString$0(0));
          this._hashCodeCache = t1;
        }
        return t1;
      },
      $isUri: 1,
      static: {
        _Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
          var t1, bytes, i, t2, t3, byte;
          H.assertSubtype(canonicalTable, "$isList", [P.int], "$asList");
          if (encoding === C.Utf8Codec_false) {
            t1 = $.$get$_Uri__needsNoEncoding()._nativeRegExp;
            if (typeof text !== "string")
              H.throwExpression(H.argumentErrorValue(text));
            t1 = t1.test(text);
          } else
            t1 = false;
          if (t1)
            return text;
          bytes = encoding.encode$1(text);
          t1 = J.getInterceptor$asx(bytes);
          i = 0;
          t2 = "";
          while (true) {
            t3 = t1.get$length(bytes);
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (!(i < t3))
              break;
            byte = t1.$index(bytes, i);
            if (typeof byte !== "number")
              return byte.$lt();
            if (byte < 128) {
              t3 = C.JSInt_methods._shrOtherPositive$1(byte, 4);
              if (t3 >= 8)
                return H.ioore(canonicalTable, t3);
              t3 = (canonicalTable[t3] & 1 << (byte & 15)) !== 0;
            } else
              t3 = false;
            if (t3)
              t2 += H.Primitives_stringFromCharCode(byte);
            else
              t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + "0123456789ABCDEF"[C.JSInt_methods._shrOtherPositive$1(byte, 4) & 15] + "0123456789ABCDEF"[byte & 15];
            ++i;
          }
          return t2.charCodeAt(0) == 0 ? t2 : t2;
        },
        _Uri__Uri$notSimple: function(uri, start, end, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme) {
          var userInfoStart, userInfo, host, t1, port, path, query;
          if (scheme == null) {
            if (typeof schemeEnd !== "number")
              return schemeEnd.$gt();
            if (schemeEnd > start)
              scheme = P._Uri__makeScheme(uri, start, schemeEnd);
            else {
              if (schemeEnd === start)
                P._Uri__fail(uri, start, "Invalid empty scheme");
              scheme = "";
            }
          }
          if (hostStart > start) {
            if (typeof schemeEnd !== "number")
              return schemeEnd.$add();
            userInfoStart = schemeEnd + 3;
            userInfo = userInfoStart < hostStart ? P._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
            host = P._Uri__makeHost(uri, hostStart, portStart, false);
            if (typeof portStart !== "number")
              return portStart.$add();
            t1 = portStart + 1;
            if (typeof pathStart !== "number")
              return H.iae(pathStart);
            port = t1 < pathStart ? P._Uri__makePort(P.int_parse(J.substring$2$s(uri, t1, pathStart), new P._Uri__Uri$notSimple_closure(uri, portStart), null), scheme) : null;
          } else {
            userInfo = "";
            host = null;
            port = null;
          }
          path = P._Uri__makePath(uri, pathStart, queryStart, null, scheme, host != null);
          if (typeof queryStart !== "number")
            return queryStart.$lt();
          if (typeof fragmentStart !== "number")
            return H.iae(fragmentStart);
          query = queryStart < fragmentStart ? P._Uri__makeQuery(uri, queryStart + 1, fragmentStart, null) : null;
          return new P._Uri(scheme, userInfo, host, port, path, query, fragmentStart < end ? P._Uri__makeFragment(uri, fragmentStart + 1, end) : null);
        },
        _Uri__Uri: function(fragment, host, path, pathSegments, port, query, queryParameters, scheme, userInfo) {
          var isFile, t1, hasAuthority, t2;
          H.stringTypeCheck(host);
          H.assertSubtype(pathSegments, "$isIterable", [P.String], "$asIterable");
          scheme = P._Uri__makeScheme(scheme, 0, scheme == null ? 0 : scheme.length);
          userInfo = P._Uri__makeUserInfo(userInfo, 0, 0);
          host = P._Uri__makeHost(host, 0, host == null ? 0 : host.length, false);
          query = P._Uri__makeQuery(query, 0, 0, queryParameters);
          fragment = P._Uri__makeFragment(fragment, 0, 0);
          port = P._Uri__makePort(port, scheme);
          isFile = scheme === "file";
          if (host == null)
            t1 = userInfo.length !== 0 || port != null || isFile;
          else
            t1 = false;
          if (t1)
            host = "";
          t1 = host == null;
          hasAuthority = !t1;
          path = P._Uri__makePath(path, 0, path == null ? 0 : path.length, pathSegments, scheme, hasAuthority);
          t2 = scheme.length === 0;
          if (t2 && t1 && !J.startsWith$1$s(path, "/"))
            path = P._Uri__normalizeRelativePath(path, !t2 || hasAuthority);
          else
            path = P._Uri__removeDotSegments(path);
          return new P._Uri(scheme, userInfo, t1 && J.startsWith$1$s(path, "//") ? "" : host, port, path, query, fragment);
        },
        _Uri__defaultPort: function(scheme) {
          if (scheme === "http")
            return 80;
          if (scheme === "https")
            return 443;
          return 0;
        },
        _Uri__fail: function(uri, index, message) {
          throw H.wrapException(P.FormatException$(message, uri, index));
        },
        _Uri__checkNonWindowsPathReservedCharacters: function(segments, argumentError) {
          C.JSArray_methods.forEach$1(H.assertSubtype(segments, "$isList", [P.String], "$asList"), new P._Uri__checkNonWindowsPathReservedCharacters_closure(false));
        },
        _Uri__checkWindowsPathReservedCharacters: function(segments, argumentError, firstSegment) {
          var t1, t2, t3;
          H.assertSubtype(segments, "$isList", [P.String], "$asList");
          for (t1 = H.SubListIterable$(segments, firstSegment, null, H.getTypeArgumentByIndex(segments, 0)), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [H.getTypeArgumentByIndex(t1, 0)]); t1.moveNext$0();) {
            t2 = t1.__internal$_current;
            t3 = P.RegExp_RegExp('["*/:<>?\\\\|]', true, false);
            t2.length;
            if (H.stringContainsUnchecked(t2, t3, 0))
              if (argumentError)
                throw H.wrapException(P.ArgumentError$("Illegal character in path"));
              else
                throw H.wrapException(P.UnsupportedError$("Illegal character in path: " + H.S(t2)));
          }
        },
        _Uri__checkWindowsDriveLetter: function(charCode, argumentError) {
          var t1;
          if (!(65 <= charCode && charCode <= 90))
            t1 = 97 <= charCode && charCode <= 122;
          else
            t1 = true;
          if (t1)
            return;
          if (argumentError)
            throw H.wrapException(P.ArgumentError$("Illegal drive letter " + P.String_String$fromCharCode(charCode)));
          else
            throw H.wrapException(P.UnsupportedError$("Illegal drive letter " + P.String_String$fromCharCode(charCode)));
        },
        _Uri__makePort: function(port, scheme) {
          if (port != null && port === P._Uri__defaultPort(scheme))
            return;
          return port;
        },
        _Uri__makeHost: function(host, start, end, strictIPv6) {
          var t1, i;
          if (host == null)
            return;
          if (start === end)
            return "";
          if (C.JSString_methods.codeUnitAt$1(host, start) === 91) {
            if (typeof end !== "number")
              return end.$sub();
            t1 = end - 1;
            if (C.JSString_methods.codeUnitAt$1(host, t1) !== 93)
              P._Uri__fail(host, start, "Missing end `]` to match `[` in host");
            P.Uri_parseIPv6Address(host, start + 1, t1);
            return C.JSString_methods.substring$2(host, start, end).toLowerCase();
          }
          if (typeof end !== "number")
            return H.iae(end);
          i = start;
          for (; i < end; ++i)
            if (C.JSString_methods.codeUnitAt$1(host, i) === 58) {
              P.Uri_parseIPv6Address(host, start, end);
              return "[" + host + "]";
            }
          return P._Uri__normalizeRegName(host, start, end);
        },
        _Uri__normalizeRegName: function(host, start, end) {
          var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
          if (typeof end !== "number")
            return H.iae(end);
          index = start;
          sectionStart = index;
          buffer = null;
          isNormalized = true;
          for (; index < end;) {
            char = C.JSString_methods.codeUnitAt$1(host, index);
            if (char === 37) {
              replacement = P._Uri__normalizeEscape(host, index, true);
              t1 = replacement == null;
              if (t1 && isNormalized) {
                index += 3;
                continue;
              }
              if (buffer == null)
                buffer = new P.StringBuffer("");
              slice = C.JSString_methods.substring$2(host, sectionStart, index);
              t2 = buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
              if (t1) {
                replacement = C.JSString_methods.substring$2(host, index, index + 3);
                sourceLength = 3;
              } else if (replacement === "%") {
                replacement = "%25";
                sourceLength = 1;
              } else
                sourceLength = 3;
              buffer._contents = t2 + replacement;
              index += sourceLength;
              sectionStart = index;
              isNormalized = true;
            } else {
              if (char < 127) {
                t1 = char >>> 4;
                if (t1 >= 8)
                  return H.ioore(C.List_qNA, t1);
                t1 = (C.List_qNA[t1] & 1 << (char & 15)) !== 0;
              } else
                t1 = false;
              if (t1) {
                if (isNormalized && 65 <= char && 90 >= char) {
                  if (buffer == null)
                    buffer = new P.StringBuffer("");
                  if (sectionStart < index) {
                    buffer._contents += C.JSString_methods.substring$2(host, sectionStart, index);
                    sectionStart = index;
                  }
                  isNormalized = false;
                }
                ++index;
              } else {
                if (char <= 93) {
                  t1 = char >>> 4;
                  if (t1 >= 8)
                    return H.ioore(C.List_2Vk, t1);
                  t1 = (C.List_2Vk[t1] & 1 << (char & 15)) !== 0;
                } else
                  t1 = false;
                if (t1)
                  P._Uri__fail(host, index, "Invalid character");
                else {
                  if ((char & 64512) === 55296 && index + 1 < end) {
                    tail = C.JSString_methods.codeUnitAt$1(host, index + 1);
                    if ((tail & 64512) === 56320) {
                      char = 65536 | (char & 1023) << 10 | tail & 1023;
                      sourceLength = 2;
                    } else
                      sourceLength = 1;
                  } else
                    sourceLength = 1;
                  if (buffer == null)
                    buffer = new P.StringBuffer("");
                  slice = C.JSString_methods.substring$2(host, sectionStart, index);
                  buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
                  buffer._contents += P._Uri__escapeChar(char);
                  index += sourceLength;
                  sectionStart = index;
                }
              }
            }
          }
          if (buffer == null)
            return C.JSString_methods.substring$2(host, start, end);
          if (sectionStart < end) {
            slice = C.JSString_methods.substring$2(host, sectionStart, end);
            buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          }
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        },
        _Uri__makeScheme: function(scheme, start, end) {
          var i, containsUpperCase, codeUnit, t1;
          if (start === end)
            return "";
          if (!P._Uri__isAlphabeticCharacter(J.getInterceptor$s(scheme)._codeUnitAt$1(scheme, start)))
            P._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
          if (typeof end !== "number")
            return H.iae(end);
          i = start;
          containsUpperCase = false;
          for (; i < end; ++i) {
            codeUnit = C.JSString_methods._codeUnitAt$1(scheme, i);
            if (codeUnit < 128) {
              t1 = codeUnit >>> 4;
              if (t1 >= 8)
                return H.ioore(C.List_JYB, t1);
              t1 = (C.List_JYB[t1] & 1 << (codeUnit & 15)) !== 0;
            } else
              t1 = false;
            if (!t1)
              P._Uri__fail(scheme, i, "Illegal scheme character");
            if (65 <= codeUnit && codeUnit <= 90)
              containsUpperCase = true;
          }
          scheme = C.JSString_methods.substring$2(scheme, start, end);
          return P._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
        },
        _Uri__canonicalizeScheme: function(scheme) {
          if (scheme === "http")
            return "http";
          if (scheme === "file")
            return "file";
          if (scheme === "https")
            return "https";
          if (scheme === "package")
            return "package";
          return scheme;
        },
        _Uri__makeUserInfo: function(userInfo, start, end) {
          if (userInfo == null)
            return "";
          return P._Uri__normalizeOrSubstring(userInfo, start, end, C.List_gRj, false);
        },
        _Uri__makePath: function(path, start, end, pathSegments, scheme, hasAuthority) {
          var t1, isFile, ensureLeadingSlash, t2, result;
          t1 = P.String;
          H.assertSubtype(pathSegments, "$isIterable", [t1], "$asIterable");
          isFile = scheme === "file";
          ensureLeadingSlash = isFile || hasAuthority;
          t2 = path == null;
          if (t2 && pathSegments == null)
            return isFile ? "/" : "";
          t2 = !t2;
          if (t2 && pathSegments != null)
            throw H.wrapException(P.ArgumentError$("Both path and pathSegments specified"));
          if (t2)
            result = P._Uri__normalizeOrSubstring(path, start, end, C.List_qg4, true);
          else {
            pathSegments.toString;
            t2 = H.getTypeArgumentByIndex(pathSegments, 0);
            result = new H.MappedListIterable(pathSegments, H.functionTypeCheck(new P._Uri__makePath_closure(), {func: 1, ret: t1, args: [t2]}), [t2, t1]).join$1(0, "/");
          }
          if (result.length === 0) {
            if (isFile)
              return "/";
          } else if (ensureLeadingSlash && !C.JSString_methods.startsWith$1(result, "/"))
            result = "/" + result;
          return P._Uri__normalizePath(result, scheme, hasAuthority);
        },
        _Uri__normalizePath: function(path, scheme, hasAuthority) {
          var t1 = scheme.length === 0;
          if (t1 && !hasAuthority && !C.JSString_methods.startsWith$1(path, "/"))
            return P._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
          return P._Uri__removeDotSegments(path);
        },
        _Uri__makeQuery: function(query, start, end, queryParameters) {
          if (query != null)
            return P._Uri__normalizeOrSubstring(query, start, end, C.List_CVk, true);
          return;
        },
        _Uri__makeFragment: function(fragment, start, end) {
          if (fragment == null)
            return;
          return P._Uri__normalizeOrSubstring(fragment, start, end, C.List_CVk, true);
        },
        _Uri__normalizeEscape: function(source, index, lowerCase) {
          var t1, firstDigit, secondDigit, firstDigitValue, secondDigitValue, value;
          if (typeof index !== "number")
            return index.$add();
          t1 = index + 2;
          if (t1 >= source.length)
            return "%";
          firstDigit = J.getInterceptor$s(source).codeUnitAt$1(source, index + 1);
          secondDigit = C.JSString_methods.codeUnitAt$1(source, t1);
          firstDigitValue = H.hexDigitValue(firstDigit);
          secondDigitValue = H.hexDigitValue(secondDigit);
          if (firstDigitValue < 0 || secondDigitValue < 0)
            return "%";
          value = firstDigitValue * 16 + secondDigitValue;
          if (value < 127) {
            t1 = C.JSInt_methods._shrOtherPositive$1(value, 4);
            if (t1 >= 8)
              return H.ioore(C.List_nxB, t1);
            t1 = (C.List_nxB[t1] & 1 << (value & 15)) !== 0;
          } else
            t1 = false;
          if (t1)
            return H.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
          if (firstDigit >= 97 || secondDigit >= 97)
            return C.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
          return;
        },
        _Uri__escapeChar: function(char) {
          var t1, codeUnits, flag, encodedBytes, index, byte;
          if (char < 128) {
            t1 = new Array(3);
            t1.fixed$length = Array;
            codeUnits = H.setRuntimeTypeInfo(t1, [P.int]);
            C.JSArray_methods.$indexSet(codeUnits, 0, 37);
            C.JSArray_methods.$indexSet(codeUnits, 1, C.JSString_methods._codeUnitAt$1("0123456789ABCDEF", char >>> 4));
            C.JSArray_methods.$indexSet(codeUnits, 2, C.JSString_methods._codeUnitAt$1("0123456789ABCDEF", char & 15));
          } else {
            if (char > 2047)
              if (char > 65535) {
                flag = 240;
                encodedBytes = 4;
              } else {
                flag = 224;
                encodedBytes = 3;
              }
            else {
              flag = 192;
              encodedBytes = 2;
            }
            t1 = new Array(3 * encodedBytes);
            t1.fixed$length = Array;
            codeUnits = H.setRuntimeTypeInfo(t1, [P.int]);
            for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
              byte = C.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
              C.JSArray_methods.$indexSet(codeUnits, index, 37);
              C.JSArray_methods.$indexSet(codeUnits, index + 1, C.JSString_methods._codeUnitAt$1("0123456789ABCDEF", byte >>> 4));
              C.JSArray_methods.$indexSet(codeUnits, index + 2, C.JSString_methods._codeUnitAt$1("0123456789ABCDEF", byte & 15));
              index += 3;
            }
          }
          return P.String_String$fromCharCodes(codeUnits, 0, null);
        },
        _Uri__normalizeOrSubstring: function(component, start, end, charTable, escapeDelimiters) {
          var t1 = P._Uri__normalize(component, start, end, H.assertSubtype(charTable, "$isList", [P.int], "$asList"), escapeDelimiters);
          return t1 == null ? J.substring$2$s(component, start, end) : t1;
        },
        _Uri__normalize: function(component, start, end, charTable, escapeDelimiters) {
          var t1, t2, index, sectionStart, buffer, char, t3, replacement, sourceLength, tail;
          H.assertSubtype(charTable, "$isList", [P.int], "$asList");
          t1 = !escapeDelimiters;
          t2 = J.getInterceptor$s(component);
          index = start;
          sectionStart = index;
          buffer = null;
          while (true) {
            if (typeof index !== "number")
              return index.$lt();
            if (typeof end !== "number")
              return H.iae(end);
            if (!(index < end))
              break;
            c$0: {
              char = t2.codeUnitAt$1(component, index);
              if (char < 127) {
                t3 = char >>> 4;
                if (t3 >= 8)
                  return H.ioore(charTable, t3);
                t3 = (charTable[t3] & 1 << (char & 15)) !== 0;
              } else
                t3 = false;
              if (t3)
                ++index;
              else {
                if (char === 37) {
                  replacement = P._Uri__normalizeEscape(component, index, false);
                  if (replacement == null) {
                    index += 3;
                    break c$0;
                  }
                  if ("%" === replacement) {
                    replacement = "%25";
                    sourceLength = 1;
                  } else
                    sourceLength = 3;
                } else {
                  if (t1)
                    if (char <= 93) {
                      t3 = char >>> 4;
                      if (t3 >= 8)
                        return H.ioore(C.List_2Vk, t3);
                      t3 = (C.List_2Vk[t3] & 1 << (char & 15)) !== 0;
                    } else
                      t3 = false;
                  else
                    t3 = false;
                  if (t3) {
                    P._Uri__fail(component, index, "Invalid character");
                    replacement = null;
                    sourceLength = null;
                  } else {
                    if ((char & 64512) === 55296) {
                      t3 = index + 1;
                      if (t3 < end) {
                        tail = C.JSString_methods.codeUnitAt$1(component, t3);
                        if ((tail & 64512) === 56320) {
                          char = 65536 | (char & 1023) << 10 | tail & 1023;
                          sourceLength = 2;
                        } else
                          sourceLength = 1;
                      } else
                        sourceLength = 1;
                    } else
                      sourceLength = 1;
                    replacement = P._Uri__escapeChar(char);
                  }
                }
                if (buffer == null)
                  buffer = new P.StringBuffer("");
                buffer._contents += C.JSString_methods.substring$2(component, sectionStart, index);
                buffer._contents += H.S(replacement);
                if (typeof sourceLength !== "number")
                  return H.iae(sourceLength);
                index += sourceLength;
                sectionStart = index;
              }
            }
          }
          if (buffer == null)
            return;
          if (typeof sectionStart !== "number")
            return sectionStart.$lt();
          if (sectionStart < end)
            buffer._contents += t2.substring$2(component, sectionStart, end);
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        },
        _Uri__mayContainDotSegments: function(path) {
          if (J.getInterceptor$s(path).startsWith$1(path, "."))
            return true;
          return C.JSString_methods.indexOf$1(path, "/.") !== -1;
        },
        _Uri__removeDotSegments: function(path) {
          var output, t1, t2, appendSlash, _i, segment, t3;
          if (!P._Uri__mayContainDotSegments(path))
            return path;
          output = H.setRuntimeTypeInfo([], [P.String]);
          for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
            segment = t1[_i];
            if (J.$eq$(segment, "..")) {
              t3 = output.length;
              if (t3 !== 0) {
                if (0 >= t3)
                  return H.ioore(output, -1);
                output.pop();
                if (output.length === 0)
                  C.JSArray_methods.add$1(output, "");
              }
              appendSlash = true;
            } else if ("." === segment)
              appendSlash = true;
            else {
              C.JSArray_methods.add$1(output, segment);
              appendSlash = false;
            }
          }
          if (appendSlash)
            C.JSArray_methods.add$1(output, "");
          return C.JSArray_methods.join$1(output, "/");
        },
        _Uri__normalizeRelativePath: function(path, allowScheme) {
          var output, t1, t2, appendSlash, _i, segment;
          if (!P._Uri__mayContainDotSegments(path))
            return !allowScheme ? P._Uri__escapeScheme(path) : path;
          output = H.setRuntimeTypeInfo([], [P.String]);
          for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
            segment = t1[_i];
            if (".." === segment)
              if (output.length !== 0 && C.JSArray_methods.get$last(output) !== "..") {
                if (0 >= output.length)
                  return H.ioore(output, -1);
                output.pop();
                appendSlash = true;
              } else {
                C.JSArray_methods.add$1(output, "..");
                appendSlash = false;
              }
            else if ("." === segment)
              appendSlash = true;
            else {
              C.JSArray_methods.add$1(output, segment);
              appendSlash = false;
            }
          }
          t1 = output.length;
          if (t1 !== 0)
            if (t1 === 1) {
              if (0 >= t1)
                return H.ioore(output, 0);
              t1 = output[0].length === 0;
            } else
              t1 = false;
          else
            t1 = true;
          if (t1)
            return "./";
          if (appendSlash || C.JSArray_methods.get$last(output) === "..")
            C.JSArray_methods.add$1(output, "");
          if (!allowScheme) {
            if (0 >= output.length)
              return H.ioore(output, 0);
            C.JSArray_methods.$indexSet(output, 0, P._Uri__escapeScheme(output[0]));
          }
          return C.JSArray_methods.join$1(output, "/");
        },
        _Uri__escapeScheme: function(path) {
          var t1, i, char, t2;
          t1 = path.length;
          if (t1 >= 2 && P._Uri__isAlphabeticCharacter(J._codeUnitAt$1$s(path, 0)))
            for (i = 1; i < t1; ++i) {
              char = C.JSString_methods._codeUnitAt$1(path, i);
              if (char === 58)
                return C.JSString_methods.substring$2(path, 0, i) + "%3A" + C.JSString_methods.substring$1(path, i + 1);
              if (char <= 127) {
                t2 = char >>> 4;
                if (t2 >= 8)
                  return H.ioore(C.List_JYB, t2);
                t2 = (C.List_JYB[t2] & 1 << (char & 15)) === 0;
              } else
                t2 = true;
              if (t2)
                break;
            }
          return path;
        },
        _Uri__toWindowsFilePath: function(uri) {
          var segments, t1, hasDriveLetter, t2, host;
          segments = uri.get$pathSegments();
          t1 = segments.length;
          if (t1 > 0 && J.get$length$asx(segments[0]) === 2 && J.codeUnitAt$1$s(segments[0], 1) === 58) {
            if (0 >= t1)
              return H.ioore(segments, 0);
            P._Uri__checkWindowsDriveLetter(J.codeUnitAt$1$s(segments[0], 0), false);
            P._Uri__checkWindowsPathReservedCharacters(segments, false, 1);
            hasDriveLetter = true;
          } else {
            P._Uri__checkWindowsPathReservedCharacters(segments, false, 0);
            hasDriveLetter = false;
          }
          t2 = uri.get$hasAbsolutePath() && !hasDriveLetter ? "\\" : "";
          if (uri.get$hasAuthority()) {
            host = uri.get$host(uri);
            if (host.length !== 0)
              t2 = t2 + "\\" + H.S(host) + "\\";
          }
          t2 = P.StringBuffer__writeAll(t2, segments, "\\");
          t1 = hasDriveLetter && t1 === 1 ? t2 + "\\" : t2;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        },
        _Uri__hexCharPairToByte: function(s, pos) {
          var t1, byte, i, charCode;
          for (t1 = J.getInterceptor$s(s), byte = 0, i = 0; i < 2; ++i) {
            charCode = t1._codeUnitAt$1(s, pos + i);
            if (48 <= charCode && charCode <= 57)
              byte = byte * 16 + charCode - 48;
            else {
              charCode |= 32;
              if (97 <= charCode && charCode <= 102)
                byte = byte * 16 + charCode - 87;
              else
                throw H.wrapException(P.ArgumentError$("Invalid URL encoding"));
            }
          }
          return byte;
        },
        _Uri__uriDecode: function(text, start, end, encoding, plusToSpace) {
          var simple, t1, i, codeUnit, t2, bytes;
          t1 = J.getInterceptor$s(text);
          i = start;
          while (true) {
            if (!(i < end)) {
              simple = true;
              break;
            }
            codeUnit = t1._codeUnitAt$1(text, i);
            if (codeUnit <= 127)
              if (codeUnit !== 37)
                t2 = plusToSpace && codeUnit === 43;
              else
                t2 = true;
            else
              t2 = true;
            if (t2) {
              simple = false;
              break;
            }
            ++i;
          }
          if (simple) {
            if (C.Utf8Codec_false !== encoding)
              t2 = false;
            else
              t2 = true;
            if (t2)
              return t1.substring$2(text, start, end);
            else
              bytes = new H.CodeUnits(t1.substring$2(text, start, end));
          } else {
            bytes = H.setRuntimeTypeInfo([], [P.int]);
            for (i = start; i < end; ++i) {
              codeUnit = t1._codeUnitAt$1(text, i);
              if (codeUnit > 127)
                throw H.wrapException(P.ArgumentError$("Illegal percent encoding in URI"));
              if (codeUnit === 37) {
                if (i + 3 > text.length)
                  throw H.wrapException(P.ArgumentError$("Truncated URI"));
                C.JSArray_methods.add$1(bytes, P._Uri__hexCharPairToByte(text, i + 1));
                i += 2;
              } else if (plusToSpace && codeUnit === 43)
                C.JSArray_methods.add$1(bytes, 32);
              else
                C.JSArray_methods.add$1(bytes, codeUnit);
            }
          }
          return encoding.decode$1(0, bytes);
        },
        _Uri__isAlphabeticCharacter: function(codeUnit) {
          var lowerCase = codeUnit | 32;
          return 97 <= lowerCase && lowerCase <= 122;
        }
      }
    },
    _Uri__Uri$notSimple_closure: {
      "^": "Closure:26;uri,portStart",
      call$1: function(_) {
        var t1 = this.portStart;
        if (typeof t1 !== "number")
          return t1.$add();
        throw H.wrapException(P.FormatException$("Invalid port", this.uri, t1 + 1));
      }
    },
    _Uri__checkNonWindowsPathReservedCharacters_closure: {
      "^": "Closure:26;argumentError",
      call$1: function(segment) {
        H.stringTypeCheck(segment);
        if (J.contains$1$asx(segment, "/"))
          if (this.argumentError)
            throw H.wrapException(P.ArgumentError$("Illegal path character " + segment));
          else
            throw H.wrapException(P.UnsupportedError$("Illegal path character " + segment));
      }
    },
    _Uri__makePath_closure: {
      "^": "Closure:10;",
      call$1: [function(s) {
        return P._Uri__uriEncode(C.List_qg40, H.stringTypeCheck(s), C.Utf8Codec_false, false);
      }, null, null, 4, 0, null, 28, "call"]
    },
    UriData: {
      "^": "Object;_text,_separatorIndices,_uriCache",
      get$uri: function() {
        var t1, t2, queryIndex, end, query;
        t1 = this._uriCache;
        if (t1 != null)
          return t1;
        t1 = this._separatorIndices;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t2 = this._text;
        t1 = t1[0] + 1;
        queryIndex = J.indexOf$2$asx(t2, "?", t1);
        end = t2.length;
        if (queryIndex >= 0) {
          query = P._Uri__normalizeOrSubstring(t2, queryIndex + 1, end, C.List_CVk, false);
          end = queryIndex;
        } else
          query = null;
        t1 = new P._DataUri(this, "data", null, null, null, P._Uri__normalizeOrSubstring(t2, t1, end, C.List_qg4, false), query, null);
        this._uriCache = t1;
        return t1;
      },
      toString$0: function(_) {
        var t1, t2;
        t1 = this._separatorIndices;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t2 = this._text;
        return t1[0] === -1 ? "data:" + H.S(t2) : t2;
      },
      static: {
        UriData__parse: function(text, start, sourceUri) {
          var indices, t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data;
          indices = H.setRuntimeTypeInfo([start - 1], [P.int]);
          for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
            char = C.JSString_methods._codeUnitAt$1(text, i);
            if (char === 44 || char === 59)
              break;
            if (char === 47) {
              if (slashIndex < 0) {
                slashIndex = i;
                continue;
              }
              throw H.wrapException(P.FormatException$("Invalid MIME type", text, i));
            }
          }
          if (slashIndex < 0 && i > start)
            throw H.wrapException(P.FormatException$("Invalid MIME type", text, i));
          for (; char !== 44;) {
            C.JSArray_methods.add$1(indices, i);
            ++i;
            for (equalsIndex = -1; i < t1; ++i) {
              char = C.JSString_methods._codeUnitAt$1(text, i);
              if (char === 61) {
                if (equalsIndex < 0)
                  equalsIndex = i;
              } else if (char === 59 || char === 44)
                break;
            }
            if (equalsIndex >= 0)
              C.JSArray_methods.add$1(indices, equalsIndex);
            else {
              lastSeparator = C.JSArray_methods.get$last(indices);
              if (char !== 44 || i !== lastSeparator + 7 || !C.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
                throw H.wrapException(P.FormatException$("Expecting '='", text, i));
              break;
            }
          }
          C.JSArray_methods.add$1(indices, i);
          t2 = i + 1;
          if ((indices.length & 1) === 1)
            text = C.Base64Codec_Base64Encoder_false.normalize$3(0, text, t2, t1);
          else {
            data = P._Uri__normalize(text, t2, t1, C.List_CVk, true);
            if (data != null)
              text = C.JSString_methods.replaceRange$3(text, t2, t1, data);
          }
          return new P.UriData(text, indices, sourceUri);
        }
      }
    },
    _createTables_closure: {
      "^": "Closure:254;",
      call$1: function(_) {
        return new Uint8Array(96);
      }
    },
    _createTables_build: {
      "^": "Closure:255;tables",
      call$2: function(state, defaultTransition) {
        var t1 = this.tables;
        if (state >= t1.length)
          return H.ioore(t1, state);
        t1 = t1[state];
        J.fillRange$3$x(t1, 0, 96, defaultTransition);
        return t1;
      }
    },
    _createTables_setChars: {
      "^": "Closure;",
      call$3: function(target, chars, transition) {
        var t1, i, t2;
        for (t1 = chars.length, i = 0; i < t1; ++i) {
          t2 = C.JSString_methods._codeUnitAt$1(chars, i) ^ 96;
          if (t2 >= target.length)
            return H.ioore(target, t2);
          target[t2] = transition;
        }
      }
    },
    _createTables_setRange: {
      "^": "Closure;",
      call$3: function(target, range, transition) {
        var i, n, t1;
        for (i = C.JSString_methods._codeUnitAt$1(range, 0), n = C.JSString_methods._codeUnitAt$1(range, 1); i <= n; ++i) {
          t1 = (i ^ 96) >>> 0;
          if (t1 >= target.length)
            return H.ioore(target, t1);
          target[t1] = transition;
        }
      }
    },
    _SimpleUri: {
      "^": "Object;_uri,_schemeEnd,_hostStart,_portStart,_pathStart,_queryStart,_fragmentStart,_schemeCache,0_hashCodeCache",
      get$hasAuthority: function() {
        return this._hostStart > 0;
      },
      get$hasPort: function() {
        var t1, t2;
        if (this._hostStart > 0) {
          t1 = this._portStart;
          if (typeof t1 !== "number")
            return t1.$add();
          t2 = this._pathStart;
          if (typeof t2 !== "number")
            return H.iae(t2);
          t2 = t1 + 1 < t2;
          t1 = t2;
        } else
          t1 = false;
        return t1;
      },
      get$hasQuery: function() {
        var t1, t2;
        t1 = this._queryStart;
        t2 = this._fragmentStart;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        return t1 < t2;
      },
      get$hasFragment: function() {
        var t1, t2;
        t1 = this._fragmentStart;
        t2 = this._uri.length;
        if (typeof t1 !== "number")
          return t1.$lt();
        return t1 < t2;
      },
      get$_isFile: function() {
        return this._schemeEnd === 4 && J.startsWith$1$s(this._uri, "file");
      },
      get$_isHttp: function() {
        return this._schemeEnd === 4 && J.startsWith$1$s(this._uri, "http");
      },
      get$_isHttps: function() {
        return this._schemeEnd === 5 && J.startsWith$1$s(this._uri, "https");
      },
      get$hasAbsolutePath: function() {
        return J.startsWith$2$s(this._uri, "/", this._pathStart);
      },
      get$scheme: function() {
        var t1, t2;
        t1 = this._schemeEnd;
        if (typeof t1 !== "number")
          return t1.$le();
        if (t1 <= 0)
          return "";
        t2 = this._schemeCache;
        if (t2 != null)
          return t2;
        if (this.get$_isHttp()) {
          this._schemeCache = "http";
          t1 = "http";
        } else if (this.get$_isHttps()) {
          this._schemeCache = "https";
          t1 = "https";
        } else if (this.get$_isFile()) {
          this._schemeCache = "file";
          t1 = "file";
        } else if (t1 === 7 && J.startsWith$1$s(this._uri, "package")) {
          this._schemeCache = "package";
          t1 = "package";
        } else {
          t1 = J.substring$2$s(this._uri, 0, t1);
          this._schemeCache = t1;
        }
        return t1;
      },
      get$userInfo: function() {
        var t1, t2;
        t1 = this._hostStart;
        t2 = this._schemeEnd;
        if (typeof t2 !== "number")
          return t2.$add();
        t2 += 3;
        return t1 > t2 ? J.substring$2$s(this._uri, t2, t1 - 1) : "";
      },
      get$host: function(_) {
        var t1 = this._hostStart;
        return t1 > 0 ? J.substring$2$s(this._uri, t1, this._portStart) : "";
      },
      get$port: function(_) {
        var t1;
        if (this.get$hasPort()) {
          t1 = this._portStart;
          if (typeof t1 !== "number")
            return t1.$add();
          return P.int_parse(J.substring$2$s(this._uri, t1 + 1, this._pathStart), null, null);
        }
        if (this.get$_isHttp())
          return 80;
        if (this.get$_isHttps())
          return 443;
        return 0;
      },
      get$path: function(_) {
        return J.substring$2$s(this._uri, this._pathStart, this._queryStart);
      },
      get$query: function(_) {
        var t1, t2;
        t1 = this._queryStart;
        t2 = this._fragmentStart;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        return t1 < t2 ? J.substring$2$s(this._uri, t1 + 1, t2) : "";
      },
      get$fragment: function() {
        var t1, t2, t3;
        t1 = this._fragmentStart;
        t2 = this._uri;
        t3 = t2.length;
        if (typeof t1 !== "number")
          return t1.$lt();
        return t1 < t3 ? J.substring$1$s(t2, t1 + 1) : "";
      },
      get$pathSegments: function() {
        var start, end, t1, t2, parts, i;
        start = this._pathStart;
        end = this._queryStart;
        t1 = this._uri;
        if (J.getInterceptor$s(t1).startsWith$2(t1, "/", start)) {
          if (typeof start !== "number")
            return start.$add();
          ++start;
        }
        if (start == end)
          return C.List_empty0;
        t2 = P.String;
        parts = H.setRuntimeTypeInfo([], [t2]);
        i = start;
        while (true) {
          if (typeof i !== "number")
            return i.$lt();
          if (typeof end !== "number")
            return H.iae(end);
          if (!(i < end))
            break;
          if (C.JSString_methods.codeUnitAt$1(t1, i) === 47) {
            C.JSArray_methods.add$1(parts, C.JSString_methods.substring$2(t1, start, i));
            start = i + 1;
          }
          ++i;
        }
        C.JSArray_methods.add$1(parts, C.JSString_methods.substring$2(t1, start, end));
        return P.List_List$unmodifiable(parts, t2);
      },
      get$queryParameters: function() {
        var t1, t2;
        t1 = this._queryStart;
        t2 = this._fragmentStart;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 >= t2)
          return C.Map_empty1;
        t1 = P.String;
        return new P.UnmodifiableMapView(P.Uri_splitQueryString(this.get$query(this), C.Utf8Codec_false), [t1, t1]);
      },
      _isPort$1: function(port) {
        var t1, portDigitStart;
        t1 = this._portStart;
        if (typeof t1 !== "number")
          return t1.$add();
        portDigitStart = t1 + 1;
        return portDigitStart + port.length === this._pathStart && J.startsWith$2$s(this._uri, port, portDigitStart);
      },
      removeFragment$0: function() {
        var t1, t2, t3;
        t1 = this._fragmentStart;
        t2 = this._uri;
        t3 = t2.length;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 >= t3)
          return this;
        return new P._SimpleUri(J.substring$2$s(t2, 0, t1), this._schemeEnd, this._hostStart, this._portStart, this._pathStart, this._queryStart, t1, this._schemeCache);
      },
      resolve$1: function(reference) {
        return this.resolveUri$1(P.Uri_parse(reference, 0, null));
      },
      resolveUri$1: function(reference) {
        if (reference instanceof P._SimpleUri)
          return this._simpleMerge$2(this, reference);
        return this._toNonSimple$0().resolveUri$1(reference);
      },
      _simpleMerge$2: function(base, ref) {
        var t1, t2, t3, isSimple, delta, newUri, t4, t5, t6, refStart, baseStart, baseEnd, baseUri, baseStart0, backCount, refStart0, insert;
        t1 = ref._schemeEnd;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0)
          return ref;
        t2 = ref._hostStart;
        if (t2 > 0) {
          t3 = base._schemeEnd;
          if (typeof t3 !== "number")
            return t3.$gt();
          if (t3 <= 0)
            return ref;
          if (base.get$_isFile())
            isSimple = ref._pathStart != ref._queryStart;
          else if (base.get$_isHttp())
            isSimple = !ref._isPort$1("80");
          else
            isSimple = !base.get$_isHttps() || !ref._isPort$1("443");
          if (isSimple) {
            delta = t3 + 1;
            newUri = J.substring$2$s(base._uri, 0, delta) + J.substring$1$s(ref._uri, t1 + 1);
            t1 = ref._portStart;
            if (typeof t1 !== "number")
              return t1.$add();
            t4 = ref._pathStart;
            if (typeof t4 !== "number")
              return t4.$add();
            t5 = ref._queryStart;
            if (typeof t5 !== "number")
              return t5.$add();
            t6 = ref._fragmentStart;
            if (typeof t6 !== "number")
              return t6.$add();
            return new P._SimpleUri(newUri, t3, t2 + delta, t1 + delta, t4 + delta, t5 + delta, t6 + delta, base._schemeCache);
          } else
            return this._toNonSimple$0().resolveUri$1(ref);
        }
        refStart = ref._pathStart;
        t1 = ref._queryStart;
        if (refStart == t1) {
          t2 = ref._fragmentStart;
          if (typeof t1 !== "number")
            return t1.$lt();
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (t1 < t2) {
            t3 = base._queryStart;
            if (typeof t3 !== "number")
              return t3.$sub();
            delta = t3 - t1;
            return new P._SimpleUri(J.substring$2$s(base._uri, 0, t3) + J.substring$1$s(ref._uri, t1), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, t1 + delta, t2 + delta, base._schemeCache);
          }
          t1 = ref._uri;
          if (t2 < t1.length) {
            t3 = base._fragmentStart;
            if (typeof t3 !== "number")
              return t3.$sub();
            return new P._SimpleUri(J.substring$2$s(base._uri, 0, t3) + J.substring$1$s(t1, t2), base._schemeEnd, base._hostStart, base._portStart, base._pathStart, base._queryStart, t2 + (t3 - t2), base._schemeCache);
          }
          return base.removeFragment$0();
        }
        t2 = ref._uri;
        if (J.getInterceptor$s(t2).startsWith$2(t2, "/", refStart)) {
          t3 = base._pathStart;
          if (typeof t3 !== "number")
            return t3.$sub();
          if (typeof refStart !== "number")
            return H.iae(refStart);
          delta = t3 - refStart;
          newUri = J.substring$2$s(base._uri, 0, t3) + C.JSString_methods.substring$1(t2, refStart);
          if (typeof t1 !== "number")
            return t1.$add();
          t2 = ref._fragmentStart;
          if (typeof t2 !== "number")
            return t2.$add();
          return new P._SimpleUri(newUri, base._schemeEnd, base._hostStart, base._portStart, t3, t1 + delta, t2 + delta, base._schemeCache);
        }
        baseStart = base._pathStart;
        baseEnd = base._queryStart;
        if (baseStart == baseEnd && base._hostStart > 0) {
          for (; C.JSString_methods.startsWith$2(t2, "../", refStart);) {
            if (typeof refStart !== "number")
              return refStart.$add();
            refStart += 3;
          }
          if (typeof baseStart !== "number")
            return baseStart.$sub();
          if (typeof refStart !== "number")
            return H.iae(refStart);
          delta = baseStart - refStart + 1;
          newUri = J.substring$2$s(base._uri, 0, baseStart) + "/" + C.JSString_methods.substring$1(t2, refStart);
          if (typeof t1 !== "number")
            return t1.$add();
          t2 = ref._fragmentStart;
          if (typeof t2 !== "number")
            return t2.$add();
          return new P._SimpleUri(newUri, base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, t2 + delta, base._schemeCache);
        }
        baseUri = base._uri;
        for (t3 = J.getInterceptor$s(baseUri), baseStart0 = baseStart; t3.startsWith$2(baseUri, "../", baseStart0);) {
          if (typeof baseStart0 !== "number")
            return baseStart0.$add();
          baseStart0 += 3;
        }
        backCount = 0;
        while (true) {
          if (typeof refStart !== "number")
            return refStart.$add();
          refStart0 = refStart + 3;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(refStart0 <= t1 && C.JSString_methods.startsWith$2(t2, "../", refStart)))
            break;
          ++backCount;
          refStart = refStart0;
        }
        insert = "";
        while (true) {
          if (typeof baseEnd !== "number")
            return baseEnd.$gt();
          if (typeof baseStart0 !== "number")
            return H.iae(baseStart0);
          if (!(baseEnd > baseStart0))
            break;
          --baseEnd;
          if (C.JSString_methods.codeUnitAt$1(baseUri, baseEnd) === 47) {
            if (backCount === 0) {
              insert = "/";
              break;
            }
            --backCount;
            insert = "/";
          }
        }
        if (baseEnd === baseStart0) {
          t3 = base._schemeEnd;
          if (typeof t3 !== "number")
            return t3.$gt();
          t3 = t3 <= 0 && !C.JSString_methods.startsWith$2(baseUri, "/", baseStart);
        } else
          t3 = false;
        if (t3) {
          refStart -= backCount * 3;
          insert = "";
        }
        delta = baseEnd - refStart + insert.length;
        newUri = C.JSString_methods.substring$2(baseUri, 0, baseEnd) + insert + C.JSString_methods.substring$1(t2, refStart);
        t2 = ref._fragmentStart;
        if (typeof t2 !== "number")
          return t2.$add();
        return new P._SimpleUri(newUri, base._schemeEnd, base._hostStart, base._portStart, baseStart, t1 + delta, t2 + delta, base._schemeCache);
      },
      toFilePath$1$windows: function(windows) {
        var t1, t2, t3;
        t1 = this._schemeEnd;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (t1 >= 0 && !this.get$_isFile())
          throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a " + H.S(this.get$scheme()) + " URI"));
        t1 = this._queryStart;
        t2 = this._uri;
        t3 = t2.length;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < t3) {
          t2 = this._fragmentStart;
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (t1 < t2)
            throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a query component"));
          throw H.wrapException(P.UnsupportedError$("Cannot extract a file path from a URI with a fragment component"));
        }
        windows = $.$get$_Uri__isWindowsCached();
        if (windows)
          t1 = P._Uri__toWindowsFilePath(this);
        else {
          t3 = this._portStart;
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (this._hostStart < t3)
            H.throwExpression(P.UnsupportedError$("Cannot extract a non-Windows file path from a file URI with an authority"));
          t1 = J.substring$2$s(t2, this._pathStart, t1);
        }
        return t1;
      },
      toFilePath$0: function() {
        return this.toFilePath$1$windows(null);
      },
      get$hashCode: function(_) {
        var t1 = this._hashCodeCache;
        if (t1 == null) {
          t1 = J.get$hashCode$(this._uri);
          this._hashCodeCache = t1;
        }
        return t1;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!!J.getInterceptor$(other).$isUri)
          return this._uri == other.toString$0(0);
        return false;
      },
      _toNonSimple$0: function() {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = this.get$scheme();
        t2 = this.get$userInfo();
        t3 = this._hostStart > 0 ? this.get$host(this) : null;
        t4 = this.get$hasPort() ? this.get$port(this) : null;
        t5 = this._uri;
        t6 = this._queryStart;
        t7 = J.substring$2$s(t5, this._pathStart, t6);
        t8 = this._fragmentStart;
        if (typeof t6 !== "number")
          return t6.$lt();
        if (typeof t8 !== "number")
          return H.iae(t8);
        t6 = t6 < t8 ? this.get$query(this) : null;
        return new P._Uri(t1, t2, t3, t4, t7, t6, t8 < t5.length ? this.get$fragment() : null);
      },
      toString$0: function(_) {
        return this._uri;
      },
      $isUri: 1
    },
    _DataUri: {
      "^": "_Uri;_core$_data,scheme,_userInfo,_host,_port,path,_query,_fragment,0_pathSegments,0_text,0_hashCodeCache,0_queryParameters,0_queryParameterLists"
    }
  }], ["dart.dom.html", "dart:html",, W, {
    "^": "",
    document: function() {
      return document;
    },
    promiseToFuture: function(jsPromise, $T) {
      var t1, completer;
      t1 = new P._Future(0, $.Zone__current, [$T]);
      completer = new P._AsyncCompleter(t1, [$T]);
      jsPromise.then(H.convertDartClosureToJS(new W.promiseToFuture_closure(completer, $T), 1), H.convertDartClosureToJS(new W.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    Blob_Blob: function(blobParts, type, endings) {
      var t1 = new self.Blob(blobParts);
      return t1;
    },
    DivElement_DivElement: function() {
      return document.createElement("div");
    },
    Element__determineTransitionEventType: [function(e) {
      H.interceptedTypeCheck(e, "$isEventTarget");
      if (P.Device_isWebKit())
        return "webkitTransitionEnd";
      else if (P.Device_isOpera())
        return "oTransitionEnd";
      return "transitionend";
    }, null, null, 4, 0, null, 8],
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_hash4: function(a, b, c, d) {
      var t1, hash;
      t1 = W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, a), b), c), d);
      hash = 536870911 & t1 + ((67108863 & t1) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _convertNativeToDart_Window: function(win) {
      if (win == null)
        return;
      return W._DOMWindowCrossFrame__createSafe(win);
    },
    _convertNativeToDart_EventTarget: function(e) {
      var $window;
      if (e == null)
        return;
      if ("postMessage" in e) {
        $window = W._DOMWindowCrossFrame__createSafe(e);
        if (!!J.getInterceptor$($window).$isEventTarget)
          return $window;
        return;
      } else
        return H.interceptedTypeCheck(e, "$isEventTarget");
    },
    _convertNativeToDart_XHR_Response: function(o) {
      if (!!J.getInterceptor$(o).$isDocument)
        return o;
      return new P._AcceptStructuredCloneDart2Js([], [], false).convertNativeToDart_AcceptStructuredClone$2$mustCopy(o, true);
    },
    _wrapZone: function(callback, $T) {
      var t1;
      H.functionTypeCheck(callback, {func: 1, ret: -1, args: [$T]});
      t1 = $.Zone__current;
      if (t1 === C.C__RootZone)
        return callback;
      return t1.bindUnaryCallbackGuarded$1$1(callback, $T);
    },
    promiseToFuture_closure: {
      "^": "Closure:1;completer,T",
      call$1: [function(promiseValue) {
        return this.completer.complete$1(0, H.futureOrCheck(promiseValue, {futureOr: 1, type: this.T}));
      }, null, null, 4, 0, null, 55, "call"]
    },
    promiseToFuture_closure0: {
      "^": "Closure:1;completer",
      call$1: [function(promiseError) {
        return this.completer.completeError$1(promiseError);
      }, null, null, 4, 0, null, 65, "call"]
    },
    HtmlElement: {
      "^": "Element;",
      $isHtmlElement: 1,
      "%": "HTMLBRElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDialogElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMarqueeElement|HTMLMenuElement|HTMLModElement|HTMLOListElement|HTMLOptGroupElement|HTMLParagraphElement|HTMLPictureElement|HTMLPreElement|HTMLQuoteElement|HTMLScriptElement|HTMLShadowElement|HTMLSourceElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableElement|HTMLTableHeaderCellElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTemplateElement|HTMLTimeElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"
    },
    Accelerometer: {
      "^": "Sensor;0x=,0y=",
      "%": "Accelerometer|LinearAccelerationSensor"
    },
    AccessibleNode: {
      "^": "EventTarget;",
      $isAccessibleNode: 1,
      "%": "AccessibleNode"
    },
    AccessibleNodeList: {
      "^": "Interceptor;0length=",
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 85],
      "%": "AccessibleNodeList"
    },
    AnchorElement: {
      "^": "HtmlElement;0target=",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isAnchorElement: 1,
      "%": "HTMLAnchorElement"
    },
    Animation: {
      "^": "EventTarget;0id=",
      $isAnimation: 1,
      "%": "Animation"
    },
    AnimationEvent: {
      "^": "Event;",
      $isAnimationEvent: 1,
      "%": "AnimationEvent"
    },
    AreaElement: {
      "^": "HtmlElement;0target=",
      toString$0: function(receiver) {
        return String(receiver);
      },
      "%": "HTMLAreaElement"
    },
    BackgroundFetchEvent: {
      "^": "ExtendableEvent;0id=",
      "%": "BackgroundFetchClickEvent|BackgroundFetchEvent|BackgroundFetchFailEvent|BackgroundFetchedEvent"
    },
    BackgroundFetchRegistration: {
      "^": "EventTarget;0id=",
      "%": "BackgroundFetchRegistration"
    },
    BaseElement: {
      "^": "HtmlElement;0target=",
      "%": "HTMLBaseElement"
    },
    Blob: {
      "^": "Interceptor;",
      $isBlob: 1,
      "%": ";Blob"
    },
    BodyElement: {
      "^": "HtmlElement;",
      get$onBlur: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "blur", false, [W.Event]);
      },
      get$onFocus: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "focus", false, [W.Event]);
      },
      get$onScroll: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "scroll", false, [W.Event]);
      },
      "%": "HTMLBodyElement"
    },
    BroadcastChannel: {
      "^": "EventTarget;0name=",
      "%": "BroadcastChannel"
    },
    ButtonElement: {
      "^": "HtmlElement;0name=,0value=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLButtonElement"
    },
    CanvasElement: {
      "^": "HtmlElement;0height=,0width=",
      "%": "HTMLCanvasElement"
    },
    CharacterData: {
      "^": "Node;0length=",
      "%": ";CharacterData"
    },
    Client0: {
      "^": "Interceptor;0id=",
      "%": "Client|WindowClient"
    },
    Comment: {
      "^": "CharacterData;",
      $isComment: 1,
      "%": "Comment"
    },
    Credential: {
      "^": "Interceptor;0id=",
      "%": "PublicKeyCredential;Credential"
    },
    CredentialUserData: {
      "^": "Interceptor;0name=",
      "%": "CredentialUserData"
    },
    CssKeyframesRule: {
      "^": "CssRule;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "CSSKeyframesRule|MozCSSKeyframesRule|WebKitCSSKeyframesRule"
    },
    CssNumericValue: {
      "^": "CssStyleValue;",
      add$1: function(receiver, value) {
        return receiver.add(H.interceptedTypeCheck(value, "$isCssNumericValue"));
      },
      $isCssNumericValue: 1,
      "%": "CSSNumericValue|CSSUnitValue"
    },
    CssPerspective: {
      "^": "CssTransformComponent;0length=",
      "%": "CSSPerspective"
    },
    CssPositionValue: {
      "^": "CssStyleValue;0x=,0y=",
      "%": "CSSPositionValue"
    },
    CssRotation: {
      "^": "CssTransformComponent;0x=,0y=",
      "%": "CSSRotation"
    },
    CssRule: {
      "^": "Interceptor;",
      $isCssRule: 1,
      "%": "CSSCharsetRule|CSSConditionRule|CSSFontFaceRule|CSSGroupingRule|CSSImportRule|CSSKeyframeRule|CSSMediaRule|CSSNamespaceRule|CSSPageRule|CSSStyleRule|CSSSupportsRule|CSSViewportRule|MozCSSKeyframeRule|WebKitCSSKeyframeRule;CSSRule"
    },
    CssScale: {
      "^": "CssTransformComponent;0x=,0y=",
      "%": "CSSScale"
    },
    CssStyleDeclaration: {
      "^": "_CssStyleDeclaration_Interceptor_CssStyleDeclarationBase;0length=",
      getPropertyValue$1: function(receiver, propertyName) {
        var propValue = this._getPropertyValue$1(receiver, this._browserPropertyName$1(receiver, propertyName));
        return propValue == null ? "" : propValue;
      },
      _browserPropertyName$1: function(receiver, propertyName) {
        var t1, $name;
        t1 = $.$get$CssStyleDeclaration__propertyCache();
        $name = t1[propertyName];
        if (typeof $name === "string")
          return $name;
        $name = this._supportedBrowserPropertyName$1(receiver, propertyName);
        t1[propertyName] = $name;
        return $name;
      },
      _supportedBrowserPropertyName$1: function(receiver, propertyName) {
        var prefixed;
        if (propertyName.replace(/^-ms-/, "ms-").replace(/-([\da-z])/ig, function(_, letter) {
          return letter.toUpperCase();
        }) in receiver)
          return propertyName;
        prefixed = P.Device_cssPrefix() + H.S(propertyName);
        if (prefixed in receiver)
          return prefixed;
        return propertyName;
      },
      _setPropertyHelper$3: function(receiver, propertyName, value, priority) {
        if (value == null)
          value = "";
        if (priority == null)
          priority = "";
        receiver.setProperty(propertyName, value, priority);
      },
      _getPropertyValue$1: function(receiver, property) {
        return receiver.getPropertyValue(property);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 15],
      get$bottom: function(receiver) {
        return receiver.bottom;
      },
      get$height: function(receiver) {
        return receiver.height;
      },
      get$left: function(receiver) {
        return receiver.left;
      },
      get$right: function(receiver) {
        return receiver.right;
      },
      get$top: function(receiver) {
        return receiver.top;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      "%": "CSS2Properties|CSSStyleDeclaration|MSStyleCSSProperties"
    },
    CssStyleDeclarationBase: {
      "^": "Object;",
      get$bottom: function(receiver) {
        return this.getPropertyValue$1(receiver, "bottom");
      },
      get$height: function(receiver) {
        return this.getPropertyValue$1(receiver, "height");
      },
      get$left: function(receiver) {
        return this.getPropertyValue$1(receiver, "left");
      },
      get$right: function(receiver) {
        return this.getPropertyValue$1(receiver, "right");
      },
      get$top: function(receiver) {
        return this.getPropertyValue$1(receiver, "top");
      },
      get$width: function(receiver) {
        return this.getPropertyValue$1(receiver, "width");
      }
    },
    CssStyleValue: {
      "^": "Interceptor;",
      "%": "CSSImageValue|CSSKeywordValue|CSSResourceValue|CSSURLImageValue;CSSStyleValue"
    },
    CssTransformComponent: {
      "^": "Interceptor;",
      "%": "CSSMatrixComponent|CSSSkew;CSSTransformComponent"
    },
    CssTransformValue: {
      "^": "CssStyleValue;0length=",
      "%": "CSSTransformValue"
    },
    CssTranslation: {
      "^": "CssTransformComponent;0x=,0y=",
      "%": "CSSTranslation"
    },
    CssUnparsedValue: {
      "^": "CssStyleValue;0length=",
      "%": "CSSUnparsedValue"
    },
    DataElement: {
      "^": "HtmlElement;0value=",
      "%": "HTMLDataElement"
    },
    DataTransferItem: {
      "^": "Interceptor;",
      $isDataTransferItem: 1,
      "%": "DataTransferItem"
    },
    DataTransferItemList: {
      "^": "Interceptor;0length=",
      add$2: function(receiver, data_OR_file, type) {
        return receiver.add(data_OR_file, type);
      },
      add$1: function($receiver, data_OR_file) {
        return $receiver.add(data_OR_file);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 86],
      $index: function(receiver, index) {
        return receiver[H.intTypeCheck(index)];
      },
      "%": "DataTransferItemList"
    },
    DeviceAcceleration: {
      "^": "Interceptor;0x=,0y=",
      "%": "DeviceAcceleration"
    },
    DivElement: {
      "^": "HtmlElement;",
      $isDivElement: 1,
      "%": "HTMLDivElement"
    },
    Document: {
      "^": "Node;",
      _createEvent$1: function(receiver, eventType) {
        return receiver.createEvent(eventType);
      },
      querySelector$1: function(receiver, selectors) {
        return receiver.querySelector(selectors);
      },
      _querySelectorAll$1: function(receiver, selectors) {
        return receiver.querySelectorAll(selectors);
      },
      get$onKeyUp: function(receiver) {
        return new W._EventStream(receiver, "keyup", false, [W.KeyboardEvent]);
      },
      get$onMouseDown: function(receiver) {
        return new W._EventStream(receiver, "mousedown", false, [W.MouseEvent]);
      },
      get$onMouseUp: function(receiver) {
        return new W._EventStream(receiver, "mouseup", false, [W.MouseEvent]);
      },
      $isDocument: 1,
      "%": "XMLDocument;Document"
    },
    DomError: {
      "^": "Interceptor;0name=",
      "%": "DOMError"
    },
    DomException: {
      "^": "Interceptor;",
      get$name: function(receiver) {
        var errorName = receiver.name;
        if (P.Device_isWebKit() && errorName === "SECURITY_ERR")
          return "SecurityError";
        if (P.Device_isWebKit() && errorName === "SYNTAX_ERR")
          return "SyntaxError";
        return errorName;
      },
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isDomException: 1,
      "%": "DOMException"
    },
    DomPoint: {
      "^": "DomPointReadOnly;",
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": "DOMPoint"
    },
    DomPointReadOnly: {
      "^": "Interceptor;",
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": ";DOMPointReadOnly"
    },
    DomRectList: {
      "^": "_DomRectList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.assertSubtype(value, "$isRectangle", [P.num], "$asRectangle");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 90],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [[P.Rectangle, P.num]];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [[P.Rectangle, P.num]];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [[P.Rectangle, P.num]];
      },
      $asListMixin: function() {
        return [[P.Rectangle, P.num]];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [[P.Rectangle, P.num]];
      },
      $isList: 1,
      $asList: function() {
        return [[P.Rectangle, P.num]];
      },
      $asImmutableListMixin: function() {
        return [[P.Rectangle, P.num]];
      },
      "%": "ClientRectList|DOMRectList"
    },
    DomRectReadOnly: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
      },
      $eq: function(receiver, other) {
        var t1;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isRectangle", [P.num], "$asRectangle"))
          return false;
        t1 = J.getInterceptor$x(other);
        return receiver.left === t1.get$left(other) && receiver.top === t1.get$top(other) && this.get$width(receiver) === t1.get$width(other) && this.get$height(receiver) === t1.get$height(other);
      },
      get$hashCode: function(receiver) {
        return W._JenkinsSmiHash_hash4(receiver.left & 0x1FFFFFFF, receiver.top & 0x1FFFFFFF, this.get$width(receiver) & 0x1FFFFFFF, this.get$height(receiver) & 0x1FFFFFFF);
      },
      get$topLeft: function(receiver) {
        return new P.Point(receiver.left, receiver.top, [P.num]);
      },
      get$bottom: function(receiver) {
        return receiver.bottom;
      },
      get$height: function(receiver) {
        return receiver.height;
      },
      get$left: function(receiver) {
        return receiver.left;
      },
      get$right: function(receiver) {
        return receiver.right;
      },
      get$top: function(receiver) {
        return receiver.top;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      $isRectangle: 1,
      $asRectangle: function() {
        return [P.num];
      },
      "%": ";DOMRectReadOnly"
    },
    DomStringList: {
      "^": "_DomStringList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.stringTypeCheck(value);
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 15],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [P.String];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [P.String];
      },
      $asListMixin: function() {
        return [P.String];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $asImmutableListMixin: function() {
        return [P.String];
      },
      "%": "DOMStringList"
    },
    DomStringMap: {
      "^": "Interceptor;",
      item$1: [function(receiver, $name) {
        return receiver.item($name);
      }, "call$1", "get$item", 5, 0, 10],
      "%": "DOMStringMap"
    },
    DomTokenList: {
      "^": "Interceptor;0length=",
      add$1: function(receiver, tokens) {
        return receiver.add(H.stringTypeCheck(tokens));
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 15],
      "%": "DOMTokenList"
    },
    _ChildrenElementList: {
      "^": "ListBase;_html$_element,_childElements",
      contains$1: function(_, element) {
        return J.contains$1$asx(this._childElements, element);
      },
      get$isEmpty: function(_) {
        return this._html$_element.firstElementChild == null;
      },
      get$length: function(_) {
        return this._childElements.length;
      },
      $index: function(_, index) {
        return H.interceptedTypeCheck(J.$index$asx(this._childElements, H.intTypeCheck(index)), "$isElement");
      },
      $indexSet: function(_, index, value) {
        H.intTypeCheck(index);
        J._replaceChild$2$x(this._html$_element, H.interceptedTypeCheck(value, "$isElement"), J.$index$asx(this._childElements, index));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize element lists"));
      },
      add$1: function(_, value) {
        H.interceptedTypeCheck(value, "$isElement");
        J.append$1$x(this._html$_element, value);
        return value;
      },
      get$iterator: function(_) {
        var t1 = this.toList$0(this);
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      removeWhere$1: function(_, test) {
        this._filter$2(0, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [W.Element]}), false);
      },
      _filter$2: function(_, test, retainMatching) {
        var t1, t2;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [W.Element]});
        t1 = J.get$children$x(this._html$_element);
        t2 = H.getRuntimeTypeArgument(t1, "ListMixin", 0);
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t2]});
        for (t1 = t1.get$iterator(t1), t2 = new H.WhereIterator(t1, test, [t2]); t2.moveNext$0();)
          J.remove$0$ax(t1.get$current(t1));
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [W.Element], "$asIterable");
        throw H.wrapException(P.UnimplementedError$(null));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      remove$1: function(_, object) {
        return false;
      },
      insert$2: function(_, index, element) {
        var t1, t2, t3;
        H.interceptedTypeCheck(element, "$isElement");
        if (index < 0 || index > this._childElements.length)
          throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this), null, null));
        t1 = this._childElements;
        t2 = t1.length;
        t3 = this._html$_element;
        if (index === t2)
          J.append$1$x(t3, element);
        else {
          if (index < 0 || index >= t2)
            return H.ioore(t1, index);
          J.insertBefore$2$x(t3, element, H.interceptedTypeCheck(t1[index], "$isElement"));
        }
      },
      removeAt$1: function(_, index) {
        var t1, result;
        t1 = this._childElements;
        if (index < 0 || index >= t1.length)
          return H.ioore(t1, index);
        result = H.interceptedTypeCheck(t1[index], "$isElement");
        J._removeChild$1$x(this._html$_element, result);
        return result;
      },
      $asEfficientLengthIterable: function() {
        return [W.Element];
      },
      $asListBase: function() {
        return [W.Element];
      },
      $asListMixin: function() {
        return [W.Element];
      },
      $asIterable: function() {
        return [W.Element];
      },
      $asList: function() {
        return [W.Element];
      }
    },
    _FrozenElementList: {
      "^": "ListBase;_nodeList,$ti",
      get$length: function(_) {
        return this._nodeList.length;
      },
      $index: function(_, index) {
        return H.assertSubtypeOfRuntimeType(C.NodeList_methods.$index(this._nodeList, H.intTypeCheck(index)), H.getTypeArgumentByIndex(this, 0));
      },
      $indexSet: function(_, index, value) {
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(P.UnsupportedError$("Cannot modify list"));
      }
    },
    Element: {
      "^": "Node;0tabIndex=,0className=,0id=",
      get$children: function(receiver) {
        return new W._ChildrenElementList(receiver, receiver.children);
      },
      get$classes: function(receiver) {
        return new W._ElementCssClassSet(receiver);
      },
      getComputedStyle$1: function(receiver, pseudoElement) {
        return C.Window_methods._getComputedStyle$2(window, receiver, "");
      },
      getComputedStyle$0: function($receiver) {
        return this.getComputedStyle$1($receiver, null);
      },
      get$offset: function(receiver) {
        return P.Rectangle$(C.JSNumber_methods.round$0(receiver.offsetLeft), C.JSNumber_methods.round$0(receiver.offsetTop), C.JSNumber_methods.round$0(receiver.offsetWidth), C.JSNumber_methods.round$0(receiver.offsetHeight), P.num);
      },
      animate$2: function(receiver, $frames, timing) {
        var t1, convertedFrames, convertedTiming;
        H.assertSubtype($frames, "$isIterable", [[P.Map, P.String,,]], "$asIterable");
        t1 = !!J.getInterceptor$($frames).$isIterable;
        if (!t1 || !C.JSArray_methods.every$1($frames, new W.Element_animate_closure()))
          throw H.wrapException(P.ArgumentError$("The frames parameter should be a List of Maps with frame information"));
        if (t1) {
          t1 = H.getTypeArgumentByIndex($frames, 0);
          convertedFrames = new H.MappedListIterable($frames, H.functionTypeCheck(P.html_common__convertDartToNative_Dictionary$closure(), {func: 1, ret: null, args: [t1]}), [t1, null]).toList$0(0);
        } else
          convertedFrames = $frames;
        convertedTiming = !!J.getInterceptor$(timing).$isMap ? P.convertDartToNative_Dictionary(timing, null) : timing;
        return convertedTiming == null ? this._animate$1(receiver, convertedFrames) : this._animate$2(receiver, convertedFrames, convertedTiming);
      },
      _animate$2: function(receiver, effect, timing) {
        return receiver.animate(effect, timing);
      },
      _animate$1: function($receiver, effect) {
        return $receiver.animate(effect);
      },
      toString$0: function(receiver) {
        return receiver.localName;
      },
      focus$0: function(receiver) {
        return receiver.focus();
      },
      getAttribute$1: function(receiver, $name) {
        return receiver.getAttribute($name);
      },
      _hasAttribute$1: function(receiver, $name) {
        return receiver.hasAttribute($name);
      },
      _removeAttribute$1: function(receiver, $name) {
        return receiver.removeAttribute($name);
      },
      setAttribute$2: function(receiver, $name, value) {
        return receiver.setAttribute($name, value);
      },
      querySelector$1: function(receiver, selectors) {
        return receiver.querySelector(selectors);
      },
      get$onBlur: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "blur", false, [W.Event]);
      },
      get$onFocus: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "focus", false, [W.Event]);
      },
      get$onMouseLeave: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "mouseleave", false, [W.MouseEvent]);
      },
      get$onMouseOver: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "mouseover", false, [W.MouseEvent]);
      },
      get$onScroll: function(receiver) {
        return new W._ElementEventStreamImpl(receiver, "scroll", false, [W.Event]);
      },
      $isElement: 1,
      "%": ";Element"
    },
    Element_animate_closure: {
      "^": "Closure:94;",
      call$1: function(x) {
        return !!J.getInterceptor$(H.assertSubtype(x, "$isMap", [P.String, null], "$asMap")).$isMap;
      }
    },
    EmbedElement: {
      "^": "HtmlElement;0height=,0name=,0width=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLEmbedElement"
    },
    Entry: {
      "^": "Interceptor;0name=",
      _html$_remove$2: function(receiver, successCallback, errorCallback) {
        H.functionTypeCheck(successCallback, {func: 1, ret: -1});
        H.functionTypeCheck(errorCallback, {func: 1, ret: -1, args: [W.DomException]});
        return receiver.remove(H.convertDartClosureToJS(successCallback, 0), H.convertDartClosureToJS(errorCallback, 1));
      },
      remove$0: function(receiver) {
        var t1, completer;
        t1 = new P._Future(0, $.Zone__current, [null]);
        completer = new P._AsyncCompleter(t1, [null]);
        this._html$_remove$2(receiver, new W.Entry_remove_closure(completer), new W.Entry_remove_closure0(completer));
        return t1;
      },
      "%": "DirectoryEntry|Entry|FileEntry"
    },
    Entry_remove_closure: {
      "^": "Closure:0;completer",
      call$0: [function() {
        this.completer.complete$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    Entry_remove_closure0: {
      "^": "Closure:95;completer",
      call$1: [function(error) {
        this.completer.completeError$1(H.interceptedTypeCheck(error, "$isDomException"));
      }, null, null, 4, 0, null, 2, "call"]
    },
    Event: {
      "^": "Interceptor;",
      get$target: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.target);
      },
      _initEvent$3: function(receiver, type, bubbles, cancelable) {
        return receiver.initEvent(type, true, true);
      },
      stopPropagation$0: function(receiver) {
        return receiver.stopPropagation();
      },
      $isEvent: 1,
      "%": "AnimationPlaybackEvent|ApplicationCacheErrorEvent|AudioProcessingEvent|BeforeInstallPromptEvent|BeforeUnloadEvent|BlobEvent|ClipboardEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|FontFaceSetLoadEvent|GamepadEvent|HashChangeEvent|MIDIConnectionEvent|MIDIMessageEvent|MediaEncryptedEvent|MediaKeyMessageEvent|MediaQueryListEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MojoInterfaceRequestEvent|MutationEvent|OfflineAudioCompletionEvent|PageTransitionEvent|PaymentRequestUpdateEvent|PopStateEvent|PresentationConnectionAvailableEvent|PresentationConnectionCloseEvent|PromiseRejectionEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCPeerConnectionIceEvent|RTCTrackEvent|SecurityPolicyViolationEvent|SensorErrorEvent|SpeechRecognitionError|SpeechRecognitionEvent|TrackEvent|USBConnectionEvent|VRDeviceEvent|VRDisplayEvent|VRSessionEvent|WebGLContextEvent;Event|InputEvent"
    },
    Events: {
      "^": "Object;",
      $index: function(_, type) {
        return new W._EventStream(this._ptr, H.stringTypeCheck(type), false, [W.Event]);
      }
    },
    ElementEvents: {
      "^": "Events;_ptr",
      $index: function(_, type) {
        var t1;
        H.stringTypeCheck(type);
        t1 = $.$get$ElementEvents_webkitEvents();
        if (t1.get$keys(t1).contains$1(0, type.toLowerCase()))
          if (P.Device_isWebKit())
            return new W._ElementEventStreamImpl(this._ptr, t1.$index(0, type.toLowerCase()), false, [W.Event]);
        return new W._ElementEventStreamImpl(this._ptr, type, false, [W.Event]);
      }
    },
    EventTarget: {
      "^": "Interceptor;",
      addEventListener$3: ["super$EventTarget$addEventListener", function(receiver, type, listener, useCapture) {
        H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
        if (listener != null)
          this._addEventListener$3(receiver, type, listener, useCapture);
      }, function($receiver, type, listener) {
        return this.addEventListener$3($receiver, type, listener, null);
      }, "addEventListener$2", null, null, "get$addEventListener", 9, 2, null],
      removeEventListener$3: function(receiver, type, listener, useCapture) {
        H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
        if (listener != null)
          this._removeEventListener$3(receiver, type, listener, useCapture);
      },
      removeEventListener$2: function($receiver, type, listener) {
        return this.removeEventListener$3($receiver, type, listener, null);
      },
      _addEventListener$3: function(receiver, type, listener, options) {
        return receiver.addEventListener(type, H.convertDartClosureToJS(H.functionTypeCheck(listener, {func: 1, args: [W.Event]}), 1), options);
      },
      dispatchEvent$1: function(receiver, $event) {
        return receiver.dispatchEvent($event);
      },
      _removeEventListener$3: function(receiver, type, listener, options) {
        return receiver.removeEventListener(type, H.convertDartClosureToJS(H.functionTypeCheck(listener, {func: 1, args: [W.Event]}), 1), options);
      },
      $isEventTarget: 1,
      "%": "AnalyserNode|ApplicationCache|AudioBufferSourceNode|AudioChannelMerger|AudioChannelSplitter|AudioDestinationNode|AudioGainNode|AudioNode|AudioPannerNode|AudioScheduledSourceNode|AudioWorkletNode|BatteryManager|BiquadFilterNode|BluetoothDevice|BluetoothRemoteGATTCharacteristic|ChannelMergerNode|ChannelSplitterNode|Clipboard|ConstantSourceNode|ConvolverNode|DOMApplicationCache|DelayNode|DynamicsCompressorNode|EventSource|GainNode|IDBTransaction|IIRFilterNode|JavaScriptAudioNode|MIDIAccess|MediaDevices|MediaElementAudioSourceNode|MediaQueryList|MediaRecorder|MediaSource|MediaStreamAudioDestinationNode|MediaStreamAudioSourceNode|MojoInterfaceInterceptor|NetworkInformation|OfflineResourceList|Oscillator|OscillatorNode|PannerNode|Performance|PermissionStatus|PresentationConnectionList|PresentationRequest|RTCDTMFSender|RTCPeerConnection|RealtimeAnalyserNode|RemotePlayback|ScreenOrientation|ScriptProcessorNode|ServiceWorker|ServiceWorkerContainer|ServiceWorkerRegistration|SharedWorker|SpeechRecognition|SpeechSynthesis|SpeechSynthesisUtterance|StereoPannerNode|USB|VR|VRDevice|VRDisplay|VRSession|WaveShaperNode|WebSocket|Worker|WorkerPerformance|mozRTCPeerConnection|webkitAudioPannerNode|webkitRTCPeerConnection;EventTarget;_SourceBufferList_EventTarget_ListMixin|_SourceBufferList_EventTarget_ListMixin_ImmutableListMixin|_TextTrackList_EventTarget_ListMixin|_TextTrackList_EventTarget_ListMixin_ImmutableListMixin"
    },
    ExtendableEvent: {
      "^": "Event;",
      "%": "AbortPaymentEvent|CanMakePaymentEvent|ExtendableMessageEvent|FetchEvent|ForeignFetchEvent|InstallEvent|NotificationEvent|PaymentRequestEvent|PushEvent|SyncEvent;ExtendableEvent"
    },
    FederatedCredential: {
      "^": "Credential;0name=",
      "%": "FederatedCredential"
    },
    FieldSetElement: {
      "^": "HtmlElement;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLFieldSetElement"
    },
    File: {
      "^": "Blob;0name=",
      $isFile: 1,
      "%": "File"
    },
    FileList: {
      "^": "_FileList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isFile");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 96],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.File];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.File];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.File];
      },
      $asListMixin: function() {
        return [W.File];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.File];
      },
      $isList: 1,
      $asList: function() {
        return [W.File];
      },
      $isFileList: 1,
      $asImmutableListMixin: function() {
        return [W.File];
      },
      "%": "FileList"
    },
    FileReader: {
      "^": "EventTarget;",
      get$result: function(receiver) {
        var res = receiver.result;
        if (!!J.getInterceptor$(res).$isByteBuffer)
          return H.NativeUint8List_NativeUint8List$view(res, 0, null);
        return res;
      },
      readAsArrayBuffer$1: function(receiver, blob) {
        return receiver.readAsArrayBuffer(blob);
      },
      "%": "FileReader"
    },
    FileSystem: {
      "^": "Interceptor;0name=",
      "%": "DOMFileSystem"
    },
    FileWriter: {
      "^": "EventTarget;0length=",
      "%": "FileWriter"
    },
    FocusEvent: {
      "^": "UIEvent;",
      $isFocusEvent: 1,
      "%": "FocusEvent"
    },
    FontFace: {
      "^": "Interceptor;",
      $isFontFace: 1,
      "%": "FontFace"
    },
    FontFaceSet: {
      "^": "EventTarget;",
      add$1: function(receiver, arg) {
        return receiver.add(H.interceptedTypeCheck(arg, "$isFontFace"));
      },
      "%": "FontFaceSet"
    },
    FormElement: {
      "^": "HtmlElement;0length=,0name=,0target=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 67],
      "%": "HTMLFormElement"
    },
    Gamepad: {
      "^": "Interceptor;0id=",
      $isGamepad: 1,
      "%": "Gamepad"
    },
    Gyroscope: {
      "^": "Sensor;0x=,0y=",
      "%": "Gyroscope"
    },
    HeadElement: {
      "^": "HtmlElement;",
      $isHeadElement: 1,
      "%": "HTMLHeadElement"
    },
    History: {
      "^": "Interceptor;0length=",
      _pushState_1$3: function(receiver, data, title, url) {
        return receiver.pushState(data, title, url);
      },
      _replaceState_1$3: function(receiver, data, title, url) {
        return receiver.replaceState(data, title, url);
      },
      $isHistory: 1,
      "%": "History"
    },
    HtmlCollection: {
      "^": "_HtmlCollection_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNode");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 59],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.Node];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isHtmlCollection: 1,
      $asImmutableListMixin: function() {
        return [W.Node];
      },
      "%": "HTMLOptionsCollection;HTMLCollection"
    },
    HtmlDocument: {
      "^": "Document;",
      $isHtmlDocument: 1,
      "%": "HTMLDocument"
    },
    HtmlFormControlsCollection: {
      "^": "HtmlCollection;",
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 59],
      "%": "HTMLFormControlsCollection"
    },
    HttpRequest: {
      "^": "HttpRequestEventTarget;0responseType,0withCredentials",
      set$responseType: function(receiver, responseType) {
        receiver.responseType = H.stringTypeCheck(responseType);
      },
      set$withCredentials: function(receiver, withCredentials) {
        receiver.withCredentials = H.boolTypeCheck(withCredentials);
      },
      get$responseHeaders: function(receiver) {
        var t1, headers, headersString, headersList, _i, header, t2, splitIdx, key, value;
        t1 = P.String;
        headers = P.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
        headersString = receiver.getAllResponseHeaders();
        if (headersString == null)
          return headers;
        headersList = headersString.split("\r\n");
        for (t1 = headersList.length, _i = 0; _i < t1; ++_i) {
          header = headersList[_i];
          t2 = J.getInterceptor$asx(header);
          if (t2.get$length(header) === 0)
            continue;
          splitIdx = t2.indexOf$1(header, ": ");
          if (splitIdx === -1)
            continue;
          key = t2.substring$2(header, 0, splitIdx).toLowerCase();
          value = t2.substring$1(header, splitIdx + 2);
          if (headers.containsKey$1(0, key))
            headers.$indexSet(0, key, H.S(headers.$index(0, key)) + ", " + value);
          else
            headers.$indexSet(0, key, value);
        }
        return headers;
      },
      open$5$async$password$user: function(receiver, method, url, async, password, user) {
        return receiver.open(method, url);
      },
      send$1: function(receiver, body_OR_data) {
        return receiver.send(body_OR_data);
      },
      setRequestHeader$2: [function(receiver, $name, value) {
        return receiver.setRequestHeader(H.stringTypeCheck($name), H.stringTypeCheck(value));
      }, "call$2", "get$setRequestHeader", 9, 0, 43],
      $isHttpRequest: 1,
      "%": "XMLHttpRequest"
    },
    HttpRequestEventTarget: {
      "^": "EventTarget;",
      "%": "XMLHttpRequestUpload;XMLHttpRequestEventTarget"
    },
    IFrameElement: {
      "^": "HtmlElement;0height=,0name=,0width=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLIFrameElement"
    },
    ImageBitmap: {
      "^": "Interceptor;0height=,0width=",
      "%": "ImageBitmap"
    },
    ImageData: {
      "^": "Interceptor;0height=,0width=",
      $isImageData: 1,
      "%": "ImageData"
    },
    ImageElement: {
      "^": "HtmlElement;0height=,0width=",
      "%": "HTMLImageElement"
    },
    InputElement: {
      "^": "HtmlElement;0height=,0name=,0value=,0width=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      $isInputElement: 1,
      "%": "HTMLInputElement"
    },
    IntersectionObserverEntry: {
      "^": "Interceptor;0target=",
      "%": "IntersectionObserverEntry"
    },
    KeyboardEvent: {
      "^": "UIEvent;0key=",
      $isKeyboardEvent: 1,
      "%": "KeyboardEvent"
    },
    LIElement: {
      "^": "HtmlElement;0value=",
      "%": "HTMLLIElement"
    },
    Location0: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isLocation0: 1,
      "%": "Location"
    },
    Magnetometer: {
      "^": "Sensor;0x=,0y=",
      "%": "Magnetometer"
    },
    MapElement: {
      "^": "HtmlElement;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLMapElement"
    },
    MediaElement: {
      "^": "HtmlElement;",
      "%": "HTMLAudioElement;HTMLMediaElement"
    },
    MediaKeySession: {
      "^": "EventTarget;",
      remove$0: function(receiver) {
        return W.promiseToFuture(receiver.remove(), null);
      },
      "%": "MediaKeySession"
    },
    MediaList: {
      "^": "Interceptor;0length=",
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 15],
      "%": "MediaList"
    },
    MediaStream: {
      "^": "EventTarget;0id=",
      "%": "MediaStream"
    },
    MediaStreamTrack: {
      "^": "EventTarget;0enabled=,0id=",
      "%": "CanvasCaptureMediaStreamTrack|MediaStreamTrack"
    },
    MessagePort: {
      "^": "EventTarget;",
      addEventListener$3: function(receiver, type, listener, useCapture) {
        H.functionTypeCheck(listener, {func: 1, args: [W.Event]});
        if (type === "message")
          receiver.start();
        this.super$EventTarget$addEventListener(receiver, type, listener, false);
      },
      "%": "MessagePort"
    },
    MetaElement: {
      "^": "HtmlElement;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLMetaElement"
    },
    MeterElement: {
      "^": "HtmlElement;0value=",
      "%": "HTMLMeterElement"
    },
    MidiInputMap: {
      "^": "_MidiInputMap_Interceptor_MapMixin;",
      containsKey$1: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key))) != null;
      },
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.MidiInputMap_keys_closure(keys));
        return keys;
      },
      get$values: function(receiver) {
        var values = H.setRuntimeTypeInfo([], [[P.Map,,,]]);
        this.forEach$1(receiver, new W.MidiInputMap_values_closure(values));
        return values;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      get$isEmpty: function(receiver) {
        return receiver.size === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.size !== 0;
      },
      $indexSet: function(receiver, key, value) {
        H.stringTypeCheck(key);
        throw H.wrapException(P.UnsupportedError$("Not supported"));
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "MIDIInputMap"
    },
    MidiInputMap_keys_closure: {
      "^": "Closure:12;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    MidiInputMap_values_closure: {
      "^": "Closure:12;values",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.values, v);
      }
    },
    MidiOutputMap: {
      "^": "_MidiOutputMap_Interceptor_MapMixin;",
      containsKey$1: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key))) != null;
      },
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.MidiOutputMap_keys_closure(keys));
        return keys;
      },
      get$values: function(receiver) {
        var values = H.setRuntimeTypeInfo([], [[P.Map,,,]]);
        this.forEach$1(receiver, new W.MidiOutputMap_values_closure(values));
        return values;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      get$isEmpty: function(receiver) {
        return receiver.size === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.size !== 0;
      },
      $indexSet: function(receiver, key, value) {
        H.stringTypeCheck(key);
        throw H.wrapException(P.UnsupportedError$("Not supported"));
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "MIDIOutputMap"
    },
    MidiOutputMap_keys_closure: {
      "^": "Closure:12;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    MidiOutputMap_values_closure: {
      "^": "Closure:12;values",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.values, v);
      }
    },
    MidiPort: {
      "^": "EventTarget;0id=,0name=",
      "%": "MIDIInput|MIDIOutput|MIDIPort"
    },
    MimeType: {
      "^": "Interceptor;",
      $isMimeType: 1,
      "%": "MimeType"
    },
    MimeTypeArray: {
      "^": "_MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isMimeType");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 63],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.MimeType];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.MimeType];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.MimeType];
      },
      $asListMixin: function() {
        return [W.MimeType];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.MimeType];
      },
      $isList: 1,
      $asList: function() {
        return [W.MimeType];
      },
      $asImmutableListMixin: function() {
        return [W.MimeType];
      },
      "%": "MimeTypeArray"
    },
    MouseEvent: {
      "^": "UIEvent;",
      $isMouseEvent: 1,
      "%": "WheelEvent;DragEvent|MouseEvent"
    },
    MutationRecord: {
      "^": "Interceptor;0target=",
      "%": "MutationRecord"
    },
    NavigatorUserMediaError: {
      "^": "Interceptor;0name=",
      "%": "NavigatorUserMediaError"
    },
    _ChildNodeListLazy: {
      "^": "ListBase;_this",
      add$1: function(_, value) {
        J.append$1$x(this._this, H.interceptedTypeCheck(value, "$isNode"));
      },
      insert$2: function(_, index, node) {
        var t1, t2, t3, t4;
        H.interceptedTypeCheck(node, "$isNode");
        if (index < 0 || index > this._this.childNodes.length)
          throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this), null, null));
        t1 = this._this;
        t2 = t1.childNodes;
        t3 = t2.length;
        t4 = J.getInterceptor$x(t1);
        if (index === t3)
          t4.append$1(t1, node);
        else {
          if (index < 0 || index >= t3)
            return H.ioore(t2, index);
          t4.insertBefore$2(t1, node, t2[index]);
        }
      },
      removeAt$1: function(_, index) {
        var t1, t2, result;
        t1 = this._this;
        t2 = t1.childNodes;
        if (index < 0 || index >= t2.length)
          return H.ioore(t2, index);
        result = t2[index];
        J._removeChild$1$x(t1, result);
        return result;
      },
      remove$1: function(_, object) {
        return false;
      },
      _filter$2: function(_, test, removeMatching) {
        var t1, child, t2, nextChild;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [W.Node]});
        t1 = this._this;
        child = t1.firstChild;
        for (t2 = J.getInterceptor$x(t1); child != null; child = nextChild) {
          nextChild = child.nextSibling;
          if (J.$eq$(test.call$1(child), true))
            t2._removeChild$1(t1, child);
        }
      },
      removeWhere$1: function(_, test) {
        this._filter$2(0, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [W.Node]}), true);
      },
      $indexSet: function(_, index, value) {
        var t1;
        H.intTypeCheck(index);
        t1 = this._this;
        J._replaceChild$2$x(t1, H.interceptedTypeCheck(value, "$isNode"), C.NodeList_methods.$index(t1.childNodes, index));
      },
      get$iterator: function(_) {
        var t1 = this._this.childNodes;
        return new W.FixedSizeListIterator(t1, t1.length, -1, [H.getRuntimeTypeArgumentIntercepted(C.NodeList_methods, t1, "ImmutableListMixin", 0)]);
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [W.Node], "$asIterable");
        throw H.wrapException(P.UnsupportedError$("Cannot setRange on Node list"));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      get$length: function(_) {
        return this._this.childNodes.length;
      },
      set$length: function(_, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot set length on immutable List."));
      },
      $index: function(_, index) {
        H.intTypeCheck(index);
        return C.NodeList_methods.$index(this._this.childNodes, index);
      },
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $asListBase: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $asIterable: function() {
        return [W.Node];
      },
      $asList: function() {
        return [W.Node];
      }
    },
    Node: {
      "^": "EventTarget;",
      remove$0: function(receiver) {
        var t1 = receiver.parentNode;
        if (t1 != null)
          J._removeChild$1$x(t1, receiver);
      },
      replaceWith$1: function(receiver, otherNode) {
        var $parent, exception;
        try {
          $parent = receiver.parentNode;
          J._replaceChild$2$x($parent, otherNode, receiver);
        } catch (exception) {
          H.unwrapException(exception);
        }
        return receiver;
      },
      toString$0: function(receiver) {
        var value = receiver.nodeValue;
        return value == null ? this.super$Interceptor$toString(receiver) : value;
      },
      append$1: function(receiver, node) {
        return receiver.appendChild(H.interceptedTypeCheck(node, "$isNode"));
      },
      clone$1: function(receiver, deep) {
        return receiver.cloneNode(false);
      },
      contains$1: function(receiver, other) {
        return receiver.contains(other);
      },
      insertBefore$2: function(receiver, node, child) {
        return receiver.insertBefore(H.interceptedTypeCheck(node, "$isNode"), child);
      },
      _removeChild$1: function(receiver, child) {
        return receiver.removeChild(child);
      },
      _replaceChild$2: function(receiver, node, child) {
        return receiver.replaceChild(node, child);
      },
      $isNode: 1,
      "%": "DocumentFragment|DocumentType|ShadowRoot;Node"
    },
    NodeList: {
      "^": "_NodeList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNode");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(P.StateError$("No elements"));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.Node];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $asImmutableListMixin: function() {
        return [W.Node];
      },
      "%": "NodeList|RadioNodeList"
    },
    Notification: {
      "^": "EventTarget;0icon=",
      "%": "Notification"
    },
    ObjectElement: {
      "^": "HtmlElement;0height=,0name=,0width=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLObjectElement"
    },
    OffscreenCanvas: {
      "^": "EventTarget;0height=,0width=",
      "%": "OffscreenCanvas"
    },
    OptionElement: {
      "^": "HtmlElement;0value=",
      "%": "HTMLOptionElement"
    },
    OutputElement: {
      "^": "HtmlElement;0name=,0value=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLOutputElement"
    },
    OverconstrainedError: {
      "^": "Interceptor;0name=",
      "%": "OverconstrainedError"
    },
    PaintSize: {
      "^": "Interceptor;0height=,0width=",
      "%": "PaintSize"
    },
    ParamElement: {
      "^": "HtmlElement;0name=,0value=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLParamElement"
    },
    PasswordCredential: {
      "^": "Credential;0name=",
      "%": "PasswordCredential"
    },
    PaymentRequest: {
      "^": "EventTarget;0id=",
      "%": "PaymentRequest"
    },
    PerformanceEntry: {
      "^": "Interceptor;0name=",
      "%": "PerformanceEntry|PerformanceLongTaskTiming|PerformanceMark|PerformanceMeasure|PerformanceNavigationTiming|PerformancePaintTiming|PerformanceResourceTiming|TaskAttributionTiming"
    },
    PerformanceServerTiming: {
      "^": "Interceptor;0name=",
      "%": "PerformanceServerTiming"
    },
    Plugin: {
      "^": "Interceptor;0length=,0name=",
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 63],
      $isPlugin: 1,
      "%": "Plugin"
    },
    PluginArray: {
      "^": "_PluginArray_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isPlugin");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 105],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.Plugin];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Plugin];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Plugin];
      },
      $asListMixin: function() {
        return [W.Plugin];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Plugin];
      },
      $isList: 1,
      $asList: function() {
        return [W.Plugin];
      },
      $asImmutableListMixin: function() {
        return [W.Plugin];
      },
      "%": "PluginArray"
    },
    PointerEvent: {
      "^": "MouseEvent;0height=,0width=",
      "%": "PointerEvent"
    },
    PresentationAvailability: {
      "^": "EventTarget;0value=",
      "%": "PresentationAvailability"
    },
    PresentationConnection: {
      "^": "EventTarget;0id=",
      "%": "PresentationConnection"
    },
    ProcessingInstruction: {
      "^": "CharacterData;0target=",
      "%": "ProcessingInstruction"
    },
    ProgressElement: {
      "^": "HtmlElement;0value=",
      "%": "HTMLProgressElement"
    },
    ProgressEvent: {
      "^": "Event;",
      $isProgressEvent: 1,
      "%": "ProgressEvent|ResourceProgressEvent"
    },
    RelatedApplication: {
      "^": "Interceptor;0id=",
      "%": "RelatedApplication"
    },
    ResizeObserverEntry: {
      "^": "Interceptor;0target=",
      "%": "ResizeObserverEntry"
    },
    RtcDataChannel: {
      "^": "EventTarget;0id=",
      "%": "DataChannel|RTCDataChannel"
    },
    RtcLegacyStatsReport: {
      "^": "Interceptor;0id=",
      "%": "RTCLegacyStatsReport"
    },
    RtcStatsReport: {
      "^": "_RtcStatsReport_Interceptor_MapMixin;",
      containsKey$1: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key))) != null;
      },
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.RtcStatsReport_keys_closure(keys));
        return keys;
      },
      get$values: function(receiver) {
        var values = H.setRuntimeTypeInfo([], [[P.Map,,,]]);
        this.forEach$1(receiver, new W.RtcStatsReport_values_closure(values));
        return values;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      get$isEmpty: function(receiver) {
        return receiver.size === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.size !== 0;
      },
      $indexSet: function(receiver, key, value) {
        H.stringTypeCheck(key);
        throw H.wrapException(P.UnsupportedError$("Not supported"));
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "RTCStatsReport"
    },
    RtcStatsReport_keys_closure: {
      "^": "Closure:12;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    RtcStatsReport_values_closure: {
      "^": "Closure:12;values",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.values, v);
      }
    },
    Screen: {
      "^": "Interceptor;0height=,0width=",
      "%": "Screen"
    },
    SelectElement: {
      "^": "HtmlElement;0length=,0name=,0value=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 67],
      "%": "HTMLSelectElement"
    },
    Sensor: {
      "^": "EventTarget;",
      "%": "AbsoluteOrientationSensor|AmbientLightSensor|OrientationSensor|RelativeOrientationSensor;Sensor"
    },
    SharedWorkerGlobalScope: {
      "^": "WorkerGlobalScope;0name=",
      "%": "SharedWorkerGlobalScope"
    },
    SlotElement: {
      "^": "HtmlElement;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLSlotElement"
    },
    SourceBuffer: {
      "^": "EventTarget;",
      $isSourceBuffer: 1,
      "%": "SourceBuffer"
    },
    SourceBufferList: {
      "^": "_SourceBufferList_EventTarget_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isSourceBuffer");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 106],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.SourceBuffer];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.SourceBuffer];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.SourceBuffer];
      },
      $asListMixin: function() {
        return [W.SourceBuffer];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.SourceBuffer];
      },
      $isList: 1,
      $asList: function() {
        return [W.SourceBuffer];
      },
      $asImmutableListMixin: function() {
        return [W.SourceBuffer];
      },
      "%": "SourceBufferList"
    },
    SpanElement: {
      "^": "HtmlElement;",
      $isSpanElement: 1,
      "%": "HTMLSpanElement"
    },
    SpeechGrammar: {
      "^": "Interceptor;",
      $isSpeechGrammar: 1,
      "%": "SpeechGrammar"
    },
    SpeechGrammarList: {
      "^": "_SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isSpeechGrammar");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 109],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.SpeechGrammar];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.SpeechGrammar];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.SpeechGrammar];
      },
      $asListMixin: function() {
        return [W.SpeechGrammar];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechGrammar];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechGrammar];
      },
      $asImmutableListMixin: function() {
        return [W.SpeechGrammar];
      },
      "%": "SpeechGrammarList"
    },
    SpeechRecognitionAlternative: {
      "^": "Interceptor;",
      $isSpeechRecognitionAlternative: 1,
      "%": "SpeechRecognitionAlternative"
    },
    SpeechRecognitionResult: {
      "^": "Interceptor;0length=",
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 110],
      $isSpeechRecognitionResult: 1,
      "%": "SpeechRecognitionResult"
    },
    SpeechSynthesisEvent: {
      "^": "Event;0name=",
      "%": "SpeechSynthesisEvent"
    },
    SpeechSynthesisVoice: {
      "^": "Interceptor;0name=",
      "%": "SpeechSynthesisVoice"
    },
    Storage: {
      "^": "_Storage_Interceptor_MapMixin;",
      containsKey$1: function(receiver, key) {
        return this._getItem$1(receiver, H.stringTypeCheck(key)) != null;
      },
      $index: function(receiver, key) {
        return this._getItem$1(receiver, H.stringTypeCheck(key));
      },
      $indexSet: function(receiver, key, value) {
        this._setItem$2(receiver, H.stringTypeCheck(key), H.stringTypeCheck(value));
      },
      forEach$1: function(receiver, f) {
        var i, key;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String, P.String]});
        for (i = 0; true; ++i) {
          key = this._key$1(receiver, i);
          if (key == null)
            return;
          f.call$2(key, this._getItem$1(receiver, key));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.Storage_keys_closure(keys));
        return keys;
      },
      get$values: function(receiver) {
        var values = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new W.Storage_values_closure(values));
        return values;
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      get$isEmpty: function(receiver) {
        return this._key$1(receiver, 0) == null;
      },
      get$isNotEmpty: function(receiver) {
        return this._key$1(receiver, 0) != null;
      },
      _getItem$1: function(receiver, key) {
        return receiver.getItem(key);
      },
      _key$1: function(receiver, index) {
        return receiver.key(index);
      },
      _setItem$2: function(receiver, key, value) {
        return receiver.setItem(key, value);
      },
      $asMapMixin: function() {
        return [P.String, P.String];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, P.String];
      },
      "%": "Storage"
    },
    Storage_keys_closure: {
      "^": "Closure:43;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    Storage_values_closure: {
      "^": "Closure:43;values",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.values, v);
      }
    },
    StorageEvent: {
      "^": "Event;0key=",
      "%": "StorageEvent"
    },
    StyleSheet: {
      "^": "Interceptor;",
      $isStyleSheet: 1,
      "%": "CSSStyleSheet|StyleSheet"
    },
    Text: {
      "^": "CharacterData;",
      $isText: 1,
      "%": "CDATASection|Text"
    },
    TextAreaElement: {
      "^": "HtmlElement;0name=,0value=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "HTMLTextAreaElement"
    },
    TextMetrics: {
      "^": "Interceptor;0width=",
      "%": "TextMetrics"
    },
    TextTrack: {
      "^": "EventTarget;0id=",
      $isTextTrack: 1,
      "%": "TextTrack"
    },
    TextTrackCue: {
      "^": "EventTarget;0id=",
      $isTextTrackCue: 1,
      "%": "TextTrackCue|VTTCue"
    },
    TextTrackCueList: {
      "^": "_TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTextTrackCue");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.TextTrackCue];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.TextTrackCue];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.TextTrackCue];
      },
      $asListMixin: function() {
        return [W.TextTrackCue];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrackCue];
      },
      $isList: 1,
      $asList: function() {
        return [W.TextTrackCue];
      },
      $asImmutableListMixin: function() {
        return [W.TextTrackCue];
      },
      "%": "TextTrackCueList"
    },
    TextTrackList: {
      "^": "_TextTrackList_EventTarget_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTextTrack");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.TextTrack];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.TextTrack];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.TextTrack];
      },
      $asListMixin: function() {
        return [W.TextTrack];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.TextTrack];
      },
      $isList: 1,
      $asList: function() {
        return [W.TextTrack];
      },
      $asImmutableListMixin: function() {
        return [W.TextTrack];
      },
      "%": "TextTrackList"
    },
    TimeRanges: {
      "^": "Interceptor;0length=",
      "%": "TimeRanges"
    },
    Touch: {
      "^": "Interceptor;",
      get$target: function(receiver) {
        return W._convertNativeToDart_EventTarget(receiver.target);
      },
      $isTouch: 1,
      "%": "Touch"
    },
    TouchEvent: {
      "^": "UIEvent;",
      $isTouchEvent: 1,
      "%": "TouchEvent"
    },
    TouchList: {
      "^": "_TouchList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTouch");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 112],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.Touch];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Touch];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Touch];
      },
      $asListMixin: function() {
        return [W.Touch];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Touch];
      },
      $isList: 1,
      $asList: function() {
        return [W.Touch];
      },
      $asImmutableListMixin: function() {
        return [W.Touch];
      },
      "%": "TouchList"
    },
    TrackDefault: {
      "^": "Interceptor;",
      $isTrackDefault: 1,
      "%": "TrackDefault"
    },
    TrackDefaultList: {
      "^": "Interceptor;0length=",
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 117],
      "%": "TrackDefaultList"
    },
    TransitionEvent: {
      "^": "Event;",
      $isTransitionEvent: 1,
      "%": "TransitionEvent|WebKitTransitionEvent"
    },
    UIEvent: {
      "^": "Event;",
      $isUIEvent: 1,
      "%": "CompositionEvent|TextEvent;UIEvent"
    },
    Url0: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      "%": "URL"
    },
    VRStageBoundsPoint: {
      "^": "Interceptor;0x=",
      "%": "VRStageBoundsPoint"
    },
    VideoElement: {
      "^": "MediaElement;0height=,0width=",
      "%": "HTMLVideoElement"
    },
    VideoTrack: {
      "^": "Interceptor;0id=",
      "%": "VideoTrack"
    },
    VideoTrackList: {
      "^": "EventTarget;0length=",
      "%": "VideoTrackList"
    },
    VisualViewport: {
      "^": "EventTarget;0height=,0width=",
      "%": "VisualViewport"
    },
    VttRegion: {
      "^": "Interceptor;0id=,0width=",
      "%": "VTTRegion"
    },
    Window: {
      "^": "EventTarget;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      requestAnimationFrame$1: function(receiver, callback) {
        H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.num]});
        this._ensureRequestAnimationFrame$0(receiver);
        return this._requestAnimationFrame$1(receiver, W._wrapZone(callback, P.num));
      },
      _requestAnimationFrame$1: function(receiver, callback) {
        return receiver.requestAnimationFrame(H.convertDartClosureToJS(H.functionTypeCheck(callback, {func: 1, ret: -1, args: [P.num]}), 1));
      },
      _cancelAnimationFrame$1: function(receiver, id) {
        return receiver.cancelAnimationFrame(id);
      },
      _ensureRequestAnimationFrame$0: function(receiver) {
        if (!!(receiver.requestAnimationFrame && receiver.cancelAnimationFrame))
          return;
        (function($this) {
          var vendors = ['ms', 'moz', 'webkit', 'o'];
          for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
            $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
            $this.cancelAnimationFrame = $this[vendors[i] + 'CancelAnimationFrame'] || $this[vendors[i] + 'CancelRequestAnimationFrame'];
          }
          if ($this.requestAnimationFrame && $this.cancelAnimationFrame)
            return;
          $this.requestAnimationFrame = function(callback) {
            return window.setTimeout(function() {
              callback(Date.now());
            }, 16);
          };
          $this.cancelAnimationFrame = function(id) {
            clearTimeout(id);
          };
        })(receiver);
      },
      get$top: function(receiver) {
        return W._convertNativeToDart_Window(receiver.top);
      },
      alert$1: function(receiver, message) {
        return receiver.alert(message);
      },
      _getComputedStyle$2: function(receiver, elt, pseudoElt) {
        return receiver.getComputedStyle(elt, pseudoElt);
      },
      matchMedia$1: function(receiver, query) {
        return receiver.matchMedia(query);
      },
      $isWindow: 1,
      $isWindowBase: 1,
      "%": "DOMWindow|Window"
    },
    WorkerGlobalScope: {
      "^": "EventTarget;",
      $isWorkerGlobalScope: 1,
      "%": "DedicatedWorkerGlobalScope|ServiceWorkerGlobalScope;WorkerGlobalScope"
    },
    _Attr: {
      "^": "Node;0name=,0value=",
      $is_Attr: 1,
      "%": "Attr"
    },
    _CssRuleList: {
      "^": "__CssRuleList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isCssRule");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 118],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.CssRule];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.CssRule];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.CssRule];
      },
      $asListMixin: function() {
        return [W.CssRule];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.CssRule];
      },
      $isList: 1,
      $asList: function() {
        return [W.CssRule];
      },
      $asImmutableListMixin: function() {
        return [W.CssRule];
      },
      "%": "CSSRuleList"
    },
    _DomRect: {
      "^": "DomRectReadOnly;",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
      },
      $eq: function(receiver, other) {
        var t1;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isRectangle", [P.num], "$asRectangle"))
          return false;
        t1 = J.getInterceptor$x(other);
        return receiver.left === t1.get$left(other) && receiver.top === t1.get$top(other) && receiver.width === t1.get$width(other) && receiver.height === t1.get$height(other);
      },
      get$hashCode: function(receiver) {
        return W._JenkinsSmiHash_hash4(receiver.left & 0x1FFFFFFF, receiver.top & 0x1FFFFFFF, receiver.width & 0x1FFFFFFF, receiver.height & 0x1FFFFFFF);
      },
      get$topLeft: function(receiver) {
        return new P.Point(receiver.left, receiver.top, [P.num]);
      },
      get$height: function(receiver) {
        return receiver.height;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": "ClientRect|DOMRect"
    },
    _GamepadList: {
      "^": "__GamepadList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isGamepad");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 119],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.Gamepad];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Gamepad];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Gamepad];
      },
      $asListMixin: function() {
        return [W.Gamepad];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Gamepad];
      },
      $isList: 1,
      $asList: function() {
        return [W.Gamepad];
      },
      $asImmutableListMixin: function() {
        return [W.Gamepad];
      },
      "%": "GamepadList"
    },
    _NamedNodeMap: {
      "^": "__NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNode");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 124],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.Node];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.Node];
      },
      $asListMixin: function() {
        return [W.Node];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $asImmutableListMixin: function() {
        return [W.Node];
      },
      "%": "MozNamedAttrMap|NamedNodeMap"
    },
    _SpeechRecognitionResultList: {
      "^": "__SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isSpeechRecognitionResult");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 143],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.SpeechRecognitionResult];
      },
      $asListMixin: function() {
        return [W.SpeechRecognitionResult];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $asImmutableListMixin: function() {
        return [W.SpeechRecognitionResult];
      },
      "%": "SpeechRecognitionResultList"
    },
    _StyleSheetList: {
      "^": "__StyleSheetList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isStyleSheet");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return receiver.item(index);
      }, "call$1", "get$item", 5, 0, 148],
      $isJSIndexable: 1,
      $asJSIndexable: function() {
        return [W.StyleSheet];
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [W.StyleSheet];
      },
      $isJavaScriptIndexingBehavior: 1,
      $asJavaScriptIndexingBehavior: function() {
        return [W.StyleSheet];
      },
      $asListMixin: function() {
        return [W.StyleSheet];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [W.StyleSheet];
      },
      $isList: 1,
      $asList: function() {
        return [W.StyleSheet];
      },
      $asImmutableListMixin: function() {
        return [W.StyleSheet];
      },
      "%": "StyleSheetList"
    },
    _AttributeMap: {
      "^": "MapBase;",
      forEach$1: function(_, f) {
        var t1, t2, t3, t4, _i, key;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String, P.String]});
        for (t1 = this.get$keys(this), t2 = t1.length, t3 = this._html$_element, t4 = J.getInterceptor$x(t3), _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = H.stringTypeCheck(t1[_i]);
          f.call$2(key, t4.getAttribute$1(t3, key));
        }
      },
      get$keys: function(_) {
        var attributes, keys, len, i, attr;
        attributes = this._html$_element.attributes;
        keys = H.setRuntimeTypeInfo([], [P.String]);
        for (len = attributes.length, i = 0; i < len; ++i) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          attr = H.interceptedTypeCheck(attributes[i], "$is_Attr");
          if (attr.namespaceURI == null)
            C.JSArray_methods.add$1(keys, attr.name);
        }
        return keys;
      },
      get$values: function(_) {
        var attributes, values, len, i, attr;
        attributes = this._html$_element.attributes;
        values = H.setRuntimeTypeInfo([], [P.String]);
        for (len = attributes.length, i = 0; i < len; ++i) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          attr = H.interceptedTypeCheck(attributes[i], "$is_Attr");
          if (attr.namespaceURI == null)
            C.JSArray_methods.add$1(values, attr.value);
        }
        return values;
      },
      get$isEmpty: function(_) {
        return this.get$keys(this).length === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$keys(this).length !== 0;
      },
      $asMapMixin: function() {
        return [P.String, P.String];
      },
      $asMap: function() {
        return [P.String, P.String];
      }
    },
    _ElementAttributeMap: {
      "^": "_AttributeMap;_html$_element",
      containsKey$1: function(_, key) {
        return J._hasAttribute$1$x(this._html$_element, H.stringTypeCheck(key));
      },
      $index: function(_, key) {
        return J.getAttribute$1$x(this._html$_element, H.stringTypeCheck(key));
      },
      $indexSet: function(_, key, value) {
        J.setAttribute$2$x(this._html$_element, H.stringTypeCheck(key), H.stringTypeCheck(value));
      },
      remove$1: function(_, key) {
        var t1, t2, value;
        t1 = this._html$_element;
        t2 = J.getInterceptor$x(t1);
        value = t2.getAttribute$1(t1, key);
        t2._removeAttribute$1(t1, key);
        return value;
      },
      get$length: function(_) {
        return this.get$keys(this).length;
      }
    },
    _ElementCssClassSet: {
      "^": "CssClassSetImpl;_html$_element",
      readClasses$0: function() {
        var s, t1, t2, _i, trimmed;
        s = P.LinkedHashSet_LinkedHashSet(null, null, null, P.String);
        for (t1 = this._html$_element.className.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
          trimmed = J.trim$0$s(t1[_i]);
          if (trimmed.length !== 0)
            s.add$1(0, trimmed);
        }
        return s;
      },
      writeClasses$1: function(s) {
        this._html$_element.className = H.assertSubtype(s, "$isSet", [P.String], "$asSet").join$1(0, " ");
      },
      get$length: function(_) {
        return this._html$_element.classList.length;
      },
      get$isEmpty: function(_) {
        return this._html$_element.classList.length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._html$_element.classList.length !== 0;
      },
      contains$1: function(_, value) {
        return typeof value === "string" && this._html$_element.classList.contains(value);
      },
      add$1: function(_, value) {
        var list, t1;
        H.stringTypeCheck(value);
        list = this._html$_element.classList;
        t1 = list.contains(value);
        list.add(value);
        return !t1;
      },
      remove$1: function(_, value) {
        var list, removed, t1;
        if (typeof value === "string") {
          list = this._html$_element.classList;
          removed = list.contains(value);
          list.remove(value);
          t1 = removed;
        } else
          t1 = false;
        return t1;
      },
      addAll$1: function(_, iterable) {
        W._ElementCssClassSet__addAll(this._html$_element, H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable"));
      },
      removeAll$1: function(iterable) {
        W._ElementCssClassSet__removeAll(this._html$_element, H.assertSubtype(H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable"), "$isIterable", [P.String], "$asIterable"));
      },
      static: {
        _ElementCssClassSet__addAll: function(_element, iterable) {
          var list, t1;
          H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable");
          list = _element.classList;
          for (t1 = iterable.get$iterator(iterable); t1.moveNext$0();)
            list.add(t1.get$current(t1));
        },
        _ElementCssClassSet__removeAll: function(_element, iterable) {
          var list, t1;
          H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable");
          list = _element.classList;
          for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();)
            list.remove(t1.get$current(t1));
        }
      }
    },
    _EventStream: {
      "^": "Stream;_html$_target,_eventType,_useCapture,$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]});
        H.functionTypeCheck(onDone, {func: 1, ret: -1});
        return W._EventStreamSubscription$(this._html$_target, this._eventType, onData, false, t1);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      }
    },
    _ElementEventStreamImpl: {
      "^": "_EventStream;_html$_target,_eventType,_useCapture,$ti"
    },
    _EventStreamSubscription: {
      "^": "StreamSubscription;_pauseCount,_html$_target,_eventType,_html$_onData,_useCapture,$ti",
      set$_html$_onData: function(_onData) {
        this._html$_onData = H.functionTypeCheck(_onData, {func: 1, args: [W.Event]});
      },
      cancel$0: [function(_) {
        if (this._html$_target == null)
          return;
        this._unlisten$0();
        this._html$_target = null;
        this.set$_html$_onData(null);
        return;
      }, "call$0", "get$cancel", 1, 0, 22],
      pause$1: function(_, resumeSignal) {
        if (this._html$_target == null)
          return;
        ++this._pauseCount;
        this._unlisten$0();
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function(_) {
        if (this._html$_target == null || this._pauseCount <= 0)
          return;
        --this._pauseCount;
        this._tryResume$0();
      },
      _tryResume$0: function() {
        var t1 = this._html$_onData;
        if (t1 != null && this._pauseCount <= 0)
          J.addEventListener$3$x(this._html$_target, this._eventType, t1, false);
      },
      _unlisten$0: function() {
        var t1 = this._html$_onData;
        if (t1 != null)
          J.removeEventListener$3$x(this._html$_target, this._eventType, t1, false);
      },
      static: {
        _EventStreamSubscription$: function(_target, _eventType, onData, _useCapture, $T) {
          var t1 = onData == null ? null : W._wrapZone(new W._EventStreamSubscription_closure(onData), W.Event);
          t1 = new W._EventStreamSubscription(0, _target, _eventType, t1, false, [$T]);
          t1._tryResume$0();
          return t1;
        }
      }
    },
    _EventStreamSubscription_closure: {
      "^": "Closure:152;onData",
      call$1: [function(e) {
        return this.onData.call$1(H.interceptedTypeCheck(e, "$isEvent"));
      }, null, null, 4, 0, null, 8, "call"]
    },
    ImmutableListMixin: {
      "^": "Object;$ti",
      get$iterator: function(receiver) {
        return new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0)]);
      },
      add$1: function(receiver, value) {
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
      },
      insert$2: function(receiver, index, element) {
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0));
        throw H.wrapException(P.UnsupportedError$("Cannot add to immutable List."));
      },
      removeAt$1: function(receiver, pos) {
        throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
      },
      remove$1: function(receiver, object) {
        throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
      },
      removeWhere$1: function(receiver, test) {
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0)]});
        throw H.wrapException(P.UnsupportedError$("Cannot remove from immutable List."));
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [H.getRuntimeTypeArgumentIntercepted(this, receiver, "ImmutableListMixin", 0)], "$asIterable");
        throw H.wrapException(P.UnsupportedError$("Cannot setRange on immutable List."));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      }
    },
    FixedSizeListIterator: {
      "^": "Object;_array,_html$_length,_position,0_html$_current,$ti",
      set$_html$_current: function(_current) {
        this._html$_current = H.assertSubtypeOfRuntimeType(_current, H.getTypeArgumentByIndex(this, 0));
      },
      moveNext$0: function() {
        var nextPosition, t1;
        nextPosition = this._position + 1;
        t1 = this._html$_length;
        if (nextPosition < t1) {
          this.set$_html$_current(J.$index$asx(this._array, nextPosition));
          this._position = nextPosition;
          return true;
        }
        this.set$_html$_current(null);
        this._position = t1;
        return false;
      },
      get$current: function(_) {
        return this._html$_current;
      },
      $isIterator: 1
    },
    _DOMWindowCrossFrame: {
      "^": "Object;_window",
      get$top: function(_) {
        return W._DOMWindowCrossFrame__createSafe(this._window.top);
      },
      $isEventTarget: 1,
      $isWindowBase: 1,
      static: {
        _DOMWindowCrossFrame__createSafe: function(w) {
          if (w === window)
            return H.interceptedTypeCheck(w, "$isWindowBase");
          else
            return new W._DOMWindowCrossFrame(w);
        }
      }
    },
    _CssStyleDeclaration_Interceptor_CssStyleDeclarationBase: {
      "^": "Interceptor+CssStyleDeclarationBase;"
    },
    _DomRectList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _DomRectList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_DomRectList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _DomStringList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _DomStringList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_DomStringList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _FileList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _FileList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_FileList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _HtmlCollection_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _HtmlCollection_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_HtmlCollection_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _MidiInputMap_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _MidiOutputMap_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _MimeTypeArray_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _MimeTypeArray_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_MimeTypeArray_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _NodeList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _NodeList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_NodeList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _PluginArray_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _PluginArray_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_PluginArray_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _RtcStatsReport_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _SourceBufferList_EventTarget_ListMixin: {
      "^": "EventTarget+ListMixin;"
    },
    _SourceBufferList_EventTarget_ListMixin_ImmutableListMixin: {
      "^": "_SourceBufferList_EventTarget_ListMixin+ImmutableListMixin;"
    },
    _SpeechGrammarList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _SpeechGrammarList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_SpeechGrammarList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _Storage_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    },
    _TextTrackCueList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _TextTrackCueList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_TextTrackCueList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _TextTrackList_EventTarget_ListMixin: {
      "^": "EventTarget+ListMixin;"
    },
    _TextTrackList_EventTarget_ListMixin_ImmutableListMixin: {
      "^": "_TextTrackList_EventTarget_ListMixin+ImmutableListMixin;"
    },
    _TouchList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _TouchList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_TouchList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __CssRuleList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __CssRuleList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__CssRuleList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __GamepadList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __GamepadList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__GamepadList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __NamedNodeMap_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __NamedNodeMap_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__NamedNodeMap_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __SpeechRecognitionResultList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__SpeechRecognitionResultList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    __StyleSheetList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    __StyleSheetList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "__StyleSheetList_Interceptor_ListMixin+ImmutableListMixin;"
    }
  }], ["html_common", "dart:html_common",, P, {
    "^": "",
    convertNativeToDart_Dictionary: function(object) {
      var dict, keys, t1, _i, key;
      if (object == null)
        return;
      dict = P.LinkedHashMap_LinkedHashMap$_empty(P.String, null);
      keys = Object.getOwnPropertyNames(object);
      for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, H.throwConcurrentModificationError)(keys), ++_i) {
        key = H.stringTypeCheck(keys[_i]);
        dict.$indexSet(0, key, object[key]);
      }
      return dict;
    },
    convertDartToNative_Dictionary: [function(dict, postCreate) {
      var object;
      H.interceptedTypeCheck(dict, "$isMap");
      H.functionTypeCheck(postCreate, {func: 1, ret: -1, args: [P.Object]});
      if (dict == null)
        return;
      object = {};
      if (postCreate != null)
        postCreate.call$1(object);
      J.forEach$1$ax(dict, new P.convertDartToNative_Dictionary_closure(object));
      return object;
    }, function(dict) {
      return P.convertDartToNative_Dictionary(dict, null);
    }, "call$2", "call$1", "html_common__convertDartToNative_Dictionary$closure", 4, 2, 222, 3, 81, 88],
    convertNativePromiseToDartFuture: function(promise) {
      var t1, completer;
      t1 = new P._Future(0, $.Zone__current, [null]);
      completer = new P._AsyncCompleter(t1, [null]);
      promise.then(H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure(completer), 1))["catch"](H.convertDartClosureToJS(new P.convertNativePromiseToDartFuture_closure0(completer), 1));
      return t1;
    },
    Device_isOpera: function() {
      var t1 = $.Device__isOpera;
      if (t1 == null) {
        t1 = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
        $.Device__isOpera = t1;
      }
      return t1;
    },
    Device_isWebKit: function() {
      var t1 = $.Device__isWebKit;
      if (t1 == null) {
        t1 = !P.Device_isOpera() && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
        $.Device__isWebKit = t1;
      }
      return t1;
    },
    Device_cssPrefix: function() {
      var prefix, t1;
      prefix = $.Device__cachedCssPrefix;
      if (prefix != null)
        return prefix;
      t1 = $.Device__isFirefox;
      if (t1 == null) {
        t1 = J.contains$2$asx(window.navigator.userAgent, "Firefox", 0);
        $.Device__isFirefox = t1;
      }
      if (t1)
        prefix = "-moz-";
      else {
        t1 = $.Device__isIE;
        if (t1 == null) {
          t1 = !P.Device_isOpera() && J.contains$2$asx(window.navigator.userAgent, "Trident/", 0);
          $.Device__isIE = t1;
        }
        if (t1)
          prefix = "-ms-";
        else
          prefix = P.Device_isOpera() ? "-o-" : "-webkit-";
      }
      $.Device__cachedCssPrefix = prefix;
      return prefix;
    },
    _StructuredClone: {
      "^": "Object;",
      findSlot$1: function(value) {
        var t1, $length, i;
        t1 = this.values;
        $length = t1.length;
        for (i = 0; i < $length; ++i)
          if (t1[i] === value)
            return i;
        C.JSArray_methods.add$1(t1, value);
        C.JSArray_methods.add$1(this.copies, null);
        return $length;
      },
      walk$1: function(e) {
        var t1, t2, slot, t3, copy;
        t1 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        t2 = J.getInterceptor$(e);
        if (!!t2.$isDateTime)
          return new Date(e._value);
        if (!!t2.$isRegExp)
          throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
        if (!!t2.$isFile)
          return e;
        if (!!t2.$isBlob)
          return e;
        if (!!t2.$isFileList)
          return e;
        if (!!t2.$isImageData)
          return e;
        if (!!t2.$isNativeByteBuffer || !!t2.$isNativeTypedData)
          return e;
        if (!!t2.$isMap) {
          slot = this.findSlot$1(e);
          t3 = this.copies;
          if (slot >= t3.length)
            return H.ioore(t3, slot);
          copy = t3[slot];
          t1.copy = copy;
          if (copy != null)
            return copy;
          copy = {};
          t1.copy = copy;
          C.JSArray_methods.$indexSet(t3, slot, copy);
          t2.forEach$1(e, new P._StructuredClone_walk_closure(t1, this));
          return t1.copy;
        }
        if (!!t2.$isList) {
          slot = this.findSlot$1(e);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          if (copy != null)
            return copy;
          return this.copyList$2(e, slot);
        }
        throw H.wrapException(P.UnimplementedError$("structured clone of other type"));
      },
      copyList$2: function(e, slot) {
        var t1, $length, copy, i;
        t1 = J.getInterceptor$asx(e);
        $length = t1.get$length(e);
        copy = new Array($length);
        C.JSArray_methods.$indexSet(this.copies, slot, copy);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i)
          C.JSArray_methods.$indexSet(copy, i, this.walk$1(t1.$index(e, i)));
        return copy;
      }
    },
    _StructuredClone_walk_closure: {
      "^": "Closure:5;_box_0,$this",
      call$2: function(key, value) {
        this._box_0.copy[key] = this.$this.walk$1(value);
      }
    },
    _AcceptStructuredClone: {
      "^": "Object;",
      findSlot$1: function(value) {
        var t1, $length, i, t2;
        t1 = this.values;
        $length = t1.length;
        for (i = 0; i < $length; ++i) {
          t2 = t1[i];
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        C.JSArray_methods.add$1(t1, value);
        C.JSArray_methods.add$1(this.copies, null);
        return $length;
      },
      walk$1: function(e) {
        var _box_0, millisSinceEpoch, t1, proto, slot, copy, l, t2, $length, i;
        _box_0 = {};
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date) {
          millisSinceEpoch = e.getTime();
          t1 = new P.DateTime(millisSinceEpoch, true);
          t1.DateTime$_withValue$2$isUtc(millisSinceEpoch, true);
          return t1;
        }
        if (e instanceof RegExp)
          throw H.wrapException(P.UnimplementedError$("structured clone of RegExp"));
        if (typeof Promise != "undefined" && e instanceof Promise)
          return P.convertNativePromiseToDartFuture(e);
        proto = Object.getPrototypeOf(e);
        if (proto === Object.prototype || proto === null) {
          slot = this.findSlot$1(e);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          _box_0.copy = copy;
          if (copy != null)
            return copy;
          copy = P.LinkedHashMap__makeEmpty();
          _box_0.copy = copy;
          C.JSArray_methods.$indexSet(t1, slot, copy);
          this.forEachJsField$2(e, new P._AcceptStructuredClone_walk_closure(_box_0, this));
          return _box_0.copy;
        }
        if (e instanceof Array) {
          l = e;
          slot = this.findSlot$1(l);
          t1 = this.copies;
          if (slot >= t1.length)
            return H.ioore(t1, slot);
          copy = t1[slot];
          if (copy != null)
            return copy;
          t2 = J.getInterceptor$asx(l);
          $length = t2.get$length(l);
          copy = this.mustCopy ? new Array($length) : l;
          C.JSArray_methods.$indexSet(t1, slot, copy);
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = J.getInterceptor$ax(copy);
          i = 0;
          for (; i < $length; ++i)
            t1.$indexSet(copy, i, this.walk$1(t2.$index(l, i)));
          return copy;
        }
        return e;
      },
      convertNativeToDart_AcceptStructuredClone$2$mustCopy: function(object, mustCopy) {
        this.mustCopy = mustCopy;
        return this.walk$1(object);
      }
    },
    _AcceptStructuredClone_walk_closure: {
      "^": "Closure:155;_box_0,$this",
      call$2: function(key, value) {
        var t1, t2;
        t1 = this._box_0.copy;
        t2 = this.$this.walk$1(value);
        J.$indexSet$ax(t1, key, t2);
        return t2;
      }
    },
    convertDartToNative_Dictionary_closure: {
      "^": "Closure:5;object",
      call$2: function(key, value) {
        this.object[key] = value;
      }
    },
    _StructuredCloneDart2Js: {
      "^": "_StructuredClone;values,copies"
    },
    _AcceptStructuredCloneDart2Js: {
      "^": "_AcceptStructuredClone;values,copies,mustCopy",
      forEachJsField$2: function(object, action) {
        var t1, t2, _i, key;
        H.functionTypeCheck(action, {func: 1, args: [,,]});
        for (t1 = Object.keys(object), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          action.call$2(key, object[key]);
        }
      }
    },
    convertNativePromiseToDartFuture_closure: {
      "^": "Closure:1;completer",
      call$1: [function(result) {
        return this.completer.complete$1(0, result);
      }, null, null, 4, 0, null, 7, "call"]
    },
    convertNativePromiseToDartFuture_closure0: {
      "^": "Closure:1;completer",
      call$1: [function(result) {
        return this.completer.completeError$1(result);
      }, null, null, 4, 0, null, 7, "call"]
    },
    CssClassSetImpl: {
      "^": "SetBase;",
      _validateToken$1: [function(value) {
        var t1;
        H.stringTypeCheck(value);
        t1 = $.$get$CssClassSetImpl__validTokenRE()._nativeRegExp;
        if (typeof value !== "string")
          H.throwExpression(H.argumentErrorValue(value));
        if (t1.test(value))
          return value;
        throw H.wrapException(P.ArgumentError$value(value, "value", "Not a valid class token"));
      }, "call$1", "get$_validateToken", 4, 0, 10, 1],
      toString$0: function(_) {
        return this.readClasses$0().join$1(0, " ");
      },
      get$iterator: function(_) {
        var t1 = this.readClasses$0();
        return P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0));
      },
      forEach$1: function(_, f) {
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String]});
        this.readClasses$0().forEach$1(0, f);
      },
      join$1: function(_, separator) {
        return this.readClasses$0().join$1(0, separator);
      },
      map$1$1: function(_, f, $T) {
        var t1, t2;
        H.functionTypeCheck(f, {func: 1, ret: $T, args: [P.String]});
        t1 = this.readClasses$0();
        t2 = H.getRuntimeTypeArgument(t1, "SetMixin", 0);
        return new H.EfficientLengthMappedIterable(t1, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t2]}), [t2, $T]);
      },
      where$1: function(_, f) {
        var t1, t2;
        H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [P.String]});
        t1 = this.readClasses$0();
        t2 = H.getRuntimeTypeArgument(t1, "SetMixin", 0);
        return new H.WhereIterable(t1, H.functionTypeCheck(f, {func: 1, ret: P.bool, args: [t2]}), [t2]);
      },
      get$isEmpty: function(_) {
        return this.readClasses$0()._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this.readClasses$0()._collection$_length !== 0;
      },
      get$length: function(_) {
        return this.readClasses$0()._collection$_length;
      },
      contains$1: function(_, value) {
        if (typeof value !== "string")
          return false;
        this._validateToken$1(value);
        return this.readClasses$0().contains$1(0, value);
      },
      add$1: function(_, value) {
        H.stringTypeCheck(value);
        this._validateToken$1(value);
        return H.boolTypeCheck(this.modify$1(0, new P.CssClassSetImpl_add_closure(value)));
      },
      remove$1: function(_, value) {
        var s, result;
        H.stringTypeCheck(value);
        this._validateToken$1(value);
        if (typeof value !== "string")
          return false;
        s = this.readClasses$0();
        result = s.remove$1(0, value);
        this.writeClasses$1(s);
        return result;
      },
      addAll$1: function(_, iterable) {
        this.modify$1(0, new P.CssClassSetImpl_addAll_closure(this, H.assertSubtype(iterable, "$isIterable", [P.String], "$asIterable")));
      },
      removeAll$1: function(iterable) {
        this.modify$1(0, new P.CssClassSetImpl_removeAll_closure(H.assertSubtype(iterable, "$isIterable", [P.Object], "$asIterable")));
      },
      skip$1: function(_, n) {
        var t1 = this.readClasses$0();
        return H.SkipIterable_SkipIterable(t1, n, H.getRuntimeTypeArgument(t1, "SetMixin", 0));
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [P.String]});
        H.functionTypeCheck(orElse, {func: 1, ret: P.String});
        return this.readClasses$0().firstWhere$2$orElse(0, test, orElse);
      },
      elementAt$1: function(_, index) {
        return this.readClasses$0().elementAt$1(0, index);
      },
      modify$1: function(_, f) {
        var s, ret;
        H.functionTypeCheck(f, {func: 1, args: [[P.Set, P.String]]});
        s = this.readClasses$0();
        ret = f.call$1(s);
        this.writeClasses$1(s);
        return ret;
      },
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $asSetMixin: function() {
        return [P.String];
      },
      $asIterable: function() {
        return [P.String];
      },
      $asSet: function() {
        return [P.String];
      }
    },
    CssClassSetImpl_add_closure: {
      "^": "Closure:166;value",
      call$1: function(s) {
        return H.assertSubtype(s, "$isSet", [P.String], "$asSet").add$1(0, this.value);
      }
    },
    CssClassSetImpl_addAll_closure: {
      "^": "Closure:62;$this,iterable",
      call$1: function(s) {
        var t1 = P.String;
        return H.assertSubtype(s, "$isSet", [t1], "$asSet").addAll$1(0, this.iterable.map$1$1(0, this.$this.get$_validateToken(), t1));
      }
    },
    CssClassSetImpl_removeAll_closure: {
      "^": "Closure:62;iterable",
      call$1: function(s) {
        return H.assertSubtype(s, "$isSet", [P.String], "$asSet").removeAll$1(this.iterable);
      }
    },
    FilteredElementList: {
      "^": "ListBase;_node,_childNodes",
      get$_html_common$_iterable: function() {
        var t1, t2, t3;
        t1 = this._childNodes;
        t2 = H.getRuntimeTypeArgument(t1, "ListMixin", 0);
        t3 = W.Element;
        return new H.MappedIterable(new H.WhereIterable(t1, H.functionTypeCheck(new P.FilteredElementList__iterable_closure(), {func: 1, ret: P.bool, args: [t2]}), [t2]), H.functionTypeCheck(new P.FilteredElementList__iterable_closure0(), {func: 1, ret: t3, args: [t2]}), [t2, t3]);
      },
      forEach$1: function(_, f) {
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [W.Element]});
        C.JSArray_methods.forEach$1(P.List_List$from(this.get$_html_common$_iterable(), false, W.Element), f);
      },
      $indexSet: function(_, index, value) {
        var t1;
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isElement");
        t1 = this.get$_html_common$_iterable();
        J.replaceWith$1$x(t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index)), value);
      },
      set$length: function(_, newLength) {
        var len = J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
        if (typeof len !== "number")
          return H.iae(len);
        if (newLength >= len)
          return;
        else if (newLength < 0)
          throw H.wrapException(P.ArgumentError$("Invalid list length"));
        this.removeRange$2(0, newLength, len);
      },
      add$1: function(_, value) {
        J.append$1$x(this._childNodes._this, H.interceptedTypeCheck(value, "$isElement"));
      },
      contains$1: function(_, needle) {
        return false;
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        H.assertSubtype(iterable, "$isIterable", [W.Element], "$asIterable");
        throw H.wrapException(P.UnsupportedError$("Cannot setRange on filtered list"));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      removeRange$2: function(_, start, end) {
        var t1 = this.get$_html_common$_iterable();
        t1 = H.SkipIterable_SkipIterable(t1, start, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        if (typeof end !== "number")
          return end.$sub();
        C.JSArray_methods.forEach$1(P.List_List$from(H.TakeIterable_TakeIterable(t1, end - start, H.getRuntimeTypeArgument(t1, "Iterable", 0)), true, null), new P.FilteredElementList_removeRange_closure());
      },
      insert$2: function(_, index, value) {
        var t1, element;
        H.interceptedTypeCheck(value, "$isElement");
        if (index === J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable))
          J.append$1$x(this._childNodes._this, value);
        else {
          t1 = this.get$_html_common$_iterable();
          element = t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
          J.insertBefore$2$x(element.parentNode, value, element);
        }
      },
      removeAt$1: function(_, index) {
        var t1 = this.get$_html_common$_iterable();
        t1 = t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
        J.remove$0$ax(t1);
        return t1;
      },
      remove$1: function(_, element) {
        return false;
      },
      get$length: function(_) {
        return J.get$length$asx(this.get$_html_common$_iterable().__internal$_iterable);
      },
      $index: function(_, index) {
        var t1;
        H.intTypeCheck(index);
        t1 = this.get$_html_common$_iterable();
        return t1._f.call$1(J.elementAt$1$ax(t1.__internal$_iterable, index));
      },
      get$iterator: function(_) {
        var t1 = P.List_List$from(this.get$_html_common$_iterable(), false, W.Element);
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      $asEfficientLengthIterable: function() {
        return [W.Element];
      },
      $asListBase: function() {
        return [W.Element];
      },
      $asListMixin: function() {
        return [W.Element];
      },
      $asIterable: function() {
        return [W.Element];
      },
      $asList: function() {
        return [W.Element];
      }
    },
    FilteredElementList__iterable_closure: {
      "^": "Closure:71;",
      call$1: function(n) {
        return !!J.getInterceptor$(H.interceptedTypeCheck(n, "$isNode")).$isElement;
      }
    },
    FilteredElementList__iterable_closure0: {
      "^": "Closure:176;",
      call$1: [function(n) {
        return H.interceptedTypeCast(H.interceptedTypeCheck(n, "$isNode"), "$isElement");
      }, null, null, 4, 0, null, 38, "call"]
    },
    FilteredElementList_removeRange_closure: {
      "^": "Closure:8;",
      call$1: function(el) {
        return J.remove$0$ax(el);
      }
    }
  }], ["dart.dom.indexed_db", "dart:indexed_db",, P, {
    "^": "",
    _completeRequest: function(request, $T) {
      var t1, completer, t2, t3;
      t1 = new P._Future(0, $.Zone__current, [$T]);
      completer = new P._SyncCompleter(t1, [$T]);
      request.toString;
      t2 = W.Event;
      t3 = {func: 1, ret: -1, args: [t2]};
      W._EventStreamSubscription$(request, "success", H.functionTypeCheck(new P._completeRequest_closure(request, completer, $T), t3), false, t2);
      W._EventStreamSubscription$(request, "error", H.functionTypeCheck(completer.get$completeError(), t3), false, t2);
      return t1;
    },
    Cursor: {
      "^": "Interceptor;0key=",
      "%": "IDBCursor|IDBCursorWithValue"
    },
    Database: {
      "^": "EventTarget;0name=",
      "%": "IDBDatabase"
    },
    _completeRequest_closure: {
      "^": "Closure:13;request,completer,T",
      call$1: function(e) {
        this.completer.complete$1(0, H.assertSubtypeOfRuntimeType(new P._AcceptStructuredCloneDart2Js([], [], false).convertNativeToDart_AcceptStructuredClone$2$mustCopy(this.request.result, false), this.T));
      }
    },
    Index: {
      "^": "Interceptor;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      "%": "IDBIndex"
    },
    KeyRange: {
      "^": "Interceptor;",
      $isKeyRange: 1,
      "%": "IDBKeyRange"
    },
    ObjectStore: {
      "^": "Interceptor;0name=",
      set$name: function(receiver, $name) {
        receiver.name = H.stringTypeCheck($name);
      },
      add$2: function(receiver, value, key) {
        var request, e, stacktrace, t1, exception;
        try {
          request = null;
          request = this._indexed_db$_add$1(receiver, value);
          t1 = P._completeRequest(H.interceptedTypeCheck(request, "$isRequest0"), null);
          return t1;
        } catch (exception) {
          e = H.unwrapException(exception);
          stacktrace = H.getTraceFromException(exception);
          t1 = P.Future_Future$error(e, stacktrace, null);
          return t1;
        }
      },
      add$1: function($receiver, value) {
        return this.add$2($receiver, value, null);
      },
      _indexed_db$_add$2: function(receiver, value, key) {
        return this._add_2$1(receiver, new P._StructuredCloneDart2Js([], []).walk$1(value));
      },
      _indexed_db$_add$1: function($receiver, value) {
        return this._indexed_db$_add$2($receiver, value, null);
      },
      _add_2$1: function(receiver, value) {
        return receiver.add(value);
      },
      "%": "IDBObjectStore"
    },
    Observation: {
      "^": "Interceptor;0key=",
      "%": "IDBObservation"
    },
    OpenDBRequest: {
      "^": "Request0;",
      $isOpenDBRequest: 1,
      "%": "IDBOpenDBRequest|IDBVersionChangeRequest"
    },
    Request0: {
      "^": "EventTarget;",
      $isRequest0: 1,
      "%": ";IDBRequest"
    },
    VersionChangeEvent: {
      "^": "Event;0target=",
      "%": "IDBVersionChangeEvent"
    }
  }], ["dart.js", "dart:js",, P, {
    "^": "",
    _callDartFunction: [function(callback, captureThis, $self, $arguments) {
      var arguments0, dartArgs;
      H.boolTypeCheck(captureThis);
      H.listTypeCheck($arguments);
      if (captureThis) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      dartArgs = P.List_List$from(J.map$1$1$ax($arguments, P.js___convertToDart$closure(), null), true, null);
      return P._convertToJS(P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), dartArgs, null));
    }, null, null, 16, 0, null, 12, 40, 10, 29],
    _defineProperty: function(o, $name, value) {
      var exception;
      try {
        if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name)) {
          Object.defineProperty(o, $name, {value: value});
          return true;
        }
      } catch (exception) {
        H.unwrapException(exception);
      }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return;
    },
    _convertToJS: [function(o) {
      var t1;
      if (o == null || typeof o === "string" || typeof o === "number" || typeof o === "boolean")
        return o;
      t1 = J.getInterceptor$(o);
      if (!!t1.$isJsObject)
        return o._js$_jsObject;
      if (H.isBrowserObject(o))
        return o;
      if (!!t1.$isTypedData)
        return o;
      if (!!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (!!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.$get$_dartProxyCtor()));
    }, "call$1", "js___convertToJS$closure", 4, 0, 8, 30],
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy;
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: [function(o) {
      var ms, t1;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else if (o instanceof Object && H.isBrowserObject(o))
        return o;
      else if (o instanceof Object && !!J.getInterceptor$(o).$isTypedData)
        return o;
      else if (o instanceof Date) {
        ms = H.intTypeCheck(o.getTime());
        t1 = new P.DateTime(ms, false);
        t1.DateTime$_withValue$2$isUtc(ms, false);
        return t1;
      } else if (o.constructor === $.$get$_dartProxyCtor())
        return o.o;
      else
        return P._wrapToDart(o);
    }, "call$1", "js___convertToDart$closure", 4, 0, 223, 30],
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.$get$DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.$get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy;
      H.functionTypeCheck(createProxy, {func: 1, args: [,]});
      dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    _convertDartFunctionFast: function(f) {
      var existing, ret;
      existing = f.$dart_jsFunction;
      if (existing != null)
        return existing;
      ret = function(_call, f) {
        return function() {
          return _call(f, Array.prototype.slice.apply(arguments));
        };
      }(P._callDartFunctionFast, f);
      ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      f.$dart_jsFunction = ret;
      return ret;
    },
    _callDartFunctionFast: [function(callback, $arguments) {
      H.listTypeCheck($arguments);
      return P.Function_apply(H.interceptedTypeCheck(callback, "$isFunction"), $arguments, null);
    }, null, null, 8, 0, null, 12, 29],
    allowInterop: function(f, $F) {
      H.assertIsSubtype($F, P.Function, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'F' in 'allowInterop'.");
      H.assertSubtypeOfRuntimeType(f, $F);
      if (typeof f == "function")
        return f;
      else
        return H.assertSubtypeOfRuntimeType(P._convertDartFunctionFast(f), $F);
    },
    JsObject: {
      "^": "Object;_js$_jsObject",
      $index: ["super$JsObject$$index", function(_, property) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        return P._convertToDart(this._js$_jsObject[property]);
      }],
      $indexSet: ["super$JsObject$$indexSet", function(_, property, value) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        this._js$_jsObject[property] = P._convertToJS(value);
      }],
      get$hashCode: function(_) {
        return 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
      },
      hasProperty$1: function(property) {
        return property in this._js$_jsObject;
      },
      toString$0: function(_) {
        var t1, exception;
        try {
          t1 = String(this._js$_jsObject);
          return t1;
        } catch (exception) {
          H.unwrapException(exception);
          t1 = this.super$Object$toString(this);
          return t1;
        }
      },
      callMethod$2: function(method, args) {
        var t1, t2;
        t1 = this._js$_jsObject;
        if (args == null)
          t2 = null;
        else {
          t2 = H.getTypeArgumentByIndex(args, 0);
          t2 = P.List_List$from(new H.MappedListIterable(args, H.functionTypeCheck(P.js___convertToJS$closure(), {func: 1, ret: null, args: [t2]}), [t2, null]), true, null);
        }
        return P._convertToDart(t1[method].apply(t1, t2));
      }
    },
    JsFunction: {
      "^": "JsObject;_js$_jsObject"
    },
    JsArray: {
      "^": "_JsArray_JsObject_ListMixin;_js$_jsObject,$ti",
      _checkIndex$1: function(index) {
        var t1 = index < 0 || index >= this.get$length(this);
        if (t1)
          throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this), null, null));
      },
      $index: function(_, index) {
        if (typeof index === "number" && index === C.JSInt_methods.toInt$0(index))
          this._checkIndex$1(H.intTypeCheck(index));
        return H.assertSubtypeOfRuntimeType(this.super$JsObject$$index(0, index), H.getTypeArgumentByIndex(this, 0));
      },
      $indexSet: function(_, index, value) {
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index))
          this._checkIndex$1(H.intTypeCheck(index));
        this.super$JsObject$$indexSet(0, index, value);
      },
      get$length: function(_) {
        var len = this._js$_jsObject.length;
        if (typeof len === "number" && len >>> 0 === len)
          return len;
        throw H.wrapException(P.StateError$("Bad JsArray length"));
      },
      set$length: function(_, $length) {
        this.super$JsObject$$indexSet(0, "length", $length);
      },
      add$1: function(_, value) {
        this.callMethod$2("push", [H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0))]);
      },
      insert$2: function(_, index, element) {
        var t1;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        t1 = index < 0 || index >= this.get$length(this) + 1;
        if (t1)
          H.throwExpression(P.RangeError$range(index, 0, this.get$length(this), null, null));
        this.callMethod$2("splice", [index, 0, element]);
      },
      removeAt$1: function(_, index) {
        this._checkIndex$1(index);
        return H.assertSubtypeOfRuntimeType(J.$index$asx(this.callMethod$2("splice", [index, 1]), 0), H.getTypeArgumentByIndex(this, 0));
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        var $length, args;
        H.assertSubtype(iterable, "$isIterable", this.$ti, "$asIterable");
        P.JsArray__checkRange(start, end, this.get$length(this));
        if (typeof end !== "number")
          return end.$sub();
        $length = end - start;
        if ($length === 0)
          return;
        if (skipCount < 0)
          throw H.wrapException(P.ArgumentError$(skipCount));
        args = [start, $length];
        C.JSArray_methods.addAll$1(args, J.skip$1$ax(iterable, skipCount).take$1(0, $length));
        this.callMethod$2("splice", args);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      $isEfficientLengthIterable: 1,
      $isIterable: 1,
      $isList: 1,
      static: {
        JsArray__checkRange: function(start, end, $length) {
          if (start < 0 || start > $length)
            throw H.wrapException(P.RangeError$range(start, 0, $length, null, null));
          if (typeof end !== "number")
            return end.$lt();
          if (end < start || end > $length)
            throw H.wrapException(P.RangeError$range(end, start, $length, null, null));
        }
      }
    },
    _convertToJS_closure: {
      "^": "Closure:8;",
      call$1: function(o) {
        var jsFunction;
        H.interceptedTypeCheck(o, "$isFunction");
        jsFunction = function(_call, f, captureThis) {
          return function() {
            return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
          };
        }(P._callDartFunction, o, false);
        P._defineProperty(jsFunction, $.$get$DART_CLOSURE_PROPERTY_NAME(), o);
        return jsFunction;
      }
    },
    _convertToJS_closure0: {
      "^": "Closure:8;ctor",
      call$1: function(o) {
        return new this.ctor(o);
      }
    },
    _wrapToDart_closure: {
      "^": "Closure:210;",
      call$1: function(o) {
        return new P.JsFunction(o);
      }
    },
    _wrapToDart_closure0: {
      "^": "Closure:218;",
      call$1: function(o) {
        return new P.JsArray(o, [null]);
      }
    },
    _wrapToDart_closure1: {
      "^": "Closure:224;",
      call$1: function(o) {
        return new P.JsObject(o);
      }
    },
    _JsArray_JsObject_ListMixin: {
      "^": "JsObject+ListMixin;"
    }
  }], ["dart.js_util", "dart:js_util",, P, {
    "^": "",
    hasProperty: function(o, $name) {
      return $name in o;
    }
  }], ["dart.math", "dart:math",, P, {
    "^": "",
    log: function(x) {
      return Math.log(x);
    },
    pow: function(x, exponent) {
      H.checkNum(exponent);
      return Math.pow(x, exponent);
    },
    Random_Random: function(seed) {
      return C.C__JSRandom;
    },
    _JenkinsSmiHash_combine0: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    _JSRandom: {
      "^": "Object;",
      nextInt$1: function(max) {
        if (max <= 0 || max > 4294967296)
          throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
        return Math.random() * max >>> 0;
      }
    },
    Point: {
      "^": "Object;x>,y>,$ti",
      toString$0: function(_) {
        return "Point(" + H.S(this.x) + ", " + H.S(this.y) + ")";
      },
      $eq: function(_, other) {
        var t1, t2, t3;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isPoint", [P.num], null))
          return false;
        t1 = this.x;
        t2 = J.getInterceptor$x(other);
        t3 = t2.get$x(other);
        if (t1 == null ? t3 == null : t1 === t3) {
          t1 = this.y;
          t2 = t2.get$y(other);
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1, t2;
        t1 = J.get$hashCode$(this.x);
        t2 = J.get$hashCode$(this.y);
        return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t1), t2));
      },
      $add: function(_, other) {
        var t1, t2, t3, t4, t5;
        t1 = this.$ti;
        H.assertSubtype(other, "$isPoint", t1, "$asPoint");
        t2 = this.x;
        t3 = other.x;
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t3 !== "number")
          return H.iae(t3);
        t4 = H.getTypeArgumentByIndex(this, 0);
        t3 = H.assertSubtypeOfRuntimeType(t2 + t3, t4);
        t2 = this.y;
        t5 = other.y;
        if (typeof t2 !== "number")
          return t2.$add();
        if (typeof t5 !== "number")
          return H.iae(t5);
        return new P.Point(t3, H.assertSubtypeOfRuntimeType(t2 + t5, t4), t1);
      }
    },
    _RectangleBase: {
      "^": "Object;$ti",
      get$right: function(_) {
        var t1, t2;
        t1 = this.get$left(this);
        t2 = J.get$width$x(this);
        if (typeof t2 !== "number")
          return H.iae(t2);
        return H.assertSubtypeOfRuntimeType(t1 + t2, H.getTypeArgumentByIndex(this, 0));
      },
      get$bottom: function(_) {
        var t1, t2;
        t1 = this.get$top(this);
        t2 = J.get$height$x(this);
        if (typeof t2 !== "number")
          return H.iae(t2);
        return H.assertSubtypeOfRuntimeType(t1 + t2, H.getTypeArgumentByIndex(this, 0));
      },
      toString$0: function(_) {
        var t1 = J.getInterceptor$x(this);
        return "Rectangle (" + H.S(this.get$left(this)) + ", " + H.S(t1.get$top(this)) + ") " + H.S(t1.get$width(this)) + " x " + H.S(t1.get$height(this));
      },
      $eq: function(_, other) {
        var t1, t2, t3, t4, t5;
        if (other == null)
          return false;
        if (!H.checkSubtype(other, "$isRectangle", [P.num], "$asRectangle"))
          return false;
        t1 = J.getInterceptor$x(this);
        t2 = J.getInterceptor$x(other);
        if (this.get$left(this) === t2.get$left(other))
          if (t1.get$top(this) === t2.get$top(other)) {
            t3 = t1.get$left(this);
            t4 = t1.get$width(this);
            if (typeof t4 !== "number")
              return H.iae(t4);
            t5 = H.getTypeArgumentByIndex(this, 0);
            if (H.assertSubtypeOfRuntimeType(t3 + t4, t5) === t2.get$right(other)) {
              t3 = t1.get$top(this);
              t1 = t1.get$height(this);
              if (typeof t1 !== "number")
                return H.iae(t1);
              t2 = H.assertSubtypeOfRuntimeType(t3 + t1, t5) === t2.get$bottom(other);
              t1 = t2;
            } else
              t1 = false;
          } else
            t1 = false;
        else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1, t2, t3, t4, t5, t6;
        t1 = J.getInterceptor$x(this);
        t2 = this.get$left(this);
        t3 = t1.get$top(this);
        t4 = t1.get$left(this);
        t5 = t1.get$width(this);
        if (typeof t5 !== "number")
          return H.iae(t5);
        t6 = H.getTypeArgumentByIndex(this, 0);
        t5 = H.assertSubtypeOfRuntimeType(t4 + t5, t6);
        t4 = t1.get$top(this);
        t1 = t1.get$height(this);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t6 = H.assertSubtypeOfRuntimeType(t4 + t1, t6);
        return P._JenkinsSmiHash_finish(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(P._JenkinsSmiHash_combine0(0, t2 & 0x1FFFFFFF), t3 & 0x1FFFFFFF), t5 & 0x1FFFFFFF), t6 & 0x1FFFFFFF));
      },
      intersection$1: function(_, other) {
        var t1, t2, x0, t3, t4, t5, x1, y0, y1;
        H.assertSubtype(other, "$isRectangle", this.$ti, "$asRectangle");
        t1 = J.getInterceptor$x(this);
        t2 = other.left;
        x0 = Math.max(this.get$left(this), t2);
        t3 = t1.get$left(this);
        t4 = t1.get$width(this);
        if (typeof t4 !== "number")
          return H.iae(t4);
        t5 = other.width;
        if (typeof t5 !== "number")
          return H.iae(t5);
        x1 = Math.min(t3 + t4, t2 + t5);
        if (x0 <= x1) {
          t2 = other.top;
          y0 = Math.max(t1.get$top(this), t2);
          t3 = t1.get$top(this);
          t1 = t1.get$height(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t4 = other.height;
          if (typeof t4 !== "number")
            return H.iae(t4);
          y1 = Math.min(t3 + t1, t2 + t4);
          if (y0 <= y1) {
            t1 = H.getTypeArgumentByIndex(this, 0);
            return P.Rectangle$(x0, y0, H.assertSubtypeOfRuntimeType(x1 - x0, t1), H.assertSubtypeOfRuntimeType(y1 - y0, t1), t1);
          }
        }
        return;
      },
      get$topLeft: function(_) {
        return new P.Point(this.get$left(this), J.get$top$x(this), this.$ti);
      }
    },
    Rectangle: {
      "^": "_RectangleBase;left>,top>,width>,height>,$ti",
      static: {
        Rectangle$: function(left, $top, width, height, $T) {
          var t1, t2;
          if (typeof width !== "number")
            return width.$lt();
          if (width < 0)
            t1 = -width * 0;
          else
            t1 = width;
          H.assertSubtypeOfRuntimeType(t1, $T);
          if (typeof height !== "number")
            return height.$lt();
          if (height < 0)
            t2 = -height * 0;
          else
            t2 = height;
          return new P.Rectangle(left, $top, t1, H.assertSubtypeOfRuntimeType(t2, $T), [$T]);
        }
      }
    },
    MutableRectangle: {
      "^": "_RectangleBase;left>,top>,_math$_width,_height,$ti",
      set$_math$_width: function(_, _width) {
        this._math$_width = H.assertSubtypeOfRuntimeType(_width, H.getTypeArgumentByIndex(this, 0));
      },
      set$_height: function(_, _height) {
        this._height = H.assertSubtypeOfRuntimeType(_height, H.getTypeArgumentByIndex(this, 0));
      },
      get$width: function(_) {
        return this._math$_width;
      },
      get$height: function(_) {
        return this._height;
      },
      $isRectangle: 1
    }
  }], ["dart.dom.svg", "dart:svg",, P, {
    "^": "",
    AElement: {
      "^": "GraphicsElement;0target=",
      "%": "SVGAElement"
    },
    AnimatedLength: {
      "^": "Interceptor;",
      $isAnimatedLength: 1,
      "%": "SVGAnimatedLength"
    },
    AnimatedLengthList: {
      "^": "Interceptor;",
      $isAnimatedLengthList: 1,
      "%": "SVGAnimatedLengthList"
    },
    AnimatedNumber: {
      "^": "Interceptor;",
      $isAnimatedNumber: 1,
      "%": "SVGAnimatedNumber"
    },
    AnimatedString: {
      "^": "Interceptor;",
      $isAnimatedString: 1,
      "%": "SVGAnimatedString"
    },
    FEBlendElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEBlendElement"
    },
    FEColorMatrixElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEColorMatrixElement"
    },
    FEComponentTransferElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEComponentTransferElement"
    },
    FECompositeElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFECompositeElement"
    },
    FEConvolveMatrixElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEConvolveMatrixElement"
    },
    FEDiffuseLightingElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEDiffuseLightingElement"
    },
    FEDisplacementMapElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEDisplacementMapElement"
    },
    FEFloodElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEFloodElement"
    },
    FEGaussianBlurElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEGaussianBlurElement"
    },
    FEImageElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEImageElement"
    },
    FEMergeElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEMergeElement"
    },
    FEMorphologyElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEMorphologyElement"
    },
    FEOffsetElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFEOffsetElement"
    },
    FEPointLightElement: {
      "^": "SvgElement;0x=,0y=",
      "%": "SVGFEPointLightElement"
    },
    FESpecularLightingElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFESpecularLightingElement"
    },
    FESpotLightElement: {
      "^": "SvgElement;0x=,0y=",
      "%": "SVGFESpotLightElement"
    },
    FETileElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFETileElement"
    },
    FETurbulenceElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFETurbulenceElement"
    },
    FilterElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGFilterElement"
    },
    ForeignObjectElement: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGForeignObjectElement"
    },
    GeometryElement: {
      "^": "GraphicsElement;",
      "%": "SVGCircleElement|SVGEllipseElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement;SVGGeometryElement"
    },
    GraphicsElement: {
      "^": "SvgElement;",
      "%": "SVGClipPathElement|SVGDefsElement|SVGGElement|SVGSwitchElement;SVGGraphicsElement"
    },
    ImageElement0: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGImageElement"
    },
    Length: {
      "^": "Interceptor;",
      $isLength: 1,
      "%": "SVGLength"
    },
    LengthList: {
      "^": "_LengthList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isLength");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.Length];
      },
      $asListMixin: function() {
        return [P.Length];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.Length];
      },
      $isList: 1,
      $asList: function() {
        return [P.Length];
      },
      $asImmutableListMixin: function() {
        return [P.Length];
      },
      "%": "SVGLengthList"
    },
    MaskElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGMaskElement"
    },
    Number: {
      "^": "Interceptor;",
      $isNumber: 1,
      "%": "SVGNumber"
    },
    NumberList: {
      "^": "_NumberList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isNumber");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.Number];
      },
      $asListMixin: function() {
        return [P.Number];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.Number];
      },
      $isList: 1,
      $asList: function() {
        return [P.Number];
      },
      $asImmutableListMixin: function() {
        return [P.Number];
      },
      "%": "SVGNumberList"
    },
    PatternElement: {
      "^": "SvgElement;0height=,0width=,0x=,0y=",
      "%": "SVGPatternElement"
    },
    Point0: {
      "^": "Interceptor;0x=,0y=",
      "%": "SVGPoint"
    },
    PointList: {
      "^": "Interceptor;0length=",
      "%": "SVGPointList"
    },
    Rect: {
      "^": "Interceptor;0height=,0width=,0x=,0y=",
      "%": "SVGRect"
    },
    RectElement: {
      "^": "GeometryElement;0height=,0width=,0x=,0y=",
      "%": "SVGRectElement"
    },
    StringList: {
      "^": "_StringList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.stringTypeCheck(value);
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.String];
      },
      $asListMixin: function() {
        return [P.String];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.String];
      },
      $isList: 1,
      $asList: function() {
        return [P.String];
      },
      $asImmutableListMixin: function() {
        return [P.String];
      },
      "%": "SVGStringList"
    },
    AttributeClassSet: {
      "^": "CssClassSetImpl;_svg$_element",
      readClasses$0: function() {
        var classname, s, t1, t2, _i, trimmed;
        classname = J.getAttribute$1$x(this._svg$_element, "class");
        s = P.LinkedHashSet_LinkedHashSet(null, null, null, P.String);
        if (classname == null)
          return s;
        for (t1 = classname.split(" "), t2 = t1.length, _i = 0; _i < t2; ++_i) {
          trimmed = J.trim$0$s(t1[_i]);
          if (trimmed.length !== 0)
            s.add$1(0, trimmed);
        }
        return s;
      },
      writeClasses$1: function(s) {
        J.setAttribute$2$x(this._svg$_element, "class", s.join$1(0, " "));
      }
    },
    SvgElement: {
      "^": "Element;",
      get$classes: function(receiver) {
        return new P.AttributeClassSet(receiver);
      },
      get$children: function(receiver) {
        return new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
      },
      focus$0: function(receiver) {
        return receiver.focus();
      },
      "%": "SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGComponentTransferFunctionElement|SVGDescElement|SVGDiscardElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGGradientElement|SVGLinearGradientElement|SVGMPathElement|SVGMarkerElement|SVGMetadataElement|SVGRadialGradientElement|SVGScriptElement|SVGSetElement|SVGStopElement|SVGStyleElement|SVGSymbolElement|SVGTitleElement|SVGViewElement;SVGElement"
    },
    SvgSvgElement: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGSVGElement"
    },
    TextContentElement: {
      "^": "GraphicsElement;",
      "%": "SVGTextPathElement;SVGTextContentElement"
    },
    TextPositioningElement: {
      "^": "TextContentElement;0x=,0y=",
      "%": "SVGTSpanElement|SVGTextElement|SVGTextPositioningElement"
    },
    Transform: {
      "^": "Interceptor;",
      $isTransform: 1,
      "%": "SVGTransform"
    },
    TransformList: {
      "^": "_TransformList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return this.getItem$1(receiver, index);
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isTransform");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      getItem$1: function(receiver, index) {
        return receiver.getItem(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.Transform];
      },
      $asListMixin: function() {
        return [P.Transform];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.Transform];
      },
      $isList: 1,
      $asList: function() {
        return [P.Transform];
      },
      $asImmutableListMixin: function() {
        return [P.Transform];
      },
      "%": "SVGTransformList"
    },
    UseElement: {
      "^": "GraphicsElement;0height=,0width=,0x=,0y=",
      "%": "SVGUseElement"
    },
    _LengthList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _LengthList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_LengthList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _NumberList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _NumberList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_NumberList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _StringList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _StringList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_StringList_Interceptor_ListMixin+ImmutableListMixin;"
    },
    _TransformList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _TransformList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_TransformList_Interceptor_ListMixin+ImmutableListMixin;"
    }
  }], ["dart.typed_data", "dart:typed_data",, P, {
    "^": "",
    Uint8List: {
      "^": "Object;",
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [P.int];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [P.int];
      },
      $isList: 1,
      $asList: function() {
        return [P.int];
      },
      $isTypedData: 1
    }
  }], ["dart.dom.web_audio", "dart:web_audio",, P, {
    "^": "",
    AudioBuffer: {
      "^": "Interceptor;0length=",
      "%": "AudioBuffer"
    },
    AudioParamMap: {
      "^": "_AudioParamMap_Interceptor_MapMixin;",
      containsKey$1: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key))) != null;
      },
      $index: function(receiver, key) {
        return P.convertNativeToDart_Dictionary(receiver.get(H.stringTypeCheck(key)));
      },
      forEach$1: function(receiver, f) {
        var entries, entry;
        H.functionTypeCheck(f, {func: 1, ret: -1, args: [P.String,,]});
        entries = receiver.entries();
        for (; true;) {
          entry = entries.next();
          if (entry.done)
            return;
          f.call$2(entry.value[0], P.convertNativeToDart_Dictionary(entry.value[1]));
        }
      },
      get$keys: function(receiver) {
        var keys = H.setRuntimeTypeInfo([], [P.String]);
        this.forEach$1(receiver, new P.AudioParamMap_keys_closure(keys));
        return keys;
      },
      get$values: function(receiver) {
        var values = H.setRuntimeTypeInfo([], [[P.Map,,,]]);
        this.forEach$1(receiver, new P.AudioParamMap_values_closure(values));
        return values;
      },
      get$length: function(receiver) {
        return receiver.size;
      },
      get$isEmpty: function(receiver) {
        return receiver.size === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.size !== 0;
      },
      $indexSet: function(receiver, key, value) {
        H.stringTypeCheck(key);
        throw H.wrapException(P.UnsupportedError$("Not supported"));
      },
      $asMapMixin: function() {
        return [P.String, null];
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, null];
      },
      "%": "AudioParamMap"
    },
    AudioParamMap_keys_closure: {
      "^": "Closure:12;keys",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.keys, k);
      }
    },
    AudioParamMap_values_closure: {
      "^": "Closure:12;values",
      call$2: function(k, v) {
        return C.JSArray_methods.add$1(this.values, v);
      }
    },
    AudioTrack: {
      "^": "Interceptor;0enabled=,0id=",
      "%": "AudioTrack"
    },
    AudioTrackList: {
      "^": "EventTarget;0length=",
      "%": "AudioTrackList"
    },
    BaseAudioContext: {
      "^": "EventTarget;",
      "%": "AudioContext|webkitAudioContext;BaseAudioContext"
    },
    OfflineAudioContext: {
      "^": "BaseAudioContext;0length=",
      "%": "OfflineAudioContext"
    },
    _AudioParamMap_Interceptor_MapMixin: {
      "^": "Interceptor+MapMixin;"
    }
  }], ["dart.dom.web_gl", "dart:web_gl",, P, {
    "^": "",
    ActiveInfo: {
      "^": "Interceptor;0name=",
      "%": "WebGLActiveInfo"
    }
  }], ["dart.dom.web_sql", "dart:web_sql",, P, {
    "^": "",
    SqlResultSetRowList: {
      "^": "_SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        H.intTypeCheck(index);
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return P.convertNativeToDart_Dictionary(this._item_1$1(receiver, index));
      },
      $indexSet: function(receiver, index, value) {
        H.intTypeCheck(index);
        H.interceptedTypeCheck(value, "$isMap");
        throw H.wrapException(P.UnsupportedError$("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(P.UnsupportedError$("Cannot resize immutable List."));
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      item$1: [function(receiver, index) {
        return P.convertNativeToDart_Dictionary(this._item_1$1(receiver, index));
      }, "call$1", "get$item", 5, 0, 230],
      _item_1$1: function(receiver, index) {
        return receiver.item(index);
      },
      $isEfficientLengthIterable: 1,
      $asEfficientLengthIterable: function() {
        return [[P.Map,,,]];
      },
      $asListMixin: function() {
        return [[P.Map,,,]];
      },
      $isIterable: 1,
      $asIterable: function() {
        return [[P.Map,,,]];
      },
      $isList: 1,
      $asList: function() {
        return [[P.Map,,,]];
      },
      $asImmutableListMixin: function() {
        return [[P.Map,,,]];
      },
      "%": "SQLResultSetRowList"
    },
    _SqlResultSetRowList_Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;"
    },
    _SqlResultSetRowList_Interceptor_ListMixin_ImmutableListMixin: {
      "^": "_SqlResultSetRowList_Interceptor_ListMixin+ImmutableListMixin;"
    }
  }], ["angular.src.bootstrap.modules", "package:angular/src/bootstrap/modules.dart",, G, {
    "^": "",
    createNgZone: [function() {
      return Y.NgZone$(false);
    }, "call$0", "modules__createNgZone$closure", 0, 0, 54],
    createRandomAppId: function() {
      var t1 = new G.createRandomAppId_char(C.C__JSRandom);
      return H.S(t1.call$0()) + H.S(t1.call$0()) + H.S(t1.call$0());
    },
    ThrowingSlowComponentLoader: {
      "^": "Object;",
      loadNextToLocation$1$3: function(_, __, ___) {
        throw H.wrapException(P.UnsupportedError$("You are using runApp or runAppAsync, which does not support loading a component with SlowComponentLoader. Please migrate this code to use ComponentLoader instead."));
      },
      loadNextToLocation$1$2: function(_, __, $T) {
        return this.loadNextToLocation$1$3(_, __, null, $T);
      },
      $isSlowComponentLoader: 1
    },
    createRandomAppId_char: {
      "^": "Closure:7;random",
      call$0: function() {
        return H.Primitives_stringFromCharCode(97 + this.random.nextInt$1(26));
      }
    }
  }], ["", "package:angular/src/bootstrap/modules.template.dart",, Y, {
    "^": "",
    minimalApp$Injector: [function($parent) {
      return new Y._Injector$minimalApp($parent == null ? C.EmptyInjector_null : $parent);
    }, function() {
      return Y.minimalApp$Injector(null);
    }, "call$1", "call$0", "modules_template__minimalApp$Injector$closure", 0, 2, 83],
    _Injector$minimalApp: {
      "^": "HierarchicalInjector;0_modules_template$_field0,0_modules_template$_field1,0_modules_template$_field2,0_modules_template$_field3,0_field5,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var t1;
        if (token === C.Type_SlowComponentLoader_qxe) {
          t1 = this._modules_template$_field0;
          if (t1 == null) {
            t1 = new G.ThrowingSlowComponentLoader();
            this._modules_template$_field0 = t1;
          }
          return t1;
        }
        if (token === C.Type_ComponentLoader_7xV) {
          t1 = this._modules_template$_field1;
          if (t1 == null) {
            t1 = new M.ComponentLoader();
            this._modules_template$_field1 = t1;
          }
          return t1;
        }
        if (token === C.OpaqueToken_APP_ID) {
          t1 = this._modules_template$_field2;
          if (t1 == null) {
            t1 = G.createRandomAppId();
            this._modules_template$_field2 = t1;
          }
          return t1;
        }
        if (token === C.Type_DomSanitizationService_cKo) {
          t1 = this._modules_template$_field3;
          if (t1 == null) {
            this._modules_template$_field3 = C.C_DomSanitizationServiceImpl;
            t1 = C.C_DomSanitizationServiceImpl;
          }
          return t1;
        }
        if (token === C.Type_SanitizationService_bRS)
          return this.$get$1(0, C.Type_DomSanitizationService_cKo);
        if (token === C.Type_ExceptionHandler_qBE) {
          t1 = this._field5;
          if (t1 == null) {
            t1 = new T.BrowserExceptionHandler();
            this._field5 = t1;
          }
          return t1;
        }
        if (token === C.Type_Injector_aJC)
          return this;
        return orElse;
      }
    }
  }], ["", "package:angular/src/bootstrap/run.dart",, G, {
    "^": "",
    appInjector: function(userProvidedInjector, createNgZone) {
      var t1, t2, testabilityRegistry, minimalInjector, ngZone, userInjector;
      t1 = {};
      H.functionTypeCheck(userProvidedInjector, {func: 1, ret: M.Injector, opt: [M.Injector]});
      H.functionTypeCheck(createNgZone, {func: 1, ret: Y.NgZone});
      t2 = $._platformInjectorCache;
      if (t2 == null) {
        testabilityRegistry = new D.TestabilityRegistry(new H.JsLinkedHashMap(0, 0, [null, D.Testability]), new D._NoopGetTestability());
        if ($.sharedStylesHost == null)
          $.sharedStylesHost = new A.DomSharedStylesHost(document.head, new P._LinkedIdentityHashSet(0, 0, [P.String]));
        t2 = new K.BrowserGetTestability();
        testabilityRegistry._testabilityGetter = t2;
        t2.addToWindow$1(testabilityRegistry);
        t2 = P.Object;
        t2 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_TestabilityRegistry_IMm, testabilityRegistry], t2, t2);
        t2 = new A.MapInjector(t2, C.EmptyInjector_null);
        $._platformInjectorCache = t2;
      }
      minimalInjector = Y.modules_template__minimalApp$Injector$closure().call$1(t2);
      t1.applicationRef = null;
      ngZone = createNgZone.call$0();
      t2 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_ApplicationRef_Aij, new G.appInjector_closure(t1), C.Type_AppViewUtils_NWH, new G.appInjector_closure0(), C.Type_NgZone_6ty, new G.appInjector_closure1(ngZone), C.Type_Testability_h8g, new G.appInjector_closure2(ngZone)], P.Object, {func: 1, ret: P.Object});
      userInjector = userProvidedInjector.call$1(new G._LazyInjector(t2, minimalInjector == null ? C.EmptyInjector_null : minimalInjector));
      t2 = M.Injector;
      ngZone.toString;
      t1 = H.functionTypeCheck(new G.appInjector_closure3(t1, ngZone, userInjector), {func: 1, ret: t2});
      return ngZone._innerZone.run$1$1(t1, t2);
    },
    appInjector_closure: {
      "^": "Closure:232;_box_0",
      call$0: function() {
        return this._box_0.applicationRef;
      }
    },
    appInjector_closure0: {
      "^": "Closure:233;",
      call$0: function() {
        return $.appViewUtils;
      }
    },
    appInjector_closure1: {
      "^": "Closure:54;ngZone",
      call$0: function() {
        return this.ngZone;
      }
    },
    appInjector_closure2: {
      "^": "Closure:237;ngZone",
      call$0: function() {
        var t1 = new D.Testability(this.ngZone, 0, true, false, H.setRuntimeTypeInfo([], [P.Function]));
        t1._watchAngularEvents$0();
        return t1;
      }
    },
    appInjector_closure3: {
      "^": "Closure:239;_box_0,ngZone,userInjector",
      call$0: [function() {
        var t1, t2, t3, t4;
        t1 = this.ngZone;
        t2 = this.userInjector;
        this._box_0.applicationRef = Y.ApplicationRef$_(t1, H.interceptedTypeCheck(t2.$get$1(0, C.Type_ExceptionHandler_qBE), "$isExceptionHandler"), t2);
        t3 = H.stringTypeCheck(t2.$get$1(0, C.OpaqueToken_APP_ID));
        t4 = H.interceptedTypeCheck(t2.$get$1(0, C.Type_SanitizationService_bRS), "$isSanitizationService");
        $.appViewUtils = new Q.AppViewUtils(t3, N.EventManager$(H.setRuntimeTypeInfo([new L.DomEventsPlugin(), new N.KeyEventsPlugin()], [N.EventManagerPlugin]), t1), t4);
        return t2;
      }, null, null, 0, 0, null, "call"]
    },
    _LazyInjector: {
      "^": "HierarchicalInjector;_run$_providers,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var result = this._run$_providers.$index(0, token);
        if (result == null) {
          if (token === C.Type_Injector_aJC)
            return this;
          return orElse;
        }
        return result.call$0();
      }
    }
  }], ["", "package:angular/src/common/directives/ng_class.dart",, Y, {
    "^": "",
    NgClass: {
      "^": "Object;_ngEl,0_iterableDiffer,0_keyValueDiffer,_initialClasses,0_rawClass",
      set$_initialClasses: function(_initialClasses) {
        this._initialClasses = H.assertSubtype(_initialClasses, "$isList", [P.String], "$asList");
      },
      set$initialClasses: function(v) {
        var t1;
        this._applyInitialClasses$1(true);
        t1 = H.setRuntimeTypeInfo(v.split(" "), [P.String]);
        this.set$_initialClasses(t1);
        this._applyInitialClasses$1(false);
        this._applyClasses$2(this._rawClass, false);
      },
      set$rawClass: function(v) {
        this._applyClasses$2(this._rawClass, true);
        this._applyInitialClasses$1(false);
        this._rawClass = v;
        this._iterableDiffer = null;
        this._keyValueDiffer = null;
        this._iterableDiffer = R.DefaultIterableDiffer$(null);
      },
      ngDoCheck$0: function() {
        var t1, changes;
        t1 = this._iterableDiffer;
        if (t1 != null) {
          changes = t1.diff$1(this._rawClass);
          if (changes != null)
            this._applyIterableChanges$1(changes);
        }
        t1 = this._keyValueDiffer;
        if (t1 != null) {
          changes = t1.diff$1(H.interceptedTypeCheck(this._rawClass, "$isMap"));
          if (changes != null)
            this._applyKeyValueChanges$1(changes);
        }
      },
      _applyKeyValueChanges$1: function(changes) {
        changes.forEachAddedItem$1(new Y.NgClass__applyKeyValueChanges_closure(this));
        changes.forEachChangedItem$1(new Y.NgClass__applyKeyValueChanges_closure0(this));
        changes.forEachRemovedItem$1(new Y.NgClass__applyKeyValueChanges_closure1(this));
      },
      _applyIterableChanges$1: function(changes) {
        changes.forEachAddedItem$1(new Y.NgClass__applyIterableChanges_closure(this));
        changes.forEachRemovedItem$1(new Y.NgClass__applyIterableChanges_closure0(this));
      },
      _applyInitialClasses$1: function(isCleanup) {
        var t1, t2, t3, _i;
        for (t1 = this._initialClasses, t2 = t1.length, t3 = !isCleanup, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          this._toggleClass$2(t1[_i], t3);
      },
      _applyClasses$2: function(rawClassVal, isCleanup) {
        var t1, t2;
        if (rawClassVal != null)
          for (t1 = rawClassVal._list, t1 = new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]), t2 = !isCleanup; t1.moveNext$0();)
            this._toggleClass$2(H.stringTypeCheck(t1.__interceptors$_current), t2);
      },
      _toggleClass$2: function(className, enabled) {
        var classList, t1, classes, len, i;
        H.stringTypeCheck(className);
        H.boolTypeCheck(enabled);
        className = J.trim$0$s(className);
        if (className.length === 0)
          return;
        classList = J.get$classes$x(this._ngEl);
        if (C.JSString_methods.contains$1(className, " ")) {
          t1 = $.NgClass__separator;
          if (t1 == null) {
            t1 = P.RegExp_RegExp("\\s+", true, false);
            $.NgClass__separator = t1;
          }
          classes = C.JSString_methods.split$1(className, t1);
          for (len = classes.length, i = 0; i < len; ++i) {
            t1 = classes.length;
            if (enabled) {
              if (i >= t1)
                return H.ioore(classes, i);
              classList.add$1(0, classes[i]);
            } else {
              if (i >= t1)
                return H.ioore(classes, i);
              classList.remove$1(0, classes[i]);
            }
          }
        } else if (enabled)
          classList.add$1(0, className);
        else
          classList.remove$1(0, className);
      }
    },
    NgClass__applyKeyValueChanges_closure: {
      "^": "Closure:39;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.key), H.boolTypeCheck(record.currentValue));
      }
    },
    NgClass__applyKeyValueChanges_closure0: {
      "^": "Closure:39;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.key), H.boolTypeCheck(record.currentValue));
      }
    },
    NgClass__applyKeyValueChanges_closure1: {
      "^": "Closure:39;$this",
      call$1: function(record) {
        if (record.previousValue != null)
          this.$this._toggleClass$2(H.stringTypeCheck(record.key), false);
      }
    },
    NgClass__applyIterableChanges_closure: {
      "^": "Closure:44;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.item), true);
      }
    },
    NgClass__applyIterableChanges_closure0: {
      "^": "Closure:44;$this",
      call$1: function(record) {
        this.$this._toggleClass$2(H.stringTypeCheck(record.item), false);
      }
    }
  }], ["", "package:angular/src/common/directives/ng_for.dart",, R, {
    "^": "",
    NgFor: {
      "^": "Object;_ng_for$_viewContainer,0_differ,0_ngForOf,0_ngForTrackBy,_ng_for$_templateRef",
      set$ngForOf: function(value) {
        this._ngForOf = value;
        if (this._differ == null && value != null)
          this._differ = R.DefaultIterableDiffer$(this._ngForTrackBy);
      },
      ngDoCheck$0: function() {
        var t1, changes;
        t1 = this._differ;
        if (t1 != null) {
          changes = t1.diff$1(this._ngForOf);
          if (changes != null)
            this._ng_for$_applyChanges$1(changes);
        }
      },
      _ng_for$_applyChanges$1: function(changes) {
        var insertTuples, i, t1, t2, t3, len;
        insertTuples = H.setRuntimeTypeInfo([], [R._RecordViewTuple]);
        changes.forEachOperation$1(new R.NgFor__applyChanges_closure(this, insertTuples));
        for (i = 0; i < insertTuples.length; ++i) {
          t1 = insertTuples[i];
          t2 = t1.record;
          t1 = t1.view.appView.locals;
          t1.$indexSet(0, "$implicit", t2.item);
          t3 = t2.currentIndex;
          t3.toString;
          if (typeof t3 !== "number")
            return t3.$and();
          t1.$indexSet(0, "even", (t3 & 1) === 0);
          t2 = t2.currentIndex;
          t2.toString;
          if (typeof t2 !== "number")
            return t2.$and();
          t1.$indexSet(0, "odd", (t2 & 1) === 1);
        }
        for (t1 = this._ng_for$_viewContainer, len = t1.get$length(t1), t2 = len - 1, i = 0; i < len; ++i) {
          t3 = t1.nestedViews;
          if (i >= t3.length)
            return H.ioore(t3, i);
          t3 = t3[i].viewData.ref.appView.locals;
          t3.$indexSet(0, "first", i === 0);
          t3.$indexSet(0, "last", i === t2);
          t3.$indexSet(0, "index", i);
          t3.$indexSet(0, "count", len);
        }
        changes.forEachIdentityChange$1(new R.NgFor__applyChanges_closure0(this));
      }
    },
    NgFor__applyChanges_closure: {
      "^": "Closure:246;$this,insertTuples",
      call$3: function(item, adjustedPreviousIndex, currentIndex) {
        var t1, t2, viewRef, view;
        H.interceptedTypeCheck(item, "$isCollectionChangeRecord");
        if (item.previousIndex == null) {
          t1 = this.$this;
          t2 = t1._ng_for$_viewContainer;
          t2.toString;
          viewRef = t1._ng_for$_templateRef.createEmbeddedView$0();
          t2.insert$2(0, viewRef, currentIndex);
          C.JSArray_methods.add$1(this.insertTuples, new R._RecordViewTuple(viewRef, item));
        } else {
          t1 = this.$this._ng_for$_viewContainer;
          if (currentIndex == null)
            t1.remove$1(0, adjustedPreviousIndex);
          else {
            t2 = t1.nestedViews;
            view = (t2 && C.JSArray_methods).$index(t2, adjustedPreviousIndex).viewData.ref;
            t1.move$2(view, currentIndex);
            C.JSArray_methods.add$1(this.insertTuples, new R._RecordViewTuple(view, item));
          }
        }
      }
    },
    NgFor__applyChanges_closure0: {
      "^": "Closure:44;$this",
      call$1: function(record) {
        var t1, t2;
        t1 = record.currentIndex;
        t2 = this.$this._ng_for$_viewContainer.nestedViews;
        (t2 && C.JSArray_methods).$index(t2, t1).viewData.ref.appView.locals.$indexSet(0, "$implicit", record.item);
      }
    },
    _RecordViewTuple: {
      "^": "Object;view,record"
    }
  }], ["", "package:angular/src/common/directives/ng_if.dart",, K, {
    "^": "",
    NgIf: {
      "^": "Object;_templateRef,_viewContainer,_prevCondition",
      set$ngIf: function(newCondition) {
        var t1;
        newCondition = newCondition === true;
        t1 = this._prevCondition;
        if (t1 === newCondition)
          return;
        t1 = this._viewContainer;
        if (newCondition)
          t1.createEmbeddedView$1(this._templateRef);
        else
          t1.clear$0(0);
        this._prevCondition = newCondition;
      }
    }
  }], ["", "package:angular/src/common/directives/ng_switch.dart",, V, {
    "^": "",
    SwitchView: {
      "^": "Object;_ng_switch$_viewContainerRef,_ng_switch$_templateRef",
      create$0: function(_) {
        this._ng_switch$_viewContainerRef.createEmbeddedView$1(this._ng_switch$_templateRef);
      },
      destroy$0: function() {
        this._ng_switch$_viewContainerRef.clear$0(0);
      }
    },
    NgSwitch: {
      "^": "Object;0_switchValue,_useDefault,_valueViews,_activeViews",
      set$_activeViews: function(_activeViews) {
        this._activeViews = H.assertSubtype(_activeViews, "$isList", [V.SwitchView], "$asList");
      },
      set$ngSwitch: function(value) {
        var t1, views;
        t1 = this._valueViews;
        views = t1.$index(0, value);
        if (views != null)
          this._useDefault = false;
        else {
          if (this._useDefault)
            return;
          this._useDefault = true;
          views = t1.$index(0, C.C_Object);
        }
        this._emptyAllActiveViews$0();
        this._activateViews$1(views);
        this._switchValue = value;
      },
      _emptyAllActiveViews$0: function() {
        var activeContainers, t1, len, i;
        activeContainers = this._activeViews;
        t1 = J.getInterceptor$asx(activeContainers);
        len = t1.get$length(activeContainers);
        if (typeof len !== "number")
          return H.iae(len);
        i = 0;
        for (; i < len; ++i)
          t1.$index(activeContainers, i).destroy$0();
        this.set$_activeViews(H.setRuntimeTypeInfo([], [V.SwitchView]));
      },
      _activateViews$1: function(views) {
        var t1, len, i;
        H.assertSubtype(views, "$isList", [V.SwitchView], "$asList");
        if (views == null)
          return;
        t1 = J.getInterceptor$asx(views);
        len = t1.get$length(views);
        if (typeof len !== "number")
          return H.iae(len);
        i = 0;
        for (; i < len; ++i)
          J.create$0$z(t1.$index(views, i));
        this.set$_activeViews(views);
      },
      _deregisterView$2: function(value, view) {
        var t1, views, t2;
        if (value === C.C_Object)
          return;
        t1 = this._valueViews;
        views = t1.$index(0, value);
        t2 = J.getInterceptor$asx(views);
        if (t2.get$length(views) === 1) {
          if (t1.containsKey$1(0, value))
            t1.remove$1(0, value);
        } else
          t2.remove$1(views, view);
      }
    },
    NgSwitchWhen: {
      "^": "Object;_ng_switch$_value,0_ng_switch$_view,0_switch",
      set$ngSwitchWhen: function(value) {
        var t1, t2, t3, t4, views, t5;
        t1 = this._ng_switch$_value;
        if (value === t1)
          return;
        t2 = this._switch;
        t3 = this._ng_switch$_view;
        t2._deregisterView$2(t1, t3);
        t4 = t2._valueViews;
        views = t4.$index(0, value);
        if (views == null) {
          views = H.setRuntimeTypeInfo([], [V.SwitchView]);
          t4.$indexSet(0, value, views);
        }
        J.add$1$ax(views, t3);
        t5 = t2._switchValue;
        if (t1 == null ? t5 == null : t1 === t5) {
          t3._ng_switch$_viewContainerRef.clear$0(0);
          J.remove$1$ax(t2._activeViews, t3);
        } else if (value === t5) {
          if (t2._useDefault) {
            t2._useDefault = false;
            t2._emptyAllActiveViews$0();
          }
          t3._ng_switch$_viewContainerRef.createEmbeddedView$1(t3._ng_switch$_templateRef);
          J.add$1$ax(t2._activeViews, t3);
        }
        if (J.get$length$asx(t2._activeViews) === 0 && !t2._useDefault) {
          t2._useDefault = true;
          t2._activateViews$1(t4.$index(0, C.C_Object));
        }
        this._ng_switch$_value = value;
      }
    }
  }], ["", "package:angular/src/core/application_ref.dart",, Y, {
    "^": "",
    ApplicationRef: {
      "^": "ChangeDetectionHost;_disposeListeners,_rootComponents,_exceptionHandler,_injector,_application_ref$_ngZone,0_onErrorSub,0_onMicroSub,0_lastGuardedView,0_lastCaughtException,0_lastCaughtTrace,_runningTick,_changeDetectors,_scheduledCallbacks,_scheduledViews,_scheduledElements",
      set$_onErrorSub: function(_onErrorSub) {
        this._onErrorSub = H.assertSubtype(_onErrorSub, "$isStreamSubscription", [-1], "$asStreamSubscription");
      },
      set$_onMicroSub: function(_onMicroSub) {
        this._onMicroSub = H.assertSubtype(_onMicroSub, "$isStreamSubscription", [-1], "$asStreamSubscription");
      },
      ApplicationRef$_$3: function(_ngZone, _exceptionHandler, _injector) {
        var t1, t2;
        t1 = this._application_ref$_ngZone;
        t2 = t1._onError;
        this.set$_onErrorSub(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new Y.ApplicationRef$__closure(this)));
        t1 = t1._onMicrotaskEmpty;
        this.set$_onMicroSub(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new Y.ApplicationRef$__closure0(this)));
      },
      bootstrap$1$1: function(componentFactory, $T) {
        var t1 = [D.ComponentRef, $T];
        return H.assertSubtypeOfRuntimeType(this.run$1$1(new Y.ApplicationRef_bootstrap_closure(this, H.assertSubtype(componentFactory, "$isComponentFactory", [$T], "$asComponentFactory"), $T), t1), t1);
      },
      _loadedRootComponent$2: function(component, node) {
        var t1, t2, t3, t4;
        H.assertSubtype(component, "$isComponentRef", [-1], "$asComponentRef");
        C.JSArray_methods.add$1(this._rootComponents, component);
        component.toString;
        t1 = {func: 1, ret: -1};
        t2 = H.functionTypeCheck(new Y.ApplicationRef__loadedRootComponent_closure(this, component, node), t1);
        t3 = component._parentView;
        t4 = t3.viewData.ref.appView.viewData;
        if (t4._onDestroyCallbacks == null)
          t4.set$_onDestroyCallbacks(H.setRuntimeTypeInfo([], [t1]));
        t1 = t4._onDestroyCallbacks;
        (t1 && C.JSArray_methods).add$1(t1, t2);
        C.JSArray_methods.add$1(this._changeDetectors, t3.viewData.ref);
        this.tick$0();
      },
      _destroyedRootComponent$1: function(component) {
        H.assertSubtype(component, "$isComponentRef", [-1], "$asComponentRef");
        if (!C.JSArray_methods.remove$1(this._rootComponents, component))
          return;
        C.JSArray_methods.remove$1(this._changeDetectors, component._parentView.viewData.ref);
      },
      static: {
        ApplicationRef$_: function(_ngZone, _exceptionHandler, _injector) {
          var t1 = new Y.ApplicationRef(H.setRuntimeTypeInfo([], [{func: 1, ret: -1}]), H.setRuntimeTypeInfo([], [[D.ComponentRef, -1]]), _exceptionHandler, _injector, _ngZone, false, H.setRuntimeTypeInfo([], [S.ChangeDetectorRef]), H.setRuntimeTypeInfo([], [{func: 1, ret: -1, args: [[S.AppView, -1], W.Element]}]), H.setRuntimeTypeInfo([], [[S.AppView, -1]]), H.setRuntimeTypeInfo([], [W.Element]));
          t1.ApplicationRef$_$3(_ngZone, _exceptionHandler, _injector);
          return t1;
        }
      }
    },
    ApplicationRef$__closure: {
      "^": "Closure:247;$this",
      call$1: [function(e) {
        H.interceptedTypeCheck(e, "$isNgZoneError");
        this.$this._exceptionHandler.call$3(e.error, new P._StringStackTrace(C.JSArray_methods.join$1(e.stackTrace, "\n")), null);
      }, null, null, 4, 0, null, 8, "call"]
    },
    ApplicationRef$__closure0: {
      "^": "Closure:19;$this",
      call$1: [function(_) {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._application_ref$_ngZone;
        t2.toString;
        t1 = H.functionTypeCheck(t1.get$tick(), {func: 1, ret: -1});
        t2._innerZone.runGuarded$1(t1);
      }, null, null, 4, 0, null, 0, "call"]
    },
    ApplicationRef_bootstrap_closure: {
      "^": "Closure;$this,componentFactory,T",
      call$0: function() {
        var t1, t2, t3, component, t4, existing, newElement, replacement, t5, testability;
        t1 = this.componentFactory;
        t2 = this.$this;
        t3 = t2._injector;
        component = t1.create$1(0, t3);
        t4 = document;
        existing = C.HtmlDocument_methods.querySelector$1(t4, t1.selector);
        if (existing != null) {
          newElement = component._nativeElement;
          t1 = newElement.id;
          if (t1 == null || t1.length === 0)
            newElement.id = existing.id;
          J.replaceWith$1$x(existing, newElement);
          t1 = newElement;
          replacement = t1;
        } else {
          t1 = t4.body;
          t4 = component._nativeElement;
          (t1 && C.BodyElement_methods).append$1(t1, t4);
          t1 = t4;
          replacement = null;
        }
        t4 = component._parentView;
        t5 = component._nodeIndex;
        testability = H.interceptedTypeCheck(new G.ElementInjector(t4, t5, C.EmptyInjector_null).$get$2(0, C.Type_Testability_h8g, null), "$isTestability");
        if (testability != null)
          H.interceptedTypeCheck(t3.$get$1(0, C.Type_TestabilityRegistry_IMm), "$isTestabilityRegistry")._applications.$indexSet(0, t1, testability);
        t2._loadedRootComponent$2(component, replacement);
        return component;
      },
      $signature: function() {
        return {func: 1, ret: [D.ComponentRef, this.T]};
      }
    },
    ApplicationRef__loadedRootComponent_closure: {
      "^": "Closure:0;$this,component,node",
      call$0: function() {
        this.$this._destroyedRootComponent$1(this.component);
        var t1 = this.node;
        if (!(t1 == null))
          J.remove$0$ax(t1);
      }
    }
  }], ["", "package:angular/src/core/change_detection/change_detector_ref.dart",, S, {
    "^": "",
    ChangeDetectorRef: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/change_detection/component_state.dart",, N, {
    "^": "",
    ComponentState: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/change_detection/differs/default_iterable_differ.dart",, R, {
    "^": "",
    _trackByIdentity: [function(index, item) {
      H.intTypeCheck(index);
      return item;
    }, "call$2", "default_iterable_differ___trackByIdentity$closure", 8, 0, 225, 31, 5],
    _getPreviousIndex: function(item, addRemoveOffset, moveOffsets) {
      var previousIndex, moveOffset;
      H.interceptedTypeCheck(item, "$isCollectionChangeRecord");
      H.assertSubtype(moveOffsets, "$isList", [P.int], "$asList");
      previousIndex = item.previousIndex;
      if (previousIndex == null)
        return previousIndex;
      if (moveOffsets != null && previousIndex < moveOffsets.length) {
        if (previousIndex !== (previousIndex | 0) || previousIndex >= moveOffsets.length)
          return H.ioore(moveOffsets, previousIndex);
        moveOffset = moveOffsets[previousIndex];
      } else
        moveOffset = 0;
      if (typeof moveOffset !== "number")
        return H.iae(moveOffset);
      return previousIndex + addRemoveOffset + moveOffset;
    },
    DefaultIterableDiffer: {
      "^": "Object;_trackByFn,0_default_iterable_differ$_length,0_collection,0_linkedRecords,0_unlinkedRecords,0_previousItHead,0_itHead,0_itTail,0_additionsHead,0_additionsTail,0_movesHead,0_movesTail,0_removalsHead,0_removalsTail,0_identityChangesHead,0_identityChangesTail",
      get$length: function(_) {
        return this._default_iterable_differ$_length;
      },
      forEachOperation$1: function(fn) {
        var nextIt, nextRemove, t1, addRemoveOffset, sizeDeficit, moveOffsets, t2, t3, record, adjPreviousIndex, currentIndex, localMovePreviousIndex, localCurrentIndex, i, offset, j, index, previousIndex;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord, P.int, P.int]});
        nextIt = this._itHead;
        nextRemove = this._removalsHead;
        t1 = [P.int];
        addRemoveOffset = 0;
        sizeDeficit = null;
        moveOffsets = null;
        while (true) {
          t2 = nextIt == null;
          if (!(!t2 || nextRemove != null))
            break;
          if (nextRemove != null)
            if (!t2) {
              t2 = nextIt.currentIndex;
              t3 = R._getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets);
              if (typeof t2 !== "number")
                return t2.$lt();
              if (typeof t3 !== "number")
                return H.iae(t3);
              t3 = t2 < t3;
              t2 = t3;
            } else
              t2 = false;
          else
            t2 = true;
          record = t2 ? nextIt : nextRemove;
          adjPreviousIndex = R._getPreviousIndex(record, addRemoveOffset, moveOffsets);
          currentIndex = record.currentIndex;
          if (record === nextRemove) {
            --addRemoveOffset;
            nextRemove = nextRemove._nextRemoved;
          } else {
            nextIt = nextIt._default_iterable_differ$_next;
            if (record.previousIndex == null)
              ++addRemoveOffset;
            else {
              if (moveOffsets == null)
                moveOffsets = H.setRuntimeTypeInfo([], t1);
              if (typeof adjPreviousIndex !== "number")
                return adjPreviousIndex.$sub();
              localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;
              if (typeof currentIndex !== "number")
                return currentIndex.$sub();
              localCurrentIndex = currentIndex - addRemoveOffset;
              if (localMovePreviousIndex !== localCurrentIndex) {
                for (i = 0; i < localMovePreviousIndex; ++i) {
                  t2 = moveOffsets.length;
                  if (i < t2)
                    offset = moveOffsets[i];
                  else {
                    if (t2 > i)
                      C.JSArray_methods.$indexSet(moveOffsets, i, 0);
                    else {
                      sizeDeficit = i - t2 + 1;
                      for (j = 0; j < sizeDeficit; ++j)
                        C.JSArray_methods.add$1(moveOffsets, null);
                      C.JSArray_methods.$indexSet(moveOffsets, i, 0);
                    }
                    offset = 0;
                  }
                  if (typeof offset !== "number")
                    return offset.$add();
                  index = offset + i;
                  if (localCurrentIndex <= index && index < localMovePreviousIndex)
                    C.JSArray_methods.$indexSet(moveOffsets, i, offset + 1);
                }
                previousIndex = record.previousIndex;
                t2 = moveOffsets.length;
                if (typeof previousIndex !== "number")
                  return previousIndex.$sub();
                sizeDeficit = previousIndex - t2 + 1;
                for (j = 0; j < sizeDeficit; ++j)
                  C.JSArray_methods.add$1(moveOffsets, null);
                C.JSArray_methods.$indexSet(moveOffsets, previousIndex, localCurrentIndex - localMovePreviousIndex);
              }
            }
          }
          if (adjPreviousIndex != currentIndex)
            fn.call$3(record, adjPreviousIndex, currentIndex);
        }
      },
      forEachAddedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
        for (record = this._additionsHead; record != null; record = record._nextAdded)
          fn.call$1(record);
      },
      forEachRemovedItem$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
        for (record = this._removalsHead; record != null; record = record._nextRemoved)
          fn.call$1(record);
      },
      forEachIdentityChange$1: function(fn) {
        var record;
        H.functionTypeCheck(fn, {func: 1, ret: -1, args: [R.CollectionChangeRecord]});
        for (record = this._identityChangesHead; record != null; record = record._nextIdentityChange)
          fn.call$1(record);
      },
      diff$1: function(collection) {
        H.listSuperNativeTypeCheck(collection, "$isIterable");
        if (!(collection != null))
          collection = C.List_empty;
        return this.check$1(0, collection) ? this : null;
      },
      check$1: function(_, collection) {
        var _box_0, t1, t2, t3, t4, item, itemTrackBy, record, index;
        _box_0 = {};
        this._default_iterable_differ$_reset$0();
        _box_0.record = this._itHead;
        _box_0.mayBeDirty = false;
        _box_0.index = null;
        _box_0.itemTrackBy = null;
        t1 = J.getInterceptor$(collection);
        if (!!t1.$isList) {
          this._default_iterable_differ$_length = t1.get$length(collection);
          _box_0.index = 0;
          t2 = this._trackByFn;
          t3 = 0;
          while (true) {
            t4 = this._default_iterable_differ$_length;
            if (typeof t4 !== "number")
              return H.iae(t4);
            if (!(t3 < t4))
              break;
            item = t1.$index(collection, t3);
            itemTrackBy = t2.call$2(_box_0.index, item);
            _box_0.itemTrackBy = itemTrackBy;
            t3 = _box_0.record;
            if (t3 != null) {
              t4 = t3.trackById;
              t4 = t4 == null ? itemTrackBy != null : t4 !== itemTrackBy;
            } else
              t4 = true;
            if (t4) {
              record = this._mismatch$4(t3, item, itemTrackBy, _box_0.index);
              _box_0.record = record;
              _box_0.mayBeDirty = true;
              t3 = record;
            } else {
              if (_box_0.mayBeDirty) {
                record = this._verifyReinsertion$4(t3, item, itemTrackBy, _box_0.index);
                _box_0.record = record;
                t3 = record;
              }
              t4 = t3.item;
              if (t4 == null ? item != null : t4 !== item) {
                t3.item = item;
                t4 = this._identityChangesTail;
                if (t4 == null) {
                  this._identityChangesHead = t3;
                  this._identityChangesTail = t3;
                } else {
                  t4._nextIdentityChange = t3;
                  this._identityChangesTail = t3;
                }
              }
            }
            _box_0.record = t3._default_iterable_differ$_next;
            t3 = _box_0.index;
            if (typeof t3 !== "number")
              return t3.$add();
            index = t3 + 1;
            _box_0.index = index;
            t3 = index;
          }
        } else {
          _box_0.index = 0;
          t1.forEach$1(collection, new R.DefaultIterableDiffer_check_closure(_box_0, this));
          this._default_iterable_differ$_length = _box_0.index;
        }
        this._truncate$1(_box_0.record);
        this._collection = collection;
        return this.get$isDirty();
      },
      get$isDirty: function() {
        return this._additionsHead != null || this._movesHead != null || this._removalsHead != null || this._identityChangesHead != null;
      },
      _default_iterable_differ$_reset$0: function() {
        var record, record0, nextRecord;
        if (this.get$isDirty()) {
          for (record = this._itHead, this._previousItHead = record; record != null; record = record0) {
            record0 = record._default_iterable_differ$_next;
            record._nextPrevious = record0;
          }
          for (record = this._additionsHead; record != null; record = record._nextAdded)
            record.previousIndex = record.currentIndex;
          this._additionsTail = null;
          this._additionsHead = null;
          for (record = this._movesHead; record != null; record = nextRecord) {
            record.previousIndex = record.currentIndex;
            nextRecord = record._nextMoved;
          }
          this._movesTail = null;
          this._movesHead = null;
          this._removalsTail = null;
          this._removalsHead = null;
          this._identityChangesTail = null;
          this._identityChangesHead = null;
        }
      },
      _mismatch$4: function(record, item, itemTrackBy, index) {
        var previousRecord, t1;
        if (record == null)
          previousRecord = this._itTail;
        else {
          previousRecord = record._prev;
          this._addToRemovals$1(this._unlink$1(record));
        }
        t1 = this._linkedRecords;
        record = t1 == null ? null : t1.$get$2(0, itemTrackBy, index);
        if (record != null) {
          t1 = record.item;
          if (t1 == null ? item != null : t1 !== item)
            this._addIdentityChange$2(record, item);
          this._unlink$1(record);
          this._insertAfter$3(record, previousRecord, index);
          this._addToMoves$2(record, index);
        } else {
          t1 = this._unlinkedRecords;
          record = t1 == null ? null : t1.$get$1(0, itemTrackBy);
          if (record != null) {
            t1 = record.item;
            if (t1 == null ? item != null : t1 !== item)
              this._addIdentityChange$2(record, item);
            this._reinsertAfter$3(record, previousRecord, index);
          } else {
            record = new R.CollectionChangeRecord(item, itemTrackBy);
            this._insertAfter$3(record, previousRecord, index);
            t1 = this._additionsTail;
            if (t1 == null) {
              this._additionsHead = record;
              this._additionsTail = record;
            } else {
              t1._nextAdded = record;
              this._additionsTail = record;
            }
          }
        }
        return record;
      },
      _verifyReinsertion$4: function(record, item, itemTrackBy, index) {
        var t1, reinsertRecord;
        t1 = this._unlinkedRecords;
        reinsertRecord = t1 == null ? null : t1.$get$1(0, itemTrackBy);
        if (reinsertRecord != null)
          record = this._reinsertAfter$3(reinsertRecord, record._prev, index);
        else if (record.currentIndex != index) {
          record.currentIndex = index;
          this._addToMoves$2(record, index);
        }
        return record;
      },
      _truncate$1: function(record) {
        var nextRecord, t1;
        for (; record != null; record = nextRecord) {
          nextRecord = record._default_iterable_differ$_next;
          this._addToRemovals$1(this._unlink$1(record));
        }
        t1 = this._unlinkedRecords;
        if (t1 != null)
          t1._default_iterable_differ$_map.clear$0(0);
        t1 = this._additionsTail;
        if (t1 != null)
          t1._nextAdded = null;
        t1 = this._movesTail;
        if (t1 != null)
          t1._nextMoved = null;
        t1 = this._itTail;
        if (t1 != null)
          t1._default_iterable_differ$_next = null;
        t1 = this._removalsTail;
        if (t1 != null)
          t1._nextRemoved = null;
        t1 = this._identityChangesTail;
        if (t1 != null)
          t1._nextIdentityChange = null;
      },
      _reinsertAfter$3: function(record, prevRecord, index) {
        var t1, prev, next;
        t1 = this._unlinkedRecords;
        if (t1 != null)
          t1.remove$1(0, record);
        prev = record._prevRemoved;
        next = record._nextRemoved;
        if (prev == null)
          this._removalsHead = next;
        else
          prev._nextRemoved = next;
        if (next == null)
          this._removalsTail = prev;
        else
          next._prevRemoved = prev;
        this._insertAfter$3(record, prevRecord, index);
        this._addToMoves$2(record, index);
        return record;
      },
      _insertAfter$3: function(record, prevRecord, index) {
        var t1, next;
        t1 = prevRecord == null;
        next = t1 ? this._itHead : prevRecord._default_iterable_differ$_next;
        record._default_iterable_differ$_next = next;
        record._prev = prevRecord;
        if (next == null)
          this._itTail = record;
        else
          next._prev = record;
        if (t1)
          this._itHead = record;
        else
          prevRecord._default_iterable_differ$_next = record;
        t1 = this._linkedRecords;
        if (t1 == null) {
          t1 = new R._DuplicateMap(P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, R._DuplicateItemRecordList));
          this._linkedRecords = t1;
        }
        t1.put$1(0, record);
        record.currentIndex = index;
        return record;
      },
      _unlink$1: function(record) {
        var t1, prev, next;
        t1 = this._linkedRecords;
        if (!(t1 == null))
          t1.remove$1(0, record);
        prev = record._prev;
        next = record._default_iterable_differ$_next;
        if (prev == null)
          this._itHead = next;
        else
          prev._default_iterable_differ$_next = next;
        if (next == null)
          this._itTail = prev;
        else
          next._prev = prev;
        return record;
      },
      _addToMoves$2: function(record, toIndex) {
        var t1;
        if (record.previousIndex == toIndex)
          return record;
        t1 = this._movesTail;
        if (t1 == null) {
          this._movesHead = record;
          this._movesTail = record;
        } else {
          t1._nextMoved = record;
          this._movesTail = record;
        }
        return record;
      },
      _addToRemovals$1: function(record) {
        var t1 = this._unlinkedRecords;
        if (t1 == null) {
          t1 = new R._DuplicateMap(P._LinkedIdentityHashMap__LinkedIdentityHashMap$es6(null, R._DuplicateItemRecordList));
          this._unlinkedRecords = t1;
        }
        t1.put$1(0, record);
        record.currentIndex = null;
        record._nextRemoved = null;
        t1 = this._removalsTail;
        if (t1 == null) {
          this._removalsHead = record;
          this._removalsTail = record;
          record._prevRemoved = null;
        } else {
          record._prevRemoved = t1;
          t1._nextRemoved = record;
          this._removalsTail = record;
        }
        return record;
      },
      _addIdentityChange$2: function(record, item) {
        var t1;
        record.item = item;
        t1 = this._identityChangesTail;
        if (t1 == null) {
          this._identityChangesHead = record;
          this._identityChangesTail = record;
        } else {
          t1._nextIdentityChange = record;
          this._identityChangesTail = record;
        }
        return record;
      },
      toString$0: function(_) {
        var t1 = this.super$Object$toString(0);
        return t1;
      },
      static: {
        DefaultIterableDiffer$: function(trackByFn) {
          return new R.DefaultIterableDiffer(R.default_iterable_differ___trackByIdentity$closure());
        }
      }
    },
    DefaultIterableDiffer_check_closure: {
      "^": "Closure:4;_box_0,$this",
      call$1: function(item) {
        var t1, t2, itemTrackBy, t3, t4, record;
        t1 = this.$this;
        t2 = this._box_0;
        itemTrackBy = t1._trackByFn.call$2(t2.index, item);
        t2.itemTrackBy = itemTrackBy;
        t3 = t2.record;
        if (t3 != null) {
          t4 = t3.trackById;
          t4 = t4 == null ? itemTrackBy != null : t4 !== itemTrackBy;
        } else
          t4 = true;
        if (t4) {
          t2.record = t1._mismatch$4(t3, item, itemTrackBy, t2.index);
          t2.mayBeDirty = true;
        } else {
          if (t2.mayBeDirty) {
            record = t1._verifyReinsertion$4(t3, item, itemTrackBy, t2.index);
            t2.record = record;
            t3 = record;
          }
          t4 = t3.item;
          if (t4 == null ? item != null : t4 !== item)
            t1._addIdentityChange$2(t3, item);
        }
        t2.record = t2.record._default_iterable_differ$_next;
        t1 = t2.index;
        if (typeof t1 !== "number")
          return t1.$add();
        t2.index = t1 + 1;
      }
    },
    CollectionChangeRecord: {
      "^": "Object;item*,trackById,0currentIndex,0previousIndex,0_nextPrevious,0_prev,0_default_iterable_differ$_next,0_prevDup,0_nextDup,0_prevRemoved,0_nextRemoved,0_nextAdded,0_nextMoved,0_nextIdentityChange",
      toString$0: function(_) {
        var t1, t2, t3;
        t1 = this.previousIndex;
        t2 = this.currentIndex;
        t3 = this.item;
        return t1 == t2 ? J.toString$0$(t3) : H.S(t3) + "[" + H.S(this.previousIndex) + "->" + H.S(this.currentIndex) + "]";
      }
    },
    _DuplicateItemRecordList: {
      "^": "Object;0_head,0_tail",
      add$1: function(_, record) {
        var t1;
        H.interceptedTypeCheck(record, "$isCollectionChangeRecord");
        if (this._head == null) {
          this._tail = record;
          this._head = record;
          record._nextDup = null;
          record._prevDup = null;
        } else {
          t1 = this._tail;
          t1._nextDup = record;
          record._prevDup = t1;
          record._nextDup = null;
          this._tail = record;
        }
      },
      $get$2: function(_, trackById, afterIndex) {
        var record, t1, t2;
        for (record = this._head, t1 = afterIndex != null; record != null; record = record._nextDup) {
          if (t1) {
            t2 = record.currentIndex;
            if (typeof t2 !== "number")
              return H.iae(t2);
            t2 = afterIndex < t2;
          } else
            t2 = true;
          if (t2) {
            t2 = record.trackById;
            t2 = t2 == null ? trackById == null : t2 === trackById;
          } else
            t2 = false;
          if (t2)
            return record;
        }
        return;
      }
    },
    _DuplicateMap: {
      "^": "Object;_default_iterable_differ$_map",
      put$1: function(_, record) {
        var key, t1, duplicates;
        key = record.trackById;
        t1 = this._default_iterable_differ$_map;
        duplicates = t1.$index(0, key);
        if (duplicates == null) {
          duplicates = new R._DuplicateItemRecordList();
          t1.$indexSet(0, key, duplicates);
        }
        duplicates.add$1(0, record);
      },
      $get$2: function(_, trackById, afterIndex) {
        var recordList = this._default_iterable_differ$_map.$index(0, trackById);
        return recordList == null ? null : recordList.$get$2(0, trackById, afterIndex);
      },
      $get$1: function($receiver, trackById) {
        return this.$get$2($receiver, trackById, null);
      },
      remove$1: function(_, record) {
        var key, t1, recordList, prev, next;
        key = record.trackById;
        t1 = this._default_iterable_differ$_map;
        recordList = t1.$index(0, key);
        recordList.toString;
        prev = record._prevDup;
        next = record._nextDup;
        if (prev == null)
          recordList._head = next;
        else
          prev._nextDup = next;
        if (next == null)
          recordList._tail = prev;
        else
          next._prevDup = prev;
        if (recordList._head == null)
          if (t1.containsKey$1(0, key))
            t1.remove$1(0, key);
        return record;
      },
      get$isEmpty: function(_) {
        var t1 = this._default_iterable_differ$_map;
        return t1.get$length(t1) === 0;
      },
      toString$0: function(_) {
        return "_DuplicateMap(" + this._default_iterable_differ$_map.toString$0(0) + ")";
      }
    }
  }], ["", "package:angular/src/core/change_detection/differs/default_keyvalue_differ.dart",, N, {
    "^": "",
    DefaultKeyValueDiffer_check_closure: {
      "^": "Closure:5;$this",
      call$2: function(key, value) {
        var record, t1, t2;
        record = new N.KeyValueChangeRecord(key);
        record.currentValue = value;
        t1 = this.$this;
        t1._records.$indexSet(0, key, record);
        t1._addToAdditions$1(record);
        t2 = t1._appendAfter;
        if (t2 == null)
          t1._mapHead = record;
        else {
          record._default_keyvalue_differ$_prev = t2;
          t2._default_keyvalue_differ$_next = record;
        }
        t1._appendAfter = record;
      }
    },
    DefaultKeyValueDiffer_check_closure0: {
      "^": "Closure:5;_box_0,$this",
      call$2: function(key, value) {
        var t1, t2, t3, record;
        t1 = this._box_0;
        t2 = t1.insertBefore;
        t3 = this.$this;
        if (J.$eq$(t2 == null ? null : t2.key, key)) {
          t3._maybeAddToChanges$2(t1.insertBefore, value);
          t2 = t1.insertBefore;
          t3._appendAfter = t2;
          t1.insertBefore = t2._default_keyvalue_differ$_next;
        } else {
          record = t3._getOrCreateRecord$2(key, value);
          t1.insertBefore = t3._insertBeforeOrAppend$2(t1.insertBefore, record);
        }
      }
    },
    KeyValueChangeRecord: {
      "^": "Object;key*,0previousValue,0currentValue,0_default_keyvalue_differ$_nextPrevious,0_default_keyvalue_differ$_next,0_default_keyvalue_differ$_prev,0_default_keyvalue_differ$_nextAdded,0_nextChanged",
      toString$0: function(_) {
        var t1, t2, t3;
        t1 = this.previousValue;
        t2 = this.currentValue;
        t3 = this.key;
        return (t1 == null ? t2 == null : t1 === t2) ? H.S(t3) : H.S(t3) + "[" + H.S(this.previousValue) + "->" + H.S(this.currentValue) + "]";
      }
    }
  }], ["", "package:angular/src/core/change_detection/directive_change_detector.dart",, E, {
    "^": "",
    DirectiveChangeDetector: {
      "^": "Object;",
      updateElemClass$3: function(element, className, isAdd) {
        if (isAdd)
          element.classList.add(className);
        else
          element.classList.remove(className);
      },
      setAttr$3: function(renderElement, attributeName, attributeValue) {
        if (attributeValue != null)
          J.setAttribute$2$x(renderElement, attributeName, attributeValue);
        else {
          renderElement.toString;
          new W._ElementAttributeMap(renderElement).remove$1(0, attributeName);
        }
      }
    }
  }], ["", "package:angular/src/core/change_detection/host.dart",, M, {
    "^": "",
    ChangeDetectionHost: {
      "^": "Object;0_lastGuardedView",
      set$_lastGuardedView: function(_lastGuardedView) {
        this._lastGuardedView = H.assertSubtype(_lastGuardedView, "$isAppView", [-1], "$asAppView");
      },
      tick$0: [function() {
        var e, s, exception;
        try {
          $.ChangeDetectionHost__current = this;
          this._runningTick = true;
          this._runTick$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          if (!this._runTickGuarded$0())
            this._exceptionHandler.call$3(e, H.interceptedTypeCheck(s, "$isStackTrace"), "DigestTick");
          throw exception;
        } finally {
          $.ChangeDetectionHost__current = null;
          this._runningTick = false;
          this._resetViewErrors$0();
        }
      }, "call$0", "get$tick", 0, 0, 2],
      _runTick$0: function() {
        var detectors, $length, i;
        detectors = this._changeDetectors;
        $length = detectors.length;
        for (i = 0; i < $length; ++i) {
          if (i >= detectors.length)
            return H.ioore(detectors, i);
          detectors[i].appView.detectChanges$0();
        }
      },
      _runTickGuarded$0: function() {
        var detectors, $length, i, view;
        detectors = this._changeDetectors;
        $length = detectors.length;
        for (i = 0; i < $length; ++i) {
          if (i >= detectors.length)
            return H.ioore(detectors, i);
          view = detectors[i].appView;
          this.set$_lastGuardedView(view);
          view.detectChanges$0();
        }
        return this._checkForChangeDetectionError$0();
      },
      _checkForChangeDetectionError$0: function() {
        var t1 = this._lastGuardedView;
        if (t1 != null) {
          this.reportViewException$3(t1, this._lastCaughtException, this._lastCaughtTrace);
          this._resetViewErrors$0();
          return true;
        }
        return false;
      },
      _resetViewErrors$0: function() {
        this._lastCaughtTrace = null;
        this._lastCaughtException = null;
        this.set$_lastGuardedView(null);
      },
      reportViewException$3: function(view, error, trace) {
        H.assertSubtype(view, "$isAppView", [-1], "$asAppView").viewData.set$cdState(2);
        this._exceptionHandler.call$3(error, trace, null);
      },
      run$1$1: function(callback, $R) {
        var t1, t2, t3, t4, t5;
        t1 = {};
        H.functionTypeCheck(callback, {func: 1, ret: {futureOr: 1, type: $R}});
        t2 = new P._Future(0, $.Zone__current, [$R]);
        t1.result = null;
        t3 = P.Null;
        t4 = H.functionTypeCheck(new M.ChangeDetectionHost_run_closure(t1, this, callback, new P._AsyncCompleter(t2, [$R]), $R), {func: 1, ret: t3});
        t5 = this._application_ref$_ngZone;
        t5.toString;
        H.functionTypeCheck(t4, {func: 1, ret: t3});
        t5._innerZone.run$1$1(t4, t3);
        t1 = t1.result;
        return !!J.getInterceptor$(t1).$isFuture ? t2 : t1;
      }
    },
    ChangeDetectionHost_run_closure: {
      "^": "Closure:0;_box_0,$this,callback,completer,R",
      call$0: [function() {
        var resultCast, e, s, result, t1, t2, exception;
        try {
          result = this.callback.call$0();
          this._box_0.result = result;
          if (!!J.getInterceptor$(result).$isFuture) {
            t1 = this.R;
            resultCast = H.assertSubtypeOfRuntimeType(result, [P.Future, t1]);
            t2 = this.completer;
            resultCast.then$1$2$onError(new M.ChangeDetectionHost_run__closure(t2, t1), new M.ChangeDetectionHost_run__closure0(this.$this, t2), null);
          }
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          this.$this._exceptionHandler.call$3(e, H.interceptedTypeCheck(s, "$isStackTrace"), null);
          throw exception;
        }
      }, null, null, 0, 0, null, "call"]
    },
    ChangeDetectionHost_run__closure: {
      "^": "Closure;completer,R",
      call$1: [function(result) {
        H.assertSubtypeOfRuntimeType(result, this.R);
        this.completer.complete$1(0, result);
      }, null, null, 4, 0, null, 7, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.R]};
      }
    },
    ChangeDetectionHost_run__closure0: {
      "^": "Closure:5;$this,completer",
      call$2: [function(e, s) {
        var sCasted = H.interceptedTypeCheck(s, "$isStackTrace");
        this.completer.completeError$2(e, sCasted);
        this.$this._exceptionHandler.call$3(e, H.interceptedTypeCheck(sCasted, "$isStackTrace"), null);
      }, null, null, 8, 0, null, 8, 28, "call"]
    }
  }], ["", "package:angular/src/core/di/opaque_token.dart",, S, {
    "^": "",
    OpaqueToken: {
      "^": "Object;_uniqueName,$ti",
      toString$0: function(_) {
        return this.super$Object$toString(0);
      }
    }
  }], ["", "package:angular/src/core/linker/app_view.dart",, S, {
    "^": "",
    _findLastRenderNode: function(node) {
      var lastNode, nestedViews, i, t1;
      if (node instanceof V.ViewContainer) {
        lastNode = node.nativeElement;
        nestedViews = node.nestedViews;
        if (nestedViews != null)
          for (i = nestedViews.length - 1; i >= 0; --i) {
            t1 = nestedViews[i].viewData.rootNodesOrViewContainers;
            if (t1.length !== 0)
              return S._findLastRenderNode((t1 && C.JSArray_methods).get$last(t1));
          }
      } else {
        H.interceptedTypeCheck(node, "$isNode");
        lastNode = node;
      }
      return lastNode;
    },
    _appendNestedViewRenderNodes: function(targetElement, appElement) {
      var t1, nestedViews, nestedViewCount, viewIndex, projectables, projectableCount, i, projectable;
      t1 = J.getInterceptor$x(targetElement);
      t1.append$1(targetElement, appElement.nativeElement);
      nestedViews = appElement.nestedViews;
      if (nestedViews == null || nestedViews.length === 0)
        return;
      nestedViewCount = nestedViews.length;
      for (viewIndex = 0; viewIndex < nestedViewCount; ++viewIndex) {
        if (viewIndex >= nestedViews.length)
          return H.ioore(nestedViews, viewIndex);
        projectables = nestedViews[viewIndex].viewData.rootNodesOrViewContainers;
        projectableCount = projectables.length;
        for (i = 0; i < projectableCount; ++i) {
          if (i >= projectables.length)
            return H.ioore(projectables, i);
          projectable = projectables[i];
          if (projectable instanceof V.ViewContainer)
            S._appendNestedViewRenderNodes(targetElement, projectable);
          else
            t1.append$1(targetElement, H.interceptedTypeCheck(projectable, "$isNode"));
        }
      }
    },
    _flattenNestedViewRenderNodes: function(nodes, renderNodes) {
      var nodeCount, i, node, nestedViews, len, k;
      H.assertSubtype(renderNodes, "$isList", [W.Node], "$asList");
      nodeCount = nodes.length;
      for (i = 0; i < nodeCount; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        node = nodes[i];
        if (node instanceof V.ViewContainer) {
          C.JSArray_methods.add$1(renderNodes, node.nativeElement);
          nestedViews = node.nestedViews;
          if (nestedViews != null)
            for (len = nestedViews.length, k = 0; k < len; ++k) {
              if (k >= nestedViews.length)
                return H.ioore(nestedViews, k);
              S._flattenNestedViewRenderNodes(nestedViews[k].viewData.rootNodesOrViewContainers, renderNodes);
            }
        } else
          C.JSArray_methods.add$1(renderNodes, H.interceptedTypeCheck(node, "$isNode"));
      }
      return renderNodes;
    },
    _moveNodesAfterSibling: function(sibling, nodes) {
      var $parent, t1, nextSibling, t2, i;
      H.assertSubtype(nodes, "$isList", [W.Node], "$asList");
      $parent = sibling.parentNode;
      t1 = nodes.length;
      if (t1 !== 0 && $parent != null) {
        nextSibling = sibling.nextSibling;
        if (nextSibling != null)
          for (t2 = J.getInterceptor$x($parent), i = 0; i < t1; ++i) {
            if (i >= nodes.length)
              return H.ioore(nodes, i);
            t2.insertBefore$2($parent, nodes[i], nextSibling);
          }
        else
          for (t2 = J.getInterceptor$x($parent), i = 0; i < t1; ++i) {
            if (i >= nodes.length)
              return H.ioore(nodes, i);
            t2.append$1($parent, nodes[i]);
          }
      }
    },
    createAndAppend: function(doc, tagName, $parent) {
      var t1 = doc.createElement(tagName);
      return H.interceptedTypeCheck(J.append$1$x($parent, t1), "$isElement");
    },
    createDivAndAppend: function(doc, $parent) {
      var t1 = doc.createElement("div");
      return H.interceptedTypeCheck(J.append$1$x($parent, t1), "$isDivElement");
    },
    createSpanAndAppend: function(doc, $parent) {
      var t1 = doc.createElement("span");
      return H.interceptedTypeCheck(($parent && C.DivElement_methods).append$1($parent, t1), "$isSpanElement");
    },
    _detachAll: function(viewRootNodes) {
      var len, i, node, t1;
      H.assertSubtype(viewRootNodes, "$isList", [W.Node], "$asList");
      len = viewRootNodes.length;
      for (i = 0; i < len; ++i) {
        if (i >= viewRootNodes.length)
          return H.ioore(viewRootNodes, i);
        node = viewRootNodes[i];
        t1 = node.parentNode;
        if (t1 != null)
          J._removeChild$1$x(t1, node);
        $.domRootRendererIsDirty = true;
      }
    },
    AppViewData: {
      "^": "Object;type,ref,destroyed,0_viewContainerElement,0projectableNodes,0_hostInjector,0subscriptions,0_onDestroyCallbacks,0rootNodesOrViewContainers,0inlinedNodes,parentIndex,_cdMode,_skipChangeDetection,_cdState,$ti",
      set$_onDestroyCallbacks: function(_onDestroyCallbacks) {
        this._onDestroyCallbacks = H.assertSubtype(_onDestroyCallbacks, "$isList", [{func: 1, ret: -1}], "$asList");
      },
      set$cdMode: function(value) {
        if (this._cdMode !== value) {
          this._cdMode = value;
          this.updateSkipChangeDetectionFlag$0();
        }
      },
      set$cdState: function(value) {
        if (this._cdState !== value) {
          this._cdState = value;
          this.updateSkipChangeDetectionFlag$0();
        }
      },
      updateSkipChangeDetectionFlag$0: function() {
        var t1 = this._cdMode;
        this._skipChangeDetection = t1 === 4 || t1 === 2 || this._cdState === 2;
      },
      destroy$0: function() {
        var t1, len, i;
        t1 = this._onDestroyCallbacks;
        if (t1 != null)
          for (len = t1.length, i = 0; i < len; ++i) {
            t1 = this._onDestroyCallbacks;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].call$0();
          }
        t1 = this.subscriptions;
        if (t1 == null)
          return;
        for (len = t1.length, i = 0; i < len; ++i) {
          t1 = this.subscriptions;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1[i].cancel$0(0);
        }
      },
      static: {
        AppViewData_AppViewData: function(appView, cdMode, viewType, parentIndex, $T) {
          return new S.AppViewData(viewType, new L.ViewRefImpl(H.assertSubtype(appView, "$isAppView", [$T], "$asAppView")), false, parentIndex, cdMode, false, 0, [$T]);
        }
      }
    },
    AppView: {
      "^": "Object;0viewData,0ctx,$ti",
      set$viewData: function(viewData) {
        this.viewData = H.assertSubtype(viewData, "$isAppViewData", [H.getRuntimeTypeArgument(this, "AppView", 0)], "$asAppViewData");
      },
      set$ctx: function(ctx) {
        this.ctx = H.assertSubtypeOfRuntimeType(ctx, H.getRuntimeTypeArgument(this, "AppView", 0));
      },
      setupComponentType$1: function(renderType) {
        var t1, styles, t2;
        if (!renderType.stylesShimmed) {
          t1 = $.sharedStylesHost;
          renderType.toString;
          styles = H.setRuntimeTypeInfo([], [P.String]);
          t2 = renderType.id;
          renderType._flattenStyles$3(t2, renderType.templateStyles, styles);
          t1.addStyles$1(styles);
          if (renderType.encapsulation === C.ViewEncapsulation_0) {
            renderType._hostAttr = "_nghost-" + t2;
            renderType._viewAttr = "_ngcontent-" + t2;
          }
          renderType.stylesShimmed = true;
        }
        this.componentType = renderType;
      },
      create$2: function(_, context, givenProjectableNodes) {
        this.set$ctx(H.assertSubtypeOfRuntimeType(context, H.getRuntimeTypeArgument(this, "AppView", 0)));
        this.viewData.projectableNodes = givenProjectableNodes;
        return this.build$0();
      },
      build$0: function() {
        return;
      },
      init0$1: function(e) {
        this.viewData.rootNodesOrViewContainers = [e];
      },
      init$2: function(rootNodesOrViewContainers, subscriptions) {
        var t1 = this.viewData;
        t1.rootNodesOrViewContainers = rootNodesOrViewContainers;
        t1.subscriptions = subscriptions;
      },
      addInlinedNodes$3: function(anchor, inlinedNodes, isRoot) {
        var t1;
        H.assertSubtype(inlinedNodes, "$isList", [W.Node], "$asList");
        S._moveNodesAfterSibling(anchor, inlinedNodes);
        t1 = this.viewData.rootNodesOrViewContainers;
        (t1 && C.JSArray_methods).addAll$1(t1, inlinedNodes);
      },
      removeInlinedNodes$2: function(inlinedNodes, isRoot) {
        var nodeList, i, node;
        H.assertSubtype(inlinedNodes, "$isList", [W.Node], "$asList");
        S._detachAll(inlinedNodes);
        nodeList = this.viewData.rootNodesOrViewContainers;
        for (i = nodeList.length - 1; i >= 0; --i) {
          if (i >= nodeList.length)
            return H.ioore(nodeList, i);
          node = nodeList[i];
          if (C.JSArray_methods.contains$1(inlinedNodes, node))
            C.JSArray_methods.remove$1(nodeList, node);
        }
      },
      injectorGet$3: function(token, nodeIndex, notFoundValue) {
        var result, view, injector;
        A.debugInjectorEnter(token);
        for (result = C.C_Object, view = this; result === C.C_Object;) {
          if (nodeIndex != null)
            result = view.injectorGetInternal$3(token, nodeIndex, C.C_Object);
          if (result === C.C_Object) {
            injector = view.viewData._hostInjector;
            if (injector != null)
              result = injector.$get$2(0, token, notFoundValue);
          }
          nodeIndex = view.viewData.parentIndex;
          view = view.parentView;
        }
        A.debugInjectorLeave(token);
        return result;
      },
      injectorGet$2: function(token, nodeIndex) {
        return this.injectorGet$3(token, nodeIndex, C.C_Object);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        return notFoundResult;
      },
      detachAndDestroy$0: function() {
        var containerElement, t1;
        containerElement = this.viewData._viewContainerElement;
        if (!(containerElement == null)) {
          t1 = containerElement.nestedViews;
          containerElement.detachView$1((t1 && C.JSArray_methods).indexOf$1(t1, this));
        }
        this.destroy$0();
      },
      destroy$0: function() {
        var t1 = this.viewData;
        if (t1.destroyed)
          return;
        t1.destroyed = true;
        t1.destroy$0();
        this.destroyInternal$0();
        this.dirtyParentQueriesInternal$0();
      },
      destroyInternal$0: function() {
      },
      get$lastRootNode: function() {
        var t1 = this.viewData.rootNodesOrViewContainers;
        return S._findLastRenderNode(t1.length !== 0 ? (t1 && C.JSArray_methods).get$last(t1) : null);
      },
      dirtyParentQueriesInternal$0: function() {
      },
      detectChanges$0: function() {
        if (this.viewData._skipChangeDetection)
          return;
        var t1 = $.ChangeDetectionHost__current;
        if ((t1 == null ? null : t1._lastGuardedView) != null)
          this.detectCrash$0();
        else
          this.detectChangesInternal$0();
        t1 = this.viewData;
        if (t1._cdMode === 1) {
          t1._cdMode = 2;
          t1._skipChangeDetection = true;
        }
        t1.set$cdState(1);
      },
      detectCrash$0: function() {
        var e, s, exception, current;
        try {
          this.detectChangesInternal$0();
        } catch (exception) {
          e = H.unwrapException(exception);
          s = H.getTraceFromException(exception);
          current = $.ChangeDetectionHost__current;
          current.set$_lastGuardedView(this);
          current._lastCaughtException = e;
          current._lastCaughtTrace = s;
        }
      },
      detectChangesInternal$0: function() {
      },
      markPathToRootAsCheckOnce$0: function() {
        var view, t1, cdMode, t2;
        for (view = this; view != null;) {
          t1 = view.viewData;
          cdMode = t1._cdMode;
          if (cdMode === 4)
            break;
          if (cdMode === 2)
            if (cdMode !== 1) {
              t1._cdMode = 1;
              t2 = t1._cdState === 2;
              t1._skipChangeDetection = t2;
            }
          if (t1.type === C.ViewType_1)
            view = view.parentView;
          else {
            t1 = t1._viewContainerElement;
            view = t1 == null ? null : t1.parentView;
          }
        }
      },
      initViewRoot$1: function(hostElement) {
        var t1 = this.componentType._hostAttr;
        if (t1 != null)
          hostElement.classList.add(t1);
        return hostElement;
      },
      updateClass$3: function(element, className, isAdd) {
        if (isAdd)
          element.classList.add(className);
        else
          element.classList.remove(className);
      },
      updateElemClass$3: function(element, className, isAdd) {
        if (isAdd)
          element.classList.add(className);
        else
          element.classList.remove(className);
      },
      setAttr$3: function(renderElement, attributeName, attributeValue) {
        if (attributeValue != null)
          J.setAttribute$2$x(renderElement, attributeName, attributeValue);
        else {
          renderElement.toString;
          new W._ElementAttributeMap(renderElement).remove$1(0, attributeName);
        }
        $.domRootRendererIsDirty = true;
      },
      addShimC$1: function(element) {
        var contentClass = this.componentType._viewAttr;
        if (contentClass != null)
          element.classList.add(contentClass);
      },
      addShimE$1: function(element) {
        var contentClass = this.componentType._viewAttr;
        if (contentClass != null)
          J.get$classes$x(element).add$1(0, contentClass);
      },
      project$2: function(parentElement, index) {
        var projectableNodes, projectables, projectableCount, t1, i, projectable, t2, len, n, node;
        if (parentElement == null)
          return;
        projectableNodes = this.viewData.projectableNodes;
        if (projectableNodes == null || index >= projectableNodes.length)
          return;
        if (index >= projectableNodes.length)
          return H.ioore(projectableNodes, index);
        projectables = projectableNodes[index];
        projectableCount = projectables.length;
        for (t1 = J.getInterceptor$x(parentElement), i = 0; i < projectableCount; ++i) {
          if (i >= projectables.length)
            return H.ioore(projectables, i);
          projectable = projectables[i];
          t2 = J.getInterceptor$(projectable);
          if (!!t2.$isViewContainer)
            if (projectable.nestedViews == null)
              t1.append$1(parentElement, projectable.nativeElement);
            else
              S._appendNestedViewRenderNodes(parentElement, projectable);
          else if (!!t2.$isList) {
            len = t2.get$length(projectable);
            if (typeof len !== "number")
              return H.iae(len);
            n = 0;
            for (; n < len; ++n) {
              node = t2.$index(projectable, n);
              if (node instanceof V.ViewContainer)
                if (node.nestedViews == null)
                  t1.append$1(parentElement, node.nativeElement);
                else
                  S._appendNestedViewRenderNodes(parentElement, node);
              else
                t1.append$1(parentElement, H.interceptedTypeCheck(node, "$isNode"));
            }
          } else
            t1.append$1(parentElement, H.interceptedTypeCheck(projectable, "$isNode"));
        }
        $.domRootRendererIsDirty = true;
      },
      eventHandler0$1$1: function(handler, $E) {
        return new S.AppView_eventHandler0_closure(this, H.functionTypeCheck(handler, {func: 1, ret: -1}), $E);
      },
      eventHandler1$2$1: function(handler, $E, $F) {
        H.assertIsSubtype($F, $E, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'F' in 'eventHandler1'.");
        return new S.AppView_eventHandler1_closure(this, H.functionTypeCheck(handler, {func: 1, ret: -1, args: [$F]}), $E, $F);
      }
    },
    AppView_eventHandler0_closure: {
      "^": "Closure;$this,handler,E",
      call$1: [function($event) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType($event, this.E);
        this.$this.markPathToRootAsCheckOnce$0();
        t1 = $.appViewUtils.eventManager.zone;
        t1.toString;
        t2 = H.functionTypeCheck(this.handler, {func: 1, ret: -1});
        t1._innerZone.runGuarded$1(t2);
      }, null, null, 4, 0, null, 6, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.E]};
      }
    },
    AppView_eventHandler1_closure: {
      "^": "Closure;$this,handler,E,F",
      call$1: [function($event) {
        var t1, t2;
        H.assertSubtypeOfRuntimeType($event, this.E);
        this.$this.markPathToRootAsCheckOnce$0();
        t1 = $.appViewUtils.eventManager.zone;
        t1.toString;
        t2 = H.functionTypeCheck(new S.AppView_eventHandler1__closure(this.handler, $event, this.F), {func: 1, ret: -1});
        t1._innerZone.runGuarded$1(t2);
      }, null, null, 4, 0, null, 6, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.E]};
      }
    },
    AppView_eventHandler1__closure: {
      "^": "Closure:2;handler,event,F",
      call$0: [function() {
        return this.handler.call$1(H.assertSubtypeOfRuntimeType(this.event, this.F));
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular/src/core/linker/app_view_utils.dart",, Q, {
    "^": "",
    flattenNodes: function(nodes, $T) {
      var result, l, i;
      H.assertSubtype(nodes, "$isList", [[P.List, $T]], "$asList");
      result = H.setRuntimeTypeInfo([], [$T]);
      for (l = nodes.length, i = 0; i < l; ++i) {
        if (i >= nodes.length)
          return H.ioore(nodes, i);
        C.JSArray_methods.addAll$1(result, nodes[i]);
      }
      return result;
    },
    interpolate0: function(p) {
      if (typeof p === "string")
        return p;
      return p == null ? "" : H.S(p);
    },
    interpolate2: function(c0, a1, c1, a2, c2) {
      var t1 = c0 + (a1 == null ? "" : H.S(a1)) + c1;
      return t1 + (a2 == null ? "" : H.S(a2)) + c2;
    },
    AppViewUtils: {
      "^": "Object;_appId,eventManager,sanitizer",
      createRenderType$3: function(templateUrl, encapsulation, styles) {
        var t1, t2;
        t1 = H.S(this._appId) + "-";
        t2 = $.AppViewUtils__nextCompTypeId;
        $.AppViewUtils__nextCompTypeId = t2 + 1;
        return new A.RenderComponentType(t1 + t2, templateUrl, encapsulation, styles, false);
      }
    }
  }], ["", "package:angular/src/core/linker/component_factory.dart",, D, {
    "^": "",
    ComponentRef: {
      "^": "Object;_parentView,_nodeIndex,_nativeElement,_component,$ti",
      destroy$0: [function() {
        this._parentView.detachAndDestroy$0();
      }, "call$0", "get$destroy", 0, 0, 2]
    },
    ComponentFactory: {
      "^": "Object;selector,_viewFactory,$ti",
      create$2: function(_, injector, projectableNodes) {
        var hostView, t1;
        hostView = this._viewFactory.call$2(null, null);
        t1 = hostView.viewData;
        t1._hostInjector = injector;
        t1.projectableNodes = C.List_empty;
        return hostView.build$0();
      },
      create$1: function($receiver, injector) {
        return this.create$2($receiver, injector, null);
      }
    }
  }], ["", "package:angular/src/core/linker/component_loader.dart",, M, {
    "^": "",
    ComponentLoader: {
      "^": "Object;",
      loadNextToLocation$1$3$injector: function(component, $location, injector, $T) {
        var t1, t2, t3, t4, contextInjector, componentRef;
        t1 = [$T];
        H.assertSubtype(component, "$isComponentFactory", t1, "$asComponentFactory");
        t2 = $location.get$length($location);
        t3 = $location.parentView;
        t4 = $location.index;
        contextInjector = new G.ElementInjector(t3, t4, C.EmptyInjector_null);
        H.assertSubtype(component, "$isComponentFactory", t1, "$asComponentFactory");
        componentRef = component.create$2(0, contextInjector, null);
        $location.insert$2(0, componentRef._parentView.viewData.ref, t2);
        return componentRef;
      },
      loadNextToLocation$1$2: function(component, $location, $T) {
        return this.loadNextToLocation$1$3$injector(component, $location, null, $T);
      }
    }
  }], ["", "package:angular/src/core/linker/dynamic_component_loader.dart",, L, {
    "^": "",
    SlowComponentLoader: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/linker/element_ref.dart",, Z, {
    "^": "",
    ElementRef: {
      "^": "Object;nativeElement"
    }
  }], ["", "package:angular/src/core/linker/template_ref.dart",, D, {
    "^": "",
    TemplateRef: {
      "^": "Object;_template_ref$_viewContainer,_template_ref$_viewFactory",
      createEmbeddedView$0: function() {
        var t1, parentView, view;
        t1 = this._template_ref$_viewContainer;
        parentView = t1.parentView;
        view = H.interceptedTypeCheck(this._template_ref$_viewFactory.call$2(parentView, t1.index), "$isAppView");
        view.create$2(0, parentView.ctx, parentView.viewData.projectableNodes);
        return view.viewData.ref;
      }
    }
  }], ["", "package:angular/src/core/linker/view_container.dart",, V, {
    "^": "",
    _assertCanMove: function(view) {
      if (view.viewData.type === C.ViewType_1)
        throw H.wrapException(P.ArgumentError$("Component views can't be moved!"));
    },
    ViewContainer: {
      "^": "ComponentLoader;index>,parentIndex,parentView,nativeElement,0nestedViews,0_elementRef,0_parentInjector",
      set$nestedViews: function(nestedViews) {
        this.nestedViews = H.assertSubtype(nestedViews, "$isList", [[S.AppView,,]], "$asList");
      },
      get$length: function(_) {
        var nested = this.nestedViews;
        return nested == null ? 0 : nested.length;
      },
      detectChangesInNestedViews$0: function() {
        var _nestedViews, len, i;
        _nestedViews = this.nestedViews;
        if (_nestedViews == null)
          return;
        for (len = _nestedViews.length, i = 0; i < len; ++i) {
          if (i >= _nestedViews.length)
            return H.ioore(_nestedViews, i);
          _nestedViews[i].detectChanges$0();
        }
      },
      destroyNestedViews$0: function() {
        var _nestedViews, len, i;
        _nestedViews = this.nestedViews;
        if (_nestedViews == null)
          return;
        for (len = _nestedViews.length, i = 0; i < len; ++i) {
          if (i >= _nestedViews.length)
            return H.ioore(_nestedViews, i);
          _nestedViews[i].destroy$0();
        }
      },
      createEmbeddedView$1: function(templateRef) {
        var viewRef = templateRef.createEmbeddedView$0();
        this.attachView$2(viewRef.appView, this.get$length(this));
        return viewRef;
      },
      insert$2: function(_, viewRef, index) {
        if (index === -1)
          index = this.get$length(this);
        this.attachView$2(viewRef.appView, index);
        return viewRef;
      },
      insert$1: function($receiver, viewRef) {
        return this.insert$2($receiver, viewRef, -1);
      },
      move$2: function(viewRef, currentIndex) {
        var t1, views, t2, refRenderNode;
        if (currentIndex === -1)
          return;
        t1 = viewRef.appView;
        V._assertCanMove(t1);
        views = this.nestedViews;
        C.JSArray_methods.removeAt$1(views, (views && C.JSArray_methods).indexOf$1(views, t1));
        C.JSArray_methods.insert$2(views, currentIndex, t1);
        if (currentIndex > 0) {
          t2 = currentIndex - 1;
          if (t2 >= views.length)
            return H.ioore(views, t2);
          refRenderNode = views[t2].get$lastRootNode();
        } else
          refRenderNode = this.nativeElement;
        if (refRenderNode != null) {
          t2 = [W.Node];
          S._moveNodesAfterSibling(refRenderNode, H.assertSubtype(S._flattenNestedViewRenderNodes(t1.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], t2)), "$isList", t2, "$asList"));
          $.domRootRendererIsDirty = true;
        }
        t1.dirtyParentQueriesInternal$0();
        return viewRef;
      },
      indexOf$1: function(_, viewRef) {
        var t1 = this.nestedViews;
        return (t1 && C.JSArray_methods).indexOf$1(t1, viewRef.appView);
      },
      remove$1: function(_, index) {
        this.detachView$1(index === -1 ? this.get$length(this) - 1 : index).destroy$0();
      },
      remove$0: function($receiver) {
        return this.remove$1($receiver, -1);
      },
      clear$0: function(_) {
        var i, nested, index;
        for (i = this.get$length(this) - 1; i >= 0; --i) {
          if (i === -1) {
            nested = this.nestedViews;
            index = (nested == null ? 0 : nested.length) - 1;
          } else
            index = i;
          this.detachView$1(index).destroy$0();
        }
      },
      mapNestedViews$2$1: function(callback, $T, $U) {
        var nestedViews, result, l, i;
        H.assertIsSubtype($U, [S.AppView,,], "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'U' in 'mapNestedViews'.");
        H.functionTypeCheck(callback, {func: 1, ret: [P.List, $T], args: [$U]});
        nestedViews = this.nestedViews;
        if (nestedViews == null || nestedViews.length === 0)
          return C.List_empty1;
        result = H.setRuntimeTypeInfo([], [$T]);
        for (l = nestedViews.length, i = 0; i < l; ++i) {
          if (i >= nestedViews.length)
            return H.ioore(nestedViews, i);
          C.JSArray_methods.addAll$1(result, callback.call$1(H.assertSubtypeOfRuntimeType(nestedViews[i], $U)));
        }
        return result;
      },
      attachView$2: function(view, viewIndex) {
        var _nestedViews, t1, refRenderNode;
        V._assertCanMove(view);
        _nestedViews = this.nestedViews;
        if (_nestedViews == null)
          _nestedViews = H.setRuntimeTypeInfo([], [[S.AppView,,]]);
        C.JSArray_methods.insert$2(_nestedViews, viewIndex, view);
        if (typeof viewIndex !== "number")
          return viewIndex.$gt();
        if (viewIndex > 0) {
          t1 = viewIndex - 1;
          if (t1 >= _nestedViews.length)
            return H.ioore(_nestedViews, t1);
          refRenderNode = _nestedViews[t1].get$lastRootNode();
        } else
          refRenderNode = this.nativeElement;
        this.set$nestedViews(_nestedViews);
        if (refRenderNode != null) {
          t1 = [W.Node];
          S._moveNodesAfterSibling(refRenderNode, H.assertSubtype(S._flattenNestedViewRenderNodes(view.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], t1)), "$isList", t1, "$asList"));
          $.domRootRendererIsDirty = true;
        }
        view.viewData._viewContainerElement = this;
        view.dirtyParentQueriesInternal$0();
      },
      detachView$1: function(viewIndex) {
        var t1, view, t2;
        t1 = this.nestedViews;
        view = (t1 && C.JSArray_methods).removeAt$1(t1, viewIndex);
        V._assertCanMove(view);
        t1 = [W.Node];
        S._detachAll(H.assertSubtype(S._flattenNestedViewRenderNodes(view.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], t1)), "$isList", t1, "$asList"));
        t2 = view.viewData.inlinedNodes;
        if (t2 != null)
          S._detachAll(H.assertSubtype(t2, "$isList", t1, "$asList"));
        view.dirtyParentQueriesInternal$0();
        view.viewData._viewContainerElement = null;
        return view;
      },
      $isViewContainerRef: 1
    }
  }], ["", "package:angular/src/core/linker/view_container_ref.dart",, R, {
    "^": "",
    ViewContainerRef: {
      "^": "Object;",
      $isComponentLoader: 1
    }
  }], ["", "package:angular/src/core/linker/view_ref.dart",, L, {
    "^": "",
    ViewRefImpl: {
      "^": "Object;appView",
      setLocal$2: [function(variableName, value) {
        this.appView.locals.$indexSet(0, H.stringTypeCheck(variableName), value);
      }, "call$2", "get$setLocal", 8, 0, 12],
      markForCheck$0: [function() {
        this.appView.markPathToRootAsCheckOnce$0();
      }, "call$0", "get$markForCheck", 0, 0, 2],
      $isChangeDetectorRef: 1,
      $isViewRef: 1,
      $isEmbeddedViewRef: 1
    }
  }], ["", "package:angular/src/core/linker/view_type.dart",, R, {
    "^": "",
    ViewType: {
      "^": "Object;index>,_name",
      toString$0: function(_) {
        return this._name;
      }
    }
  }], ["", "package:angular/src/core/metadata/view.dart",, A, {
    "^": "",
    ViewEncapsulation: {
      "^": "Object;index>,_view$_name",
      toString$0: function(_) {
        return this._view$_name;
      }
    }
  }], ["", "package:angular/src/core/render/api.dart",, A, {
    "^": "",
    RenderComponentType: {
      "^": "Object;id>,templateUrl,encapsulation,templateStyles,0_viewAttr,0_hostAttr,stylesShimmed",
      _flattenStyles$3: function(compId, styles, target) {
        var t1, styleCount, i, style, t2;
        H.assertSubtype(target, "$isList", [P.String], "$asList");
        t1 = J.getInterceptor$asx(styles);
        styleCount = t1.get$length(styles);
        if (typeof styleCount !== "number")
          return H.iae(styleCount);
        i = 0;
        for (; i < styleCount; ++i) {
          style = t1.$index(styles, i);
          if (!!J.getInterceptor$(style).$isList)
            this._flattenStyles$3(compId, style, target);
          else {
            H.stringTypeCheck(style);
            t2 = $.$get$_componentIdPlaceholder();
            style.toString;
            C.JSArray_methods.add$1(target, H.stringReplaceAllUnchecked(style, t2, compId));
          }
        }
        return target;
      }
    }
  }], ["", "package:angular/src/core/security.dart",, E, {
    "^": "",
    SanitizationService: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/core/testability/testability.dart",, D, {
    "^": "",
    Testability: {
      "^": "Object;_testability$_ngZone,_pendingCount,_isZoneStable,_didWork,_testability$_callbacks",
      _watchAngularEvents$0: function() {
        var t1, t2, t3;
        t1 = this._testability$_ngZone;
        t2 = t1._onTurnStart;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.Testability__watchAngularEvents_closure(this));
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new D.Testability__watchAngularEvents_closure0(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      isStable$0: [function(_) {
        return this._isZoneStable && this._pendingCount === 0 && !this._testability$_ngZone._hasPendingMacrotasks;
      }, "call$0", "get$isStable", 1, 0, 6],
      _runCallbacksIfReady$0: function() {
        if (this.isStable$0(0))
          P.scheduleMicrotask(new D.Testability__runCallbacksIfReady_closure(this));
        else
          this._didWork = true;
      },
      whenStable$1: [function(_, callback) {
        C.JSArray_methods.add$1(this._testability$_callbacks, H.interceptedTypeCheck(callback, "$isFunction"));
        this._runCallbacksIfReady$0();
      }, "call$1", "get$whenStable", 5, 0, 250, 12]
    },
    Testability__watchAngularEvents_closure: {
      "^": "Closure:19;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        t1._didWork = true;
        t1._isZoneStable = false;
      }, null, null, 4, 0, null, 0, "call"]
    },
    Testability__watchAngularEvents_closure0: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._testability$_ngZone._onTurnDone;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.Testability__watchAngularEvents__closure(t1));
      }, null, null, 0, 0, null, "call"]
    },
    Testability__watchAngularEvents__closure: {
      "^": "Closure:19;$this",
      call$1: [function(_) {
        if ($.Zone__current.$index(0, $.$get$NgZone__anyZoneKey()) === true)
          H.throwExpression(P.Exception_Exception("Expected to not be in Angular Zone, but it is!"));
        P.scheduleMicrotask(new D.Testability__watchAngularEvents___closure(this.$this));
      }, null, null, 4, 0, null, 0, "call"]
    },
    Testability__watchAngularEvents___closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._isZoneStable = true;
        t1._runCallbacksIfReady$0();
      }, null, null, 0, 0, null, "call"]
    },
    Testability__runCallbacksIfReady_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2, t3;
        for (t1 = this.$this, t2 = t1._testability$_callbacks; t3 = t2.length, t3 !== 0;) {
          if (0 >= t3)
            return H.ioore(t2, -1);
          t2.pop().call$1(t1._didWork);
        }
        t1._didWork = false;
      }, null, null, 0, 0, null, "call"]
    },
    TestabilityRegistry: {
      "^": "Object;_applications,_testabilityGetter"
    },
    _NoopGetTestability: {
      "^": "Object;",
      findTestabilityInTree$2: function(registry, elem) {
        return;
      },
      $isGetTestability: 1
    }
  }], ["", "package:angular/src/core/zone/ng_zone.dart",, Y, {
    "^": "",
    NgZone: {
      "^": "Object;_thisZoneKey,_onTurnStart,_onMicrotaskEmpty,_onTurnDone,_onError,0_outerZone,0_innerZone,_hasPendingMicrotasks,_hasPendingMacrotasks,_isStable,_nesting,_isRunning,_disposed,_pendingMicrotasks,_pendingTimers",
      NgZone$1$enableLongStackTrace: function(enableLongStackTrace) {
        var t1 = $.Zone__current;
        this._outerZone = t1;
        this._innerZone = this._createInnerZone$2$handleUncaughtError(t1, this.get$_onErrorWithoutLongStackTrace());
      },
      _createInnerZone$2$handleUncaughtError: function(zone, handleUncaughtError) {
        return zone.fork$2$specification$zoneValues(P._ZoneSpecification$(null, this.get$_createTimer(), null, null, H.functionTypeCheck(handleUncaughtError, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}), null, null, null, null, this.get$_run(), this.get$_runBinary(), this.get$_runUnary(), this.get$_ng_zone$_scheduleMicrotask()), P.LinkedHashMap__makeLiteral([this._thisZoneKey, true, $.$get$NgZone__anyZoneKey(), true]));
      },
      _ng_zone$_scheduleMicrotask$4: [function($self, $parent, zone, fn) {
        var safeMicrotask, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: -1});
        if (this._pendingMicrotasks === 0) {
          this._hasPendingMicrotasks = true;
          this._checkStable$0();
        }
        ++this._pendingMicrotasks;
        $parent.toString;
        safeMicrotask = H.functionTypeCheck(new Y.NgZone__scheduleMicrotask_closure(this, fn), {func: 1});
        implementation = $parent._delegationTarget.get$_scheduleMicrotask();
        implZone = implementation.zone;
        implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, safeMicrotask);
      }, "call$4", "get$_ng_zone$_scheduleMicrotask", 16, 0, 58],
      _run$1$4: [function($self, $parent, zone, fn, $R) {
        var t1, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: $R});
        $parent.toString;
        t1 = H.functionTypeCheck(new Y.NgZone__run_closure(this, fn, $R), {func: 1, ret: $R});
        implementation = $parent._delegationTarget.get$_async$_run();
        implZone = implementation.zone;
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}).call$1$4(implZone, P._parentDelegate(implZone), zone, t1, $R);
      }, function($self, $parent, zone, fn) {
        return this._run$1$4($self, $parent, zone, fn, null);
      }, "_run$4", "call$1$4", "call$4", "get$_run", 16, 0, 65],
      _runUnary$2$5: [function($self, $parent, zone, fn, arg, $R, $T) {
        var t1, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        $parent.toString;
        t1 = H.functionTypeCheck(new Y.NgZone__runUnary_closure(this, fn, $T, $R), {func: 1, ret: $R, args: [$T]});
        H.assertSubtypeOfRuntimeType(arg, $T);
        implementation = $parent._delegationTarget.get$_async$_runUnary();
        implZone = implementation.zone;
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}).call$2$5(implZone, P._parentDelegate(implZone), zone, t1, arg, $R, $T);
      }, function($self, $parent, zone, fn, arg) {
        return this._runUnary$2$5($self, $parent, zone, fn, arg, null, null);
      }, "_runUnary$5", "call$2$5", "call$5", "get$_runUnary", 20, 0, 49],
      _runBinary$3$6: [function($self, $parent, zone, fn, arg1, arg2, $R, T1, T2) {
        var t1, implementation, implZone;
        H.functionTypeCheck(fn, {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        $parent.toString;
        t1 = H.functionTypeCheck(new Y.NgZone__runBinary_closure(this, fn, T1, T2, $R), {func: 1, ret: $R, args: [T1, T2]});
        H.assertSubtypeOfRuntimeType(arg1, T1);
        H.assertSubtypeOfRuntimeType(arg2, T2);
        implementation = $parent._delegationTarget.get$_async$_runBinary();
        implZone = implementation.zone;
        return H.functionTypeCheck(implementation.$function, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}).call$3$6(implZone, P._parentDelegate(implZone), zone, t1, arg1, arg2, $R, T1, T2);
      }, "call$3$6", "get$_runBinary", 24, 0, 73],
      _onEnter$0: function() {
        ++this._nesting;
        if (this._isStable) {
          this._isStable = false;
          this._isRunning = true;
          this._onTurnStart.add$1(0, null);
        }
      },
      _onLeave$0: function() {
        --this._nesting;
        this._checkStable$0();
      },
      _onErrorWithoutLongStackTrace$5: [function($self, $parent, zone, error, trace) {
        this._onError.add$1(0, new Y.NgZoneError(error, [J.toString$0$(H.interceptedTypeCheck(trace, "$isStackTrace"))]));
      }, "call$5", "get$_onErrorWithoutLongStackTrace", 20, 0, 70],
      _createTimer$5: [function($self, $parent, zone, duration, fn) {
        var t1, t2, onDone, callback, implementation, implZone, wrappedTimer;
        t1 = {};
        H.interceptedTypeCheck(duration, "$isDuration");
        t2 = {func: 1, ret: -1};
        H.functionTypeCheck(fn, t2);
        t1.wrappedTimer = null;
        onDone = new Y.NgZone__createTimer_closure(t1, this);
        $parent.toString;
        callback = H.functionTypeCheck(new Y.NgZone__createTimer_closure0(fn, onDone), t2);
        implementation = $parent._delegationTarget.get$_async$_createTimer();
        implZone = implementation.zone;
        wrappedTimer = new Y._WrappedTimer(implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, duration, callback), duration, onDone);
        t1.wrappedTimer = wrappedTimer;
        C.JSArray_methods.add$1(this._pendingTimers, wrappedTimer);
        this._hasPendingMacrotasks = true;
        return t1.wrappedTimer;
      }, "call$5", "get$_createTimer", 20, 0, 50],
      _checkStable$0: function() {
        var t1, t2;
        t1 = this._nesting;
        if (t1 === 0)
          if (!this._hasPendingMicrotasks && !this._isStable)
            try {
              this._nesting = t1 + 1;
              this._isRunning = false;
              this._onMicrotaskEmpty.add$1(0, null);
            } finally {
              --this._nesting;
              if (!this._hasPendingMicrotasks)
                try {
                  t1 = P.Null;
                  t2 = H.functionTypeCheck(new Y.NgZone__checkStable_closure(this), {func: 1, ret: t1});
                  this._outerZone.run$1$1(t2, t1);
                } finally {
                  this._isStable = true;
                }
            }
      },
      runOutsideAngular$1$1: [1, function(callback, $R) {
        H.functionTypeCheck(callback, {func: 1, ret: $R});
        return this._outerZone.run$1$1(callback, $R);
      }, function(callback) {
        return this.runOutsideAngular$1$1(callback, null);
      }, "runOutsideAngular$1", "call$1$1", "call$1", "get$runOutsideAngular", 4, 0, 84, 12],
      static: {
        NgZone$: function(enableLongStackTrace) {
          var t1 = [-1];
          t1 = new Y.NgZone(new P.Object(), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, [Y.NgZoneError]), false, false, true, 0, false, false, 0, H.setRuntimeTypeInfo([], [Y._WrappedTimer]));
          t1.NgZone$1$enableLongStackTrace(false);
          return t1;
        }
      }
    },
    NgZone__scheduleMicrotask_closure: {
      "^": "Closure:0;$this,fn",
      call$0: [function() {
        try {
          this.fn.call$0();
        } finally {
          var t1 = this.$this;
          if (--t1._pendingMicrotasks === 0) {
            t1._hasPendingMicrotasks = false;
            t1._checkStable$0();
          }
        }
      }, null, null, 0, 0, null, "call"]
    },
    NgZone__run_closure: {
      "^": "Closure;$this,fn,R",
      call$0: [function() {
        try {
          this.$this._onEnter$0();
          var t1 = this.fn.call$0();
          return t1;
        } finally {
          this.$this._onLeave$0();
        }
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: this.R};
      }
    },
    NgZone__runUnary_closure: {
      "^": "Closure;$this,fn,T,R",
      call$1: [function(arg) {
        var t1;
        H.assertSubtypeOfRuntimeType(arg, this.T);
        try {
          this.$this._onEnter$0();
          t1 = this.fn.call$1(arg);
          return t1;
        } finally {
          this.$this._onLeave$0();
        }
      }, null, null, 4, 0, null, 11, "call"],
      $signature: function() {
        return {func: 1, ret: this.R, args: [this.T]};
      }
    },
    NgZone__runBinary_closure: {
      "^": "Closure;$this,fn,T1,T2,R",
      call$2: [function(arg1, arg2) {
        var t1;
        H.assertSubtypeOfRuntimeType(arg1, this.T1);
        H.assertSubtypeOfRuntimeType(arg2, this.T2);
        try {
          this.$this._onEnter$0();
          t1 = this.fn.call$2(arg1, arg2);
          return t1;
        } finally {
          this.$this._onLeave$0();
        }
      }, null, null, 8, 0, null, 17, 18, "call"],
      $signature: function() {
        return {func: 1, ret: this.R, args: [this.T1, this.T2]};
      }
    },
    NgZone__createTimer_closure: {
      "^": "Closure:0;_box_0,$this",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._pendingTimers;
        C.JSArray_methods.remove$1(t2, this._box_0.wrappedTimer);
        t1._hasPendingMacrotasks = t2.length !== 0;
      }
    },
    NgZone__createTimer_closure0: {
      "^": "Closure:0;fn,onDone",
      call$0: [function() {
        try {
          this.fn.call$0();
        } finally {
          this.onDone.call$0();
        }
      }, null, null, 0, 0, null, "call"]
    },
    NgZone__checkStable_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        this.$this._onTurnDone.add$1(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    _WrappedTimer: {
      "^": "Object;_timer,_ng_zone$_duration,_onCancel",
      cancel$0: function(_) {
        this._onCancel.call$0();
        this._timer.cancel$0(0);
      },
      $isTimer: 1
    },
    NgZoneError: {
      "^": "Object;error,stackTrace"
    }
  }], ["", "package:angular/src/di/errors.dart",, A, {
    "^": "",
    debugInjectorEnter: function(token) {
      return;
    },
    debugInjectorLeave: function(token) {
      return;
    },
    noProviderError: function(token) {
      return new P.ArgumentError(false, null, null, "No provider found for " + token.toString$0(0));
    }
  }], ["", "package:angular/src/di/injector/element.dart",, G, {
    "^": "",
    ElementInjector: {
      "^": "HierarchicalInjector;_view,_element$_nodeIndex,0_parent,parent",
      provideUntyped$2: function(token, orElse) {
        return this._view.injectorGet$3(token, this._element$_nodeIndex, orElse);
      },
      injectFromAncestryOptional$2: function(token, orElse) {
        var t1 = this._view;
        return t1.parentView.injectorGet$3(token, t1.viewData.parentIndex, orElse);
      },
      injectFromSelfOptional$2: function(token, orElse) {
        return H.throwExpression(P.UnimplementedError$(null));
      },
      get$parent: function(_) {
        var t1, t2;
        t1 = this._parent;
        if (t1 == null) {
          t1 = this._view;
          t2 = t1.parentView;
          t1 = t1.viewData.parentIndex;
          t1 = new G.ElementInjector(t2, t1, C.EmptyInjector_null);
          this._parent = t1;
        }
        return t1;
      }
    }
  }], ["", "package:angular/src/di/injector/empty.dart",, R, {
    "^": "",
    EmptyInjector: {
      "^": "HierarchicalInjector;parent",
      injectFromSelfOptional$2: function(token, orElse) {
        return token === C.Type_Injector_aJC ? this : orElse;
      },
      injectFromAncestryOptional$2: function(token, orElse) {
        var t1 = this.parent;
        if (t1 == null)
          return orElse;
        return t1.provideUntyped$2(token, orElse);
      }
    }
  }], ["", "package:angular/src/di/injector/hierarchical.dart",, E, {
    "^": "",
    HierarchicalInjector: {
      "^": "Injector;parent>",
      provideUntyped$2: function(token, orElse) {
        var result;
        A.debugInjectorEnter(token);
        result = this.injectFromSelfOptional$2(token, orElse);
        if (result == null ? orElse == null : result === orElse)
          result = this.injectFromAncestryOptional$2(token, orElse);
        A.debugInjectorLeave(token);
        return result;
      },
      injectFromAncestryOptional$2: function(token, orElse) {
        return this.get$parent(this).provideUntyped$2(token, orElse);
      }
    }
  }], ["", "package:angular/src/di/injector/injector.dart",, M, {
    "^": "",
    throwsNotFound: function(injector, token) {
      throw H.wrapException(A.noProviderError(token));
    },
    Injector: {
      "^": "Object;",
      $get$2: function(_, token, notFoundValue) {
        var result;
        A.debugInjectorEnter(token);
        result = this.provideUntyped$2(token, notFoundValue);
        if (result === C.C_Object)
          return M.throwsNotFound(this, token);
        A.debugInjectorLeave(token);
        return result;
      },
      $get$1: function($receiver, token) {
        return this.$get$2($receiver, token, C.C_Object);
      }
    }
  }], ["", "package:angular/src/di/injector/map.dart",, A, {
    "^": "",
    MapInjector: {
      "^": "HierarchicalInjector;_providers,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var result = this._providers.$index(0, token);
        if (result == null) {
          if (token === C.Type_Injector_aJC)
            return this;
          result = orElse;
        }
        return result;
      }
    }
  }], ["", "package:angular/src/facade/exception_handler.dart",, U, {
    "^": "",
    ExceptionHandler: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/platform/browser/exceptions.dart",, T, {
    "^": "",
    BrowserExceptionHandler: {
      "^": "Object;",
      call$3: [function(error, stack, reason) {
        var t1, t2;
        H.stringTypeCheck(reason);
        window;
        t1 = "EXCEPTION: " + H.S(error) + "\n";
        if (stack != null) {
          t1 += "STACKTRACE: \n";
          t2 = J.getInterceptor$(stack);
          t1 += H.S(!!t2.$isIterable ? t2.join$1(stack, "\n\n-----async gap-----\n") : t2.toString$0(stack)) + "\n";
        }
        if (reason != null)
          t1 += "REASON: " + reason + "\n";
        if (typeof console != "undefined")
          window.console.error(t1.charCodeAt(0) == 0 ? t1 : t1);
        return;
      }, function(error) {
        return this.call$3(error, null, null);
      }, "call$1", function(error, stack) {
        return this.call$3(error, stack, null);
      }, "call$2", "call$3", "call$1", "call$2", "get$$call", 4, 4, 87, 3, 3, 2, 45, 46],
      $isExceptionHandler: 1
    }
  }], ["browser.testability", "package:angular/src/platform/browser/testability.dart",, K, {
    "^": "",
    BrowserGetTestability: {
      "^": "Object;",
      addToWindow$1: function(registry) {
        var jsRegistry, getAllAngularTestabilities, whenAllStable;
        jsRegistry = self.self.ngTestabilityRegistries;
        if (jsRegistry == null) {
          jsRegistry = [];
          self.self.ngTestabilityRegistries = jsRegistry;
          self.self.getAngularTestability = P.allowInterop(new K.BrowserGetTestability_addToWindow_closure(), {func: 1, args: [W.Element], opt: [P.bool]});
          getAllAngularTestabilities = new K.BrowserGetTestability_addToWindow_closure0();
          self.self.getAllAngularTestabilities = P.allowInterop(getAllAngularTestabilities, {func: 1, ret: [P.List,,]});
          whenAllStable = P.allowInterop(new K.BrowserGetTestability_addToWindow_closure1(getAllAngularTestabilities), {func: 1, ret: P.Null, args: [,]});
          if (!("frameworkStabilizers" in self.self))
            self.self.frameworkStabilizers = [];
          J.add$1$ax(self.self.frameworkStabilizers, whenAllStable);
        }
        J.add$1$ax(jsRegistry, this._createRegistry$1(registry));
      },
      findTestabilityInTree$2: function(registry, element) {
        var t1;
        if (element == null)
          return;
        t1 = registry._applications.$index(0, element);
        return t1 == null ? this.findTestabilityInTree$2(registry, element.parentElement) : t1;
      },
      _createRegistry$1: function(registry) {
        var object = {};
        object.getAngularTestability = P.allowInterop(new K.BrowserGetTestability__createRegistry_closure(registry), {func: 1, ret: U.JsTestability, args: [W.Element]});
        object.getAllAngularTestabilities = P.allowInterop(new K.BrowserGetTestability__createRegistry_closure0(registry), {func: 1, ret: [P.List, U.JsTestability]});
        return object;
      },
      $isGetTestability: 1
    },
    BrowserGetTestability_addToWindow_closure: {
      "^": "Closure:88;",
      call$2: [function(elem, findInAncestors) {
        var registry, t1, i, t2, result;
        H.interceptedTypeCheck(elem, "$isElement");
        H.boolTypeCheck(findInAncestors);
        registry = H.listTypeCheck(self.self.ngTestabilityRegistries);
        t1 = J.getInterceptor$asx(registry);
        i = 0;
        while (true) {
          t2 = t1.get$length(registry);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t2 = t1.$index(registry, i);
          result = t2.getAngularTestability.apply(t2, [elem]);
          if (result != null)
            return result;
          ++i;
        }
        throw H.wrapException(P.StateError$("Could not find testability for element."));
      }, function(elem) {
        return this.call$2(elem, true);
      }, "call$1", null, null, null, 4, 2, null, 32, 37, 49, "call"]
    },
    BrowserGetTestability_addToWindow_closure0: {
      "^": "Closure:89;",
      call$0: [function() {
        var registry, result, t1, i, t2, testabilities, testabilityCount, j;
        registry = H.listTypeCheck(self.self.ngTestabilityRegistries);
        result = [];
        t1 = J.getInterceptor$asx(registry);
        i = 0;
        while (true) {
          t2 = t1.get$length(registry);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t2 = t1.$index(registry, i);
          testabilities = t2.getAllAngularTestabilities.apply(t2, []);
          testabilityCount = H.numTypeCheck(testabilities.length);
          if (typeof testabilityCount !== "number")
            return H.iae(testabilityCount);
          j = 0;
          for (; j < testabilityCount; ++j)
            result.push(testabilities[j]);
          ++i;
        }
        return result;
      }, null, null, 0, 0, null, "call"]
    },
    BrowserGetTestability_addToWindow_closure1: {
      "^": "Closure:4;getAllAngularTestabilities",
      call$1: [function(callback) {
        var _box_0, testabilities, t1, decrement, t2, testability;
        _box_0 = {};
        testabilities = this.getAllAngularTestabilities.call$0();
        t1 = J.getInterceptor$asx(testabilities);
        _box_0.count = t1.get$length(testabilities);
        _box_0.didWork = false;
        decrement = new K.BrowserGetTestability_addToWindow__closure(_box_0, callback);
        for (t1 = t1.get$iterator(testabilities), t2 = {func: 1, ret: P.Null, args: [P.bool]}; t1.moveNext$0();) {
          testability = t1.get$current(t1);
          testability.whenStable.apply(testability, [P.allowInterop(decrement, t2)]);
        }
      }, null, null, 4, 0, null, 12, "call"]
    },
    BrowserGetTestability_addToWindow__closure: {
      "^": "Closure:29;_box_0,callback",
      call$1: [function(didWork_) {
        var t1, didWork, t2, count;
        H.boolTypeCheck(didWork_);
        t1 = this._box_0;
        didWork = t1.didWork || didWork_;
        t1.didWork = didWork;
        t2 = t1.count;
        if (typeof t2 !== "number")
          return t2.$sub();
        count = t2 - 1;
        t1.count = count;
        if (count === 0)
          this.callback.call$1(didWork);
      }, null, null, 4, 0, null, 50, "call"]
    },
    BrowserGetTestability__createRegistry_closure: {
      "^": "Closure:91;registry",
      call$1: [function(element) {
        var t1, testability;
        H.interceptedTypeCheck(element, "$isElement");
        t1 = this.registry;
        testability = t1._testabilityGetter.findTestabilityInTree$2(t1, element);
        return testability == null ? null : {isStable: P.allowInterop(testability.get$isStable(testability), {func: 1, ret: P.bool}), whenStable: P.allowInterop(testability.get$whenStable(testability), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool]}]})};
      }, null, null, 4, 0, null, 33, "call"]
    },
    BrowserGetTestability__createRegistry_closure0: {
      "^": "Closure:92;registry",
      call$0: [function() {
        var t1, t2, t3;
        t1 = this.registry._applications;
        t1 = t1.get$values(t1);
        t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        t2 = U.JsTestability;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        return new H.MappedListIterable(t1, H.functionTypeCheck(new K.BrowserGetTestability__createRegistry__closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).toList$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    BrowserGetTestability__createRegistry__closure: {
      "^": "Closure:93;",
      call$1: [function(t) {
        H.interceptedTypeCheck(t, "$isTestability");
        return {isStable: P.allowInterop(t.get$isStable(t), {func: 1, ret: P.bool}), whenStable: P.allowInterop(t.get$whenStable(t), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool]}]})};
      }, null, null, 4, 0, null, 52, "call"]
    }
  }], ["", "package:angular/src/platform/dom/events/dom_events.dart",, L, {
    "^": "",
    DomEventsPlugin: {
      "^": "EventManagerPlugin;0manager",
      addEventListener$3: function(_, element, eventName, callback) {
        J.addEventListener$2$x(element, eventName, H.functionTypeCheck(callback, {func: 1, ret: -1, args: [W.Event]}));
        return;
      },
      supports$1: function(_, eventName) {
        return true;
      }
    }
  }], ["", "package:angular/src/platform/dom/events/event_manager.dart",, N, {
    "^": "",
    EventManager: {
      "^": "Object;zone,_plugins,_eventToPlugin",
      EventManager$2: function(_plugins, zone) {
        var t1, i;
        for (t1 = this._plugins, i = 0; i < 2; ++i)
          t1[i].manager = this;
      },
      _findPluginFor$1: function(eventName) {
        var t1, plugin, plugins, i;
        t1 = this._eventToPlugin;
        plugin = t1.$index(0, eventName);
        if (plugin != null)
          return plugin;
        plugins = this._plugins;
        for (i = 1; i >= 0; --i) {
          plugin = plugins[i];
          if (plugin.supports$1(0, eventName)) {
            t1.$indexSet(0, eventName, plugin);
            return plugin;
          }
        }
        throw H.wrapException(P.StateError$("No event manager plugin found for event " + eventName));
      },
      static: {
        EventManager$: function(_plugins, zone) {
          var t1 = new N.EventManager(zone, _plugins, P.LinkedHashMap_LinkedHashMap$_empty(P.String, N.EventManagerPlugin));
          t1.EventManager$2(_plugins, zone);
          return t1;
        }
      }
    },
    EventManagerPlugin: {
      "^": "Object;"
    }
  }], ["", "package:angular/src/platform/dom/events/key_events.dart",, N, {
    "^": "",
    closure: {
      "^": "Closure:27;",
      call$1: function($event) {
        return $event.altKey;
      }
    },
    closure0: {
      "^": "Closure:27;",
      call$1: function($event) {
        return $event.ctrlKey;
      }
    },
    closure1: {
      "^": "Closure:27;",
      call$1: function($event) {
        return $event.metaKey;
      }
    },
    closure2: {
      "^": "Closure:27;",
      call$1: function($event) {
        return $event.shiftKey;
      }
    },
    KeyEventsPlugin: {
      "^": "EventManagerPlugin;0manager",
      supports$1: function(_, eventName) {
        return N.KeyEventsPlugin__parseEventName(eventName) != null;
      },
      addEventListener$3: function(_, element, eventName, handler) {
        var parsedEvent, outsideHandler, t1, t2, t3;
        parsedEvent = N.KeyEventsPlugin__parseEventName(eventName);
        outsideHandler = N.KeyEventsPlugin__eventCallback(element, parsedEvent.fullKey, handler);
        t1 = this.manager.zone;
        t2 = P.Object;
        t1.toString;
        t3 = H.functionTypeCheck(new N.KeyEventsPlugin_addEventListener_closure(element, parsedEvent, outsideHandler), {func: 1, ret: t2});
        return H.interceptedTypeCheck(t1._outerZone.run$1$1(t3, t2), "$isFunction");
      },
      static: {
        KeyEventsPlugin__parseEventName: function(eventName) {
          var parts, domEventName, t1, t2, key, fullKey;
          parts = H.setRuntimeTypeInfo(eventName.toLowerCase().split("."), [P.String]);
          domEventName = C.JSArray_methods.removeAt$1(parts, 0);
          t1 = parts.length;
          if (t1 !== 0)
            t2 = !(domEventName === "keydown" || domEventName === "keyup");
          else
            t2 = true;
          if (t2)
            return;
          if (0 >= t1)
            return H.ioore(parts, -1);
          key = N.KeyEventsPlugin__normalizeKey(parts.pop());
          for (t1 = $.$get$_modifierKeyGetters(), t1 = t1.get$keys(t1), t1 = t1.get$iterator(t1), fullKey = ""; t1.moveNext$0();) {
            t2 = t1.get$current(t1);
            if (C.JSArray_methods.remove$1(parts, t2))
              fullKey += J.$add$ansx(t2, ".");
          }
          fullKey = C.JSString_methods.$add(fullKey, key);
          if (parts.length !== 0 || key.length === 0)
            return;
          return new N._ParsedEventName(domEventName, fullKey);
        },
        KeyEventsPlugin__eventCallback: function(element, fullKey, handler) {
          return new N.KeyEventsPlugin__eventCallback_closure(fullKey, handler);
        },
        KeyEventsPlugin__getEventFullKey: function($event) {
          var keyCode, t1, key, fullKey, t2;
          keyCode = $event.keyCode;
          t1 = C.Map_qsUoh.containsKey$1(0, keyCode) ? C.Map_qsUoh.$index(0, keyCode) : "Unidentified";
          key = t1.toLowerCase();
          if (key === " ")
            key = "space";
          else if (key === ".")
            key = "dot";
          for (t1 = $.$get$_modifierKeyGetters(), t1 = t1.get$keys(t1), t1 = t1.get$iterator(t1), fullKey = ""; t1.moveNext$0();) {
            t2 = t1.get$current(t1);
            if (t2 !== key)
              if ($.$get$_modifierKeyGetters().$index(0, t2).call$1($event))
                fullKey += J.$add$ansx(t2, ".");
          }
          return fullKey + key;
        },
        KeyEventsPlugin__normalizeKey: function(keyName) {
          H.stringTypeCheck(keyName);
          switch (keyName) {
            case "esc":
              return "escape";
            default:
              return keyName;
          }
        }
      }
    },
    KeyEventsPlugin_addEventListener_closure: {
      "^": "Closure:46;element,parsedEvent,outsideHandler",
      call$0: [function() {
        var t1, t2;
        t1 = this.element;
        t1.toString;
        t1 = new W.ElementEvents(t1).$index(0, this.parsedEvent.domEventName);
        t2 = H.getTypeArgumentByIndex(t1, 0);
        t2 = W._EventStreamSubscription$(t1._html$_target, t1._eventType, H.functionTypeCheck(this.outsideHandler, {func: 1, ret: -1, args: [t2]}), false, t2);
        return t2.get$cancel(t2);
      }, null, null, 0, 0, null, "call"]
    },
    KeyEventsPlugin__eventCallback_closure: {
      "^": "Closure:4;fullKey,handler",
      call$1: function($event) {
        H.interceptedTypeCast($event, "$isKeyboardEvent");
        if (N.KeyEventsPlugin__getEventFullKey($event) === this.fullKey)
          this.handler.call$1($event);
      }
    },
    _ParsedEventName: {
      "^": "Object;domEventName,fullKey"
    }
  }], ["", "package:angular/src/platform/dom/shared_styles_host.dart",, A, {
    "^": "",
    DomSharedStylesHost: {
      "^": "Object;_rootHost,_stylesSet",
      addStyles$1: function(styles) {
        var l, t1, t2, t3, i, style, styleElement;
        H.assertSubtype(styles, "$isList", [P.String], "$asList");
        l = styles.length;
        t1 = this._stylesSet;
        t2 = this._rootHost;
        t3 = t2 && C.HeadElement_methods;
        i = 0;
        for (; i < l; ++i) {
          if (i >= styles.length)
            return H.ioore(styles, i);
          style = styles[i];
          if (t1.add$1(0, style)) {
            styleElement = document.createElement("style");
            styleElement.textContent = style;
            t3.append$1(t2, styleElement);
          }
        }
      },
      $isSharedStylesHost: 1
    }
  }], ["", "package:angular/src/security/dom_sanitization_service.dart",, Z, {
    "^": "",
    DomSanitizationService: {
      "^": "Object;",
      $isSanitizationService: 1
    }
  }], ["", "package:angular/src/security/dom_sanitization_service_impl.dart",, R, {
    "^": "",
    DomSanitizationServiceImpl: {
      "^": "Object;",
      $isSanitizationService: 1
    }
  }], ["angular.src.testability.js_api", "package:angular/src/testability/js_api.dart",, U, {
    "^": "",
    JsTestability: {
      "^": "JavaScriptObject;",
      "%": ""
    },
    JsTestabilityRegistry: {
      "^": "JavaScriptObject;",
      "%": ""
    }
  }], ["", "package:angular_components/button_decorator/button_decorator.dart",, T, {
    "^": "",
    ButtonDirective: {
      "^": "_ButtonDirective_RootFocusable_HasTabIndex;_trigger,0_hostTabIndex,_role,0_ariaRole,disabled>,tabbable,HasTabIndex__tabIndex,_root",
      get$ariaRole: function() {
        return this._ariaRole;
      },
      ngOnInit$0: function() {
        var t1 = this._role;
        this._ariaRole = t1 == null ? "button" : t1;
      },
      get$disabledStr: function() {
        return "" + this.get$disabled(this);
      },
      handleClick$1: [function(mouseEvent) {
        H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
        if (this.get$disabled(this))
          return;
        this._trigger.add$1(0, mouseEvent);
      }, "call$1", "get$handleClick", 4, 0, 18],
      handleKeyPress$1: [function(keyboardEvent) {
        H.interceptedTypeCheck(keyboardEvent, "$isKeyboardEvent");
        if (this.get$disabled(this))
          return;
        if (keyboardEvent.keyCode === 13 || Z.isSpaceKey(keyboardEvent)) {
          this._trigger.add$1(0, keyboardEvent);
          keyboardEvent.preventDefault();
        }
      }, "call$1", "get$handleKeyPress", 4, 0, 16]
    },
    _ButtonDirective_RootFocusable_HasTabIndex: {
      "^": "RootFocusable+HasTabIndex;"
    }
  }], ["", "package:angular_components/button_decorator/button_decorator.template.dart",, R, {
    "^": "",
    ButtonDirectiveNgCd: {
      "^": "DirectiveChangeDetector;instance,0_button_decorator_template$_expr_0,0_button_decorator_template$_expr_1,0_button_decorator_template$_expr_2,0_button_decorator_template$_expr_3,0directive,0view,0el,_hasHostChanges",
      detectHostChanges$2: function(view, el) {
        var t1, currVal_0, t2, currVal_1, currVal_2, currVal_3;
        t1 = this.instance;
        currVal_0 = t1.get$tabIndex(t1);
        t2 = this._button_decorator_template$_expr_0;
        if (t2 != currVal_0) {
          el.tabIndex = currVal_0;
          this._button_decorator_template$_expr_0 = currVal_0;
        }
        currVal_1 = t1._ariaRole;
        t2 = this._button_decorator_template$_expr_1;
        if (t2 != currVal_1) {
          this.setAttr$3(el, "role", currVal_1);
          this._button_decorator_template$_expr_1 = currVal_1;
        }
        currVal_2 = "" + t1.disabled;
        t2 = this._button_decorator_template$_expr_2;
        if (t2 !== currVal_2) {
          this.setAttr$3(el, "aria-disabled", currVal_2);
          this._button_decorator_template$_expr_2 = currVal_2;
        }
        currVal_3 = t1.disabled;
        t1 = this._button_decorator_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateElemClass$3(el, "is-disabled", currVal_3);
          this._button_decorator_template$_expr_3 = currVal_3;
        }
      }
    }
  }], ["", "package:angular_components/content/deferred_content.dart",, K, {
    "^": "",
    DeferredContentDirective: {
      "^": "Object;_deferred_content$_disposer,_placeholder,_deferred_content$_viewContainer,0_viewRef,_template,preserveDimensions,_visible",
      _setVisible$1: [function(value) {
        var t1, rootNodes, $content, dimensions, t2, container;
        H.boolTypeCheck(value);
        if (value == this._visible)
          return;
        if (value) {
          if (this.preserveDimensions)
            C.DivElement_methods.remove$0(this._placeholder);
          this._viewRef = this._deferred_content$_viewContainer.createEmbeddedView$1(this._template);
        } else {
          if (this.preserveDimensions) {
            t1 = this._viewRef;
            rootNodes = t1 == null ? null : S._flattenNestedViewRenderNodes(t1.appView.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], [W.Node]));
            if (rootNodes == null)
              rootNodes = H.setRuntimeTypeInfo([], [W.Node]);
            $content = rootNodes.length !== 0 ? C.JSArray_methods.get$first(rootNodes) : null;
            if (!!J.getInterceptor$($content).$isHtmlElement) {
              dimensions = $content.getBoundingClientRect();
              t1 = this._placeholder.style;
              t2 = H.S(dimensions.width) + "px";
              t1.width = t2;
              t2 = H.S(dimensions.height) + "px";
              t1.height = t2;
            }
          }
          this._deferred_content$_viewContainer.clear$0(0);
          if (this.preserveDimensions) {
            t1 = this._deferred_content$_viewContainer;
            t2 = t1._elementRef;
            if (t2 == null) {
              t2 = new Z.ElementRef(t1.nativeElement);
              t1._elementRef = t2;
              t1 = t2;
            } else
              t1 = t2;
            container = t1.nativeElement;
            if ((container == null ? null : container.parentNode) != null)
              J.insertBefore$2$x(container.parentNode, this._placeholder, container);
          }
        }
        this._visible = value;
      }, "call$1", "get$_setVisible", 4, 0, 21, 1],
      ngOnDestroy$0: function() {
        this._deferred_content$_disposer.dispose$0();
        this._deferred_content$_viewContainer = null;
        this._template = null;
      },
      static: {
        DeferredContentDirective$: function(_viewContainer, _template, $parent) {
          var t1, t2;
          t1 = new R.Disposer(true, false);
          t2 = new K.DeferredContentDirective(t1, document.createElement("div"), _viewContainer, _template, false, false);
          t1.addStreamSubscription$1$1($parent.get$contentVisible().listen$1(t2.get$_setVisible()), P.bool);
          return t2;
        }
      }
    }
  }], ["", "package:angular_components/content/deferred_content_aware.dart",, E, {
    "^": "",
    DeferredContentAware: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/dynamic_component/dynamic_component.dart",, Z, {
    "^": "",
    DynamicComponent: {
      "^": "Object;_slowComponentLoader,_dynamic_component$_componentLoader,_changeDetectorRef,_onLoadController,0_dynamic_component$_viewContainerRef,_loadDeferred,0_childComponent,0_componentType,_typeChanged,0_componentFactory,_factoryChanged,0_dynamic_component$_value,_valueChanged",
      set$viewContainerRef: function(value) {
        this._dynamic_component$_viewContainerRef = value;
        if (this._loadDeferred) {
          this._initialize$0();
          this._loadDeferred = false;
        }
      },
      _disposeChildComponent$0: function() {
        var t1 = this._childComponent;
        if (!(t1 == null))
          t1._parentView.detachAndDestroy$0();
        this._childComponent = null;
      },
      _initialize$0: function() {
        var t1 = this._componentFactory;
        if (t1 != null) {
          if (this._childComponent != null)
            throw H.wrapException("Attempting to overwrite a dynamic component");
          t1 = this._dynamic_component$_componentLoader.loadNextToLocation$1$2(t1, this._dynamic_component$_viewContainerRef, null);
          this._childComponent = t1;
          this._onLoadController.add$1(0, t1);
          this._updateChildComponent$0();
        } else {
          t1 = this._componentType;
          if (t1 != null)
            this._slowComponentLoader.loadNextToLocation$1$2(t1, this._dynamic_component$_viewContainerRef, null).then$1$1(new Z.DynamicComponent__initialize_closure(this, t1), null);
        }
      },
      _updateChildComponent$0: function() {
        this._changeDetectorRef.appView.markPathToRootAsCheckOnce$0();
        this._childComponent != null;
      }
    },
    DynamicComponent__initialize_closure: {
      "^": "Closure:99;$this,loadType",
      call$1: function(componentRef) {
        var t1 = this.$this;
        if (!J.$eq$(this.loadType, t1._componentType)) {
          componentRef.destroy$0();
          return;
        }
        if (t1._childComponent != null)
          throw H.wrapException("Attempting to overwrite a dynamic component");
        t1._childComponent = componentRef;
        t1._onLoadController.add$1(0, componentRef);
        t1._updateChildComponent$0();
      }
    }
  }], ["", "package:angular_components/dynamic_component/dynamic_component.template.dart",, Q, {
    "^": "",
    viewFactory_DynamicComponent1: [function(parentView, parentIndex) {
      var t1 = new Q._ViewDynamicComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Z.DynamicComponent));
      t1.componentType = $.ViewDynamicComponent0__renderType;
      return t1;
    }, "call$2", "dynamic_component_template__viewFactory_DynamicComponent1$closure", 8, 0, 226],
    ViewDynamicComponent0: {
      "^": "AppView;0_dynamic_component_template$_appEl_0,0_TemplateRef_0_8,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _anchor_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_0 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(parentRenderNode, _anchor_0);
        t1 = new V.ViewContainer(0, null, this, _anchor_0);
        this._dynamic_component_template$_appEl_0 = t1;
        this._TemplateRef_0_8 = new D.TemplateRef(t1, Q.dynamic_component_template__viewFactory_DynamicComponent1$closure());
        this.ctx.set$viewContainerRef(t1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        this._dynamic_component_template$_appEl_0.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._dynamic_component_template$_appEl_0.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [Z.DynamicComponent];
      }
    },
    _ViewDynamicComponent1: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [Z.DynamicComponent];
      }
    }
  }], ["", "package:angular_components/focus/focus.dart",, E, {
    "^": "",
    RootFocusable: {
      "^": "Object;",
      focus$0: ["super$RootFocusable$focus", function(_) {
        var t1, t2;
        t1 = this._root;
        if (t1 == null)
          return;
        t2 = t1.tabIndex;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          t1.tabIndex = -1;
        t1.focus();
      }],
      dispose$0: ["super$RootFocusable$dispose", function() {
        this._root = null;
      }],
      $isFocusable: 1,
      $isDisposable: 1
    },
    AutoFocusDirective: {
      "^": "RootFocusable;_focus$_disposer,0_autoFocus,_focus$_focusable,_focus$_domService,_modal,_popupRef,_root",
      ngOnInit$0: function() {
        var t1, t2, onVisibleChanged;
        if (!this._autoFocus)
          return;
        t1 = this._modal;
        if (t1 != null || this._popupRef != null) {
          t2 = this._popupRef;
          if (t2 != null ? t2._popupComponent._isVisible : t1._resolvedOverlayRef.state._visibility !== C.Visibility_None_display_none)
            this._focus$_domService.scheduleWrite$1(this.get$focus(this));
          t1 = this._popupRef;
          if (t1 != null) {
            t1 = t1._popupComponent.PopupEvents_onVisibleController;
            onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
          } else
            onVisibleChanged = this._modal._resolvedOverlayRef.get$onVisibleChanged();
          this._focus$_disposer.addStreamSubscription$1$1(onVisibleChanged.listen$1(this.get$_onModalOrPopupVisibleChanged()), P.bool);
        } else
          this._focus$_domService.scheduleWrite$1(this.get$focus(this));
      },
      focus$0: [function(_) {
        if (!this._autoFocus)
          return;
        this.super$RootFocusable$focus(0);
      }, "call$0", "get$focus", 1, 0, 2],
      ngOnDestroy$0: function() {
        this.super$RootFocusable$dispose();
        this._focus$_disposer.dispose$0();
        this._focus$_focusable = null;
        this._focus$_domService = null;
        this._modal = null;
        this._popupRef = null;
      },
      _onModalOrPopupVisibleChanged$1: [function(isVisible) {
        if (H.boolTypeCheck(isVisible))
          this._focus$_domService.scheduleWrite$1(this.get$focus(this));
      }, "call$1", "get$_onModalOrPopupVisibleChanged", 4, 0, 21, 23]
    },
    FocusableDirective: {
      "^": "RootFocusable;_root"
    }
  }], ["", "package:angular_components/focus/focus_activable_item.dart",, K, {
    "^": "",
    FocusActivableItemDirective: {
      "^": "RootFocusable;0key>,_root",
      set$key: function(_, key) {
        this.key = H.stringTypeCheck(key);
      },
      $isFocusableActivateItem: 1
    },
    FocusableActivateItem: {
      "^": "Object;",
      $isFocusable: 1
    }
  }], ["", "package:angular_components/focus/focus_interface.dart",, O, {
    "^": "",
    Focusable: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/focus/focus_trap.dart",, G, {
    "^": "",
    FocusTrapComponent: {
      "^": "Object;_focus_trap$_disposer,0_autoFocusDirective,0_content",
      set$content: function(_, value) {
        this._content = value;
        if (value != null && this._autoFocusDirective == null)
          value._focus_trap$_element.focus();
      },
      focusFirst$0: [function() {
        var t1 = this._content._focus_trap$_element;
        this._focusFirstInOrder$1(Q.DomTreeIterator$(t1, false, t1, false));
      }, "call$0", "get$focusFirst", 0, 0, 2],
      focusLast$0: [function() {
        var t1 = this._content._focus_trap$_element;
        this._focusFirstInOrder$1(Q.DomTreeIterator$(t1, true, t1, true));
      }, "call$0", "get$focusLast", 0, 0, 2],
      _focusFirstInOrder$1: function(iterator) {
        var t1;
        H.assertSubtype(iterator, "$isIterator", [W.Element], "$asIterator");
        for (; iterator.moveNext$0();) {
          t1 = iterator._dom_iterator$_element;
          if (t1.tabIndex === 0 && C.JSNumber_methods.round$0(t1.offsetWidth) !== 0 && C.JSNumber_methods.round$0(t1.offsetHeight) !== 0) {
            J.focus$0$x(t1);
            return;
          }
        }
        t1 = this._autoFocusDirective;
        if (t1 != null)
          t1.focus$0(0);
        else {
          t1 = this._content;
          if (t1 != null)
            t1._focus_trap$_element.focus();
        }
      }
    },
    FocusContentWrapper: {
      "^": "FocusableDirective;_focus_trap$_element,_root"
    }
  }], ["asset_angular_components_lib_focus_focus_trap.scss.css.shim.dart", "package:angular_components/focus/focus_trap.scss.css.shim.dart",, V, {}], ["", "package:angular_components/focus/focus_trap.template.dart",, B, {
    "^": "",
    ViewFocusTrapComponent0: {
      "^": "AppView;0_FocusContentWrapper_1_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, _el_1, _el_2, t1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.tabIndex = 0;
        this.addShimC$1(_el_0);
        _el_1 = S.createDivAndAppend(doc, parentRenderNode);
        (_el_1 && C.DivElement_methods).setAttribute$2(_el_1, "focusContentWrapper", "");
        C.DivElement_methods.setAttribute$2(_el_1, "style", "outline: none");
        _el_1.tabIndex = -1;
        this.addShimC$1(_el_1);
        this._FocusContentWrapper_1_5 = new G.FocusContentWrapper(_el_1, _el_1);
        this.project$2(_el_1, 0);
        _el_2 = S.createDivAndAppend(doc, parentRenderNode);
        _el_2.tabIndex = 0;
        this.addShimC$1(_el_2);
        t1 = W.Event;
        (_el_0 && C.DivElement_methods).addEventListener$2(_el_0, "focus", this.eventHandler0$1$1(this.ctx.get$focusLast(), t1));
        (_el_2 && C.DivElement_methods).addEventListener$2(_el_2, "focus", this.eventHandler0$1$1(this.ctx.get$focusFirst(), t1));
        J.set$content$z(this.ctx, this._FocusContentWrapper_1_5);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [G.FocusTrapComponent];
      },
      static: {
        ViewFocusTrapComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new B.ViewFocusTrapComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, G.FocusTrapComponent));
          t2 = document.createElement("focus-trap");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewFocusTrapComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$FocusTrapComponent());
            $.ViewFocusTrapComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["angular_components.framework_stabilizers.framework_stabilizers", "package:angular_components/framework_stabilizers/framework_stabilizers.dart",, V, {
    "^": ""
  }], ["angular_components.framework_stabilizers.testability", "package:angular_components/framework_stabilizers/testability.dart",, D, {
    "^": "",
    AbstractTestability: {
      "^": "Object;",
      register$0: function(_) {
        var wrappedFn, id;
        wrappedFn = P.allowInterop(this.get$whenStable(this), {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool, P.String]}]});
        id = $.FrameworkStabilizers__nextId;
        $.FrameworkStabilizers__nextId = id + 1;
        $.$get$FrameworkStabilizers__idToFrameworkStabilizer().$indexSet(0, id, wrappedFn);
        if (self.frameworkStabilizers == null)
          self.frameworkStabilizers = [];
        J.add$1$ax(self.frameworkStabilizers, wrappedFn);
      },
      whenStable$1: [function(_, fn) {
        this._runCallbacksIfStable$1$newCallback(H.functionTypeCheck(fn, {func: 1, ret: -1, args: [P.bool, P.String]}));
      }, "call$1", "get$whenStable", 5, 0, 100, 54],
      _runCallbacksIfStable$1$newCallback: function(newCallback) {
        C.C__RootZone.run$1$1(new D.AbstractTestability__runCallbacksIfStable_closure(this, H.functionTypeCheck(newCallback, {func: 1, ret: -1, args: [P.bool, P.String]})), P.Null);
      },
      _runCallbacksIfStable$0: function() {
        return this._runCallbacksIfStable$1$newCallback(null);
      },
      get$name: function(_) {
        return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
      }
    },
    AbstractTestability__runCallbacksIfStable_closure: {
      "^": "Closure:0;$this,newCallback",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._dom_service_webdriver_testability$_domService;
        if (t2._insideDigest || t2._scheduledProcessQueue || t2._layoutObserveRead != null || t2._nextFrameFuture != null || t2._domReadQueue.length !== 0 || t2._domWriteQueue.length !== 0) {
          t2 = this.newCallback;
          if (t2 != null)
            C.JSArray_methods.add$1(t1._callbacks, t2);
          return;
        }
        P.Future_Future(new D.AbstractTestability__runCallbacksIfStable__closure(t1, this.newCallback), null);
      }
    },
    AbstractTestability__runCallbacksIfStable__closure: {
      "^": "Closure:0;$this,newCallback",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.newCallback;
        if (t1 != null)
          t1.call$2(false, "Instance of '" + H.Primitives_objectTypeName(this.$this) + "'");
        for (t1 = this.$this, t2 = t1._callbacks; t3 = t2.length, t3 !== 0;) {
          if (0 >= t3)
            return H.ioore(t2, -1);
          t2.pop().call$2(true, "Instance of '" + H.Primitives_objectTypeName(t1) + "'");
        }
      }
    },
    NullTestability: {
      "^": "Object;",
      register$0: function(_) {
      },
      get$name: function(_) {
        throw H.wrapException(P.UnsupportedError$("not supported by NullTestability"));
      }
    }
  }], ["", "package:angular_components/glyph/glyph.dart",, L, {
    "^": "",
    GlyphComponent: {
      "^": "Object;0_glyph$_icon,0_iconSet,_useMaterialIconsExtended,_glyph$_element",
      get$icon: function(_) {
        return this._glyph$_icon;
      }
    }
  }], ["asset_angular_components_lib_glyph_glyph.scss.css.shim.dart", "package:angular_components/glyph/glyph.scss.css.shim.dart",, O, {}], ["", "package:angular_components/glyph/glyph.template.dart",, M, {
    "^": "",
    ViewGlyphComponent0: {
      "^": "AppView;0_glyph_template$_expr_0,0_glyph_template$_expr_1,0_glyph_template$_el_1,0_glyph_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        J.append$1$x(parentRenderNode, t1.createTextNode("\n"));
        t2 = S.createAndAppend(t1, "i", parentRenderNode);
        this._glyph_template$_el_1 = t2;
        J.setAttribute$2$x(t2, "aria-hidden", "true");
        t2 = this._glyph_template$_el_1;
        t2.className = "glyph-i";
        this.addShimE$1(t2);
        t1 = t1.createTextNode("");
        this._glyph_template$_text_2 = t1;
        J.append$1$x(this._glyph_template$_el_1, t1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1;
        _ctx = this.ctx;
        _ctx._useMaterialIconsExtended;
        t1 = this._glyph_template$_expr_0;
        if (t1 !== true) {
          this.updateClass$3(H.interceptedTypeCheck(this._glyph_template$_el_1, "$isHtmlElement"), "material-icons", true);
          this._glyph_template$_expr_0 = true;
        }
        currVal_1 = _ctx._glyph$_icon;
        if (currVal_1 == null)
          currVal_1 = "";
        t1 = this._glyph_template$_expr_1;
        if (t1 !== currVal_1) {
          this._glyph_template$_text_2.textContent = currVal_1;
          this._glyph_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [L.GlyphComponent];
      }
    }
  }], ["", "package:angular_components/highlighted_text/highlighted_text.dart",, G, {
    "^": "",
    HighlightedTextComponent: {
      "^": "Object;0segments"
    }
  }], ["asset_angular_components_lib_highlighted_text_highlighted_text.scss.css.shim.dart", "package:angular_components/highlighted_text/highlighted_text.scss.css.shim.dart",, Q, {}], ["", "package:angular_components/highlighted_text/highlighted_text.template.dart",, R, {
    "^": "",
    viewFactory_HighlightedTextComponent1: [function(parentView, parentIndex) {
      var t1 = new R._ViewHighlightedTextComponent1(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, G.HighlightedTextComponent));
      t1.componentType = $.ViewHighlightedTextComponent0__renderType;
      return t1;
    }, "call$2", "highlighted_text_template__viewFactory_HighlightedTextComponent1$closure", 8, 0, 227],
    ViewHighlightedTextComponent0: {
      "^": "AppView;0_highlighted_text_template$_appEl_1,0_highlighted_text_template$_NgFor_1_9,0_highlighted_text_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, document.createTextNode("\n"));
        t2 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment");
        t1.append$1(parentRenderNode, _anchor_1);
        t1 = new V.ViewContainer(1, null, this, _anchor_1);
        this._highlighted_text_template$_appEl_1 = t1;
        this._highlighted_text_template$_NgFor_1_9 = new R.NgFor(t1, new D.TemplateRef(t1, R.highlighted_text_template__viewFactory_HighlightedTextComponent1$closure()));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        this.ctx.segments;
        this._highlighted_text_template$_NgFor_1_9.ngDoCheck$0();
        this._highlighted_text_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._highlighted_text_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [G.HighlightedTextComponent];
      }
    },
    _ViewHighlightedTextComponent1: {
      "^": "AppView;0_highlighted_text_template$_expr_0,0_highlighted_text_template$_expr_1,0_highlighted_text_template$_el_0,0_highlighted_text_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1;
        doc = document;
        t1 = doc.createElement("span");
        this._highlighted_text_template$_el_0 = t1;
        t1.className = "text-segment";
        this.addShimE$1(t1);
        t1 = doc.createTextNode("");
        this._highlighted_text_template$_text_1 = t1;
        J.append$1$x(this._highlighted_text_template$_el_0, t1);
        this.init0$1(this._highlighted_text_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var local_segment, currVal_0, currVal_1, t1;
        local_segment = H.interceptedTypeCheck(this.locals.$index(0, "$implicit"), "$isHighlightedTextSegment");
        currVal_0 = local_segment.get$isHighlighted();
        this.updateClass$3(H.interceptedTypeCheck(this._highlighted_text_template$_el_0, "$isHtmlElement"), "segment-highlight", currVal_0);
        this._highlighted_text_template$_expr_0 = currVal_0;
        currVal_1 = Q.interpolate0(C.JSNull_methods.get$text(local_segment));
        t1 = this._highlighted_text_template$_expr_1;
        if (t1 !== currVal_1) {
          this._highlighted_text_template$_text_1.textContent = currVal_1;
          this._highlighted_text_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [G.HighlightedTextComponent];
      }
    }
  }], ["", "package:angular_components/interfaces/has_disabled.dart",, U, {
    "^": "",
    HasDisabled: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/laminate/components/modal/modal.dart",, D, {
    "^": "",
    GlobalModalStack: {
      "^": "Object;"
    },
    Modal: {
      "^": "Object;"
    },
    ModalComponent: {
      "^": "Object;_modal$_element,_parentModal,_stack,_modal$_domService,_onOpen,_onClose,_onVisibleChanged,_modal$_disposer,_isDestroyed,_modal$_isHidden,_modal$_isVisible,0_resolvedOverlayRef,0_lastFocusedElement,restoreFocus,0_pendingOpen,0_pendingClose",
      set$_pendingOpen: function(_pendingOpen) {
        this._pendingOpen = H.assertSubtype(_pendingOpen, "$isFuture", [P.bool], "$asFuture");
      },
      set$_pendingClose: function(_pendingClose) {
        this._pendingClose = H.assertSubtype(_pendingClose, "$isFuture", [P.bool], "$asFuture");
      },
      ngAfterViewInit$0: function() {
        var hostClassName, t1;
        hostClassName = this._modal$_element.className;
        t1 = this._resolvedOverlayRef.overlayElement;
        t1.className = J.$add$ansx(t1.className, " " + H.S(hostClassName));
      },
      ngOnDestroy$0: function() {
        if (this._modal$_isVisible)
          this._hideModalOverlay$0();
        this._isDestroyed = true;
        this._modal$_disposer.dispose$0();
      },
      _onOverlayVisibleChanged$1: [function(isVisible) {
        H.boolTypeCheck(isVisible);
        this._modal$_isVisible = isVisible;
        this._onVisibleChanged.add$1(0, isVisible);
      }, "call$1", "get$_onOverlayVisibleChanged", 4, 0, 21, 23],
      get$contentVisible: function() {
        var t1 = this._onVisibleChanged;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      get$uniquePaneId: function() {
        var t1 = this._resolvedOverlayRef;
        return t1 == null ? null : C.DivElement_methods.getAttribute$1(t1.overlayElement, "pane-id");
      },
      _showModalOverlay$1$temporary: [function(temporary) {
        var t1;
        if (!temporary) {
          t1 = document.activeElement;
          this._lastFocusedElement = t1;
          t1 = this._parentModal;
          if (t1 != null)
            t1.set$hidden(0, true);
        }
        this._resolvedOverlayRef.setVisible$1(true);
      }, function() {
        return this._showModalOverlay$1$temporary(false);
      }, "_showModalOverlay$0", "call$1$temporary", "call$0", "get$_showModalOverlay", 0, 3, 55],
      _hideModalOverlay$1$temporary: [function(temporary) {
        var t1;
        if (!temporary) {
          this._restoreFocus$0();
          t1 = this._parentModal;
          if (t1 != null)
            t1.set$hidden(0, false);
        }
        this._resolvedOverlayRef.setVisible$1(false);
      }, function() {
        return this._hideModalOverlay$1$temporary(false);
      }, "_hideModalOverlay$0", "call$1$temporary", "call$0", "get$_hideModalOverlay", 0, 3, 55],
      _restoreFocus$0: function() {
        var t1 = this._lastFocusedElement;
        if (t1 == null)
          return;
        if (this._parentModal != null)
          return;
        this._modal$_domService.scheduleWrite$1(new D.ModalComponent__restoreFocus_closure(this, t1));
      },
      open$0: function(_) {
        var t1, t2, controller;
        if (this._pendingOpen == null) {
          t1 = $.Zone__current;
          t2 = P.bool;
          controller = new Z.AsyncActionController(new P._AsyncCompleter(new P._Future(0, t1, [null]), [null]), new P._AsyncCompleter(new P._Future(0, t1, [t2]), [t2]), H.setRuntimeTypeInfo([], [[P.Future,,]]), H.setRuntimeTypeInfo([], [[P.Future, P.bool]]), false, false, false, [null]);
          controller.execute$1(this.get$_showModalOverlay());
          this.set$_pendingOpen(controller.get$action(controller)._async_action$_onDone.then$1$1(new D.ModalComponent_open_closure(this), t2));
          this._onOpen.add$1(0, controller.get$action(controller));
        }
        return this._pendingOpen;
      },
      close$0: function(_) {
        var t1, t2, controller;
        if (this._pendingClose == null) {
          t1 = $.Zone__current;
          t2 = P.bool;
          controller = new Z.AsyncActionController(new P._AsyncCompleter(new P._Future(0, t1, [null]), [null]), new P._AsyncCompleter(new P._Future(0, t1, [t2]), [t2]), H.setRuntimeTypeInfo([], [[P.Future,,]]), H.setRuntimeTypeInfo([], [[P.Future, P.bool]]), false, false, false, [null]);
          controller.execute$1(this.get$_hideModalOverlay());
          this.set$_pendingClose(controller.get$action(controller)._async_action$_onDone.then$1$1(new D.ModalComponent_close_closure(this), t2));
          this._onClose.add$1(0, controller.get$action(controller));
        }
        return this._pendingClose;
      },
      set$visible: function(_, visible) {
        if (this._modal$_isVisible === visible || this._isDestroyed)
          return;
        if (visible)
          this.open$0(0);
        else
          this.close$0(0);
      },
      set$hidden: function(_, hidden) {
        this._modal$_isHidden = hidden;
        if (hidden)
          this._hideModalOverlay$1$temporary(true);
        else
          this._showModalOverlay$1$temporary(true);
      },
      $isDeferredContentAware: 1,
      $isModal: 1,
      static: {
        ModalComponent$: function(overlayService, _element, _domService, _parentModal, _stack) {
          var t1, t2, t3, t4;
          t1 = [[L.AsyncAction,,]];
          t2 = P.bool;
          t3 = new R.Disposer(true, false);
          t1 = new D.ModalComponent(_element, _parentModal, _stack, _domService, new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, [t2]), t3, false, false, false, true);
          t4 = overlayService.createOverlayRefSync$1(C._ImmutableOverlayState_oyn);
          t1._resolvedOverlayRef = t4;
          t3.addDisposable$1$1(t4, B.OverlayRef);
          t3.addStreamSubscription$1$1(t4.get$onVisibleChanged().listen$1(t1.get$_onOverlayVisibleChanged()), t2);
          return t1;
        }
      }
    },
    ModalComponent__restoreFocus_closure: {
      "^": "Closure:0;$this,elementToFocus",
      call$0: function() {
        var t1, t2;
        t1 = document;
        t2 = t1.activeElement;
        if (t2 != null)
          if (!C.DivElement_methods.contains$1(this.$this._resolvedOverlayRef.overlayElement, t2)) {
            t2 = t1.activeElement;
            t1 = t1.body;
            t1 = t2 == null ? t1 == null : t2 === t1;
          } else
            t1 = true;
        else
          t1 = false;
        if (t1)
          J.focus$0$x(this.elementToFocus);
      }
    },
    ModalComponent_open_closure: {
      "^": "Closure:57;$this",
      call$1: [function(completed) {
        this.$this.set$_pendingOpen(null);
        return H.futureOrCheck(completed, {futureOr: 1, type: P.bool});
      }, null, null, 4, 0, null, 34, "call"]
    },
    ModalComponent_close_closure: {
      "^": "Closure:57;$this",
      call$1: [function(completed) {
        this.$this.set$_pendingClose(null);
        return H.futureOrCheck(completed, {futureOr: 1, type: P.bool});
      }, null, null, 4, 0, null, 34, "call"]
    }
  }], ["", "package:angular_components/laminate/components/modal/modal.template.dart",, O, {
    "^": "",
    viewFactory_ModalComponent1: [function(parentView, parentIndex) {
      var t1 = new O._ViewModalComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, D.ModalComponent));
      t1.componentType = $.ViewModalComponent0__renderType;
      return t1;
    }, "call$2", "modal_template__viewFactory_ModalComponent1$closure", 8, 0, 228],
    ViewModalComponent0: {
      "^": "AppView;0_modal_template$_appEl_1,0_ModalControllerDirective_1_9,0_modal_template$_expr_0,0_modal_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, t3, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("    "));
        t3 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_1);
        t3 = new V.ViewContainer(1, null, this, _anchor_1);
        this._modal_template$_appEl_1 = t3;
        this._ModalControllerDirective_1_9 = new Y.ModalControllerDirective(C.Map_empty0, new D.TemplateRef(t3, O.modal_template__viewFactory_ModalComponent1$closure()), t3);
        t2.append$1(parentRenderNode, t1.createTextNode("\n  "));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = this.ctx._resolvedOverlayRef;
        t1 = this._modal_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          t1 = this._ModalControllerDirective_1_9;
          t1.toString;
          if (currVal_0 == null) {
            if (t1._attachedHost != null) {
              t1.set$_locals(C.Map_empty0);
              t1.super$Portal$detach(0);
            }
          } else
            currVal_0._delegatePortalHost.attach$1(t1);
          this._modal_template$_expr_0 = currVal_0;
        }
        this._modal_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._modal_template$_appEl_1.destroyNestedViews$0();
        var t1 = this._ModalControllerDirective_1_9;
        if (t1._attachedHost != null) {
          t1.set$_locals(C.Map_empty0);
          t1.super$Portal$detach(0);
        }
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_1, t1;
        currVal_1 = this.ctx.get$uniquePaneId();
        t1 = this._modal_template$_expr_1;
        if (t1 != currVal_1) {
          this.setAttr$3(this.rootEl, "pane-id", currVal_1);
          this._modal_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [D.ModalComponent];
      },
      static: {
        ViewModalComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new O.ViewModalComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, parentIndex, D.ModalComponent));
          t2 = document.createElement("modal");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewModalComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
            $.ViewModalComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewModalComponent1: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, _text_1, t2;
        t1 = document;
        _text_0 = t1.createTextNode("\n      ");
        _text_1 = t1.createTextNode("\n    ");
        t1 = [_text_0];
        t2 = this.viewData.projectableNodes;
        if (0 >= t2.length)
          return H.ioore(t2, 0);
        C.JSArray_methods.addAll$1(t1, t2[0]);
        C.JSArray_methods.addAll$1(t1, [_text_1]);
        this.init$2(t1, null);
      },
      $asAppView: function() {
        return [D.ModalComponent];
      }
    }
  }], ["", "package:angular_components/laminate/enums/alignment.dart",, K, {
    "^": "",
    Alignment: {
      "^": "Object;_displayName,_cssPropertyValue",
      get$requiresContentSizeToPosition: function() {
        return this !== C.Alignment_dMH;
      },
      calcLeft$2: function(sourceRect, contentRect) {
        var t1, left, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        if (this.get$requiresContentSizeToPosition() && contentRect == null)
          throw H.wrapException(P.ArgumentError$notNull("contentRect"));
        t1 = J.getInterceptor$x(sourceRect);
        left = t1.get$left(sourceRect);
        if (this === C.Alignment_Center_center) {
          t1 = t1.get$width(sourceRect);
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = J.get$width$x(contentRect);
          if (typeof t2 !== "number")
            return t2.$div();
          left += t1 / 2 - t2 / 2;
        } else if (this === C.Alignment_Yw7) {
          t1 = t1.get$width(sourceRect);
          t2 = J.get$width$x(contentRect);
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return H.iae(t2);
          left += t1 - t2;
        }
        return left;
      },
      calcTop$2: function(sourceRect, contentRect) {
        var t1, $top, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        if (this.get$requiresContentSizeToPosition() && contentRect == null)
          throw H.wrapException(P.ArgumentError$notNull("contentRect"));
        t1 = J.getInterceptor$x(sourceRect);
        $top = t1.get$top(sourceRect);
        if (this === C.Alignment_Center_center) {
          t1 = t1.get$height(sourceRect);
          if (typeof t1 !== "number")
            return t1.$div();
          t2 = J.get$height$x(contentRect);
          if (typeof t2 !== "number")
            return t2.$div();
          $top += t1 / 2 - t2 / 2;
        } else if (this === C.Alignment_Yw7) {
          t1 = t1.get$height(sourceRect);
          t2 = J.get$height$x(contentRect);
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return H.iae(t2);
          $top += t1 - t2;
        }
        return $top;
      },
      toString$0: function(_) {
        return "Alignment {" + this._displayName + "}";
      }
    },
    _CustomAlignment: {
      "^": "Alignment;"
    },
    BeforeCustomAlignment: {
      "^": "_CustomAlignment;requiresContentSizeToPosition<,cssClassX,cssClassY,_displayName,_cssPropertyValue",
      calcLeft$2: function(sourceRect, contentRect) {
        var t1, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        t1 = J.get$left$x(sourceRect);
        t2 = J.get$width$x(contentRect);
        if (typeof t2 !== "number")
          return t2.$negate();
        return t1 + -t2;
      },
      calcTop$2: function(sourceRect, contentRect) {
        var t1, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        t1 = J.get$top$x(sourceRect);
        t2 = J.get$height$x(contentRect);
        if (typeof t2 !== "number")
          return H.iae(t2);
        return t1 - t2;
      }
    },
    AfterCustomAlignment: {
      "^": "_CustomAlignment;requiresContentSizeToPosition<,cssClassX,cssClassY,_displayName,_cssPropertyValue",
      calcLeft$2: function(sourceRect, contentRect) {
        var t1, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        t1 = J.getInterceptor$x(sourceRect);
        t2 = t1.get$left(sourceRect);
        t1 = t1.get$width(sourceRect);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return t2 + t1;
      },
      calcTop$2: function(sourceRect, contentRect) {
        var t1, t2;
        t1 = [P.num];
        H.assertSubtype(sourceRect, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(contentRect, "$isRectangle", t1, "$asRectangle");
        t1 = J.getInterceptor$x(sourceRect);
        t2 = t1.get$top(sourceRect);
        t1 = t1.get$height(sourceRect);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return t2 + t1;
      }
    },
    RelativePosition: {
      "^": "Object;originX<,originY<,animationOrigin",
      flipRelativePosition$0: function() {
        var t1, t2;
        t1 = this._flipAlignment$1(this.originX);
        t2 = this.animationOrigin;
        if (C.Map_yH4ig.containsKey$1(0, t2))
          t2 = C.Map_yH4ig.$index(0, t2);
        return new K.RelativePosition(t1, this.originY, t2);
      },
      _flipAlignment$1: function(alignment) {
        if (alignment === C.Alignment_dMH)
          return C.Alignment_Yw7;
        if (alignment === C.Alignment_Yw7)
          return C.Alignment_dMH;
        if (alignment === C.BeforeCustomAlignment_yHF)
          return C.AfterCustomAlignment_ZCw;
        if (alignment === C.AfterCustomAlignment_ZCw)
          return C.BeforeCustomAlignment_yHF;
        return alignment;
      },
      toString$0: function(_) {
        return "RelativePosition " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["originX", this.originX, "originY", this.originY], P.String, K.Alignment));
      }
    }
  }], ["", "package:angular_components/laminate/enums/visibility.dart",, L, {
    "^": "",
    Visibility: {
      "^": "Object;displayName,_propertyName,_propertyValue",
      apply$1: function(setProperty) {
        var t1;
        H.functionTypeCheck(setProperty, {func: 1, ret: -1, args: [P.String,,]});
        t1 = this._propertyName;
        if (t1 != null)
          setProperty.call$2(t1, this._propertyValue);
      },
      toString$0: function(_) {
        return "Visibility {" + this.displayName + "}";
      }
    }
  }], ["", "package:angular_components/laminate/overlay/module.dart",, G, {
    "^": "",
    getDefaultContainer: function($name, $parent, container) {
      var t1, t2, t3;
      if (container != null)
        return H.interceptedTypeCheck(container, "$isHtmlElement");
      t1 = J.getInterceptor$x($parent);
      container = t1.querySelector$1($parent, "#default-acx-overlay-container");
      if (container == null) {
        t2 = document;
        t3 = t2.createElement("div");
        t3.tabIndex = 0;
        t3.classList.add("acx-overlay-focusable-placeholder");
        t1.append$1($parent, t3);
        container = t2.createElement("div");
        container.id = "default-acx-overlay-container";
        container.classList.add("acx-overlay-container");
        t1.append$1($parent, container);
        t2 = t2.createElement("div");
        t2.tabIndex = 0;
        t2.classList.add("acx-overlay-focusable-placeholder");
        t1.append$1($parent, t2);
      }
      J.setAttribute$2$x(container, "container-name", $name);
      return H.interceptedTypeCheck(container, "$isHtmlElement");
    },
    getDefaultContainerName: function(containerName) {
      return H.stringTypeCheck(containerName == null ? "default" : containerName);
    },
    getOverlayContainerParent: function($document, containerParent) {
      return H.interceptedTypeCheck(containerParent == null ? ($document && C.HtmlDocument_methods).querySelector$1($document, "body") : containerParent, "$isHtmlElement");
    }
  }], ["angular_components.css.acux.zindexer", "package:angular_components/laminate/overlay/zindexer.dart",, X, {
    "^": "",
    ZIndexer: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/laminate/portal/portal.dart",, L, {
    "^": "",
    Portal: {
      "^": "Object;",
      detach$0: ["super$Portal$detach", function(_) {
        var currentHost = this._attachedHost;
        this._attachedHost = null;
        return currentHost.detach$0(0);
      }]
    },
    TemplatePortal: {
      "^": "Portal;_locals",
      set$_locals: function(_locals) {
        this._locals = H.assertSubtype(_locals, "$isMap", [P.String, null], "$asMap");
      },
      $asPortal: function() {
        return [[P.Map, P.String,,]];
      }
    },
    BasePortalHost: {
      "^": "Object;0_detachPortal",
      set$_detachPortal: function(_detachPortal) {
        this._detachPortal = H.functionTypeCheck(_detachPortal, {func: 1, ret: -1});
      },
      attach$1: function(portal) {
        var t1;
        if (this._portal$_isDisposed)
          throw H.wrapException(P.StateError$("Already disposed."));
        if (this._attachedPortal != null)
          throw H.wrapException(P.StateError$("Already has attached portal!"));
        this._attachedPortal = portal;
        portal._attachedHost = this;
        t1 = this.attachTemplatePortal$1(portal);
        return t1;
      },
      detach$0: function(_) {
        var t1;
        this._attachedPortal._attachedHost = null;
        this._attachedPortal = null;
        t1 = this._detachPortal;
        if (t1 != null) {
          t1.call$0();
          this.set$_detachPortal(null);
        }
        t1 = new P._Future(0, $.Zone__current, [null]);
        t1._asyncComplete$1(null);
        return t1;
      },
      $isPortalHost: 1,
      $isDisposable: 1
    },
    DomPortalHost: {
      "^": "BasePortalHost;_hostElement,_portal$_imperativeViewUtils,0_attachedPortal,0_detachPortal,_portal$_isDisposed",
      attachTemplatePortal$1: function(portal) {
        return this._portal$_imperativeViewUtils.insertAngularView$3(this._hostElement, portal.template, portal.viewContainer).then$1$1(new L.DomPortalHost_attachTemplatePortal_closure(this, portal), [P.Map, P.String,,]);
      }
    },
    DomPortalHost_attachTemplatePortal_closure: {
      "^": "Closure:103;$this,portal",
      call$1: [function(ref) {
        H.interceptedTypeCheck(ref, "$isImperativeViewRef");
        this.portal._locals.forEach$1(0, ref.viewRef.get$setLocal());
        this.$this.set$_detachPortal(H.functionTypeCheck(ref.get$dispose(), {func: 1, ret: -1}));
        return P.LinkedHashMap_LinkedHashMap$_empty(P.String, null);
      }, null, null, 4, 0, null, 56, "call"]
    }
  }], ["", "package:angular_components/laminate/ruler/dom_ruler.dart",, K, {
    "^": "",
    DomRuler: {
      "^": "Object;"
    },
    DomRulerImpl: {
      "^": "RulerBase;_dom_ruler$_document,_dom_ruler$_domService,_addedCssClasses",
      canSyncWrite$1: function(element) {
        var t1, t2;
        t1 = this._dom_ruler$_document;
        t2 = J.getInterceptor$(t1);
        if (!!t2.$isHtmlDocument) {
          t1 = t1.body;
          return !(t1 && C.BodyElement_methods).contains$1(t1, element);
        }
        return !t2.contains$1(t1, element);
      },
      measure$2$offset: function(_, element, offset) {
        var t1;
        if (this.canSyncWrite$1(element)) {
          t1 = new P._Future(0, $.Zone__current, [[P.Rectangle, P.num]]);
          t1._asyncComplete$1(C.Rectangle_0_0_0_0);
          return t1;
        }
        return this.super$RulerBase$measure(0, element, false);
      },
      measure$1: function($receiver, element) {
        return this.measure$2$offset($receiver, element, false);
      },
      measureSync$2$offset: function(element, offset) {
        return element.getBoundingClientRect();
      },
      measureSync$1: function(element) {
        return this.measureSync$2$offset(element, false);
      },
      track$1: function(_, element) {
        if (this.canSyncWrite$1(element))
          return P.Stream_Stream$fromIterable(C.List_4YB, [P.Rectangle, P.num]);
        return this.super$RulerBase$track(0, element);
      },
      removeCssClassesSync$2: function(element, classes) {
        H.assertSubtype(classes, "$isList", [P.String], "$asList");
        J.get$classes$x(element).removeAll$1(J.where$1$ax(classes, new K.DomRulerImpl_removeCssClassesSync_closure()));
      },
      addCssClassesSync$2: function(element, classes) {
        var t1;
        H.assertSubtype(classes, "$isList", [P.String], "$asList");
        t1 = H.getTypeArgumentByIndex(classes, 0);
        J.get$classes$x(element).addAll$1(0, new H.WhereIterable(classes, H.functionTypeCheck(new K.DomRulerImpl_addCssClassesSync_closure(), {func: 1, ret: P.bool, args: [t1]}), [t1]));
      },
      $isDomRuler: 1,
      $asRulerBase: function() {
        return [W.Element];
      }
    },
    DomRulerImpl_removeCssClassesSync_closure: {
      "^": "Closure:17;",
      call$1: function(c) {
        return H.stringTypeCheck(c).length !== 0;
      }
    },
    DomRulerImpl_addCssClassesSync_closure: {
      "^": "Closure:17;",
      call$1: function(c) {
        return H.stringTypeCheck(c).length !== 0;
      }
    }
  }], ["", "package:angular_components/material_button/material_button.dart",, B, {
    "^": "",
    MaterialButtonComponent: {
      "^": "MaterialButtonBase;_material_button$_changeDetector,0ariaLabel,_focused,_clickFocused,_isMouseDown,raised,_trigger,0_hostTabIndex,_role,0_ariaRole,disabled,tabbable,HasTabIndex__tabIndex,_root",
      focusedStateChanged$0: function() {
        this._material_button$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      },
      get$hostDisabled: function() {
        return this.disabled ? "" : null;
      },
      get$hostRaised: function() {
        return this.raised ? "" : null;
      },
      get$hostClassIsFocused: function() {
        return this._focused;
      },
      get$hostElevation: function() {
        return "" + (this._isMouseDown || this._focused ? 4 : 1);
      },
      static: {
        MaterialButtonComponent$: function(element, darktheme, _changeDetector, role) {
          if (darktheme.isDarkTheme)
            element.classList.add("acx-theme-dark");
          return new B.MaterialButtonComponent(_changeDetector, false, false, false, false, new P._SyncBroadcastStreamController(null, null, 0, [W.UIEvent]), role, false, true, null, element);
        }
      }
    }
  }], ["asset_angular_components_lib_material_button_material_button.scss.css.shim.dart", "package:angular_components/material_button/material_button.scss.css.shim.dart",, O, {}], ["", "package:angular_components/material_button/material_button.template.dart",, U, {
    "^": "",
    ViewMaterialButtonComponent0: {
      "^": "AppView;0_compView_2,0_MaterialRippleComponent_2_5,0_material_button_template$_expr_0,0_material_button_template$_expr_1,0_material_button_template$_expr_2,0_material_button_template$_expr_3,0_material_button_template$_expr_4,0_material_button_template$_expr_5,0_material_button_template$_expr_6,0_material_button_template$_expr_7,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, t2, _el_1, _el_2, t3;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        _el_1 = S.createDivAndAppend(t1, parentRenderNode);
        _el_1.className = "content";
        this.addShimC$1(_el_1);
        this.project$2(_el_1, 0);
        t1 = L.ViewMaterialRippleComponent0$(this, 2);
        this._compView_2 = t1;
        _el_2 = t1.rootEl;
        t2.append$1(parentRenderNode, _el_2);
        this.addShimC$1(_el_2);
        t2 = B.MaterialRippleComponent$(_el_2);
        this._MaterialRippleComponent_2_5 = t2;
        this._compView_2.create$2(0, t2, []);
        t2 = W.Event;
        t1 = J.getInterceptor$x(_el_2);
        t1.addEventListener$2(_el_2, "mousedown", this.eventHandler1$2$1(J.get$onMouseDown$x(this.ctx), t2, t2));
        t1.addEventListener$2(_el_2, "mouseup", this.eventHandler1$2$1(J.get$onMouseUp$x(this.ctx), t2, t2));
        this.init$2(C.List_empty, null);
        t1 = J.getInterceptor$x(_rootEl);
        t1.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t2, W.MouseEvent));
        t1.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t2, W.KeyboardEvent));
        t1.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$onMouseDown(_ctx), t2, t2));
        t1.addEventListener$2(_rootEl, "mouseup", this.eventHandler1$2$1(_ctx.get$onMouseUp(_ctx), t2, t2));
        t3 = W.UIEvent;
        t1.addEventListener$2(_rootEl, "focus", this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t2, t3));
        t1.addEventListener$2(_rootEl, "blur", this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t2, t3));
      },
      detectChangesInternal$0: function() {
        this._compView_2.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._compView_2.destroy$0();
        this._MaterialRippleComponent_2_5.ngOnDestroy$0();
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7;
        currVal_0 = J.get$tabIndex$x(this.ctx);
        t1 = this._material_button_template$_expr_0;
        if (t1 != currVal_0) {
          this.rootEl.tabIndex = currVal_0;
          this._material_button_template$_expr_0 = currVal_0;
        }
        currVal_1 = this.ctx.get$ariaRole();
        t1 = this._material_button_template$_expr_1;
        if (t1 != currVal_1) {
          this.setAttr$3(this.rootEl, "role", currVal_1);
          this._material_button_template$_expr_1 = currVal_1;
        }
        currVal_2 = this.ctx.get$disabledStr();
        t1 = this._material_button_template$_expr_2;
        if (t1 !== currVal_2) {
          this.setAttr$3(this.rootEl, "aria-disabled", currVal_2);
          this._material_button_template$_expr_2 = currVal_2;
        }
        currVal_3 = J.get$disabled$z(this.ctx);
        t1 = this._material_button_template$_expr_3;
        if (t1 != currVal_3) {
          this.updateElemClass$3(this.rootEl, "is-disabled", currVal_3);
          this._material_button_template$_expr_3 = currVal_3;
        }
        currVal_4 = this.ctx.get$hostDisabled();
        t1 = this._material_button_template$_expr_4;
        if (t1 != currVal_4) {
          this.setAttr$3(this.rootEl, "disabled", currVal_4);
          this._material_button_template$_expr_4 = currVal_4;
        }
        currVal_5 = this.ctx.get$hostRaised();
        t1 = this._material_button_template$_expr_5;
        if (t1 != currVal_5) {
          this.setAttr$3(this.rootEl, "raised", currVal_5);
          this._material_button_template$_expr_5 = currVal_5;
        }
        currVal_6 = this.ctx.get$hostClassIsFocused();
        t1 = this._material_button_template$_expr_6;
        if (t1 !== currVal_6) {
          this.updateElemClass$3(this.rootEl, "is-focused", currVal_6);
          this._material_button_template$_expr_6 = currVal_6;
        }
        currVal_7 = this.ctx.get$hostElevation();
        t1 = this._material_button_template$_expr_7;
        if (t1 !== currVal_7) {
          this.setAttr$3(this.rootEl, "elevation", currVal_7);
          this._material_button_template$_expr_7 = currVal_7;
        }
      },
      $asAppView: function() {
        return [B.MaterialButtonComponent];
      },
      static: {
        ViewMaterialButtonComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new U.ViewMaterialButtonComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, B.MaterialButtonComponent));
          t2 = document.createElement("material-button");
          H.interceptedTypeCheck(t2, "$isHtmlElement");
          t1.rootEl = t2;
          J.setAttribute$2$x(t2, "animated", "true");
          t2 = $.ViewMaterialButtonComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialButtonComponent());
            $.ViewMaterialButtonComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_button/material_button_base.dart",, S, {
    "^": "",
    MaterialButtonBase: {
      "^": "ButtonDirective;",
      _setFocused$1: function(newValue) {
        P.scheduleMicrotask(new S.MaterialButtonBase__setFocused_closure(this, newValue));
      },
      focusedStateChanged$0: function() {
      },
      onMouseDown$1: [function(_, _0) {
        this._clickFocused = true;
        this._isMouseDown = true;
      }, "call$1", "get$onMouseDown", 5, 0, 1],
      onMouseUp$1: [function(_, _0) {
        this._isMouseDown = false;
      }, "call$1", "get$onMouseUp", 5, 0, 1],
      onFocus$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isUIEvent");
        if (this._clickFocused)
          return;
        this._setFocused$1(true);
      }, "call$1", "get$onFocus", 5, 0, 25],
      onBlur$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isUIEvent");
        if (this._clickFocused)
          this._clickFocused = false;
        this._setFocused$1(false);
      }, "call$1", "get$onBlur", 5, 0, 25]
    },
    MaterialButtonBase__setFocused_closure: {
      "^": "Closure:0;$this,newValue",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = this.newValue;
        if (t1._focused !== t2) {
          t1._focused = t2;
          t1.focusedStateChanged$0();
        }
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/material_button/material_fab.dart",, M, {
    "^": "",
    MaterialFabComponent: {
      "^": "MaterialButtonBase;_material_fab$_changeDetector,_focused,_clickFocused,_isMouseDown,raised,_trigger,0_hostTabIndex,_role,0_ariaRole,disabled,tabbable,HasTabIndex__tabIndex,_root",
      focusedStateChanged$0: function() {
        this._material_fab$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      },
      get$hostDisabled: function() {
        return this.disabled ? "" : null;
      },
      get$hostRaised: function() {
        return this.raised ? "" : null;
      },
      get$hostClassIsFocused: function() {
        return this._focused;
      },
      get$hostClassIsPressed: function() {
        return this._isMouseDown || this._focused || this._clickFocused;
      }
    }
  }], ["asset_angular_components_lib_material_button_material_fab.scss.css.shim.dart", "package:angular_components/material_button/material_fab.scss.css.shim.dart",, L, {}], ["", "package:angular_components/material_button/material_fab.template.dart",, L, {
    "^": "",
    ViewMaterialFabComponent0: {
      "^": "AppView;0_material_fab_template$_compView_2,0_material_fab_template$_MaterialRippleComponent_2_5,0_material_fab_template$_expr_0,0_material_fab_template$_expr_1,0_material_fab_template$_expr_2,0_material_fab_template$_expr_3,0_material_fab_template$_expr_4,0_material_fab_template$_expr_5,0_material_fab_template$_expr_6,0_material_fab_template$_expr_7,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, t2, _el_1, _el_2, t3;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        _el_1 = S.createDivAndAppend(t1, parentRenderNode);
        _el_1.className = "content";
        this.addShimC$1(_el_1);
        this.project$2(_el_1, 0);
        t1 = L.ViewMaterialRippleComponent0$(this, 2);
        this._material_fab_template$_compView_2 = t1;
        _el_2 = t1.rootEl;
        t2.append$1(parentRenderNode, _el_2);
        this.addShimC$1(_el_2);
        t2 = B.MaterialRippleComponent$(_el_2);
        this._material_fab_template$_MaterialRippleComponent_2_5 = t2;
        this._material_fab_template$_compView_2.create$2(0, t2, []);
        t2 = W.Event;
        t1 = J.getInterceptor$x(_el_2);
        t1.addEventListener$2(_el_2, "mousedown", this.eventHandler1$2$1(J.get$onMouseDown$x(this.ctx), t2, t2));
        t1.addEventListener$2(_el_2, "mouseup", this.eventHandler1$2$1(J.get$onMouseUp$x(this.ctx), t2, t2));
        this.init$2(C.List_empty, null);
        t1 = J.getInterceptor$x(_rootEl);
        t1.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t2, W.MouseEvent));
        t1.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t2, W.KeyboardEvent));
        t1.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$onMouseDown(_ctx), t2, t2));
        t1.addEventListener$2(_rootEl, "mouseup", this.eventHandler1$2$1(_ctx.get$onMouseUp(_ctx), t2, t2));
        t3 = W.UIEvent;
        t1.addEventListener$2(_rootEl, "focus", this.eventHandler1$2$1(_ctx.get$onFocus(_ctx), t2, t3));
        t1.addEventListener$2(_rootEl, "blur", this.eventHandler1$2$1(_ctx.get$onBlur(_ctx), t2, t3));
      },
      detectChangesInternal$0: function() {
        this._material_fab_template$_compView_2.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_fab_template$_compView_2.destroy$0();
        this._material_fab_template$_MaterialRippleComponent_2_5.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [M.MaterialFabComponent];
      }
    }
  }], ["", "package:angular_components/material_checkbox/material_checkbox.dart",, B, {
    "^": "",
    MaterialCheckboxComponent: {
      "^": "Object;_material_checkbox$_changeDetector,_material_checkbox$_root,_defaultTabIndex,role>,0_onTouched,_onChecked,_onIndeterminate,_material_checkbox$_onChange,indeterminateToChecked,disabled>,_checked,readOnly,_material_checkbox$_focused,_isKeyboardEvent,_checkedStr,_indeterminate,_material_checkbox$_icon,0themeColor,0label>,0focusDelegate",
      writeValue$1: function(_, isChecked) {
        H.boolTypeCheck(isChecked);
        if (isChecked == null)
          return;
        this._setStates$2$checked$emitEvent(isChecked, false);
      },
      registerOnChange$1: function(callback) {
        var t1 = this._onChecked;
        new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new B.MaterialCheckboxComponent_registerOnChange_closure(H.functionTypeCheck(callback, {func: 1, args: [P.bool], named: {rawValue: P.String}})));
      },
      registerOnTouched$1: function(callback) {
        this._onTouched = H.functionTypeCheck(callback, {func: 1});
      },
      get$tabIndex: function(_) {
        return this.disabled ? "-1" : this._defaultTabIndex;
      },
      set$checked: function(_, newValue) {
        if (this._checked === newValue)
          return;
        this._setStates$1$checked(newValue);
      },
      _setStates$3$checked$emitEvent$indeterminate: function(checked, emitEvent, indeterminate) {
        var prevChecked, prevState, t1;
        prevChecked = this._checked;
        prevState = this._checkedStr;
        this._checked = checked;
        this._indeterminate = false;
        t1 = checked ? "true" : "false";
        this._checkedStr = t1;
        t1 = checked ? C.Icon_check_box : C.Icon_check_box_outline_blank;
        this._material_checkbox$_icon = t1;
        if (emitEvent && checked !== prevChecked)
          this._onChecked.add$1(0, checked);
        if (this._checkedStr !== prevState) {
          this._syncAriaChecked$0();
          this._material_checkbox$_onChange.add$1(0, this._checkedStr);
        }
      },
      _setStates$1$checked: function(checked) {
        return this._setStates$3$checked$emitEvent$indeterminate(checked, true, false);
      },
      _setStates$0: function() {
        return this._setStates$3$checked$emitEvent$indeterminate(false, true, false);
      },
      _setStates$2$checked$emitEvent: function(checked, emitEvent) {
        return this._setStates$3$checked$emitEvent$indeterminate(checked, emitEvent, false);
      },
      _syncAriaChecked$0: function() {
        var t1 = this._material_checkbox$_root;
        if (t1 == null)
          return;
        J.setAttribute$2$x(t1, "aria-checked", this._checkedStr);
        this._material_checkbox$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      },
      get$icon: function(_) {
        return this._material_checkbox$_icon;
      },
      toggleChecked$0: function() {
        if (this.disabled || false)
          return;
        var t1 = this._checked;
        if (!t1)
          this._setStates$1$checked(true);
        else
          this._setStates$0();
      },
      focus$0: function(_) {
        if (this.disabled)
          return;
        this._isKeyboardEvent = true;
        this._material_checkbox$_root.focus();
      },
      handleKeyUp$1: [function($event) {
        var t1, t2;
        t1 = W._convertNativeToDart_EventTarget(H.interceptedTypeCheck($event, "$isKeyboardEvent").target);
        t2 = this._material_checkbox$_root;
        if (t1 == null ? t2 != null : t1 !== t2)
          return;
        this._isKeyboardEvent = true;
      }, "call$1", "get$handleKeyUp", 4, 0, 16],
      handleClick$1: [function(mouseEvent) {
        H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
        if (this.disabled)
          return;
        this._isKeyboardEvent = false;
        this.toggleChecked$0();
      }, "call$1", "get$handleClick", 4, 0, 18],
      handleMouseDown$1: [function(mouseEvent) {
        H.interceptedTypeCheck(mouseEvent, "$isMouseEvent");
      }, "call$1", "get$handleMouseDown", 4, 0, 18],
      handleKeyPress$1: [function($event) {
        var t1, t2;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if (this.disabled)
          return;
        t1 = W._convertNativeToDart_EventTarget($event.target);
        t2 = this._material_checkbox$_root;
        if (t1 == null ? t2 != null : t1 !== t2)
          return;
        if (Z.isSpaceKey($event)) {
          $event.preventDefault();
          this._isKeyboardEvent = true;
          this.toggleChecked$0();
        }
      }, "call$1", "get$handleKeyPress", 4, 0, 16],
      handleFocus$1: [function(_) {
        this._material_checkbox$_focused = true;
      }, "call$1", "get$handleFocus", 4, 0, 1],
      handleBlur$1: [function($event) {
        var t1;
        H.interceptedTypeCheck($event, "$isEvent");
        this._material_checkbox$_focused = false;
        t1 = this._onTouched;
        if (!(t1 == null))
          t1.call$0();
      }, "call$1", "get$handleBlur", 4, 0, 33],
      onDisabledChanged$1: [function(isDisabled) {
        this.disabled = H.boolTypeCheck(isDisabled);
        this._material_checkbox$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      }, "call$1", "get$onDisabledChanged", 4, 0, 21, 24],
      $isFocusable: 1,
      $isControlValueAccessor: 1,
      $asControlValueAccessor: function() {
        return [P.bool];
      }
    },
    MaterialCheckboxComponent_registerOnChange_closure: {
      "^": "Closure:8;callback",
      call$1: [function(checked) {
        return this.callback.call$1(H.boolTypeCheck(checked));
      }, null, null, 4, 0, null, 58, "call"]
    }
  }], ["asset_angular_components_lib_material_checkbox_material_checkbox.scss.css.shim.dart", "package:angular_components/material_checkbox/material_checkbox.scss.css.shim.dart",, F, {}], ["", "package:angular_components/material_checkbox/material_checkbox.template.dart",, G, {
    "^": "",
    viewFactory_MaterialCheckboxComponent1: [function(parentView, parentIndex) {
      var t1 = new G._ViewMaterialCheckboxComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, B.MaterialCheckboxComponent));
      t1.componentType = $.ViewMaterialCheckboxComponent0__renderType;
      return t1;
    }, "call$2", "material_checkbox_template__viewFactory_MaterialCheckboxComponent1$closure", 8, 0, 229],
    ViewMaterialCheckboxComponent0: {
      "^": "AppView;0_material_checkbox_template$_compView_1,0_material_checkbox_template$_MaterialIconComponent_1_5,0_material_checkbox_template$_appEl_2,0_material_checkbox_template$_NgIf_2_9,0_material_checkbox_template$_expr_0,0_material_checkbox_template$_expr_1,0_material_checkbox_template$_expr_2,0_material_checkbox_template$_expr_3,0_material_checkbox_template$_expr_5,0_material_checkbox_template$_expr_6,0_material_checkbox_template$_expr_8,0_material_checkbox_template$_expr_9,0_material_checkbox_template$_expr_10,0_material_checkbox_template$_el_0,0_material_checkbox_template$_el_1,0_text_4,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, doc, t1, t2, _anchor_2, _el_3, t3, t4;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._material_checkbox_template$_el_0 = t1;
        t1.className = "icon-container";
        this.addShimC$1(t1);
        t1 = M.ViewMaterialIconComponent0$(this, 1);
        this._material_checkbox_template$_compView_1 = t1;
        t1 = t1.rootEl;
        this._material_checkbox_template$_el_1 = t1;
        t2 = this._material_checkbox_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, t1);
        J.setAttribute$2$x(this._material_checkbox_template$_el_1, "aria-hidden", "true");
        t1 = this._material_checkbox_template$_el_1;
        t1.className = "icon";
        this.addShimC$1(t1);
        t1 = new Y.MaterialIconComponent(this._material_checkbox_template$_el_1);
        this._material_checkbox_template$_MaterialIconComponent_1_5 = t1;
        this._material_checkbox_template$_compView_1.create$2(0, t1, []);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t1 = this._material_checkbox_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _anchor_2);
        t1 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._material_checkbox_template$_appEl_2 = t1;
        this._material_checkbox_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, G.material_checkbox_template__viewFactory_MaterialCheckboxComponent1$closure()), t1, false);
        _el_3 = S.createDivAndAppend(doc, parentRenderNode);
        _el_3.className = "content";
        this.addShimC$1(_el_3);
        t1 = doc.createTextNode("");
        this._text_4 = t1;
        (_el_3 && C.DivElement_methods).append$1(_el_3, t1);
        C.DivElement_methods.append$1(_el_3, doc.createTextNode(" "));
        this.project$2(_el_3, 0);
        this.init$2(C.List_empty, null);
        t1 = W.Event;
        t2 = W.KeyboardEvent;
        t3 = J.getInterceptor$x(_rootEl);
        t3.addEventListener$2(_rootEl, "keyup", this.eventHandler1$2$1(_ctx.get$handleKeyUp(), t1, t2));
        t4 = W.MouseEvent;
        t3.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t1, t4));
        t3.addEventListener$2(_rootEl, "mousedown", this.eventHandler1$2$1(_ctx.get$handleMouseDown(), t1, t4));
        t3.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t1, t2));
        t3.addEventListener$2(_rootEl, "focus", this.eventHandler1$2$1(_ctx.get$handleFocus(), t1, t1));
        t3.addEventListener$2(_rootEl, "blur", this.eventHandler1$2$1(_ctx.get$handleBlur(), t1, t1));
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_3, t1, changed, currVal_0, currVal_2;
        _ctx = this.ctx;
        currVal_3 = _ctx._material_checkbox$_icon;
        t1 = this._material_checkbox_template$_expr_3;
        if (t1 !== currVal_3) {
          this._material_checkbox_template$_MaterialIconComponent_1_5.set$icon(0, currVal_3);
          this._material_checkbox_template$_expr_3 = currVal_3;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_checkbox_template$_compView_1.viewData.set$cdMode(1);
        this._material_checkbox_template$_NgIf_2_9.set$ngIf(!_ctx.disabled);
        this._material_checkbox_template$_appEl_2.detectChangesInNestedViews$0();
        currVal_0 = _ctx._material_checkbox$_focused && _ctx._isKeyboardEvent;
        t1 = this._material_checkbox_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateClass$3(this._material_checkbox_template$_el_0, "focus", currVal_0);
          this._material_checkbox_template$_expr_0 = currVal_0;
        }
        if (!_ctx._checked) {
          _ctx._indeterminate;
          currVal_2 = false;
        } else
          currVal_2 = true;
        t1 = this._material_checkbox_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateElemClass$3(this._material_checkbox_template$_el_1, "filled", currVal_2);
          this._material_checkbox_template$_expr_2 = currVal_2;
        }
        _ctx.label;
        t1 = this._material_checkbox_template$_expr_5;
        if (t1 !== "") {
          this._text_4.textContent = "";
          this._material_checkbox_template$_expr_5 = "";
        }
        this._material_checkbox_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_checkbox_template$_appEl_2.destroyNestedViews$0();
        this._material_checkbox_template$_compView_1.destroy$0();
      },
      $asAppView: function() {
        return [B.MaterialCheckboxComponent];
      }
    },
    _ViewMaterialCheckboxComponent1: {
      "^": "AppView;0_material_checkbox_template$_compView_0,0_MaterialRippleComponent_0_5,0_material_checkbox_template$_expr_0,0_material_checkbox_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1 = L.ViewMaterialRippleComponent0$(this, 0);
        this._material_checkbox_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_checkbox_template$_el_0 = t1;
        t1.className = "ripple";
        this.addShimC$1(t1);
        t1 = B.MaterialRippleComponent$(this._material_checkbox_template$_el_0);
        this._MaterialRippleComponent_0_5 = t1;
        this._material_checkbox_template$_compView_0.create$2(0, t1, []);
        this.init0$1(this._material_checkbox_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1;
        _ctx = this.ctx;
        currVal_0 = _ctx._checked ? _ctx.themeColor : "";
        t1 = this._material_checkbox_template$_expr_0;
        if (t1 != currVal_0) {
          t1 = this._material_checkbox_template$_el_0.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "color"), currVal_0, null);
          this._material_checkbox_template$_expr_0 = currVal_0;
        }
        this._material_checkbox_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_checkbox_template$_compView_0.destroy$0();
        this._MaterialRippleComponent_0_5.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [B.MaterialCheckboxComponent];
      }
    }
  }], ["", "package:angular_components/material_dialog/material_dialog.dart",, D, {
    "^": "",
    MaterialDialogComponent: {
      "^": "_MaterialDialogComponent_Object_KeyboardHandlerMixin;_rootElement,_material_dialog$_domService,_material_dialog$_changeDetector,_material_dialog$_modal,_material_dialog$_disposer,0_mainElement,_shouldShowHeader,_shouldShowFooter,shouldShowTopScrollStroke,shouldShowBottomScrollStroke,_isInFullscreenModeStreamController,0_isInFullscreenMode,_shouldListenForFullscreenChanges,0escapeHandler,0error,shouldShowScrollStrokes,KeyboardHandlerMixin_isRtl",
      set$escapeHandler: function(escapeHandler) {
        this.escapeHandler = H.functionTypeCheck(escapeHandler, {func: 1, ret: -1, args: [W.KeyboardEvent]});
      },
      set$main: function(element) {
        var t1, t2, t3;
        this._mainElement = element;
        t1 = this._material_dialog$_disposer;
        t2 = J.get$onScroll$x(element);
        t3 = H.getTypeArgumentByIndex(t2, 0);
        t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t2._html$_target, t2._eventType, H.functionTypeCheck(new D.MaterialDialogComponent_main_closure(this), {func: 1, ret: -1, args: [t3]}), false, t3), W.Event);
        t2 = this._material_dialog$_modal;
        if (t2 == null)
          return;
        t2 = t2._onOpen;
        t1.addStreamSubscription$1$1(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new D.MaterialDialogComponent_main_closure0(this)), [L.AsyncAction,,]);
      },
      _setHeaderFooterScrollBorder$0: function() {
        this._material_dialog$_disposer.addDisposable$1$1(this._material_dialog$_domService.scheduleRead$1(new D.MaterialDialogComponent__setHeaderFooterScrollBorder_closure(this)), R.Disposable);
      },
      _defaultEscapeHandler$1: [function($event) {
        var t1 = this._material_dialog$_modal;
        if (t1 != null) {
          $event.preventDefault();
          t1.close$0(0);
        }
      }, "call$1", "get$_defaultEscapeHandler", 4, 0, 16],
      ngAfterContentChecked$0: function() {
        this._setHeaderFooterScrollBorder$0();
      },
      static: {
        MaterialDialogComponent$: function(_rootElement, _domService, _changeDetector, _modal) {
          var t1 = new D.MaterialDialogComponent(_rootElement, _domService, _changeDetector, _modal, new R.Disposer(true, false), true, true, false, false, P.StreamController_StreamController(null, null, null, null, false, P.bool), false, true, null);
          t1.set$escapeHandler(t1.get$_defaultEscapeHandler());
          return t1;
        }
      }
    },
    MaterialDialogComponent_main_closure: {
      "^": "Closure:13;$this",
      call$1: function(_) {
        this.$this._setHeaderFooterScrollBorder$0();
      }
    },
    MaterialDialogComponent_main_closure0: {
      "^": "Closure:107;$this",
      call$1: [function(_) {
        H.interceptedTypeCheck(_, "$isAsyncAction");
        this.$this._setHeaderFooterScrollBorder$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialDialogComponent__setHeaderFooterScrollBorder_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1, t2, shouldShowTopScrollStroke, t3, t4, shouldShowBottomScrollStroke;
        t1 = this.$this;
        t2 = t1._mainElement;
        shouldShowTopScrollStroke = C.JSNumber_methods.round$0(t2.scrollTop) > 0 && true;
        t3 = t2.clientHeight;
        t4 = C.JSNumber_methods.round$0(t2.scrollHeight);
        if (typeof t3 !== "number")
          return t3.$lt();
        shouldShowBottomScrollStroke = t3 < t4 && C.JSNumber_methods.round$0(t2.scrollTop) < C.JSNumber_methods.round$0(t2.scrollHeight) - t3;
        if (shouldShowTopScrollStroke !== t1.shouldShowTopScrollStroke || shouldShowBottomScrollStroke !== t1.shouldShowBottomScrollStroke) {
          t1.shouldShowTopScrollStroke = shouldShowTopScrollStroke;
          t1.shouldShowBottomScrollStroke = shouldShowBottomScrollStroke;
          t1 = t1._material_dialog$_changeDetector.appView;
          t1.markPathToRootAsCheckOnce$0();
          t1.detectChanges$0();
        }
      }
    },
    _MaterialDialogComponent_Object_KeyboardHandlerMixin: {
      "^": "Object+KeyboardHandlerMixin;"
    }
  }], ["asset_angular_components_lib_material_dialog_material_dialog.scss.css.shim.dart", "package:angular_components/material_dialog/material_dialog.scss.css.shim.dart",, F, {}], ["", "package:angular_components/material_dialog/material_dialog.template.dart",, Z, {
    "^": "",
    viewFactory_MaterialDialogComponent1: [function(parentView, parentIndex) {
      var t1 = new Z._ViewMaterialDialogComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, D.MaterialDialogComponent));
      t1.componentType = $.ViewMaterialDialogComponent0__renderType;
      return t1;
    }, "call$2", "material_dialog_template__viewFactory_MaterialDialogComponent1$closure", 8, 0, 66],
    viewFactory_MaterialDialogComponent2: [function(parentView, parentIndex) {
      var t1 = new Z._ViewMaterialDialogComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, D.MaterialDialogComponent));
      t1.componentType = $.ViewMaterialDialogComponent0__renderType;
      return t1;
    }, "call$2", "material_dialog_template__viewFactory_MaterialDialogComponent2$closure", 8, 0, 66],
    ViewMaterialDialogComponent0: {
      "^": "AppView;0_material_dialog_template$_compView_0,0_FocusTrapComponent_0_5,0_material_dialog_template$_appEl_2,0_material_dialog_template$_NgIf_2_9,0_material_dialog_template$_appEl_6,0_material_dialog_template$_NgIf_6_9,0_material_dialog_template$_expr_1,0_material_dialog_template$_expr_2,0_material_dialog_template$_expr_3,0_material_dialog_template$_expr_4,0_material_dialog_template$_el_3,0_material_dialog_template$_text_4,0_el_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _el_0, doc, _el_1, _anchor_2, t2, t3, t4, _anchor_6;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = B.ViewFocusTrapComponent0$(this, 0);
        this._material_dialog_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.append$1$x(parentRenderNode, _el_0);
        this.addShimC$1(_el_0);
        this._FocusTrapComponent_0_5 = new G.FocusTrapComponent(new R.Disposer(true, false));
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "wrapper";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(_el_1);
        t2.append$1(_el_1, _anchor_2);
        t3 = new V.ViewContainer(2, 1, this, _anchor_2);
        this._material_dialog_template$_appEl_2 = t3;
        this._material_dialog_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t3, Z.material_dialog_template__viewFactory_MaterialDialogComponent1$closure()), t3, false);
        t3 = S.createDivAndAppend(doc, _el_1);
        this._material_dialog_template$_el_3 = t3;
        t3.className = "error";
        this.addShimC$1(t3);
        t3 = doc.createTextNode("");
        this._material_dialog_template$_text_4 = t3;
        t4 = this._material_dialog_template$_el_3;
        (t4 && C.DivElement_methods).append$1(t4, t3);
        t3 = S.createAndAppend(doc, "main", _el_1);
        this._el_5 = t3;
        this.addShimE$1(t3);
        this.project$2(this._el_5, 1);
        _anchor_6 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_1, _anchor_6);
        t2 = new V.ViewContainer(6, 1, this, _anchor_6);
        this._material_dialog_template$_appEl_6 = t2;
        this._material_dialog_template$_NgIf_6_9 = new K.NgIf(new D.TemplateRef(t2, Z.material_dialog_template__viewFactory_MaterialDialogComponent2$closure()), t2, false);
        this._material_dialog_template$_compView_0.create$2(0, this._FocusTrapComponent_0_5, [H.setRuntimeTypeInfo([_el_1], [W.Element])]);
        J.addEventListener$2$x(_el_0, "keyup", this.eventHandler1$2$1(J.get$onKeyUp$x(this.ctx), W.Event, W.KeyboardEvent));
        this.ctx.set$main(H.interceptedTypeCheck(this._el_5, "$isHtmlElement"));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_3, currVal_4;
        _ctx = this.ctx;
        t1 = this._material_dialog_template$_NgIf_2_9;
        _ctx._shouldShowHeader;
        t1.set$ngIf(true);
        t1 = this._material_dialog_template$_NgIf_6_9;
        _ctx._shouldShowFooter;
        t1.set$ngIf(true);
        this._material_dialog_template$_appEl_2.detectChangesInNestedViews$0();
        this._material_dialog_template$_appEl_6.detectChangesInNestedViews$0();
        _ctx.error;
        t1 = this._material_dialog_template$_expr_1;
        if (t1 !== false) {
          this.updateClass$3(this._material_dialog_template$_el_3, "expanded", false);
          this._material_dialog_template$_expr_1 = false;
        }
        t1 = this._material_dialog_template$_expr_2;
        if (t1 !== "") {
          this._material_dialog_template$_text_4.textContent = "";
          this._material_dialog_template$_expr_2 = "";
        }
        currVal_3 = _ctx.shouldShowTopScrollStroke;
        t1 = this._material_dialog_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_5, "$isHtmlElement"), "top-scroll-stroke", currVal_3);
          this._material_dialog_template$_expr_3 = currVal_3;
        }
        currVal_4 = _ctx.shouldShowBottomScrollStroke;
        t1 = this._material_dialog_template$_expr_4;
        if (t1 !== currVal_4) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_5, "$isHtmlElement"), "bottom-scroll-stroke", currVal_4);
          this._material_dialog_template$_expr_4 = currVal_4;
        }
        this._material_dialog_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_dialog_template$_appEl_2.destroyNestedViews$0();
        this._material_dialog_template$_appEl_6.destroyNestedViews$0();
        this._material_dialog_template$_compView_0.destroy$0();
        this._FocusTrapComponent_0_5._focus_trap$_disposer.dispose$0();
      },
      $asAppView: function() {
        return [D.MaterialDialogComponent];
      },
      static: {
        ViewMaterialDialogComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new Z.ViewMaterialDialogComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, D.MaterialDialogComponent));
          t2 = document.createElement("material-dialog");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialDialogComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialDialogComponent());
            $.ViewMaterialDialogComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewMaterialDialogComponent1: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _el_0 = document.createElement("header");
        this.addShimE$1(_el_0);
        this.project$2(_el_0, 0);
        this.init0$1(_el_0);
      },
      $asAppView: function() {
        return [D.MaterialDialogComponent];
      }
    },
    _ViewMaterialDialogComponent2: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _el_0 = document.createElement("footer");
        this.addShimE$1(_el_0);
        this.project$2(_el_0, 2);
        this.init0$1(_el_0);
      },
      $asAppView: function() {
        return [D.MaterialDialogComponent];
      }
    }
  }], ["", "package:angular_components/material_expansionpanel/material_expansionpanel.dart",, T, {
    "^": "",
    MaterialExpansionPanel: {
      "^": "Object;_material_expansionpanel$_ngZone,_material_expansionpanel$_changeDetector<,_material_expansionpanel$_domService,_material_expansionpanel$_disposer,_defaultExpandIcon,shouldExpandOnLeft,initialized,0autoFocusChild,0_mainPanel,0_headerPanel,0_mainContent,0_headerContent,0_actionContent,0_contentWrapper,closeOnSave<,_isExpanded<,_isExpandedChange<,_isExpandedChangeByUserAction,_anotherExpanded,_material_expansionpanel$_disabled,saveDisabled,_activeSaveCancelAction,hideExpandedHeader,disableHeaderExpansion,0name>,0secondaryText,0_expandIcon,alwaysShowExpandIcon,alwaysHideExpandIcon,showSaveCancel,cancelDisplayed,enterAccepts,saveText,cancelText,_openController<,_closeController<,_saveController<,_cancelController<,0_expandCollapseButton",
      set$_anotherExpanded: function(_anotherExpanded) {
        this._anotherExpanded = H.boolTypeCheck(_anotherExpanded);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      },
      set$mainPanel: function(mainPanel) {
        var t1;
        this._mainPanel = mainPanel;
        mainPanel.toString;
        t1 = W.TransitionEvent;
        this._material_expansionpanel$_disposer.addStreamSubscription$1$1(W._EventStreamSubscription$(mainPanel, H.stringTypeCheck(W.Element__determineTransitionEventType(mainPanel)), H.functionTypeCheck(new T.MaterialExpansionPanel_mainPanel_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1), t1);
      },
      set$headerPanel: function(headerPanel) {
        var t1;
        this._headerPanel = headerPanel;
        headerPanel.toString;
        t1 = W.TransitionEvent;
        this._material_expansionpanel$_disposer.addStreamSubscription$1$1(W._EventStreamSubscription$(headerPanel, H.stringTypeCheck(W.Element__determineTransitionEventType(headerPanel)), H.functionTypeCheck(new T.MaterialExpansionPanel_headerPanel_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1), t1);
      },
      set$mainContent: function(mainContent) {
        this._mainContent = mainContent;
        return mainContent;
      },
      set$headerContent: function(headerContent) {
        this._headerContent = headerContent;
        return headerContent;
      },
      set$actionContent: function(headerContent) {
        H.interceptedTypeCheck(headerContent, "$isHtmlElement");
        this._actionContent = headerContent;
        return headerContent;
      },
      set$contentWrapper: function(contentWrapper) {
        this._contentWrapper = contentWrapper;
      },
      set$isExpanded: function(value) {
        H.boolTypeCheck(value);
        if (value === this._isExpanded)
          return;
        if (value)
          this.expand$1$byUserAction(0, false);
        else
          this.collapse$1$byUserAction(0, false);
      },
      get$contentVisible: function() {
        var t1 = this._isExpandedChange;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      get$disabled: function(_) {
        return this._material_expansionpanel$_disabled;
      },
      get$expandIcon: function() {
        return this._defaultExpandIcon;
      },
      get$shouldShowExpandIcon: function() {
        return this.get$expandIcon() !== this._defaultExpandIcon && this._isExpanded ? false : !this._material_expansionpanel$_disabled;
      },
      get$shouldShowHiddenHeaderExpandIcon: function() {
        this.get$expandIcon() !== this._defaultExpandIcon || false;
        return false;
      },
      get$closePanelMsg: function() {
        var t1, t2;
        t1 = this.name;
        if (t1 == null)
          t1 = $.$get$MaterialExpansionPanel__closePanelMsg();
        else {
          t2 = "Close " + t1 + " panel";
          t1 = $.$get$messageLookup().lookupMessage$5(t2, null, "_closeNamedPanelMsg", [t1], null);
        }
        return t1;
      },
      get$headerMsg: function() {
        var t1, t2;
        if (this._material_expansionpanel$_disabled)
          return this.name;
        else {
          if (this._isExpanded)
            t1 = this.get$closePanelMsg();
          else {
            t1 = this.name;
            if (t1 == null)
              t1 = $.$get$MaterialExpansionPanel__openPanelMsg();
            else {
              t2 = "Open " + t1 + " panel";
              t1 = $.$get$messageLookup().lookupMessage$5(t2, null, "_openNamedPanelMsg", [t1], null);
            }
          }
          return t1;
        }
      },
      get$close: function(_) {
        var t1 = this._closeController;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      handleHeaderClick$0: [function() {
        if (this._isExpanded)
          this.collapse$0(0);
        else
          this.expand$0(0);
      }, "call$0", "get$handleHeaderClick", 0, 0, 2],
      handleExpandIconClick$0: [function() {
      }, "call$0", "get$handleExpandIconClick", 0, 0, 2],
      ngOnInit$0: function() {
        var t1 = this._isExpandedChangeByUserAction;
        this._material_expansionpanel$_disposer.addStreamSubscription$1$1(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new T.MaterialExpansionPanel_ngOnInit_closure(this)), P.bool);
        this.initialized = true;
      },
      set$expandCollapse: function(button) {
        this._expandCollapseButton = H.interceptedTypeCheck(button, "$isButtonDirective");
      },
      expand$1$byUserAction: function(_, byUserAction) {
        var t1;
        if (this._material_expansionpanel$_disabled && byUserAction) {
          t1 = new P._Future(0, $.Zone__current, [P.bool]);
          t1._asyncComplete$1(false);
          return t1;
        }
        return this.changeState$3(true, byUserAction, this._openController);
      },
      expand$0: function($receiver) {
        return this.expand$1$byUserAction($receiver, true);
      },
      collapse$1$byUserAction: [function(_, byUserAction) {
        var t1;
        H.boolTypeCheck(byUserAction);
        if (this._material_expansionpanel$_disabled && byUserAction) {
          t1 = new P._Future(0, $.Zone__current, [P.bool]);
          t1._asyncComplete$1(false);
          return t1;
        }
        return this.changeState$3(false, byUserAction, this._closeController);
      }, function($receiver) {
        return this.collapse$1$byUserAction($receiver, true);
      }, "collapse$0", "call$1$byUserAction", "call$0", "get$collapse", 1, 3, 108, 32, 59],
      doSave$0: [function() {
        var t1, t2, t3, t4, actionCtrl;
        t1 = P.bool;
        t2 = $.Zone__current;
        t3 = [t1];
        t4 = [t1];
        actionCtrl = new Z.AsyncActionController(new P._AsyncCompleter(new P._Future(0, t2, t3), t4), new P._AsyncCompleter(new P._Future(0, t2, t3), t4), H.setRuntimeTypeInfo([], [[P.Future,,]]), H.setRuntimeTypeInfo([], [[P.Future, P.bool]]), false, false, false, [t1]);
        this._saveController.add$1(0, actionCtrl.get$action(actionCtrl));
        this._activeSaveCancelAction = true;
        this._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        actionCtrl.execute$2$valueOnCancel(new T.MaterialExpansionPanel_doSave_closure(this, this.initialized), false);
        return actionCtrl.get$action(actionCtrl)._async_action$_onDone.then$1$1(new T.MaterialExpansionPanel_doSave_closure0(this), t1);
      }, "call$0", "get$doSave", 0, 0, 41],
      doCancel$0: [function() {
        var t1, t2, t3, t4, actionCtrl;
        t1 = P.bool;
        t2 = $.Zone__current;
        t3 = [t1];
        t4 = [t1];
        actionCtrl = new Z.AsyncActionController(new P._AsyncCompleter(new P._Future(0, t2, t3), t4), new P._AsyncCompleter(new P._Future(0, t2, t3), t4), H.setRuntimeTypeInfo([], [[P.Future,,]]), H.setRuntimeTypeInfo([], [[P.Future, P.bool]]), false, false, false, [t1]);
        this._cancelController.add$1(0, actionCtrl.get$action(actionCtrl));
        this._activeSaveCancelAction = true;
        this._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        actionCtrl.execute$2$valueOnCancel(new T.MaterialExpansionPanel_doCancel_closure(this, this.initialized), false);
        return actionCtrl.get$action(actionCtrl)._async_action$_onDone.then$1$1(new T.MaterialExpansionPanel_doCancel_closure0(this), t1);
      }, "call$0", "get$doCancel", 0, 0, 41],
      changeState$3: function(expand, byUserAction, stream) {
        var t1, t2, t3, t4, actionCtrl;
        if (this._isExpanded === expand) {
          t1 = new P._Future(0, $.Zone__current, [P.bool]);
          t1._asyncComplete$1(true);
          return t1;
        }
        t1 = P.bool;
        t2 = $.Zone__current;
        t3 = [t1];
        t4 = [t1];
        actionCtrl = new Z.AsyncActionController(new P._AsyncCompleter(new P._Future(0, t2, t3), t4), new P._AsyncCompleter(new P._Future(0, t2, t3), t4), H.setRuntimeTypeInfo([], [[P.Future,,]]), H.setRuntimeTypeInfo([], [[P.Future, P.bool]]), false, false, false, [t1]);
        stream.add$1(0, actionCtrl.get$action(actionCtrl));
        actionCtrl.execute$2$valueOnCancel(new T.MaterialExpansionPanel_changeState_closure(this, expand, byUserAction, this.initialized), false);
        return actionCtrl.get$action(actionCtrl)._async_action$_onDone;
      },
      _transitionHeightChange$1: function(expand) {
        var t1, t2;
        t1 = this._mainPanel;
        t2 = t1.style;
        t1 = "" + C.JSNumber_methods.round$0(t1.scrollHeight) + "px";
        t2.height = t1;
        if (expand)
          this._readExpandedPanelHeight$0().then$1$1(new T.MaterialExpansionPanel__transitionHeightChange_closure(this), null);
        else
          this._material_expansionpanel$_domService.get$nextFrame().then$1$1(new T.MaterialExpansionPanel__transitionHeightChange_closure0(this), P.String);
      },
      _readExpandedPanelHeight$0: function() {
        var t1, t2;
        t1 = P.String;
        t2 = new P._Future(0, $.Zone__current, [t1]);
        this._material_expansionpanel$_domService.scheduleRead$1(new T.MaterialExpansionPanel__readExpandedPanelHeight_closure(this, new P._AsyncCompleter(t2, [t1])));
        return t2;
      },
      close$0: function($receiver) {
        return this.get$close(this).call$0();
      },
      $isDeferredContentAware: 1
    },
    MaterialExpansionPanel_mainPanel_closure: {
      "^": "Closure:72;$this",
      call$1: function(_) {
        var t1;
        H.interceptedTypeCheck(_, "$isTransitionEvent");
        t1 = this.$this._mainPanel.style;
        t1.height = "";
      }
    },
    MaterialExpansionPanel_headerPanel_closure: {
      "^": "Closure:72;$this",
      call$1: function(_) {
        var t1;
        H.interceptedTypeCheck(_, "$isTransitionEvent");
        t1 = this.$this._headerPanel.style;
        t1.height = "";
      }
    },
    MaterialExpansionPanel_ngOnInit_closure: {
      "^": "Closure:29;$this",
      call$1: [function(_) {
        var t1, t2;
        H.boolTypeCheck(_);
        t1 = this.$this;
        t2 = t1._material_expansionpanel$_ngZone._onMicrotaskEmpty;
        t2 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]);
        t2.get$first(t2).then$1$1(new T.MaterialExpansionPanel_ngOnInit__closure(t1), null);
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialExpansionPanel_ngOnInit__closure: {
      "^": "Closure:111;$this",
      call$1: [function(_) {
        var t1 = this.$this._expandCollapseButton;
        if (!(t1 == null))
          t1.focus$0(0);
      }, function() {
        return this.call$1(null);
      }, "call$0", null, null, null, 0, 2, null, 3, 0, "call"]
    },
    MaterialExpansionPanel_doSave_closure: {
      "^": "Closure:6;$this,stateWasInitialized",
      call$0: function() {
        var t1 = this.$this;
        if (t1.closeOnSave) {
          t1._isExpanded = false;
          t1._isExpandedChange.add$1(0, false);
          t1._isExpandedChangeByUserAction.add$1(0, false);
          t1._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
          if (this.stateWasInitialized)
            t1._transitionHeightChange$1(false);
        }
        return true;
      }
    },
    MaterialExpansionPanel_doSave_closure0: {
      "^": "Closure:32;$this",
      call$1: [function(result) {
        var t1;
        H.boolTypeCheck(result);
        t1 = this.$this;
        t1._activeSaveCancelAction = false;
        t1._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        return result;
      }, null, null, 4, 0, null, 7, "call"]
    },
    MaterialExpansionPanel_doCancel_closure: {
      "^": "Closure:6;$this,stateWasInitialized",
      call$0: function() {
        var t1 = this.$this;
        t1._isExpanded = false;
        t1._isExpandedChange.add$1(0, false);
        t1._isExpandedChangeByUserAction.add$1(0, false);
        t1._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        if (this.stateWasInitialized)
          t1._transitionHeightChange$1(false);
        return true;
      }
    },
    MaterialExpansionPanel_doCancel_closure0: {
      "^": "Closure:32;$this",
      call$1: [function(result) {
        var t1;
        H.boolTypeCheck(result);
        t1 = this.$this;
        t1._activeSaveCancelAction = false;
        t1._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        return result;
      }, null, null, 4, 0, null, 7, "call"]
    },
    MaterialExpansionPanel_changeState_closure: {
      "^": "Closure:6;$this,expand,byUserAction,stateWasInitialized",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = this.expand;
        t1._isExpanded = t2;
        t1._isExpandedChange.add$1(0, t2);
        if (this.byUserAction)
          t1._isExpandedChangeByUserAction.add$1(0, t2);
        t1._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        if (this.stateWasInitialized)
          t1._transitionHeightChange$1(t2);
        return true;
      }
    },
    MaterialExpansionPanel__transitionHeightChange_closure: {
      "^": "Closure:26;$this",
      call$1: [function(expandedPanelHeight) {
        var t1;
        H.stringTypeCheck(expandedPanelHeight);
        t1 = this.$this._mainPanel.style;
        t1.toString;
        t1.height = expandedPanelHeight == null ? "" : expandedPanelHeight;
      }, null, null, 4, 0, null, 91, "call"]
    },
    MaterialExpansionPanel__transitionHeightChange_closure0: {
      "^": "Closure:113;$this",
      call$1: [function(_) {
        var t1;
        H.numTypeCheck(_);
        t1 = this.$this._mainPanel.style;
        t1.height = "";
        return "";
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialExpansionPanel__readExpandedPanelHeight_closure: {
      "^": "Closure:0;$this,completeExpandedHeight",
      call$0: function() {
        var t1, contentHeight, mainPanelStyle, topMargin, expandedPanelHeight;
        t1 = this.$this;
        contentHeight = C.JSNumber_methods.round$0(t1._mainContent.scrollHeight);
        mainPanelStyle = J.getComputedStyle$0$x(t1._mainPanel);
        if (contentHeight > 0 && C.JSString_methods.contains$1((mainPanelStyle && C.CssStyleDeclaration_methods).getPropertyValue$1(mainPanelStyle, "transition"), "height")) {
          t1 = t1._contentWrapper;
          topMargin = (t1 && C.DivElement_methods).getComputedStyle$0(t1).marginTop;
          expandedPanelHeight = "calc(" + contentHeight + "px + " + topMargin + ")";
        } else
          expandedPanelHeight = "";
        this.completeExpandedHeight.complete$1(0, expandedPanelHeight);
      }
    }
  }], ["asset_angular_components_lib_material_expansionpanel_material_expansionpanel.scss.css.shim.dart", "package:angular_components/material_expansionpanel/material_expansionpanel.scss.css.shim.dart",, A, {}], ["", "package:angular_components/material_expansionpanel/material_expansionpanel.template.dart",, D, {
    "^": "",
    viewFactory_MaterialExpansionPanel1: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel1$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel2: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel2$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel3: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel3$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel4: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel4$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel5: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel5$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel6: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel6$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel7: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel7$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel8: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel8(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel8$closure", 8, 0, 11],
    viewFactory_MaterialExpansionPanel9: [function(parentView, parentIndex) {
      var t1 = new D._ViewMaterialExpansionPanel9(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, T.MaterialExpansionPanel));
      t1.componentType = $.ViewMaterialExpansionPanel0__renderType;
      return t1;
    }, "call$2", "material_expansionpanel_template__viewFactory_MaterialExpansionPanel9$closure", 8, 0, 11],
    ViewMaterialExpansionPanel0: {
      "^": "AppView;0_KeyUpBoundaryDirective_0_5,0_ButtonDirective_2_5,0_material_expansionpanel_template$_appEl_3,0_NgIf_3_9,0_appEl_7,0_NgIf_7_9,0_appEl_9,0_NgIf_9_9,0_appEl_10,_query_action_1_4_isDirty,0_NgIf_10_9,0_material_expansionpanel_template$_appEl_14,_query_expandCollapseButton_1_6_isDirty,0_material_expansionpanel_template$_NgIf_14_9,0_appEl_16,0_NgIf_16_9,0_appEl_17,0_DeferredContentDirective_17_9,0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_expr_1,0_material_expansionpanel_template$_expr_2,0_material_expansionpanel_template$_expr_3,0_material_expansionpanel_template$_expr_4,0_material_expansionpanel_template$_expr_5,0_material_expansionpanel_template$_expr_6,0_material_expansionpanel_template$_expr_7,0_material_expansionpanel_template$_expr_8,0_material_expansionpanel_template$_expr_10,0_material_expansionpanel_template$_expr_14,0_material_expansionpanel_template$_expr_15,0_material_expansionpanel_template$_el_0,0_material_expansionpanel_template$_el_1,0_el_2,0_text_6,0_material_expansionpanel_template$_el_11,0_el_13,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, t1, t2, t3, _anchor_3, t4, _el_4, _el_5, _anchor_7, _el_8, _anchor_9, _anchor_10, _el_12, _anchor_14, _el_15, _anchor_16, _anchor_17, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._material_expansionpanel_template$_el_0 = t1;
        t1.className = "panel themeable";
        (t1 && C.DivElement_methods).setAttribute$2(t1, "keyupBoundary", "");
        t1 = this._material_expansionpanel_template$_el_0;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "role", "group");
        this.addShimC$1(this._material_expansionpanel_template$_el_0);
        t1 = this._material_expansionpanel_template$_el_0;
        t2 = W.KeyboardEvent;
        this._KeyUpBoundaryDirective_0_5 = new E.KeyUpBoundaryDirective(new W._ElementEventStreamImpl(t1, "keyup", false, [t2]));
        t1 = S.createAndAppend(doc, "header", t1);
        this._material_expansionpanel_template$_el_1 = t1;
        this.addShimE$1(t1);
        t1 = S.createDivAndAppend(doc, this._material_expansionpanel_template$_el_1);
        this._el_2 = t1;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "buttonDecorator", "");
        t1 = this._el_2;
        t1.className = "header";
        this.addShimC$1(t1);
        t1 = this._el_2;
        t3 = W.UIEvent;
        this._ButtonDirective_2_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t3]), null, false, true, null, t1), false);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_3 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t4 = this._el_2;
        (t4 && C.DivElement_methods).append$1(t4, _anchor_3);
        t4 = new V.ViewContainer(3, 2, this, _anchor_3);
        this._material_expansionpanel_template$_appEl_3 = t4;
        this._NgIf_3_9 = new K.NgIf(new D.TemplateRef(t4, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel1$closure()), t4, false);
        _el_4 = S.createDivAndAppend(doc, this._el_2);
        _el_4.className = "panel-name";
        this.addShimC$1(_el_4);
        _el_5 = S.createAndAppend(doc, "p", _el_4);
        _el_5.className = "primary-text";
        this.addShimE$1(_el_5);
        t4 = doc.createTextNode("");
        this._text_6 = t4;
        J.append$1$x(_el_5, t4);
        _anchor_7 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        (_el_4 && C.DivElement_methods).append$1(_el_4, _anchor_7);
        t4 = new V.ViewContainer(7, 4, this, _anchor_7);
        this._appEl_7 = t4;
        this._NgIf_7_9 = new K.NgIf(new D.TemplateRef(t4, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel2$closure()), t4, false);
        this.project$2(_el_4, 0);
        _el_8 = S.createDivAndAppend(doc, this._el_2);
        _el_8.className = "panel-description";
        this.addShimC$1(_el_8);
        this.project$2(_el_8, 1);
        _anchor_9 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t4 = this._el_2;
        (t4 && C.DivElement_methods).append$1(t4, _anchor_9);
        t4 = new V.ViewContainer(9, 2, this, _anchor_9);
        this._appEl_9 = t4;
        this._NgIf_9_9 = new K.NgIf(new D.TemplateRef(t4, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel3$closure()), t4, false);
        _anchor_10 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        J.append$1$x(this._material_expansionpanel_template$_el_1, _anchor_10);
        t4 = new V.ViewContainer(10, 1, this, _anchor_10);
        this._appEl_10 = t4;
        this._NgIf_10_9 = new K.NgIf(new D.TemplateRef(t4, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel4$closure()), t4, false);
        t4 = S.createAndAppend(doc, "main", this._material_expansionpanel_template$_el_0);
        this._material_expansionpanel_template$_el_11 = t4;
        this.addShimE$1(t4);
        _el_12 = S.createDivAndAppend(doc, this._material_expansionpanel_template$_el_11);
        this.addShimC$1(_el_12);
        t4 = S.createDivAndAppend(doc, _el_12);
        this._el_13 = t4;
        t4.className = "content-wrapper";
        this.addShimC$1(t4);
        _anchor_14 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t4 = this._el_13;
        (t4 && C.DivElement_methods).append$1(t4, _anchor_14);
        t4 = new V.ViewContainer(14, 13, this, _anchor_14);
        this._material_expansionpanel_template$_appEl_14 = t4;
        this._material_expansionpanel_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t4, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel5$closure()), t4, false);
        _el_15 = S.createDivAndAppend(doc, this._el_13);
        _el_15.className = "content";
        this.addShimC$1(_el_15);
        this.project$2(_el_15, 3);
        _anchor_16 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t4 = this._el_13;
        (t4 && C.DivElement_methods).append$1(t4, _anchor_16);
        t4 = new V.ViewContainer(16, 13, this, _anchor_16);
        this._appEl_16 = t4;
        this._NgIf_16_9 = new K.NgIf(new D.TemplateRef(t4, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel6$closure()), t4, false);
        _anchor_17 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        (_el_12 && C.DivElement_methods).append$1(_el_12, _anchor_17);
        t1 = new V.ViewContainer(17, 12, this, _anchor_17);
        this._appEl_17 = t1;
        t1 = K.DeferredContentDirective$(t1, new D.TemplateRef(t1, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel7$closure()), H.interceptedTypeCheck(this.parentView.injectorGet$2(C.Type_DeferredContentAware_BCk, this.viewData.parentIndex), "$isDeferredContentAware"));
        this._DeferredContentDirective_17_9 = t1;
        t1 = this._el_2;
        t4 = W.Event;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "click", this.eventHandler1$2$1(this._ButtonDirective_2_5.instance.get$handleClick(), t4, W.MouseEvent));
        t1 = this._el_2;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "keypress", this.eventHandler1$2$1(this._ButtonDirective_2_5.instance.get$handleKeyPress(), t4, t2));
        t2 = this._ButtonDirective_2_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$handleHeaderClick(), t3));
        this.ctx.set$mainPanel(H.interceptedTypeCheck(this._material_expansionpanel_template$_el_11, "$isHtmlElement"));
        this.ctx.set$headerPanel(H.interceptedTypeCheck(this._material_expansionpanel_template$_el_1, "$isHtmlElement"));
        this.ctx.set$mainContent(_el_12);
        this.ctx.set$headerContent(this._el_2);
        this.ctx.set$contentWrapper(this._el_13);
        this.init$2(C.List_empty, [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_ButtonDirective_hH0 && 2 <= nodeIndex && nodeIndex <= 9)
          return this._ButtonDirective_2_5.instance;
        if (token === C.Type_KeyUpBoundaryDirective_GF2)
          t1 = nodeIndex <= 17;
        else
          t1 = false;
        if (t1)
          return this._KeyUpBoundaryDirective_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, currVal_8, t1, t2, currVal_0, currVal_1, currVal_2, currVal_3, currVal_5, currVal_7, currVal_10, currVal_14;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        currVal_8 = _ctx._material_expansionpanel$_disabled;
        t1 = this._material_expansionpanel_template$_expr_8;
        if (t1 !== currVal_8) {
          this._ButtonDirective_2_5.instance.disabled = currVal_8;
          this._material_expansionpanel_template$_expr_8 = currVal_8;
        }
        if (firstCheck)
          this._ButtonDirective_2_5.instance.ngOnInit$0();
        t1 = this._NgIf_3_9;
        t1.set$ngIf(_ctx.get$shouldShowExpandIcon() && _ctx.shouldExpandOnLeft);
        this._NgIf_7_9.set$ngIf(false);
        t1 = this._NgIf_9_9;
        t1.set$ngIf(_ctx.get$shouldShowExpandIcon() && !_ctx.shouldExpandOnLeft);
        this._NgIf_10_9.set$ngIf(!_ctx.get$shouldShowExpandIcon());
        t1 = this._material_expansionpanel_template$_NgIf_14_9;
        t1.set$ngIf(_ctx.get$shouldShowHiddenHeaderExpandIcon() && _ctx.shouldExpandOnLeft);
        t1 = this._NgIf_16_9;
        t1.set$ngIf(_ctx.get$shouldShowHiddenHeaderExpandIcon() && !_ctx.shouldExpandOnLeft);
        if (firstCheck)
          this._DeferredContentDirective_17_9.preserveDimensions = true;
        this._material_expansionpanel_template$_appEl_3.detectChangesInNestedViews$0();
        this._appEl_7.detectChangesInNestedViews$0();
        this._appEl_9.detectChangesInNestedViews$0();
        this._appEl_10.detectChangesInNestedViews$0();
        this._material_expansionpanel_template$_appEl_14.detectChangesInNestedViews$0();
        this._appEl_16.detectChangesInNestedViews$0();
        this._appEl_17.detectChangesInNestedViews$0();
        if (this._query_action_1_4_isDirty) {
          t1 = this.ctx;
          t2 = this._appEl_10.mapNestedViews$2$1(new D.ViewMaterialExpansionPanel0_detectChangesInternal_closure(), W.HtmlElement, D._ViewMaterialExpansionPanel4);
          t1.set$actionContent(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_action_1_4_isDirty = false;
        }
        if (this._query_expandCollapseButton_1_6_isDirty) {
          t1 = this.ctx;
          t2 = T.ButtonDirective;
          t2 = Q.flattenNodes(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([this._ButtonDirective_2_5.instance], [t2]), this._material_expansionpanel_template$_appEl_14.mapNestedViews$2$1(new D.ViewMaterialExpansionPanel0_detectChangesInternal_closure0(), t2, D._ViewMaterialExpansionPanel5), this._appEl_16.mapNestedViews$2$1(new D.ViewMaterialExpansionPanel0_detectChangesInternal_closure1(), t2, D._ViewMaterialExpansionPanel6)], [[P.List, T.ButtonDirective]]), t2);
          t1.set$expandCollapse(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_expandCollapseButton_1_6_isDirty = false;
        }
        currVal_0 = _ctx.name;
        t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 != currVal_0) {
          this.setAttr$3(this._material_expansionpanel_template$_el_0, "aria-label", currVal_0);
          this._material_expansionpanel_template$_expr_0 = currVal_0;
        }
        currVal_1 = _ctx._isExpanded;
        t1 = this._material_expansionpanel_template$_expr_1;
        if (t1 !== currVal_1) {
          t1 = this._material_expansionpanel_template$_el_0;
          t2 = String(currVal_1);
          this.setAttr$3(t1, "aria-expanded", t2);
          this._material_expansionpanel_template$_expr_1 = currVal_1;
        }
        currVal_2 = _ctx._isExpanded;
        t1 = this._material_expansionpanel_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateClass$3(this._material_expansionpanel_template$_el_0, "open", currVal_2);
          this._material_expansionpanel_template$_expr_2 = currVal_2;
        }
        currVal_3 = _ctx._anotherExpanded;
        t1 = this._material_expansionpanel_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateClass$3(this._material_expansionpanel_template$_el_0, "background", currVal_3);
          this._material_expansionpanel_template$_expr_3 = currVal_3;
        }
        t1 = this._material_expansionpanel_template$_expr_4;
        if (t1 !== false) {
          this.updateClass$3(H.interceptedTypeCheck(this._material_expansionpanel_template$_el_1, "$isHtmlElement"), "hidden", false);
          this._material_expansionpanel_template$_expr_4 = false;
        }
        currVal_5 = !_ctx._isExpanded;
        t1 = this._material_expansionpanel_template$_expr_5;
        if (t1 !== currVal_5) {
          this.updateClass$3(this._el_2, "closed", currVal_5);
          this._material_expansionpanel_template$_expr_5 = currVal_5;
        }
        t1 = this._material_expansionpanel_template$_expr_6;
        if (t1 !== false) {
          this.updateClass$3(this._el_2, "disable-header-expansion", false);
          this._material_expansionpanel_template$_expr_6 = false;
        }
        currVal_7 = _ctx.get$headerMsg();
        t1 = this._material_expansionpanel_template$_expr_7;
        if (t1 != currVal_7) {
          this.setAttr$3(this._el_2, "aria-label", currVal_7);
          this._material_expansionpanel_template$_expr_7 = currVal_7;
        }
        this._ButtonDirective_2_5.detectHostChanges$2(this, this._el_2);
        currVal_10 = _ctx.name;
        if (currVal_10 == null)
          currVal_10 = "";
        t1 = this._material_expansionpanel_template$_expr_10;
        if (t1 !== currVal_10) {
          this._text_6.textContent = currVal_10;
          this._material_expansionpanel_template$_expr_10 = currVal_10;
        }
        currVal_14 = !_ctx._isExpanded;
        t1 = this._material_expansionpanel_template$_expr_14;
        if (t1 !== currVal_14) {
          this.updateClass$3(H.interceptedTypeCheck(this._material_expansionpanel_template$_el_11, "$isHtmlElement"), "hidden", currVal_14);
          this._material_expansionpanel_template$_expr_14 = currVal_14;
        }
        t1 = this._material_expansionpanel_template$_expr_15;
        if (t1 !== false) {
          this.updateClass$3(this._el_13, "hidden-header", false);
          this._material_expansionpanel_template$_expr_15 = false;
        }
      },
      destroyInternal$0: function() {
        this._material_expansionpanel_template$_appEl_3.destroyNestedViews$0();
        this._appEl_7.destroyNestedViews$0();
        this._appEl_9.destroyNestedViews$0();
        this._appEl_10.destroyNestedViews$0();
        this._material_expansionpanel_template$_appEl_14.destroyNestedViews$0();
        this._appEl_16.destroyNestedViews$0();
        this._appEl_17.destroyNestedViews$0();
        this._DeferredContentDirective_17_9.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      },
      static: {
        ViewMaterialExpansionPanel0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new D.ViewMaterialExpansionPanel0(true, true, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, T.MaterialExpansionPanel));
          t2 = document.createElement("material-expansionpanel");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialExpansionPanel0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialExpansionPanel());
            $.ViewMaterialExpansionPanel0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewMaterialExpansionPanel0_detectChangesInternal_closure: {
      "^": "Closure:114;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMaterialExpansionPanel4")._material_expansionpanel_template$_el_0], [W.HtmlElement]);
      }
    },
    ViewMaterialExpansionPanel0_detectChangesInternal_closure0: {
      "^": "Closure:115;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMaterialExpansionPanel5")._ButtonDirective_0_5.instance], [T.ButtonDirective]);
      }
    },
    ViewMaterialExpansionPanel0_detectChangesInternal_closure1: {
      "^": "Closure:116;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMaterialExpansionPanel6")._ButtonDirective_0_5.instance], [T.ButtonDirective]);
      }
    },
    _ViewMaterialExpansionPanel1: {
      "^": "AppView;0_material_expansionpanel_template$_compView_0,0_ButtonDirective_0_5,0_MaterialIconComponent_0_6,0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_expr_1,0_material_expansionpanel_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, subscription_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._material_expansionpanel_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_expansionpanel_template$_el_0 = t1;
        J.setAttribute$2$x(t1, "buttonDecorator", "");
        t1 = this._material_expansionpanel_template$_el_0;
        t1.className = "expand-button expand-on-left";
        this.addShimC$1(t1);
        t1 = this._material_expansionpanel_template$_el_0;
        t2 = W.UIEvent;
        this._ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, t1), false);
        t1 = new Y.MaterialIconComponent(t1);
        this._MaterialIconComponent_0_6 = t1;
        this._material_expansionpanel_template$_compView_0.create$2(0, t1, []);
        t1 = W.Event;
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "click", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleClick(), t1, W.MouseEvent));
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "keypress", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleKeyPress(), t1, W.KeyboardEvent));
        t1 = this._ButtonDirective_0_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$handleExpandIconClick(), t2));
        this.init$2([this._material_expansionpanel_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_ButtonDirective_hH0 && 0 === nodeIndex)
          return this._ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1, changed, currVal_0;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        if (t1 === 0)
          this._ButtonDirective_0_5.instance.ngOnInit$0();
        currVal_1 = _ctx.get$expandIcon();
        t1 = this._material_expansionpanel_template$_expr_1;
        if (t1 !== currVal_1) {
          this._MaterialIconComponent_0_6.set$icon(0, currVal_1);
          this._material_expansionpanel_template$_expr_1 = currVal_1;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_expansionpanel_template$_compView_0.viewData.set$cdMode(1);
        currVal_0 = _ctx.get$expandIcon() !== _ctx._defaultExpandIcon ? false : !_ctx._isExpanded;
        t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this._material_expansionpanel_template$_el_0, "expand-more", currVal_0);
          this._material_expansionpanel_template$_expr_0 = currVal_0;
        }
        this._ButtonDirective_0_5.detectHostChanges$2(this._material_expansionpanel_template$_compView_0, this._material_expansionpanel_template$_el_0);
        this._material_expansionpanel_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_expansionpanel_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel2: {
      "^": "AppView;0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("p");
        _el_0.className = "secondary-text";
        this.addShimE$1(_el_0);
        t1 = doc.createTextNode("");
        this._material_expansionpanel_template$_text_1 = t1;
        J.append$1$x(_el_0, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        this.ctx.secondaryText;
        var t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 !== "") {
          this._material_expansionpanel_template$_text_1.textContent = "";
          this._material_expansionpanel_template$_expr_0 = "";
        }
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel3: {
      "^": "AppView;0_material_expansionpanel_template$_compView_0,0_ButtonDirective_0_5,0_MaterialIconComponent_0_6,0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_expr_2,0_material_expansionpanel_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, subscription_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._material_expansionpanel_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_expansionpanel_template$_el_0 = t1;
        J.setAttribute$2$x(t1, "buttonDecorator", "");
        t1 = this._material_expansionpanel_template$_el_0;
        t1.className = "expand-button";
        this.addShimC$1(t1);
        t1 = this._material_expansionpanel_template$_el_0;
        t2 = W.UIEvent;
        this._ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, t1), false);
        t1 = new Y.MaterialIconComponent(t1);
        this._MaterialIconComponent_0_6 = t1;
        this._material_expansionpanel_template$_compView_0.create$2(0, t1, []);
        t1 = W.Event;
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "click", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleClick(), t1, W.MouseEvent));
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "keypress", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleKeyPress(), t1, W.KeyboardEvent));
        t1 = this._ButtonDirective_0_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$handleExpandIconClick(), t2));
        this.init$2([this._material_expansionpanel_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_ButtonDirective_hH0 && 0 === nodeIndex)
          return this._ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, currVal_2, t1, changed, currVal_0;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck)
          this._ButtonDirective_0_5.instance.ngOnInit$0();
        currVal_2 = _ctx.get$expandIcon();
        t1 = this._material_expansionpanel_template$_expr_2;
        if (t1 !== currVal_2) {
          this._MaterialIconComponent_0_6.set$icon(0, currVal_2);
          this._material_expansionpanel_template$_expr_2 = currVal_2;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_expansionpanel_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck) {
          t1 = $.$get$MaterialExpansionPanel_expandAriaMsg();
          if (t1 != null)
            this.setAttr$3(this._material_expansionpanel_template$_el_0, "aria-label", t1);
        }
        currVal_0 = _ctx.get$expandIcon() !== _ctx._defaultExpandIcon ? false : !_ctx._isExpanded;
        t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this._material_expansionpanel_template$_el_0, "expand-more", currVal_0);
          this._material_expansionpanel_template$_expr_0 = currVal_0;
        }
        this._ButtonDirective_0_5.detectHostChanges$2(this._material_expansionpanel_template$_compView_0, this._material_expansionpanel_template$_el_0);
        this._material_expansionpanel_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_expansionpanel_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel4: {
      "^": "AppView;0_material_expansionpanel_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1 = document.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._material_expansionpanel_template$_el_0 = t1;
        t1.className = "action";
        this.addShimC$1(t1);
        this.project$2(this._material_expansionpanel_template$_el_0, 2);
        this.init0$1(this._material_expansionpanel_template$_el_0);
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewMaterialExpansionPanel0")._query_action_1_4_isDirty = true;
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel5: {
      "^": "AppView;0_material_expansionpanel_template$_compView_0,0_ButtonDirective_0_5,0_MaterialIconComponent_0_6,0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_expr_1,0_material_expansionpanel_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, subscription_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._material_expansionpanel_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_expansionpanel_template$_el_0 = t1;
        J.setAttribute$2$x(t1, "buttonDecorator", "");
        t1 = this._material_expansionpanel_template$_el_0;
        t1.className = "expand-button expand-on-left";
        this.addShimC$1(t1);
        t1 = this._material_expansionpanel_template$_el_0;
        t2 = W.UIEvent;
        this._ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, t1), false);
        t1 = new Y.MaterialIconComponent(t1);
        this._MaterialIconComponent_0_6 = t1;
        this._material_expansionpanel_template$_compView_0.create$2(0, t1, []);
        t1 = W.Event;
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "click", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleClick(), t1, W.MouseEvent));
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "keypress", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleKeyPress(), t1, W.KeyboardEvent));
        t1 = this._ButtonDirective_0_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(J.get$collapse$z(this.ctx), t2));
        this.init$2([this._material_expansionpanel_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_ButtonDirective_hH0 && 0 === nodeIndex)
          return this._ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1, changed, currVal_0;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        if (t1 === 0)
          this._ButtonDirective_0_5.instance.ngOnInit$0();
        currVal_1 = _ctx.get$expandIcon();
        t1 = this._material_expansionpanel_template$_expr_1;
        if (t1 !== currVal_1) {
          this._MaterialIconComponent_0_6.set$icon(0, currVal_1);
          this._material_expansionpanel_template$_expr_1 = currVal_1;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_expansionpanel_template$_compView_0.viewData.set$cdMode(1);
        currVal_0 = _ctx.get$closePanelMsg();
        t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 != currVal_0) {
          this.setAttr$3(this._material_expansionpanel_template$_el_0, "aria-label", currVal_0);
          this._material_expansionpanel_template$_expr_0 = currVal_0;
        }
        this._ButtonDirective_0_5.detectHostChanges$2(this._material_expansionpanel_template$_compView_0, this._material_expansionpanel_template$_el_0);
        this._material_expansionpanel_template$_compView_0.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewMaterialExpansionPanel0")._query_expandCollapseButton_1_6_isDirty = true;
      },
      destroyInternal$0: function() {
        this._material_expansionpanel_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel6: {
      "^": "AppView;0_material_expansionpanel_template$_compView_0,0_ButtonDirective_0_5,0_MaterialIconComponent_0_6,0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_expr_1,0_material_expansionpanel_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, subscription_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._material_expansionpanel_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_expansionpanel_template$_el_0 = t1;
        J.setAttribute$2$x(t1, "buttonDecorator", "");
        t1 = this._material_expansionpanel_template$_el_0;
        t1.className = "expand-button";
        this.addShimC$1(t1);
        t1 = this._material_expansionpanel_template$_el_0;
        t2 = W.UIEvent;
        this._ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, t1), false);
        t1 = new Y.MaterialIconComponent(t1);
        this._MaterialIconComponent_0_6 = t1;
        this._material_expansionpanel_template$_compView_0.create$2(0, t1, []);
        t1 = W.Event;
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "click", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleClick(), t1, W.MouseEvent));
        J.addEventListener$2$x(this._material_expansionpanel_template$_el_0, "keypress", this.eventHandler1$2$1(this._ButtonDirective_0_5.instance.get$handleKeyPress(), t1, W.KeyboardEvent));
        t1 = this._ButtonDirective_0_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(J.get$collapse$z(this.ctx), t2));
        this.init$2([this._material_expansionpanel_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_ButtonDirective_hH0 && 0 === nodeIndex)
          return this._ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, currVal_1, changed, currVal_0;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        if (t1 === 0)
          this._ButtonDirective_0_5.instance.ngOnInit$0();
        currVal_1 = _ctx.get$expandIcon();
        t1 = this._material_expansionpanel_template$_expr_1;
        if (t1 !== currVal_1) {
          this._MaterialIconComponent_0_6.set$icon(0, currVal_1);
          this._material_expansionpanel_template$_expr_1 = currVal_1;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_expansionpanel_template$_compView_0.viewData.set$cdMode(1);
        currVal_0 = _ctx.get$closePanelMsg();
        t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 != currVal_0) {
          this.setAttr$3(this._material_expansionpanel_template$_el_0, "aria-label", currVal_0);
          this._material_expansionpanel_template$_expr_0 = currVal_0;
        }
        this._ButtonDirective_0_5.detectHostChanges$2(this._material_expansionpanel_template$_compView_0, this._material_expansionpanel_template$_el_0);
        this._material_expansionpanel_template$_compView_0.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewMaterialExpansionPanel0")._query_expandCollapseButton_1_6_isDirty = true;
      },
      destroyInternal$0: function() {
        this._material_expansionpanel_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel7: {
      "^": "AppView;0_appEl_0,0_NgIf_0_9,0_material_expansionpanel_template$_appEl_1,0_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2;
        t1 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(0, null, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._appEl_0 = t2;
        this._NgIf_0_9 = new K.NgIf(new D.TemplateRef(t2, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel8$closure()), t2, false);
        t1 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._material_expansionpanel_template$_appEl_1 = t1;
        this._NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, D.material_expansionpanel_template__viewFactory_MaterialExpansionPanel9$closure()), t1, false);
        this.init$2([this._appEl_0, t1], null);
      },
      detectChangesInternal$0: function() {
        var _ctx = this.ctx;
        this._NgIf_0_9.set$ngIf(!_ctx.showSaveCancel);
        this._NgIf_1_9.set$ngIf(_ctx.showSaveCancel);
        this._appEl_0.detectChangesInNestedViews$0();
        this._material_expansionpanel_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._appEl_0.destroyNestedViews$0();
        this._material_expansionpanel_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel8: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _el_0 = document.createElement("div");
        _el_0.className = "toolbelt";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        this.project$2(_el_0, 4);
        this.init0$1(_el_0);
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    },
    _ViewMaterialExpansionPanel9: {
      "^": "AppView;0_material_expansionpanel_template$_compView_0,0_MaterialYesNoButtonsComponent_0_5,0_EnterAcceptsDirective_0_6,0_material_expansionpanel_template$_expr_0,0_material_expansionpanel_template$_expr_1,0_material_expansionpanel_template$_expr_2,0_material_expansionpanel_template$_expr_3,0_material_expansionpanel_template$_expr_4,0_material_expansionpanel_template$_expr_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, _el_0, subscription_0;
        t1 = new M.ViewMaterialYesNoButtonsComponent0(true, true, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, E.MaterialYesNoButtonsComponent));
        t2 = document.createElement("material-yes-no-buttons");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewMaterialYesNoButtonsComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialYesNoButtonsComponent());
          $.ViewMaterialYesNoButtonsComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._material_expansionpanel_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "action-buttons";
        J.setAttribute$2$x(_el_0, "reverse", "");
        this.addShimC$1(_el_0);
        t1 = W.UIEvent;
        t2 = [t1];
        t2 = new E.MaterialYesNoButtonsComponent(new P._AsyncBroadcastStreamController(null, null, 0, t2), new P._AsyncBroadcastStreamController(null, null, 0, t2), $.$get$MaterialYesNoButtonsComponent__msgYes(), $.$get$MaterialYesNoButtonsComponent__msgNo(), false, false, false, false, false, true, false, true, false);
        this._MaterialYesNoButtonsComponent_0_5 = t2;
        t2 = new E.EnterAcceptsDirective(t2, true);
        t2.BoundaryAwareKeyUpDirective$2(_el_0, H.interceptedTypeCheck(this.parentView.parentView, "$isViewMaterialExpansionPanel0")._KeyUpBoundaryDirective_0_5);
        this._EnterAcceptsDirective_0_6 = t2;
        this._material_expansionpanel_template$_compView_0.create$2(0, this._MaterialYesNoButtonsComponent_0_5, []);
        t2 = this._MaterialYesNoButtonsComponent_0_5._yes;
        subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$doSave(), t1));
        t2 = this._MaterialYesNoButtonsComponent_0_5._no;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$doCancel(), t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_HasDisabled_qzc && 0 === nodeIndex)
          return this._MaterialYesNoButtonsComponent_0_5;
        if (token === C.Type_EnterAcceptsDirective_wwi && 0 === nodeIndex)
          return this._EnterAcceptsDirective_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, changed, currVal_1, currVal_4;
        _ctx = this.ctx;
        currVal_0 = _ctx.saveText;
        t1 = this._material_expansionpanel_template$_expr_0;
        if (t1 != currVal_0) {
          this._MaterialYesNoButtonsComponent_0_5.yesText = currVal_0;
          this._material_expansionpanel_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.cancelText;
        t1 = this._material_expansionpanel_template$_expr_1;
        if (t1 != currVal_1) {
          this._MaterialYesNoButtonsComponent_0_5.noText = currVal_1;
          this._material_expansionpanel_template$_expr_1 = currVal_1;
          changed = true;
        }
        _ctx.saveDisabled;
        t1 = this._material_expansionpanel_template$_expr_2;
        if (t1 !== false) {
          this._MaterialYesNoButtonsComponent_0_5.yesDisabled = false;
          this._material_expansionpanel_template$_expr_2 = false;
          changed = true;
        }
        _ctx.cancelDisplayed;
        t1 = this._material_expansionpanel_template$_expr_3;
        if (t1 !== true) {
          this._MaterialYesNoButtonsComponent_0_5.noDisplayed = true;
          this._material_expansionpanel_template$_expr_3 = true;
          changed = true;
        }
        currVal_4 = _ctx._activeSaveCancelAction;
        t1 = this._material_expansionpanel_template$_expr_4;
        if (t1 !== currVal_4) {
          this._MaterialYesNoButtonsComponent_0_5.pending = currVal_4;
          this._material_expansionpanel_template$_expr_4 = currVal_4;
          changed = true;
        }
        if (changed)
          this._material_expansionpanel_template$_compView_0.viewData.set$cdMode(1);
        _ctx.enterAccepts;
        t1 = this._material_expansionpanel_template$_expr_5;
        if (t1 !== false) {
          this._EnterAcceptsDirective_0_6.enterAccepts = false;
          this._material_expansionpanel_template$_expr_5 = false;
        }
        this._material_expansionpanel_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_expansionpanel_template$_compView_0.destroy$0();
        var t1 = this._EnterAcceptsDirective_0_6;
        t1._material_yes_no_buttons$_subscription.cancel$0(0);
        t1._material_yes_no_buttons$_subscription = null;
      },
      $asAppView: function() {
        return [T.MaterialExpansionPanel];
      }
    }
  }], ["", "package:angular_components/material_expansionpanel/material_expansionpanel_set.dart",, X, {
    "^": "",
    MaterialExpansionPanelSet: {
      "^": "Object;_panelDisposer,0_openPanel,0_panels",
      set$_panels: function(_panels) {
        this._panels = H.assertSubtype(_panels, "$isList", [T.MaterialExpansionPanel], "$asList");
      },
      _onPanelsChange$0: function() {
        var t1, t2, t3, t4, t5, _i, panel, t6, t7;
        t1 = this._panelDisposer;
        t1.dispose$0();
        this._openPanel = null;
        for (t2 = this._panels, t3 = t2.length, t4 = P.bool, t5 = [L.AsyncAction, P.bool], _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          panel = t2[_i];
          if (panel.get$_isExpanded()) {
            if (this._openPanel != null)
              throw H.wrapException(P.StateError$("Should only have one panel open at a time"));
            this._openPanel = H.interceptedTypeCheck(panel, "$isMaterialExpansionPanel");
          }
          t6 = panel.get$_isExpandedChange();
          t7 = H.getTypeArgumentByIndex(t6, 0);
          t1.addStreamSubscription$1$1(new P._BroadcastStream(t6, [t7])._createSubscription$4(H.functionTypeCheck(new X.MaterialExpansionPanelSet__onPanelsChange_closure(this, panel), {func: 1, ret: -1, args: [t7]}), null, null, false), t4);
          t7 = panel.get$_openController();
          t6 = H.getTypeArgumentByIndex(t7, 0);
          t1.addStreamSubscription$1$1(new P._BroadcastStream(t7, [t6])._createSubscription$4(H.functionTypeCheck(new X.MaterialExpansionPanelSet__onPanelsChange_closure0(this, panel), {func: 1, ret: -1, args: [t6]}), null, null, false), t5);
          t6 = panel.get$_closeController();
          t7 = H.getTypeArgumentByIndex(t6, 0);
          t1.addStreamSubscription$1$1(new P._BroadcastStream(t6, [t7])._createSubscription$4(H.functionTypeCheck(new X.MaterialExpansionPanelSet__onPanelsChange_closure1(this, panel), {func: 1, ret: -1, args: [t7]}), null, null, false), t5);
          t7 = panel.get$_cancelController();
          t6 = H.getTypeArgumentByIndex(t7, 0);
          t1.addStreamSubscription$1$1(new P._BroadcastStream(t7, [t6])._createSubscription$4(H.functionTypeCheck(new X.MaterialExpansionPanelSet__onPanelsChange_closure2(this, panel), {func: 1, ret: -1, args: [t6]}), null, null, false), t5);
          if (panel.get$closeOnSave()) {
            t6 = panel.get$_saveController();
            t7 = H.getTypeArgumentByIndex(t6, 0);
            t1.addStreamSubscription$1$1(new P._BroadcastStream(t6, [t7])._createSubscription$4(H.functionTypeCheck(new X.MaterialExpansionPanelSet__onPanelsChange_closure3(this, panel), {func: 1, ret: -1, args: [t7]}), null, null, false), t5);
          }
        }
      },
      _onPanelOpen$2: function(panel, action) {
        return this._onPanelOpen$body$MaterialExpansionPanelSet(panel, H.assertSubtype(action, "$isAsyncAction", [P.bool], "$asAsyncAction"));
      },
      _onPanelOpen$body$MaterialExpansionPanelSet: function(panel, action) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this, t1;
        var $async$_onPanelOpen$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                if ($async$self._openPanel == null)
                  $async$self._setOpenPanel$1(panel);
                t1 = $async$self._openPanel;
                if (t1._activeSaveCancelAction) {
                  action.cancel$0(0);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                action.cancelIf$1(t1.collapse$1$byUserAction(0, false).then$1$1(new X.MaterialExpansionPanelSet__onPanelOpen_closure($async$self, panel), P.bool));
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_onPanelOpen$2, $async$completer);
      },
      _onPanelClose$2: function(panel, action) {
        return this._onPanelClose$body$MaterialExpansionPanelSet(panel, H.assertSubtype(action, "$isAsyncAction", [P.bool], "$asAsyncAction"));
      },
      _onPanelClose$body$MaterialExpansionPanelSet: function(panel, action) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this, t1;
        var $async$_onPanelClose$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 2;
                return P._asyncAwait(action._async_action$_onDone, $async$_onPanelClose$2);
              case 2:
                // returning from await.
                if ($async$result) {
                  t1 = $async$self._openPanel;
                  t1 = t1 == null ? panel == null : t1 === panel;
                } else
                  t1 = false;
                if (t1)
                  $async$self._setOpenPanel$1(null);
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$_onPanelClose$2, $async$completer);
      },
      _setOpenPanel$1: function(panel) {
        var t1, t2, _i;
        t1 = this._openPanel;
        if (t1 == null ? panel == null : t1 === panel)
          return;
        this._openPanel = panel;
        for (t1 = this._panels, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          panel = t1[_i];
          if (!J.$eq$(panel, this._openPanel)) {
            panel.set$_anotherExpanded(this._openPanel != null);
            panel.get$_material_expansionpanel$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          }
        }
      }
    },
    MaterialExpansionPanelSet__onPanelsChange_closure: {
      "^": "Closure:29;$this,panel",
      call$1: [function(isExpanded) {
        if (H.boolTypeCheck(isExpanded))
          this.$this._setOpenPanel$1(this.panel);
      }, null, null, 4, 0, null, 61, "call"]
    },
    MaterialExpansionPanelSet__onPanelsChange_closure0: {
      "^": "Closure:34;$this,panel",
      call$1: [function(action) {
        this.$this._onPanelOpen$2(this.panel, H.assertSubtype(action, "$isAsyncAction", [P.bool], "$asAsyncAction"));
      }, null, null, 4, 0, null, 13, "call"]
    },
    MaterialExpansionPanelSet__onPanelsChange_closure1: {
      "^": "Closure:34;$this,panel",
      call$1: [function(action) {
        this.$this._onPanelClose$2(this.panel, H.assertSubtype(action, "$isAsyncAction", [P.bool], "$asAsyncAction"));
      }, null, null, 4, 0, null, 13, "call"]
    },
    MaterialExpansionPanelSet__onPanelsChange_closure2: {
      "^": "Closure:34;$this,panel",
      call$1: [function(action) {
        this.$this._onPanelClose$2(this.panel, H.assertSubtype(action, "$isAsyncAction", [P.bool], "$asAsyncAction"));
      }, null, null, 4, 0, null, 13, "call"]
    },
    MaterialExpansionPanelSet__onPanelsChange_closure3: {
      "^": "Closure:34;$this,panel",
      call$1: [function(action) {
        this.$this._onPanelClose$2(this.panel, H.assertSubtype(action, "$isAsyncAction", [P.bool], "$asAsyncAction"));
      }, null, null, 4, 0, null, 13, "call"]
    },
    MaterialExpansionPanelSet__onPanelOpen_closure: {
      "^": "Closure:32;$this,panel",
      call$1: [function(success) {
        H.boolTypeCheck(success);
        if (success)
          this.$this._setOpenPanel$1(this.panel);
        return !success;
      }, null, null, 4, 0, null, 63, "call"]
    }
  }], ["", "package:angular_components/material_icon/material_icon.dart",, Y, {
    "^": "",
    MaterialIconComponent: {
      "^": "Object;0ariaLabel,0_icon,_material_icon$_element",
      set$icon: function(_, value) {
        this._icon = value;
        if (C.JSArray_methods.contains$1(C.List_CX7, this.get$iconName()))
          J.setAttribute$2$x(this._material_icon$_element, "flip", "");
      },
      get$iconName: function() {
        var t1 = this._icon;
        return H.stringTypeCheck(t1 instanceof L.Icon ? t1.name : t1);
      }
    }
  }], ["asset_angular_components_lib_material_icon_material_icon.scss.css.shim.dart", "package:angular_components/material_icon/material_icon.scss.css.shim.dart",, X, {}], ["", "package:angular_components/material_icon/material_icon.template.dart",, M, {
    "^": "",
    ViewMaterialIconComponent0: {
      "^": "AppView;0_material_icon_template$_expr_0,0_material_icon_template$_expr_1,0_material_icon_template$_el_1,0_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        J.append$1$x(parentRenderNode, t1.createTextNode("\n"));
        t2 = S.createAndAppend(t1, "i", parentRenderNode);
        this._material_icon_template$_el_1 = t2;
        J.setAttribute$2$x(t2, "aria-hidden", "true");
        t2 = this._material_icon_template$_el_1;
        t2.className = "material-icon-i material-icons";
        this.addShimE$1(t2);
        t1 = t1.createTextNode("");
        this._text_2 = t1;
        J.append$1$x(this._material_icon_template$_el_1, t1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_1, t1;
        _ctx = this.ctx;
        currVal_1 = _ctx.get$iconName();
        if (currVal_1 == null)
          currVal_1 = "";
        t1 = this._material_icon_template$_expr_1;
        if (t1 !== currVal_1) {
          this._text_2.textContent = currVal_1;
          this._material_icon_template$_expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [Y.MaterialIconComponent];
      },
      static: {
        ViewMaterialIconComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new M.ViewMaterialIconComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, Y.MaterialIconComponent));
          t2 = document.createElement("material-icon");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialIconComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialIconComponent());
            $.ViewMaterialIconComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_input/base_material_input.dart",, D, {
    "^": "",
    BottomPanelState: {
      "^": "Object;index>,_base_material_input$_name",
      toString$0: function(_) {
        return this._base_material_input$_name;
      }
    },
    BaseMaterialInput: {
      "^": "FocusableMixin;_changeDetector<,0label>",
      set$inputText: function(value) {
        var t1;
        this._inputText = value;
        if (value == null)
          this._inputTextLength = 0;
        else {
          t1 = value.length;
          this._inputTextLength = t1;
        }
        this.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
      },
      BaseMaterialInput$3: function(_cd, _changeDetector, validator) {
        var $call = this.get$$call();
        validator.add$1(0, $call);
        this._disposer.addFunction$1(new D.BaseMaterialInput_closure(validator, $call));
      },
      ngAfterViewInit$0: function() {
        var t1, t2, t3;
        t1 = this._base_material_input$_cd;
        if ((t1 == null ? null : t1._control) != null) {
          t2 = this._disposer;
          t3 = t1._control._valueChanges;
          t2.addStreamSubscription$1$1(new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(new D.BaseMaterialInput_ngAfterViewInit_closure(this)), null);
          t1 = t1._control._statusChanges;
          t2.addStreamSubscription$1$1(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new D.BaseMaterialInput_ngAfterViewInit_closure0(this)), P.String);
        }
      },
      call$1: [function(_) {
        H.interceptedTypeCheck(_, "$isAbstractControl");
        return this._isLocallyValid$1(true);
      }, "call$1", "get$$call", 4, 0, 35, 0],
      _isLocallyValid$1: function(fromFormsApi) {
        var t1;
        if (this._invalid && true) {
          t1 = this._validationMessage;
          this._localValidationMessage = t1;
          return P.LinkedHashMap_LinkedHashMap$_literal(["material-input-error", t1], P.String, null);
        }
        this._localValidationMessage = null;
        return;
      },
      get$disabled: function(_) {
        return this._disabled;
      },
      get$invalid: function(_) {
        var t1, t2;
        t1 = this._base_material_input$_cd;
        if ((t1 == null ? null : t1._control) != null) {
          t1 = t1._control;
          t2 = t1 == null;
          if (!(t2 ? null : t1._status === "VALID"))
            if (!(t2 ? null : t1._touched))
              t1 = t2 ? null : !t1._model$_pristine;
            else
              t1 = true;
          else
            t1 = false;
          return t1;
        }
        return this._isLocallyValid$1(false) != null;
      },
      get$hasVisibleText: function() {
        var t1 = this._inputText;
        t1 = t1 == null ? null : t1.length !== 0;
        return t1 == null ? false : t1;
      },
      get$labelVisible: function() {
        var t1 = this.get$hasVisibleText();
        return !t1;
      },
      get$errorMessage: function(_) {
        var t1, t2, errorMap, stringValue;
        t1 = this._base_material_input$_cd;
        if (t1 != null) {
          t2 = t1._control;
          t2 = (t2 == null ? null : t2._errors) != null;
        } else
          t2 = false;
        if (t2) {
          errorMap = t1._control._errors;
          t1 = J.getInterceptor$x(errorMap);
          stringValue = J.firstWhere$2$orElse$ax(t1.get$values(errorMap), new D.BaseMaterialInput_errorMessage_closure(), new D.BaseMaterialInput_errorMessage_closure0());
          if (stringValue != null)
            return H.stringTypeCast(stringValue);
          for (t1 = J.get$iterator$ax(t1.get$keys(errorMap)); t1.moveNext$0();) {
            t2 = t1.get$current(t1);
            if ("required" === t2)
              return this._requiredErrorMsg;
            if ("maxlength" === t2)
              return this._errorMsg;
          }
        }
        t1 = this._localValidationMessage;
        return t1 == null ? "" : t1;
      },
      ngOnDestroy$0: ["super$BaseMaterialInput$ngOnDestroy", function() {
        this._disposer.dispose$0();
      }],
      inputFocusAction$1: [function($event) {
        this.focused = true;
        this.FocusableMixin__onFocus.add$1(0, H.interceptedTypeCheck($event, "$isFocusEvent"));
        this.updateBottomPanelState$0();
      }, "call$1", "get$inputFocusAction", 4, 0, 1],
      inputBlurAction$3: function($event, valid, validationMessage) {
        this._invalid = !valid;
        this._validationMessage = validationMessage;
        this._pristine = false;
        this.focused = false;
        this._blurController.add$1(0, H.interceptedTypeCheck($event, "$isFocusEvent"));
        this.updateBottomPanelState$0();
      },
      inputChange$3: function(newValue, valid, validationMessage) {
        this._invalid = !valid;
        this._validationMessage = validationMessage;
        this._pristine = false;
        this.set$inputText(newValue);
        this._changeController.add$1(0, newValue);
        this.updateBottomPanelState$0();
      },
      inputKeypress$3: function(newValue, valid, validationMessage) {
        this._invalid = !valid;
        this._validationMessage = validationMessage;
        this._pristine = false;
        this.set$inputText(newValue);
        this._keypressController.add$1(0, newValue);
        this.updateBottomPanelState$0();
      },
      updateBottomPanelState$0: function() {
        var oldState, t1;
        oldState = this.bottomPanelState;
        if (this.get$invalid(this)) {
          t1 = this.get$errorMessage(this);
          t1 = t1 != null && t1.length !== 0;
        } else
          t1 = false;
        if (t1) {
          this.bottomPanelState = C.BottomPanelState_1;
          t1 = C.BottomPanelState_1;
        } else {
          this.bottomPanelState = C.BottomPanelState_0;
          t1 = C.BottomPanelState_0;
        }
        if (oldState !== t1)
          this.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
      }
    },
    BaseMaterialInput_closure: {
      "^": "Closure:0;validator,$call",
      call$0: function() {
        var t1, t2;
        t1 = this.validator;
        t1.toString;
        t2 = H.functionTypeCheck(this.$call, {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]});
        C.JSArray_methods.remove$1(t1._delegates, t2);
        t1.set$_validator(null);
      }
    },
    BaseMaterialInput_ngAfterViewInit_closure: {
      "^": "Closure:4;$this",
      call$1: [function(value) {
        this.$this.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
      }, null, null, 4, 0, null, 1, "call"]
    },
    BaseMaterialInput_ngAfterViewInit_closure0: {
      "^": "Closure:26;$this",
      call$1: [function($status) {
        var t1;
        H.stringTypeCheck($status);
        t1 = this.$this;
        t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
        t1.updateBottomPanelState$0();
      }, null, null, 4, 0, null, 64, "call"]
    },
    BaseMaterialInput_errorMessage_closure: {
      "^": "Closure:20;",
      call$1: function(v) {
        return typeof v === "string" && v.length !== 0;
      }
    },
    BaseMaterialInput_errorMessage_closure0: {
      "^": "Closure:0;",
      call$0: function() {
        return;
      }
    }
  }], ["", "package:angular_components/material_input/deferred_validator.dart",, L, {
    "^": "",
    DeferredValidator: {
      "^": "Object;_delegates,0_validator",
      set$_validator: function(_validator) {
        this._validator = H.functionTypeCheck(_validator, {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]});
      },
      add$1: function(_, validation) {
        C.JSArray_methods.add$1(this._delegates, H.functionTypeCheck(validation, {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}));
        this.set$_validator(null);
      },
      call$1: [function(control) {
        var t1, numDelegates;
        H.interceptedTypeCheck(control, "$isAbstractControl");
        if (this._validator == null) {
          t1 = this._delegates;
          numDelegates = t1.length;
          if (numDelegates === 0)
            return;
          this.set$_validator(numDelegates > 1 ? B.Validators_compose(t1) : C.JSArray_methods.get$single(t1));
        }
        return this._validator.call$1(control);
      }, "call$1", "get$$call", 4, 0, 35, 35]
    }
  }], ["", "package:angular_components/material_input/material_input.dart",, L, {
    "^": "",
    MaterialInputComponent: {
      "^": "BaseMaterialInput;_material_input$_changeDetector,0inputEl,0popupSourceEl,0type,multiple,inputRole,_labelId,0_leadingText,0leadingGlyph,0_trailingText,0trailingGlyph,0trailingGlyphAriaLabel,0leadingGlyphAriaLabel,_rightAlign,0inputAriaOwns,0inputAriaActivedescendent,0inputAriaHasPopup,0inputAriaExpanded,0inputAriaAutocomplete,_changeDetector,_disposer,emptyState,errorState,hintState,_invalid,0_validationMessage,0_localValidationMessage,_required,_showHintOnlyOnFocus,_disabled,useNativeValidation,_pristine,_base_material_input$_cd,bottomPanelState,0_errorMsg,0_error,0label,0inputAriaLabel,0_hintText,_requiredErrorMsg,0maxCount,0_checkValid,_inputTextLength,_inputText,displayBottomPanel,0errorRenderer,0_characterCounter,showCharacterCount,floatingLabel,_keypressController,_changeController,_blurController,focused,FocusableMixin__onFocus,0FocusableMixin__focusable,FocusableMixin__focusPending",
      set$inputEl: function(inputEl) {
        this.inputEl = H.interceptedTypeCheck(inputEl, "$isElementRef");
      },
      set$popupSourceEl: function(popupSourceEl) {
        this.popupSourceEl = H.interceptedTypeCheck(popupSourceEl, "$isElementRef");
      },
      set$focusable: function(value) {
        this.super$FocusableMixin$focusable(value);
      },
      focus$0: [function(_) {
        return this.super$FocusableMixin$focus(0);
      }, "call$0", "get$focus", 1, 0, 2],
      $isReferenceDirective: 1,
      static: {
        MaterialInputComponent$: function(type, multiple, inputRole, cd, _changeDetector, validator) {
          var t1, t2, t3, t4;
          t1 = new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0).nextId$0();
          t2 = $.$get$BaseMaterialInput_defaultEmptyMessage();
          t3 = [P.String];
          t4 = [W.FocusEvent];
          t1 = new L.MaterialInputComponent(_changeDetector, false, inputRole, t1, false, _changeDetector, new R.Disposer(true, false), C.BottomPanelState_0, C.BottomPanelState_1, C.BottomPanelState_2, false, false, false, false, true, true, cd, C.BottomPanelState_0, t2, 0, "", true, false, false, new P._SyncBroadcastStreamController(null, null, 0, t3), new P._SyncBroadcastStreamController(null, null, 0, t3), new P._SyncBroadcastStreamController(null, null, 0, t4), false, new P._SyncBroadcastStreamController(null, null, 0, t4), false);
          t1.BaseMaterialInput$3(cd, _changeDetector, validator);
          if (type == null)
            t1.type = "text";
          else if (C.JSArray_methods.contains$1(C.List_number_tel, type))
            t1.type = "text";
          else
            t1.type = type;
          t1.multiple = E.attributeToBool(multiple, false);
          return t1;
        }
      }
    }
  }], ["asset_angular_components_lib_material_input_material_input.scss.css.shim.dart", "package:angular_components/material_input/material_input.scss.css.shim.dart",, F, {}], ["", "package:angular_components/material_input/material_input.template.dart",, Q, {
    "^": "",
    viewFactory_MaterialInputComponent1: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent1$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent2: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent2$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent3: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent3$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent4: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent4$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent5: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent5$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent6: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent6$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent7: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent7$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent8: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent8(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent8$closure", 8, 0, 9],
    viewFactory_MaterialInputComponent9: [function(parentView, parentIndex) {
      var t1 = new Q._ViewMaterialInputComponent9(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.MaterialInputComponent));
      t1.componentType = $.ViewMaterialInputComponent0__renderType;
      return t1;
    }, "call$2", "material_input_template__viewFactory_MaterialInputComponent9$closure", 8, 0, 9],
    ViewMaterialInputComponent0: {
      "^": "AppView;0_appEl_2,0_NgIf_2_9,0_appEl_4,0_NgIf_4_9,0_DefaultValueAccessor_11_5,0_FocusableDirective_11_6,0_NgValueAccessor_11_7,0_NgModel_11_8,0_appEl_13,0_NgIf_13_9,0_appEl_15,0_NgIf_15_9,0_appEl_21,0_NgIf_21_9,0_expr_0,0_expr_3,0_expr_4,0_expr_5,0_expr_6,0_expr_7,0_expr_8,0_expr_9,0_expr_10,0_expr_11,0_expr_12,0_expr_13,0_expr_14,0_expr_15,0_expr_16,0_expr_17,0_expr_18,0_expr_19,0_expr_20,0_expr_22,0_expr_23,0_expr_24,0_expr_25,0_expr_26,0_expr_30,0_expr_31,0_expr_32,0_expr_33,0_expr_34,0_expr_35,0_el_1,0_el_6,0_el_7,0_el_9,0_text_10,0_el_11,0_el_18,0_el_19,0_el_20,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$_NgValueAccessor_11_7: function(_NgValueAccessor_11_7) {
        this._NgValueAccessor_11_7 = H.assertSubtype(_NgValueAccessor_11_7, "$isList", [[L.ControlValueAccessor,,]], "$asList");
      },
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, doc, _el_0, t1, _anchor_2, t2, _text_3, _anchor_4, _text_5, _text_8, t3, _text_12, _anchor_13, _text_14, _anchor_15, _text_16, _el_17, _anchor_21;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "baseline";
        this.addShimC$1(_el_0);
        t1 = S.createDivAndAppend(doc, _el_0);
        this._el_1 = t1;
        t1.className = "top-section";
        this.addShimC$1(t1);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = this._el_1;
        (t2 && C.DivElement_methods).append$1(t2, _anchor_2);
        t2 = new V.ViewContainer(2, 1, this, _anchor_2);
        this._appEl_2 = t2;
        this._NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, Q.material_input_template__viewFactory_MaterialInputComponent1$closure()), t2, false);
        _text_3 = doc.createTextNode(" ");
        t2 = this._el_1;
        (t2 && C.DivElement_methods).append$1(t2, _text_3);
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2 = this._el_1;
        (t2 && C.DivElement_methods).append$1(t2, _anchor_4);
        t2 = new V.ViewContainer(4, 1, this, _anchor_4);
        this._appEl_4 = t2;
        this._NgIf_4_9 = new K.NgIf(new D.TemplateRef(t2, Q.material_input_template__viewFactory_MaterialInputComponent2$closure()), t2, false);
        _text_5 = doc.createTextNode(" ");
        t2 = this._el_1;
        (t2 && C.DivElement_methods).append$1(t2, _text_5);
        t2 = S.createAndAppend(doc, "label", this._el_1);
        this._el_6 = t2;
        t2.className = "input-container";
        this.addShimE$1(t2);
        t2 = S.createDivAndAppend(doc, this._el_6);
        this._el_7 = t2;
        (t2 && C.DivElement_methods).setAttribute$2(t2, "aria-hidden", "true");
        t2 = this._el_7;
        t2.className = "label";
        this.addShimC$1(t2);
        _text_8 = doc.createTextNode(" ");
        t2 = this._el_7;
        (t2 && C.DivElement_methods).append$1(t2, _text_8);
        t2 = S.createSpanAndAppend(doc, this._el_7);
        this._el_9 = t2;
        t2.className = "label-text";
        this.addShimE$1(t2);
        t2 = doc.createTextNode("");
        this._text_10 = t2;
        t3 = this._el_9;
        (t3 && C.SpanElement_methods).append$1(t3, t2);
        t2 = H.interceptedTypeCheck(S.createAndAppend(doc, "input", this._el_6), "$isInputElement");
        this._el_11 = t2;
        t2.className = "input";
        (t2 && C.InputElement_methods).setAttribute$2(t2, "focusableElement", "");
        this.addShimC$1(this._el_11);
        t2 = this._el_11;
        t3 = new O.DefaultValueAccessor(t2, new L.ChangeHandler_closure(P.String), new L.TouchHandler_closure());
        this._DefaultValueAccessor_11_5 = t3;
        this._FocusableDirective_11_6 = new E.FocusableDirective(t2);
        this.set$_NgValueAccessor_11_7(H.setRuntimeTypeInfo([t3], [[L.ControlValueAccessor,,]]));
        this._NgModel_11_8 = U.NgModel$(null, this._NgValueAccessor_11_7);
        _text_12 = doc.createTextNode(" ");
        t3 = this._el_1;
        (t3 && C.DivElement_methods).append$1(t3, _text_12);
        _anchor_13 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3 = this._el_1;
        (t3 && C.DivElement_methods).append$1(t3, _anchor_13);
        t3 = new V.ViewContainer(13, 1, this, _anchor_13);
        this._appEl_13 = t3;
        this._NgIf_13_9 = new K.NgIf(new D.TemplateRef(t3, Q.material_input_template__viewFactory_MaterialInputComponent3$closure()), t3, false);
        _text_14 = doc.createTextNode(" ");
        t3 = this._el_1;
        (t3 && C.DivElement_methods).append$1(t3, _text_14);
        _anchor_15 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3 = this._el_1;
        (t3 && C.DivElement_methods).append$1(t3, _anchor_15);
        t3 = new V.ViewContainer(15, 1, this, _anchor_15);
        this._appEl_15 = t3;
        this._NgIf_15_9 = new K.NgIf(new D.TemplateRef(t3, Q.material_input_template__viewFactory_MaterialInputComponent4$closure()), t3, false);
        _text_16 = doc.createTextNode(" ");
        t3 = this._el_1;
        (t3 && C.DivElement_methods).append$1(t3, _text_16);
        this.project$2(this._el_1, 0);
        _el_17 = S.createDivAndAppend(doc, _el_0);
        _el_17.className = "underline";
        this.addShimC$1(_el_17);
        t3 = S.createDivAndAppend(doc, _el_17);
        this._el_18 = t3;
        t3.className = "disabled-underline";
        this.addShimC$1(t3);
        t3 = S.createDivAndAppend(doc, _el_17);
        this._el_19 = t3;
        t3.className = "unfocused-underline";
        this.addShimC$1(t3);
        t3 = S.createDivAndAppend(doc, _el_17);
        this._el_20 = t3;
        t3.className = "focused-underline";
        this.addShimC$1(t3);
        _anchor_21 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        J.append$1$x(parentRenderNode, _anchor_21);
        t1 = new V.ViewContainer(21, null, this, _anchor_21);
        this._appEl_21 = t1;
        this._NgIf_21_9 = new K.NgIf(new D.TemplateRef(t1, Q.material_input_template__viewFactory_MaterialInputComponent5$closure()), t1, false);
        t1 = this._el_11;
        t3 = W.Event;
        (t1 && C.InputElement_methods).addEventListener$2(t1, "blur", this.eventHandler1$2$1(this.get$_handle_blur_11_0(), t3, t3));
        t1 = this._el_11;
        (t1 && C.InputElement_methods).addEventListener$2(t1, "change", this.eventHandler1$2$1(this.get$_handle_change_11_1(), t3, t3));
        t1 = this._el_11;
        (t1 && C.InputElement_methods).addEventListener$2(t1, "focus", this.eventHandler1$2$1(this.ctx.get$inputFocusAction(), t3, t3));
        t1 = this._el_11;
        (t1 && C.InputElement_methods).addEventListener$2(t1, "input", this.eventHandler1$2$1(this.get$_handle_input_11_3(), t3, t3));
        this.ctx.set$focusable(this._FocusableDirective_11_6);
        this.ctx.set$inputEl(new Z.ElementRef(this._el_11));
        this.ctx.set$popupSourceEl(new Z.ElementRef(_el_0));
        this.init$2(C.List_empty, null);
        J.addEventListener$2$x(_rootEl, "focus", this.eventHandler0$1$1(_ctx.get$focus(_ctx), t3));
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_Focusable_adc && 11 === nodeIndex)
          return this._FocusableDirective_11_6;
        if ((token === C.Type_NgModel_qx4 || token === C.Type_NgControl_GNi) && 11 === nodeIndex)
          return this._NgModel_11_8;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, currVal_0, currVal_5, currVal_6, currVal_9, currVal_12, currVal_17, t2, currVal_22, currVal_24, currVal_25, currVal_26, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        t1 = this._NgIf_2_9;
        _ctx.leadingGlyph;
        t1.set$ngIf(false);
        t1 = this._NgIf_4_9;
        _ctx._leadingText;
        t1.set$ngIf(false);
        this._NgModel_11_8.set$model(_ctx._inputText);
        this._NgModel_11_8.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_11_8.ngOnInit$0();
        t1 = this._NgIf_13_9;
        _ctx._trailingText;
        t1.set$ngIf(false);
        t1 = this._NgIf_15_9;
        _ctx.trailingGlyph;
        t1.set$ngIf(false);
        t1 = this._NgIf_21_9;
        _ctx.displayBottomPanel;
        t1.set$ngIf(true);
        this._appEl_2.detectChangesInNestedViews$0();
        this._appEl_4.detectChangesInNestedViews$0();
        this._appEl_13.detectChangesInNestedViews$0();
        this._appEl_15.detectChangesInNestedViews$0();
        this._appEl_21.detectChangesInNestedViews$0();
        currVal_0 = _ctx._disabled;
        t1 = this._expr_0;
        if (t1 != currVal_0) {
          this.updateClass$3(this._el_1, "disabled", currVal_0);
          this._expr_0 = currVal_0;
        }
        _ctx.floatingLabel;
        t1 = this._expr_3;
        if (t1 !== false) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_6, "$isHtmlElement"), "floated-label", false);
          this._expr_3 = false;
        }
        _ctx._rightAlign;
        t1 = this._expr_4;
        if (t1 !== false) {
          this.updateClass$3(this._el_7, "right-align", false);
          this._expr_4 = false;
        }
        currVal_5 = _ctx._labelId;
        t1 = this._expr_5;
        if (t1 !== currVal_5) {
          this.setAttr$3(this._el_9, "id", currVal_5);
          this._expr_5 = currVal_5;
        }
        currVal_6 = !(!(_ctx.type === "number" && _ctx.get$invalid(_ctx)) && D.BaseMaterialInput.prototype.get$labelVisible.call(_ctx));
        t1 = this._expr_6;
        if (t1 !== currVal_6) {
          this.updateClass$3(this._el_9, "invisible", currVal_6);
          this._expr_6 = currVal_6;
        }
        t1 = this._expr_7;
        if (t1 !== false) {
          this.updateClass$3(this._el_9, "animated", false);
          this._expr_7 = false;
        }
        t1 = this._expr_8;
        if (t1 !== false) {
          this.updateClass$3(this._el_9, "reset", false);
          this._expr_8 = false;
        }
        currVal_9 = _ctx._disabled;
        t1 = this._expr_9;
        if (t1 != currVal_9) {
          this.updateClass$3(this._el_9, "disabled", currVal_9);
          this._expr_9 = currVal_9;
        }
        _ctx.focused;
        t1 = this._expr_10;
        if (t1 !== false) {
          this.updateClass$3(this._el_9, "focused", false);
          this._expr_10 = false;
        }
        _ctx.get$invalid(_ctx);
        t1 = this._expr_11;
        if (t1 !== false) {
          this.updateClass$3(this._el_9, "invalid", false);
          this._expr_11 = false;
        }
        currVal_12 = Q.interpolate0(_ctx.label);
        t1 = this._expr_12;
        if (t1 !== currVal_12) {
          this._text_10.textContent = currVal_12;
          this._expr_12 = currVal_12;
        }
        firstCheck;
        currVal_17 = _ctx.get$invalid(_ctx);
        t1 = this._expr_17;
        if (t1 !== currVal_17) {
          t1 = this._el_11;
          t2 = String(currVal_17);
          this.setAttr$3(t1, "aria-invalid", t2);
          this._expr_17 = currVal_17;
        }
        t1 = this._expr_19;
        if (t1 !== currVal_5) {
          this.setAttr$3(this._el_11, "aria-labelledby", currVal_5);
          this._expr_19 = currVal_5;
        }
        currVal_22 = _ctx._disabled;
        t1 = this._expr_22;
        if (t1 != currVal_22) {
          this.updateClass$3(this._el_11, "disabledInput", currVal_22);
          this._expr_22 = currVal_22;
        }
        t1 = this._expr_23;
        if (t1 !== false) {
          this.updateClass$3(this._el_11, "right-align", false);
          this._expr_23 = false;
        }
        currVal_24 = _ctx.multiple;
        t1 = this._expr_24;
        if (t1 !== currVal_24) {
          this._el_11.multiple = currVal_24;
          this._expr_24 = currVal_24;
        }
        currVal_25 = _ctx._disabled;
        t1 = this._expr_25;
        if (t1 != currVal_25) {
          this._el_11.readOnly = currVal_25;
          this._expr_25 = currVal_25;
        }
        currVal_26 = _ctx.type;
        t1 = this._expr_26;
        if (t1 != currVal_26) {
          this._el_11.type = currVal_26;
          this._expr_26 = currVal_26;
        }
        currVal_30 = !_ctx._disabled;
        t1 = this._expr_30;
        if (t1 !== currVal_30) {
          this.updateClass$3(this._el_18, "invisible", currVal_30);
          this._expr_30 = currVal_30;
        }
        currVal_31 = _ctx._disabled;
        t1 = this._expr_31;
        if (t1 != currVal_31) {
          this.updateClass$3(this._el_19, "invisible", currVal_31);
          this._expr_31 = currVal_31;
        }
        currVal_32 = _ctx.get$invalid(_ctx);
        t1 = this._expr_32;
        if (t1 !== currVal_32) {
          this.updateClass$3(this._el_19, "invalid", currVal_32);
          this._expr_32 = currVal_32;
        }
        currVal_33 = !_ctx.focused || _ctx._disabled;
        t1 = this._expr_33;
        if (t1 != currVal_33) {
          this.updateClass$3(this._el_20, "invisible", currVal_33);
          this._expr_33 = currVal_33;
        }
        currVal_34 = _ctx.get$invalid(_ctx);
        t1 = this._expr_34;
        if (t1 !== currVal_34) {
          this.updateClass$3(this._el_20, "invalid", currVal_34);
          this._expr_34 = currVal_34;
        }
        currVal_35 = _ctx.focused;
        t1 = this._expr_35;
        if (t1 !== currVal_35) {
          this.updateClass$3(this._el_20, "animated", currVal_35);
          this._expr_35 = currVal_35;
        }
      },
      destroyInternal$0: function() {
        this._appEl_2.destroyNestedViews$0();
        this._appEl_4.destroyNestedViews$0();
        this._appEl_13.destroyNestedViews$0();
        this._appEl_15.destroyNestedViews$0();
        this._appEl_21.destroyNestedViews$0();
      },
      _handle_blur_11_0$1: [function($$event) {
        var local_inputEl = this._el_11;
        this.ctx.inputBlurAction$3($$event, local_inputEl.validity.valid, local_inputEl.validationMessage);
        this._DefaultValueAccessor_11_5.TouchHandler_onTouched.call$0();
      }, "call$1", "get$_handle_blur_11_0", 4, 0, 1],
      _handle_change_11_1$1: [function($$event) {
        var local_inputEl = this._el_11;
        this.ctx.inputChange$3(local_inputEl.value, local_inputEl.validity.valid, local_inputEl.validationMessage);
        J.stopPropagation$0$x($$event);
      }, "call$1", "get$_handle_change_11_1", 4, 0, 1],
      _handle_input_11_3$1: [function($$event) {
        var local_inputEl, t1, t2;
        local_inputEl = this._el_11;
        this.ctx.inputKeypress$3(local_inputEl.value, local_inputEl.validity.valid, local_inputEl.validationMessage);
        t1 = this._DefaultValueAccessor_11_5;
        t2 = H.stringTypeCheck(J.get$value$x(J.get$target$x($$event)));
        t1.ChangeHandler_onChange.call$2$rawValue(t2, t2);
      }, "call$1", "get$_handle_input_11_3", 4, 0, 1],
      $asAppView: function() {
        return [L.MaterialInputComponent];
      },
      static: {
        ViewMaterialInputComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new Q.ViewMaterialInputComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, L.MaterialInputComponent));
          t2 = document.createElement("material-input");
          H.interceptedTypeCheck(t2, "$isHtmlElement");
          t1.rootEl = t2;
          t2.className = "themeable";
          t2.tabIndex = -1;
          t2 = $.ViewMaterialInputComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialInputComponent());
            $.ViewMaterialInputComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewMaterialInputComponent1: {
      "^": "AppView;0_material_input_template$_compView_1,0_MaterialIconComponent_1_5,0_expr_0,0_expr_1,0_expr_2,0_expr_3,0_el_0,0_el_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1 = document.createElement("span");
        this._el_0 = t1;
        t1.className = "leading-text";
        this.addShimE$1(t1);
        t1 = M.ViewMaterialIconComponent0$(this, 1);
        this._material_input_template$_compView_1 = t1;
        t1 = t1.rootEl;
        this._el_1 = t1;
        J.append$1$x(this._el_0, t1);
        t1 = this._el_1;
        t1.className = "glyph leading";
        this.addShimC$1(t1);
        t1 = new Y.MaterialIconComponent(this._el_1);
        this._MaterialIconComponent_1_5 = t1;
        this._material_input_template$_compView_1.create$2(0, t1, []);
        this.init0$1(this._el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, changed, currVal_1;
        _ctx = this.ctx;
        _ctx.leadingGlyph;
        t1 = this._expr_3;
        if (t1 !== "") {
          this._MaterialIconComponent_1_5.set$icon(0, "");
          this._expr_3 = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_input_template$_compView_1.viewData.set$cdMode(1);
        _ctx.floatingLabel;
        t1 = this._expr_0;
        if (t1 !== false) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_0, "$isHtmlElement"), "floated-label", false);
          this._expr_0 = false;
        }
        currVal_1 = _ctx._disabled;
        t1 = this._expr_1;
        if (t1 != currVal_1) {
          t1 = this._el_1;
          this.setAttr$3(t1, "disabled", currVal_1 == null ? null : C.JSBool_methods.toString$0(currVal_1));
          this._expr_1 = currVal_1;
        }
        this._material_input_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_input_template$_compView_1.destroy$0();
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent2: {
      "^": "AppView;0_expr_0,0_expr_1,0_el_0,0_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1;
        doc = document;
        t1 = doc.createElement("span");
        this._el_0 = t1;
        t1.className = "leading-text";
        this.addShimE$1(t1);
        t1 = doc.createTextNode("");
        this._text_1 = t1;
        J.append$1$x(this._el_0, t1);
        this.init0$1(this._el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1;
        _ctx = this.ctx;
        _ctx.floatingLabel;
        t1 = this._expr_0;
        if (t1 !== false) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_0, "$isHtmlElement"), "floated-label", false);
          this._expr_0 = false;
        }
        _ctx._leadingText;
        t1 = this._expr_1;
        if (t1 !== "") {
          this._text_1.textContent = "";
          this._expr_1 = "";
        }
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent3: {
      "^": "AppView;0_expr_0,0_expr_1,0_el_0,0_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1;
        doc = document;
        t1 = doc.createElement("span");
        this._el_0 = t1;
        t1.className = "trailing-text";
        this.addShimE$1(t1);
        t1 = doc.createTextNode("");
        this._text_1 = t1;
        J.append$1$x(this._el_0, t1);
        this.init0$1(this._el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1;
        _ctx = this.ctx;
        _ctx.floatingLabel;
        t1 = this._expr_0;
        if (t1 !== false) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_0, "$isHtmlElement"), "floated-label", false);
          this._expr_0 = false;
        }
        _ctx._trailingText;
        t1 = this._expr_1;
        if (t1 !== "") {
          this._text_1.textContent = "";
          this._expr_1 = "";
        }
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent4: {
      "^": "AppView;0_material_input_template$_compView_1,0_MaterialIconComponent_1_5,0_expr_0,0_expr_1,0_expr_2,0_expr_3,0_el_0,0_el_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1 = document.createElement("span");
        this._el_0 = t1;
        t1.className = "trailing-text";
        this.addShimE$1(t1);
        t1 = M.ViewMaterialIconComponent0$(this, 1);
        this._material_input_template$_compView_1 = t1;
        t1 = t1.rootEl;
        this._el_1 = t1;
        J.append$1$x(this._el_0, t1);
        t1 = this._el_1;
        t1.className = "glyph trailing";
        this.addShimC$1(t1);
        t1 = new Y.MaterialIconComponent(this._el_1);
        this._MaterialIconComponent_1_5 = t1;
        this._material_input_template$_compView_1.create$2(0, t1, []);
        this.init0$1(this._el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, changed, currVal_1;
        _ctx = this.ctx;
        _ctx.trailingGlyph;
        t1 = this._expr_3;
        if (t1 !== "") {
          this._MaterialIconComponent_1_5.set$icon(0, "");
          this._expr_3 = "";
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_input_template$_compView_1.viewData.set$cdMode(1);
        _ctx.floatingLabel;
        t1 = this._expr_0;
        if (t1 !== false) {
          this.updateClass$3(H.interceptedTypeCheck(this._el_0, "$isHtmlElement"), "floated-label", false);
          this._expr_0 = false;
        }
        currVal_1 = _ctx._disabled;
        t1 = this._expr_1;
        if (t1 != currVal_1) {
          t1 = this._el_1;
          this.setAttr$3(t1, "disabled", currVal_1 == null ? null : C.JSBool_methods.toString$0(currVal_1));
          this._expr_1 = currVal_1;
        }
        this._material_input_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_input_template$_compView_1.destroy$0();
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent5: {
      "^": "AppView;0_NgSwitch_0_5,0_appEl_1,0_NgSwitchWhen_1_9,0_appEl_2,0_NgSwitchWhen_2_9,0_appEl_3,0_NgSwitchWhen_3_9,0_appEl_4,0_NgIf_4_9,0_expr_0,0_expr_1,0_expr_2,0_expr_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _el_0, t1, _anchor_1, t2, t3, t4, _anchor_2, _anchor_3, _anchor_4;
        _el_0 = document.createElement("div");
        _el_0.className = "bottom-section";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        this._NgSwitch_0_5 = new V.NgSwitch(false, new H.JsLinkedHashMap(0, 0, [null, [P.List, V.SwitchView]]), H.setRuntimeTypeInfo([], [V.SwitchView]));
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(_el_0);
        t2.append$1(_el_0, _anchor_1);
        t3 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._appEl_1 = t3;
        t4 = new V.NgSwitchWhen(C.C_Object);
        t4._switch = this._NgSwitch_0_5;
        t4._ng_switch$_view = new V.SwitchView(t3, new D.TemplateRef(t3, Q.material_input_template__viewFactory_MaterialInputComponent6$closure()));
        this._NgSwitchWhen_1_9 = t4;
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_2);
        t4 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._appEl_2 = t4;
        t3 = new V.NgSwitchWhen(C.C_Object);
        t3._switch = this._NgSwitch_0_5;
        t3._ng_switch$_view = new V.SwitchView(t4, new D.TemplateRef(t4, Q.material_input_template__viewFactory_MaterialInputComponent7$closure()));
        this._NgSwitchWhen_2_9 = t3;
        _anchor_3 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_3);
        t3 = new V.ViewContainer(3, 0, this, _anchor_3);
        this._appEl_3 = t3;
        t4 = new V.NgSwitchWhen(C.C_Object);
        t4._switch = this._NgSwitch_0_5;
        t4._ng_switch$_view = new V.SwitchView(t3, new D.TemplateRef(t3, Q.material_input_template__viewFactory_MaterialInputComponent8$closure()));
        this._NgSwitchWhen_3_9 = t4;
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_4);
        t2 = new V.ViewContainer(4, 0, this, _anchor_4);
        this._appEl_4 = t2;
        this._NgIf_4_9 = new K.NgIf(new D.TemplateRef(t2, Q.material_input_template__viewFactory_MaterialInputComponent9$closure()), t2, false);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_NgSwitch_Mkn)
          t1 = nodeIndex <= 4;
        else
          t1 = false;
        if (t1)
          return this._NgSwitch_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, currVal_1, currVal_2, currVal_3;
        _ctx = this.ctx;
        currVal_0 = _ctx.bottomPanelState;
        t1 = this._expr_0;
        if (t1 !== currVal_0) {
          this._NgSwitch_0_5.set$ngSwitch(currVal_0);
          this._expr_0 = currVal_0;
        }
        currVal_1 = _ctx.errorState;
        t1 = this._expr_1;
        if (t1 !== currVal_1) {
          this._NgSwitchWhen_1_9.set$ngSwitchWhen(currVal_1);
          this._expr_1 = currVal_1;
        }
        currVal_2 = _ctx.hintState;
        t1 = this._expr_2;
        if (t1 !== currVal_2) {
          this._NgSwitchWhen_2_9.set$ngSwitchWhen(currVal_2);
          this._expr_2 = currVal_2;
        }
        currVal_3 = _ctx.emptyState;
        t1 = this._expr_3;
        if (t1 !== currVal_3) {
          this._NgSwitchWhen_3_9.set$ngSwitchWhen(currVal_3);
          this._expr_3 = currVal_3;
        }
        t1 = this._NgIf_4_9;
        _ctx.showCharacterCount;
        t1.set$ngIf(false);
        this._appEl_1.detectChangesInNestedViews$0();
        this._appEl_2.detectChangesInNestedViews$0();
        this._appEl_3.detectChangesInNestedViews$0();
        this._appEl_4.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._appEl_1.destroyNestedViews$0();
        this._appEl_2.destroyNestedViews$0();
        this._appEl_3.destroyNestedViews$0();
        this._appEl_4.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent6: {
      "^": "AppView;0_expr_0,0_expr_1,0_expr_2,0_expr_3,0_el_0,0_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1, t2, _text_2;
        doc = document;
        t1 = doc.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._el_0 = t1;
        t1.className = "error-text";
        C.DivElement_methods.setAttribute$2(t1, "role", "alert");
        this.addShimC$1(this._el_0);
        t1 = doc.createTextNode("");
        this._text_1 = t1;
        t2 = this._el_0;
        (t2 && C.DivElement_methods).append$1(t2, t1);
        _text_2 = doc.createTextNode(" ");
        t1 = this._el_0;
        (t1 && C.DivElement_methods).append$1(t1, _text_2);
        this.project$2(this._el_0, 1);
        this.init0$1(this._el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, currVal_1, currVal_2, currVal_3;
        _ctx = this.ctx;
        currVal_0 = _ctx.focused;
        t1 = this._expr_0;
        if (t1 !== currVal_0) {
          this.updateClass$3(this._el_0, "focused", currVal_0);
          this._expr_0 = currVal_0;
        }
        currVal_1 = _ctx.get$invalid(_ctx);
        t1 = this._expr_1;
        if (t1 !== currVal_1) {
          this.updateClass$3(this._el_0, "invalid", currVal_1);
          this._expr_1 = currVal_1;
        }
        currVal_2 = Q.interpolate0(!_ctx.get$invalid(_ctx));
        t1 = this._expr_2;
        if (t1 !== currVal_2) {
          this.setAttr$3(this._el_0, "aria-hidden", currVal_2);
          this._expr_2 = currVal_2;
        }
        currVal_3 = Q.interpolate0(_ctx.get$errorMessage(_ctx));
        t1 = this._expr_3;
        if (t1 !== currVal_3) {
          this._text_1.textContent = currVal_3;
          this._expr_3 = currVal_3;
        }
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent7: {
      "^": "AppView;0_expr_0,0_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("div");
        _el_0.className = "hint-text";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = doc.createTextNode("");
        this._text_1 = t1;
        J.append$1$x(_el_0, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(this.ctx._hintText);
        t1 = this._expr_0;
        if (t1 !== currVal_0) {
          this._text_1.textContent = currVal_0;
          this._expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent8: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("div");
        _el_0.className = "spaceholder";
        _el_0.tabIndex = -1;
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\xa0"));
        t2 = W.Event;
        t1.addEventListener$2(_el_0, "focus", this.eventHandler1$2$1(this.get$_handle_focus_0_0(), t2, t2));
        this.init0$1(_el_0);
      },
      _handle_focus_0_0$1: [function($$event) {
        J.stopPropagation$0$x($$event);
      }, "call$1", "get$_handle_focus_0_0", 4, 0, 1],
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    },
    _ViewMaterialInputComponent9: {
      "^": "AppView;0_expr_0,0_expr_1,0_el_0,0_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1, t2;
        doc = document;
        t1 = doc.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._el_0 = t1;
        C.DivElement_methods.setAttribute$2(t1, "aria-hidden", "true");
        t1 = this._el_0;
        t1.className = "counter";
        this.addShimC$1(t1);
        t1 = doc.createTextNode("");
        this._text_1 = t1;
        t2 = this._el_0;
        (t2 && C.DivElement_methods).append$1(t2, t1);
        this.init0$1(this._el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, currVal_1;
        _ctx = this.ctx;
        currVal_0 = _ctx.get$invalid(_ctx);
        t1 = this._expr_0;
        if (t1 !== currVal_0) {
          this.updateClass$3(this._el_0, "invalid", currVal_0);
          this._expr_0 = currVal_0;
        }
        t1 = H.S(_ctx._inputTextLength);
        currVal_1 = Q.interpolate0(t1);
        t1 = this._expr_1;
        if (t1 !== currVal_1) {
          this._text_1.textContent = currVal_1;
          this._expr_1 = currVal_1;
        }
      },
      $asAppView: function() {
        return [L.MaterialInputComponent];
      }
    }
  }], ["", "package:angular_components/material_input/material_input_default_value_accessor.dart",, Z, {
    "^": "",
    MaterialInputDefaultValueAccessor: {
      "^": "BaseMaterialInputValueAccessor;disposer,input,_cd",
      registerOnChange$1: function(callback) {
        var t1;
        H.functionTypeCheck(callback, {func: 1, args: [,], named: {rawValue: P.String}});
        t1 = this.input._keypressController;
        this.disposer.addStreamSubscription$1$1(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new Z.MaterialInputDefaultValueAccessor_registerOnChange_closure(callback)), P.String);
      }
    },
    MaterialInputDefaultValueAccessor_registerOnChange_closure: {
      "^": "Closure:26;callback",
      call$1: [function(value) {
        this.callback.call$1(H.stringTypeCheck(value));
      }, null, null, 4, 0, null, 1, "call"]
    },
    BaseMaterialInputValueAccessor: {
      "^": "Object;",
      BaseMaterialInputValueAccessor$2: function(input, _cd) {
        var t1 = this._cd;
        if (!(t1 == null))
          t1.valueAccessor = this;
        this.disposer.addFunction$1(new Z.BaseMaterialInputValueAccessor_closure(this));
      },
      writeValue$1: ["super$BaseMaterialInputValueAccessor$writeValue", function(_, newValue) {
        this.input.set$inputText(H.stringTypeCheck(newValue));
      }],
      registerOnTouched$1: function(callback) {
        var t1, t2, sub;
        t1 = {};
        H.functionTypeCheck(callback, {func: 1});
        t1.sub = null;
        t2 = this.input._blurController;
        sub = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new Z.BaseMaterialInputValueAccessor_registerOnTouched_closure(t1, callback));
        t1.sub = sub;
        this.disposer.addStreamSubscription$1$1(sub, null);
      },
      onDisabledChanged$1: [function(isDisabled) {
        var t1 = this.input;
        t1._disabled = H.boolTypeCheck(isDisabled);
        t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
      }, "call$1", "get$onDisabledChanged", 4, 0, 21, 24],
      $isControlValueAccessor: 1,
      $asControlValueAccessor: Isolate.functionThatReturnsNull
    },
    BaseMaterialInputValueAccessor_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1 = this.$this._cd;
        if (!(t1 == null))
          t1.valueAccessor = null;
      }
    },
    BaseMaterialInputValueAccessor_registerOnTouched_closure: {
      "^": "Closure:52;_box_0,callback",
      call$1: [function(_) {
        H.interceptedTypeCheck(_, "$isFocusEvent");
        this._box_0.sub.cancel$0(0);
        this.callback.call$0();
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["", "package:angular_components/material_input/material_number_accessor.dart",, F, {
    "^": "",
    MaterialNumberValueAccessor: {
      "^": "BaseMaterialInputValueAccessor;_numberFormat,_updateStream,_checkInteger,disposer,input,_cd",
      MaterialNumberValueAccessor$_$6: function(_updateStream, _checkInteger, _numberFormat, input, control, blurFormat) {
        var t1;
        if (blurFormat) {
          t1 = input._blurController;
          this.disposer.addStreamSubscription$1$1(new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new F.MaterialNumberValueAccessor$__closure(this, input)), W.FocusEvent);
        }
      },
      writeValue$1: function(_, newValue) {
        var t1;
        if (newValue == null)
          this.super$BaseMaterialInputValueAccessor$writeValue(0, "");
        t1 = this._parseNumber$1(this.input._inputText);
        if (t1 == null ? newValue != null : t1 !== newValue)
          this.super$BaseMaterialInputValueAccessor$writeValue(0, this._numberFormat.format$1(newValue));
      },
      registerOnChange$1: function(callback) {
        this.disposer.addStreamSubscription$1$1(this._updateStream.listen$1(new F.MaterialNumberValueAccessor_registerOnChange_closure(this, H.functionTypeCheck(callback, {func: 1, args: [,], named: {rawValue: P.String}}))), null);
      },
      _parseNumber$1: function(input) {
        var value, t1, t2, t3, exception;
        if (input == null || input === "NaN")
          return;
        try {
          t1 = this._checkInteger;
          if (t1 && J.contains$1$asx(input, this._numberFormat._symbols.DECIMAL_SEP))
            return;
          t2 = this._numberFormat;
          t3 = new T._NumberParser(t2, input, new T._Stream(input, 0), new P.StringBuffer(""), false, false, false, false, false, false, 1);
          t3.scale = t2._internalMultiplier;
          t2 = t3.parse$0(0);
          t3.value = t2;
          value = t2;
          t1 = t1 ? J.toInt$0$n(value) : value;
          return t1;
        } catch (exception) {
          if (!!J.getInterceptor$(H.unwrapException(exception)).$isFormatException)
            return;
          else
            throw exception;
        }
      },
      static: {
        MaterialNumberValueAccessor_MaterialNumberValueAccessor: function(input, control, numberFormat, changeUpdateAttr, keypressUpdateAttr, integer, blurFormat) {
          var changeUpdate, keypressUpdate, t1, updateStream;
          changeUpdate = E.attributeToBool(changeUpdateAttr, false);
          keypressUpdate = E.attributeToBool(keypressUpdateAttr, false);
          if (changeUpdate) {
            t1 = input._changeController;
            updateStream = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
          } else if (keypressUpdate) {
            t1 = input._keypressController;
            updateStream = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
          } else {
            t1 = input._blurController;
            updateStream = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
          }
          if (numberFormat == null)
            numberFormat = T.NumberFormat$decimalPattern(null);
          return F.MaterialNumberValueAccessor$_(updateStream, E.attributeToBool(integer, false), numberFormat, input, control, E.attributeToBool(blurFormat, false));
        },
        MaterialNumberValueAccessor$_: function(_updateStream, _checkInteger, _numberFormat, input, control, blurFormat) {
          var t1 = new F.MaterialNumberValueAccessor(_numberFormat, _updateStream, _checkInteger, new R.Disposer(true, false), input, control);
          t1.BaseMaterialInputValueAccessor$2(input, control);
          t1.MaterialNumberValueAccessor$_$6(_updateStream, _checkInteger, _numberFormat, input, control, blurFormat);
          return t1;
        }
      }
    },
    MaterialNumberValueAccessor$__closure: {
      "^": "Closure:52;$this,input",
      call$1: [function(_) {
        var t1, t2, parsedNumber;
        H.interceptedTypeCheck(_, "$isFocusEvent");
        t1 = this.input;
        if (t1 == null)
          return;
        t2 = this.$this;
        parsedNumber = t2._parseNumber$1(t1._inputText);
        if (parsedNumber != null)
          t2.super$BaseMaterialInputValueAccessor$writeValue(0, t2._numberFormat.format$1(parsedNumber));
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialNumberValueAccessor_registerOnChange_closure: {
      "^": "Closure:4;$this,callback",
      call$1: [function(_) {
        var t1, t2, rawValue;
        t1 = this.$this;
        t2 = t1.input;
        if (t2 == null)
          return;
        rawValue = t2._inputText;
        this.callback.call$2$rawValue(t1._parseNumber$1(rawValue), rawValue);
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialNumberValidator: {
      "^": "Object;",
      validate$1: function(control) {
        var t1;
        if (control._model$_value == null) {
          t1 = control._rawValue;
          t1 = !(t1 == null || C.JSString_methods.trim$0(t1).length === 0);
        } else
          t1 = false;
        if (t1)
          return P.LinkedHashMap_LinkedHashMap$_literal(["material-input-number-error", $.$get$messageLookup().lookupMessage$5("Enter a number", null, null, null, "Error message when input is not a number.")], P.String, null);
        return;
      },
      $isValidator: 1
    }
  }], ["", "package:angular_components/material_list/material_list.dart",, B, {
    "^": "",
    MaterialListComponent: {
      "^": "Object;size>",
      set$width: function(_, val) {
        val = E.getInt(val, 0);
        if (typeof val !== "number")
          return val.$ge();
        if (val >= 0 && val < 6) {
          if (val < 0 || val >= 6)
            return H.ioore(C.List_huV, val);
          this.size = C.List_huV[val];
        }
      }
    }
  }], ["asset_angular_components_lib_material_list_material_list.scss.css.shim.dart", "package:angular_components/material_list/material_list.scss.css.shim.dart",, K, {}], ["", "package:angular_components/material_list/material_list.template.dart",, B, {
    "^": "",
    ViewMaterialListComponent0: {
      "^": "AppView;0_material_list_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.project$2(this.initViewRoot$1(this.rootEl), 0);
        this.init$2(C.List_empty, null);
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1;
        currVal_0 = J.get$size$z(this.ctx);
        t1 = this._material_list_template$_expr_0;
        if (t1 !== currVal_0) {
          this.setAttr$3(this.rootEl, "size", currVal_0);
          this._material_list_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [B.MaterialListComponent];
      },
      static: {
        ViewMaterialListComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new B.ViewMaterialListComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, B.MaterialListComponent));
          t2 = document.createElement("material-list");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialListComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialListComponent());
            $.ViewMaterialListComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_menu/menu_item_affix_list.dart",, Q, {
    "^": "",
    MenuItemAffixListComponent: {
      "^": "Object;_menu_item_affix_list$_cdRef,0_itemChangeStreamSub,0_menu_item_affix_list$_items,_menu_item_affix_list$_menuRoot,_menu_item_affix_list$_disabled",
      set$_menu_item_affix_list$_items: function(_items) {
        this._menu_item_affix_list$_items = H.assertSubtype(_items, "$isObservableList", [L.MenuItemAffix], "$asObservableList");
      },
      set$items: function(_, items) {
        var t1;
        H.assertSubtype(items, "$isObservableList", [L.MenuItemAffix], "$asObservableList");
        this.set$_menu_item_affix_list$_items(items);
        t1 = this._itemChangeStreamSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = items.get$listChanges();
        this._itemChangeStreamSub = t1.listen$1(new Q.MenuItemAffixListComponent_items_closure(this));
      },
      handleActionIconTrigger$2: function(icon, $event) {
        var t1;
        if (this._menu_item_affix_list$_disabled)
          return;
        t1 = icon.get$action(icon);
        t1.call$0();
        $event.stopPropagation();
        if (icon.get$shouldCloseMenuOnTrigger()) {
          t1 = this._menu_item_affix_list$_menuRoot;
          if (!(t1 == null)) {
            t1.visible = false;
            t1._dropdown.set$visible(0, false);
          }
        }
      },
      getIcon$1: function(affix) {
        return C.JSNull_methods.get$icon(affix);
      },
      getText$1: function(affix) {
        return C.JSNull_methods.get$text(affix);
      }
    },
    MenuItemAffixListComponent_items_closure: {
      "^": "Closure:120;$this",
      call$1: [function(_) {
        H.assertSubtype(_, "$isList", [[Y.ListChangeRecord, L.MenuItemAffix]], "$asList");
        this.$this._menu_item_affix_list$_cdRef.appView.markPathToRootAsCheckOnce$0();
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["asset_angular_components_lib_material_menu_menu_item_affix_list.scss.css.shim.dart", "package:angular_components/material_menu/menu_item_affix_list.scss.css.shim.dart",, X, {}], ["", "package:angular_components/material_menu/menu_item_affix_list.template.dart",, N, {
    "^": "",
    viewFactory_MenuItemAffixListComponent1: [function(parentView, parentIndex) {
      var t1 = new N._ViewMenuItemAffixListComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.MenuItemAffixListComponent));
      t1.componentType = $.ViewMenuItemAffixListComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent1$closure", 8, 0, 30],
    viewFactory_MenuItemAffixListComponent2: [function(parentView, parentIndex) {
      var t1 = new N._ViewMenuItemAffixListComponent2(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.MenuItemAffixListComponent));
      t1.componentType = $.ViewMenuItemAffixListComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent2$closure", 8, 0, 30],
    viewFactory_MenuItemAffixListComponent3: [function(parentView, parentIndex) {
      var t1 = new N._ViewMenuItemAffixListComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.MenuItemAffixListComponent));
      t1.componentType = $.ViewMenuItemAffixListComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent3$closure", 8, 0, 30],
    viewFactory_MenuItemAffixListComponent4: [function(parentView, parentIndex) {
      var t1 = new N._ViewMenuItemAffixListComponent4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.MenuItemAffixListComponent));
      t1.componentType = $.ViewMenuItemAffixListComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent4$closure", 8, 0, 30],
    viewFactory_MenuItemAffixListComponent5: [function(parentView, parentIndex) {
      var t1 = new N._ViewMenuItemAffixListComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Q.MenuItemAffixListComponent));
      t1.componentType = $.ViewMenuItemAffixListComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent5$closure", 8, 0, 30],
    ViewMenuItemAffixListComponent0: {
      "^": "AppView;0_menu_item_affix_list_template$_appEl_1,0_menu_item_affix_list_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, t3, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        t3 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_1);
        t3 = new V.ViewContainer(1, null, this, _anchor_1);
        this._menu_item_affix_list_template$_appEl_1 = t3;
        this._menu_item_affix_list_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, N.menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent1$closure()), t3, false);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2;
        _ctx = this.ctx;
        t1 = this._menu_item_affix_list_template$_NgIf_1_9;
        t2 = _ctx._menu_item_affix_list$_items;
        t2 = t2 == null ? null : P.ListMixin.prototype.get$isNotEmpty.call(t2, t2);
        t1.set$ngIf(t2 == null ? false : t2);
        this._menu_item_affix_list_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._menu_item_affix_list_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [Q.MenuItemAffixListComponent];
      }
    },
    _ViewMenuItemAffixListComponent1: {
      "^": "AppView;0_menu_item_affix_list_template$_appEl_1,0_menu_item_affix_list_template$_NgFor_1_9,0_menu_item_affix_list_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2;
        t1 = document;
        _text_0 = t1.createTextNode("\n  ");
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_affix_list_template$_appEl_1 = t2;
        this._menu_item_affix_list_template$_NgFor_1_9 = new R.NgFor(t2, new D.TemplateRef(t2, N.menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent2$closure()));
        this.init$2([_text_0, t2, t1.createTextNode("\n")], null);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = this.ctx._menu_item_affix_list$_items;
        t1 = this._menu_item_affix_list_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._menu_item_affix_list_template$_NgFor_1_9.set$ngForOf(currVal_0);
          this._menu_item_affix_list_template$_expr_0 = currVal_0;
        }
        this._menu_item_affix_list_template$_NgFor_1_9.ngDoCheck$0();
        this._menu_item_affix_list_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._menu_item_affix_list_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [Q.MenuItemAffixListComponent];
      }
    },
    _ViewMenuItemAffixListComponent2: {
      "^": "AppView;0_menu_item_affix_list_template$_appEl_1,0_menu_item_affix_list_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2;
        t1 = document;
        _text_0 = t1.createTextNode("\n    ");
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_affix_list_template$_appEl_1 = t2;
        this._menu_item_affix_list_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, N.menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent3$closure()), t2, false);
        this.init$2([_text_0, t2, t1.createTextNode("\n  ")], null);
      },
      detectChangesInternal$0: function() {
        var local_affix = H.interceptedTypeCheck(this.locals.$index(0, "$implicit"), "$isMenuItemAffix");
        this._menu_item_affix_list_template$_NgIf_1_9.set$ngIf(local_affix.get$isVisible());
        this._menu_item_affix_list_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._menu_item_affix_list_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [Q.MenuItemAffixListComponent];
      }
    },
    _ViewMenuItemAffixListComponent3: {
      "^": "AppView;0_menu_item_affix_list_template$_appEl_1,0_menu_item_affix_list_template$_NgIf_1_9,0_menu_item_affix_list_template$_appEl_3,0_menu_item_affix_list_template$_NgIf_3_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2, t3, _text_2, _text_4;
        t1 = document;
        _text_0 = t1.createTextNode("\n      ");
        t2 = $.$get$_viewContainerAnchor();
        t3 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_affix_list_template$_appEl_1 = t3;
        this._menu_item_affix_list_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, N.menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent4$closure()), t3, false);
        _text_2 = t1.createTextNode("\n      ");
        t2 = new V.ViewContainer(3, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment"));
        this._menu_item_affix_list_template$_appEl_3 = t2;
        this._menu_item_affix_list_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t2, N.menu_item_affix_list_template__viewFactory_MenuItemAffixListComponent5$closure()), t2, false);
        _text_4 = t1.createTextNode("\n    ");
        this.init$2([_text_0, this._menu_item_affix_list_template$_appEl_1, _text_2, t2, _text_4], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1;
        _ctx = this.ctx;
        H.interceptedTypeCheck(this.parentView.locals.$index(0, "$implicit"), "$isMenuItemAffix");
        t1 = this._menu_item_affix_list_template$_NgIf_1_9;
        _ctx.toString;
        t1.set$ngIf(false);
        this._menu_item_affix_list_template$_NgIf_3_9.set$ngIf(false);
        this._menu_item_affix_list_template$_appEl_1.detectChangesInNestedViews$0();
        this._menu_item_affix_list_template$_appEl_3.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._menu_item_affix_list_template$_appEl_1.destroyNestedViews$0();
        this._menu_item_affix_list_template$_appEl_3.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [Q.MenuItemAffixListComponent];
      }
    },
    _ViewMenuItemAffixListComponent4: {
      "^": "AppView;0_menu_item_affix_list_template$_compView_0,0_menu_item_affix_list_template$_ButtonDirective_0_5,0_menu_item_affix_list_template$_MaterialIconComponent_0_6,0_NgClass_0_7,0_menu_item_affix_list_template$_expr_0,0_menu_item_affix_list_template$_expr_2,0_menu_item_affix_list_template$_expr_3,0_menu_item_affix_list_template$_expr_4,0_menu_item_affix_list_template$_expr_5,0_menu_item_affix_list_template$_expr_7,0_menu_item_affix_list_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, subscription_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._menu_item_affix_list_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._menu_item_affix_list_template$_el_0 = t1;
        J.setAttribute$2$x(t1, "baseline", "");
        J.setAttribute$2$x(this._menu_item_affix_list_template$_el_0, "buttonDecorator", "");
        t1 = this._menu_item_affix_list_template$_el_0;
        t1.className = "material-list-item-primary secondary-icon";
        this.addShimC$1(t1);
        t1 = this._menu_item_affix_list_template$_el_0;
        t2 = W.UIEvent;
        this._menu_item_affix_list_template$_ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, t1), false);
        this._menu_item_affix_list_template$_MaterialIconComponent_0_6 = new Y.MaterialIconComponent(t1);
        this._NgClass_0_7 = new Y.NgClass(t1, H.setRuntimeTypeInfo([], [P.String]));
        document.createTextNode("\n      ");
        this._menu_item_affix_list_template$_compView_0.create$2(0, this._menu_item_affix_list_template$_MaterialIconComponent_0_6, []);
        t1 = W.Event;
        J.addEventListener$2$x(this._menu_item_affix_list_template$_el_0, "click", this.eventHandler1$2$1(this._menu_item_affix_list_template$_ButtonDirective_0_5.instance.get$handleClick(), t1, W.MouseEvent));
        J.addEventListener$2$x(this._menu_item_affix_list_template$_el_0, "keypress", this.eventHandler1$2$1(this._menu_item_affix_list_template$_ButtonDirective_0_5.instance.get$handleKeyPress(), t1, W.KeyboardEvent));
        t1 = this._menu_item_affix_list_template$_ButtonDirective_0_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_0_0(), t2, t2));
        this.init$2([this._menu_item_affix_list_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_ButtonDirective_hH0)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._menu_item_affix_list_template$_ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, local_affix, t2;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        local_affix = H.interceptedTypeCheck(this.parentView.parentView.locals.$index(0, "$implicit"), "$isMenuItemAffix");
        _ctx.toString;
        t2 = this._menu_item_affix_list_template$_expr_4;
        if (t2 !== true) {
          this._menu_item_affix_list_template$_ButtonDirective_0_5.instance.disabled = true;
          this._menu_item_affix_list_template$_expr_4 = true;
        }
        if (t1 === 0)
          this._menu_item_affix_list_template$_ButtonDirective_0_5.instance.ngOnInit$0();
        _ctx.getIcon$1(local_affix);
      },
      destroyInternal$0: function() {
        this._menu_item_affix_list_template$_compView_0.destroy$0();
        var t1 = this._NgClass_0_7;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      _handle_trigger_0_0$1: [function($$event) {
        var local_affix, t1;
        local_affix = H.interceptedTypeCheck(this.parentView.parentView.locals.$index(0, "$implicit"), "$isMenuItemAffix");
        t1 = this.ctx;
        t1.handleActionIconTrigger$2(t1.getIcon$1(local_affix), H.interceptedTypeCheck($$event, "$isEvent"));
      }, "call$1", "get$_handle_trigger_0_0", 4, 0, 1],
      $asAppView: function() {
        return [Q.MenuItemAffixListComponent];
      }
    },
    _ViewMenuItemAffixListComponent5: {
      "^": "AppView;0_NgClass_0_5,0_menu_item_affix_list_template$_expr_1,0_menu_item_affix_list_template$_expr_2,0_menu_item_affix_list_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "material-list-item-primary caption-text";
        this.addShimE$1(_el_0);
        this._NgClass_0_5 = new Y.NgClass(_el_0, H.setRuntimeTypeInfo([], [P.String]));
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n        "));
        t2 = doc.createTextNode("");
        this._menu_item_affix_list_template$_text_2 = t2;
        t1.append$1(_el_0, t2);
        t1.append$1(_el_0, doc.createTextNode("\n      "));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, local_affix, currVal_1;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        local_affix = H.interceptedTypeCheck(this.parentView.parentView.locals.$index(0, "$implicit"), "$isMenuItemAffix");
        if (t1 === 0)
          this._NgClass_0_5.set$initialClasses("material-list-item-primary caption-text");
        currVal_1 = local_affix.get$cssClass();
        this._NgClass_0_5.set$rawClass(currVal_1);
        this._menu_item_affix_list_template$_expr_1 = currVal_1;
        this._NgClass_0_5.ngDoCheck$0();
        Q.interpolate0(_ctx.getText$1(local_affix));
      },
      destroyInternal$0: function() {
        var t1 = this._NgClass_0_5;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
      },
      $asAppView: function() {
        return [Q.MenuItemAffixListComponent];
      }
    }
  }], ["", "package:angular_components/material_menu/menu_item_groups.dart",, A, {
    "^": "",
    MenuItemGroupsComponent: {
      "^": "Object;_menu_item_groups$_idGenerator,_menu_item_groups$_changeDetector,0menu,0focusableItems,_closeOnPressLeft,_isMouseDriven,0_activeModel,0_activeModelChange,_activateFirstItemOnInit,_menuRoot,_dropdownHandle,0_subMenuOpener,0_hoveredItem,0_submenuParent,_autoFocusItemId,isKeyboardOpenedSubmenu,_selected,0highlighter,0_highlight,0popupClass,_highlightCache",
      set$focusableItems: function(focusableItems) {
        this.focusableItems = H.assertSubtype(focusableItems, "$isList", [K.FocusableActivateItem], "$asList");
      },
      set$_autoFocusItemId: function(_autoFocusItemId) {
        this._autoFocusItemId = H.assertSubtype(_autoFocusItemId, "$isOptional", [P.String], "$asOptional");
      },
      get$width: function(_) {
        var t1 = this.menu;
        t1 = t1 == null ? null : t1._width;
        return t1 == null ? 0 : t1;
      },
      set$activeModel: function(v) {
        var t1;
        this._activeModel = v;
        t1 = this._activeModelChange;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = v._active_item$_modelChanged;
        this._activeModelChange = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new A.MenuItemGroupsComponent_activeModel_closure(this));
      },
      get$hasHighlight: function() {
        return false;
      },
      highlighted$1: function(input) {
        var t1, t2;
        t1 = this._highlightCache;
        if (t1.containsKey$1(0, input))
          return t1.$index(0, input);
        t2 = C.JSNull_methods.highlight$2(this.highlighter, input, H.setRuntimeTypeInfo([this._highlight], [P.String]));
        t1.$indexSet(0, input, t2);
        return t2;
      },
      onMouseOver$1: [function(_, $event) {
        var item;
        H.interceptedTypeCheck($event, "$isMouseEvent");
        if (!this._isMouseDriven)
          return;
        item = this._itemForTarget$1(W._convertNativeToDart_EventTarget($event.target));
        if (item == null)
          return;
        this._activeModel.activate$1(null);
        this._hoveredItem = item;
        this._subMenuOpener.start$0(0);
      }, "call$1", "get$onMouseOver", 5, 0, 18, 6],
      onMouseOut$1: [function(_, $event) {
        var item;
        H.interceptedTypeCheck($event, "$isMouseEvent");
        if (!this._isMouseDriven)
          return;
        item = this._itemForTarget$1(W._convertNativeToDart_EventTarget($event.target));
        if (item == null)
          return;
        if (item === this._hoveredItem)
          this._hoveredItem = null;
        this._subMenuOpener._reset$1(false);
      }, "call$1", "get$onMouseOut", 5, 0, 18],
      onMouseMove$1: [function(_, _0) {
        H.interceptedTypeCheck(_0, "$isMouseEvent");
        this._isMouseDriven = true;
      }, "call$1", "get$onMouseMove", 5, 0, 18],
      onSubMenuItemSelected$1: [function(item) {
        this._selected.add$1(0, H.interceptedTypeCheck(item, "$isMenuItem"));
      }, "call$1", "get$onSubMenuItemSelected", 4, 0, 121],
      handleKeydown$2$shouldPreventDefault: [function($event, shouldPreventDefault) {
        var t1, activeMenuItem, t2, t3;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        this._isMouseDriven = false;
        t1 = $event.keyCode;
        if (t1 === 9)
          return;
        activeMenuItem = H.interceptedTypeCast(this._activeModel.get$activeItem(), "$isMenuItem");
        switch (t1) {
          case 38:
            this._activeHoveredItemIfNone$0();
            t1 = this._activeModel;
            t2 = t1._items;
            if (t2.get$isEmpty(t2))
              t1._activeIndex = -1;
            else {
              t2 = t1._activeIndex;
              if (t2 > 0)
                t1._activeIndex = t2 - 1;
              else {
                t2 = t1._items;
                t2 = t2.get$length(t2);
                if (typeof t2 !== "number")
                  return t2.$sub();
                t1._activeIndex = t2 - 1;
              }
            }
            t1._active_item$_modelChanged.add$1(0, null);
            this._focusActiveItem$0();
            shouldPreventDefault = true;
            break;
          case 40:
            this._activeHoveredItemIfNone$0();
            t1 = this._activeModel;
            t2 = t1._items;
            if (t2.get$isEmpty(t2))
              t1._activeIndex = -1;
            else {
              t2 = t1._activeIndex;
              t3 = t1._items;
              t3 = t3.get$length(t3);
              if (typeof t3 !== "number")
                return t3.$sub();
              if (t2 < t3 - 1)
                ++t1._activeIndex;
              else
                t1._activeIndex = 0;
            }
            t1._active_item$_modelChanged.add$1(0, null);
            this._focusActiveItem$0();
            shouldPreventDefault = true;
            break;
          case 39:
            if ((activeMenuItem == null && null) === true)
              this._openSubMenu$2$isOpenedByKeyboard(H.interceptedTypeCast(this._activeModel.get$activeItem(), "$isMenuItem"), true);
            shouldPreventDefault = true;
            break;
          case 37:
            if (this._closeOnPressLeft)
              this._dropdownHandle.set$visible(0, false);
            shouldPreventDefault = true;
            break;
          case 27:
            this._dropdownHandle.set$visible(0, false);
            shouldPreventDefault = true;
            break;
          default:
            shouldPreventDefault = this._triggerAffixShortcutActions$2(activeMenuItem, t1) || false;
            break;
        }
        if (shouldPreventDefault)
          $event.preventDefault();
      }, function($event) {
        return this.handleKeydown$2$shouldPreventDefault($event, true);
      }, "handleKeydown$1", "call$2$shouldPreventDefault", "call$1", "get$handleKeydown", 4, 3, 122],
      _openSubMenu$2$isOpenedByKeyboard: function(item, isOpenedByKeyboard) {
        var t1;
        item.enabled;
        t1 = this._activeModel;
        t1.toString;
        H.assertSubtypeOfRuntimeType(item, H.getTypeArgumentByIndex(t1, 0));
        if (!J.$eq$(t1.get$activeItem(), item))
          this._activeModel.activate$1(item);
        this.isKeyboardOpenedSubmenu = isOpenedByKeyboard;
        item.subMenu;
        this._submenuParent = null;
      },
      _openSubMenu$1: function(item) {
        return this._openSubMenu$2$isOpenedByKeyboard(item, false);
      },
      _itemForTarget$1: function(target) {
        var element, group, t1, t2;
        if (!J.getInterceptor$(target).$isElement)
          return;
        for (element = target; element != null;) {
          if (J.getAttribute$1$x(element, "role") === "menuitem") {
            group = C.JSArray_methods.$index(this.menu.itemGroups, P.int_parse(J.getAttribute$1$x(element, "data-group-index"), null, null));
            t1 = P.int_parse(J.getAttribute$1$x(element, "data-item-index"), null, null);
            t2 = H.assertSubtype(group._wrappers$_base, "$isList", [H.getTypeArgumentByIndex(group, 0)], "$asList");
            return H.interceptedTypeCheck((t2 && C.JSArray_methods).$index(t2, t1), "$isMenuItem");
          }
          element = element.parentElement;
        }
        return;
      },
      onFocus$1: [function(_, $event) {
        var item, t1;
        item = this._itemForTarget$1(W._convertNativeToDart_EventTarget(H.interceptedTypeCheck($event, "$isFocusEvent").target));
        if (item == null)
          return;
        t1 = this._activeModel;
        if (!(t1 == null))
          t1.activate$1(item);
      }, "call$1", "get$onFocus", 5, 0, 123],
      handleSelectItemTrigger$3: function(item, group, $event) {
        var t1;
        if (item == null || false)
          return;
        item.nullAwareActionHandler$0();
        this._selected.add$1(0, item);
        t1 = this._menuRoot;
        if (!(t1 == null)) {
          t1.visible = false;
          t1._dropdown.set$visible(0, false);
        }
      },
      onSubMenuVisibilityChanged$2: function(item, visible) {
        var t1;
        if (!visible) {
          t1 = this._submenuParent;
          t1 = item == null ? t1 == null : item === t1;
        } else
          t1 = false;
        if (t1) {
          this._submenuParent = null;
          if (this._isMouseDriven)
            return;
          if (this._menuRoot.visible)
            this._focusActiveItem$0();
        }
      },
      toggleExpansionIfCollapsible$1: function(group) {
        var t1;
        if (group._isCollapsible._observable$_value) {
          t1 = group._menu$_isExpanded;
          t1.set$value(0, !t1._observable$_value);
        }
      },
      ngOnDestroy$0: function() {
        var t1 = this._activeModelChange;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._activeModelChange = null;
      },
      hasAutoFocus$1: function(itemId) {
        var t1, t2, t3;
        t1 = this._autoFocusItemId;
        t2 = P.bool;
        t3 = H.functionTypeCheck(new A.MenuItemGroupsComponent_hasAutoFocus_closure(itemId), {func: 1, ret: t2, args: [H.getTypeArgumentByIndex(t1, 0)]});
        t1 = t1._core0$_value;
        t1 = t1 == null ? new X.Optional(null, [t2]) : X.Optional$of(t3.call$1(t1), t2);
        H.assertSubtypeOfRuntimeType(false, H.getTypeArgumentByIndex(t1, 0));
        t1 = t1._core0$_value;
        return t1 == null ? false : t1;
      },
      _activeHoveredItemIfNone$0: function() {
        if (this._activeModel.get$activeItem() == null && this._hoveredItem != null)
          this._activeModel.activate$1(this._hoveredItem);
      },
      _triggerAffixShortcutActions$2: function(item, keyCode) {
        var t1, t2, matching, _i;
        if (item == null || false)
          return false;
        t1 = item.itemSuffixes;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        matching = P.List_List$from(new H.WhereIterable(t1, H.functionTypeCheck(new A.MenuItemGroupsComponent__triggerAffixShortcutActions_closure(keyCode), {func: 1, ret: P.bool, args: [t2]}), [t2]), true, t2);
        for (t1 = matching.length, _i = 0; _i < matching.length; matching.length === t1 || (0, H.throwConcurrentModificationError)(matching), ++_i)
          matching[_i].triggerShortcutAction$0();
        if (C.JSArray_methods.any$1(matching, new A.MenuItemGroupsComponent__triggerAffixShortcutActions_closure0())) {
          t1 = this._menuRoot;
          t1.visible = false;
          t1._dropdown.set$visible(0, false);
        }
        return matching.length !== 0;
      },
      _createActiveMenuModelIfNone$0: function() {
        var t1, t2, t3, t4;
        t1 = this.menu;
        t2 = t1 == null;
        if (!t2 && this._activeModel == null) {
          t3 = this._menu_item_groups$_idGenerator;
          t1 = D.ActiveMenuItemModel__createEnabledItemGroupList(t2 ? null : t1.itemGroups, true, null);
          t2 = P.String;
          t4 = P.HashMap_HashMap(null, null, null, null, t2);
          t4 = new D.ActiveMenuItemModel(true, new P._SyncBroadcastStreamController(null, null, 0, [null]), t4, t3, -1, [null]);
          t4.ActiveItemModel$3$items$loop(t3, t1, true, null);
          this.set$activeModel(t4);
          t1 = this._activateFirstItemOnInit;
          t3 = this._activeModel;
          if (t1)
            this.set$_autoFocusItemId(X.Optional$of(t3.id$1(0, t3.get$activeItem()), t2));
          else
            t3.activate$1(null);
        }
      },
      _focusActiveItem$0: function() {
        var t1, t2, _i, item, t3, t4, t5, t6, group;
        if (this._activeModel.get$activeItem() == null)
          return;
        for (t1 = this.focusableItems, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          item = t1[_i];
          t3 = J.getInterceptor$x(item);
          t4 = t3.get$key(item);
          t5 = this._activeModel;
          t6 = t5._items;
          t5 = t5.id$1(0, t6.get$isEmpty(t6) || t5._activeIndex === -1 ? null : t5._items.$index(0, t5._activeIndex));
          if (t4 == null ? t5 == null : t4 === t5) {
            t3.focus$0(item);
            break;
          }
        }
        for (t1 = this.menu.itemGroups, t2 = t1.length, _i = 0; _i < t2; ++_i) {
          group = t1[_i];
          t3 = this._activeModel;
          t4 = t3._items;
          t3 = t4.get$isEmpty(t4) || t3._activeIndex === -1 ? null : t3._items.$index(0, t3._activeIndex);
          t4 = group.get$_wrappers$_base();
          if ((t4 && C.JSArray_methods).contains$1(t4, t3) && group.get$_isCollapsible()._observable$_value) {
            group.get$_menu$_isExpanded().set$value(0, true);
            break;
          }
        }
      },
      focus$0: function(_) {
        this._focusActiveItem$0();
      },
      _openSubMenuOnHover$0: [function() {
        this._openSubMenu$1(this._hoveredItem);
        this._menu_item_groups$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      }, "call$0", "get$_openSubMenuOnHover", 0, 0, 2],
      $isFocusable: 1,
      static: {
        MenuItemGroupsComponent_MenuItemGroupsComponent: function(menuRoot, changeDetector, dropdownHandle, idGenerator) {
          var t1 = idGenerator == null ? new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0) : idGenerator;
          t1 = new A.MenuItemGroupsComponent(t1, changeDetector, true, false, false, menuRoot, dropdownHandle, C.Optional_null, false, new P._AsyncBroadcastStreamController(null, null, 0, [[D.MenuItem,,]]), P.LinkedHashMap_LinkedHashMap$_empty(P.String, [P.List, M.HighlightedTextSegment]));
          t1._subMenuOpener = new T.DelayedAction(t1.get$_openSubMenuOnHover(), C.Duration_400000);
          return t1;
        }
      }
    },
    MenuItemGroupsComponent_activeModel_closure: {
      "^": "Closure:4;$this",
      call$1: [function(_) {
        this.$this._menu_item_groups$_changeDetector.appView.markPathToRootAsCheckOnce$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    MenuItemGroupsComponent_hasAutoFocus_closure: {
      "^": "Closure:17;itemId",
      call$1: function(id) {
        return H.stringTypeCheck(id) == this.itemId;
      }
    },
    MenuItemGroupsComponent__triggerAffixShortcutActions_closure: {
      "^": "Closure:53;keyCode",
      call$1: function(suffix) {
        return H.interceptedTypeCheck(suffix, "$isMenuItemAffix").hasShortcutKeyCode$1(this.keyCode);
      }
    },
    MenuItemGroupsComponent__triggerAffixShortcutActions_closure0: {
      "^": "Closure:53;",
      call$1: function(suffix) {
        return H.interceptedTypeCheck(suffix, "$isMenuItemAffix").get$shouldCloseMenuOnTrigger();
      }
    }
  }], ["asset_angular_components_lib_material_menu_menu_item_groups.scss.css.shim.dart", "package:angular_components/material_menu/menu_item_groups.scss.css.shim.dart",, X, {}], ["", "package:angular_components/material_menu/menu_item_groups.template.dart",, B, {
    "^": "",
    viewFactory_MenuItemGroupsComponent1: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent1(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null, "index", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent1$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent2: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent2$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent3: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent3$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent4: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent4$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent5: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent5(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null, "index", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent5$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent6: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent6$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent7: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent7$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent8: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent8(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent8$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent9: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent9(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent9$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent10: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent10(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent10$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent11: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent11(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent11$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent12: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent12(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent12$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent13: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent13(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent13$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent14: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent14(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent14$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent15: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent15(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent15$closure", 8, 0, 3],
    viewFactory_MenuItemGroupsComponent16: [function(parentView, parentIndex) {
      var t1 = new B._ViewMenuItemGroupsComponent16(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, A.MenuItemGroupsComponent));
      t1.componentType = $.ViewMenuItemGroupsComponent0__renderType;
      return t1;
    }, "call$2", "menu_item_groups_template__viewFactory_MenuItemGroupsComponent16$closure", 8, 0, 3],
    ViewMenuItemGroupsComponent0: {
      "^": "AppView;0_menu_item_groups_template$_compView_1,0_FocusTrapComponent_1_5,0_menu_item_groups_template$_appEl_3,_query_AutoFocusDirective_1_0_isDirty,_query_FocusableActivateItem_1_0_isDirty,0_NgFor_3_9,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_1,0_menu_item_groups_template$_expr_2,0_menu_item_groups_template$_el_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, t2, t3, _text_2, _text_4;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        t3 = B.ViewFocusTrapComponent0$(this, 1);
        this._menu_item_groups_template$_compView_1 = t3;
        t3 = t3.rootEl;
        this._menu_item_groups_template$_el_1 = t3;
        t2.append$1(parentRenderNode, t3);
        this.addShimC$1(this._menu_item_groups_template$_el_1);
        this._FocusTrapComponent_1_5 = new G.FocusTrapComponent(new R.Disposer(true, false));
        _text_2 = t1.createTextNode("\n  ");
        t3 = $.$get$_viewContainerAnchor();
        t3 = new V.ViewContainer(3, 1, this, H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment"));
        this._menu_item_groups_template$_appEl_3 = t3;
        this._NgFor_3_9 = new R.NgFor(t3, new D.TemplateRef(t3, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent1$closure()));
        _text_4 = t1.createTextNode("\n");
        this._menu_item_groups_template$_compView_1.create$2(0, this._FocusTrapComponent_1_5, [H.setRuntimeTypeInfo([_text_2, t3, _text_4], [P.Object])]);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        t1 = W.Event;
        J.addEventListener$2$x(this._menu_item_groups_template$_el_1, "focus", this.eventHandler1$2$1(J.get$onFocus$x(this.ctx), t1, W.FocusEvent));
        this.init$2(C.List_empty, null);
        t2 = W.MouseEvent;
        t3 = J.getInterceptor$x(_rootEl);
        t3.addEventListener$2(_rootEl, "mouseover", this.eventHandler1$2$1(_ctx.get$onMouseOver(_ctx), t1, t2));
        t3.addEventListener$2(_rootEl, "mouseout", this.eventHandler1$2$1(_ctx.get$onMouseOut(_ctx), t1, t2));
        t3.addEventListener$2(_rootEl, "mousemove", this.eventHandler1$2$1(_ctx.get$onMouseMove(_ctx), t1, t2));
        t3.addEventListener$2(_rootEl, "keydown", this.eventHandler1$2$1(_ctx.get$handleKeydown(), t1, W.KeyboardEvent));
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_2, t1, t2, currVal_0, currVal_1;
        _ctx = this.ctx;
        currVal_2 = _ctx.menu.itemGroups;
        t1 = this._menu_item_groups_template$_expr_2;
        if (t1 !== currVal_2) {
          this._NgFor_3_9.set$ngForOf(currVal_2);
          this._menu_item_groups_template$_expr_2 = currVal_2;
        }
        this._NgFor_3_9.ngDoCheck$0();
        this._menu_item_groups_template$_appEl_3.detectChangesInNestedViews$0();
        if (this._query_AutoFocusDirective_1_0_isDirty) {
          t1 = this._FocusTrapComponent_1_5;
          t2 = this._menu_item_groups_template$_appEl_3.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal_closure(), E.AutoFocusDirective, B._ViewMenuItemGroupsComponent1);
          t2 = t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null;
          t1.toString;
          t1._autoFocusDirective = H.interceptedTypeCheck(t2, "$isAutoFocusDirective");
          this._query_AutoFocusDirective_1_0_isDirty = false;
        }
        if (this._query_FocusableActivateItem_1_0_isDirty) {
          this.ctx.set$focusableItems(this._menu_item_groups_template$_appEl_3.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal_closure0(), K.FocusableActivateItem, B._ViewMenuItemGroupsComponent1));
          this._query_FocusableActivateItem_1_0_isDirty = false;
        }
        currVal_0 = _ctx._isMouseDriven;
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 !== currVal_0) {
          this.updateElemClass$3(this._menu_item_groups_template$_el_1, "mouse-driven", currVal_0);
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
        currVal_1 = !_ctx._isMouseDriven;
        t1 = this._menu_item_groups_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateElemClass$3(this._menu_item_groups_template$_el_1, "keyboard-driven", currVal_1);
          this._menu_item_groups_template$_expr_1 = currVal_1;
        }
        this._menu_item_groups_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_3.destroyNestedViews$0();
        this._menu_item_groups_template$_compView_1.destroy$0();
        this._FocusTrapComponent_1_5._focus_trap$_disposer.dispose$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      },
      static: {
        ViewMenuItemGroupsComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new B.ViewMenuItemGroupsComponent0(true, true, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, A.MenuItemGroupsComponent));
          t2 = document.createElement("menu-item-groups");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMenuItemGroupsComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MenuItemGroupsComponent());
            $.ViewMenuItemGroupsComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal_closure: {
      "^": "Closure:125;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent1")._menu_item_groups_template$_appEl_4.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal__closure0(), E.AutoFocusDirective, B._ViewMenuItemGroupsComponent4);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal__closure0: {
      "^": "Closure:126;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent4")._menu_item_groups_template$_appEl_1.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal___closure0(), E.AutoFocusDirective, B._ViewMenuItemGroupsComponent5);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal___closure0: {
      "^": "Closure:127;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent5")._menu_item_groups_template$_appEl_1.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal____closure0(), E.AutoFocusDirective, B._ViewMenuItemGroupsComponent6);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal____closure0: {
      "^": "Closure:128;",
      call$1: function(nestedView) {
        var t1;
        H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent6");
        t1 = E.AutoFocusDirective;
        return Q.flattenNodes(H.setRuntimeTypeInfo([H.setRuntimeTypeInfo([nestedView._AutoFocusDirective_1_9], [t1]), nestedView._appEl_19.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal_____closure(), t1, B._ViewMenuItemGroupsComponent15)], [[P.List, E.AutoFocusDirective]]), t1);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal_____closure: {
      "^": "Closure:129;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent15")._menu_item_groups_template$_appEl_2.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal______closure(), E.AutoFocusDirective, B._ViewMenuItemGroupsComponent16);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal______closure: {
      "^": "Closure:130;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent16")._AutoFocusDirective_2_5], [E.AutoFocusDirective]);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal_closure0: {
      "^": "Closure:131;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent1")._menu_item_groups_template$_appEl_4.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal__closure(), K.FocusableActivateItem, B._ViewMenuItemGroupsComponent4);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal__closure: {
      "^": "Closure:132;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent4")._menu_item_groups_template$_appEl_1.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal___closure(), K.FocusableActivateItem, B._ViewMenuItemGroupsComponent5);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal___closure: {
      "^": "Closure:133;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent5")._menu_item_groups_template$_appEl_1.mapNestedViews$2$1(new B.ViewMenuItemGroupsComponent0_detectChangesInternal____closure(), K.FocusableActivateItem, B._ViewMenuItemGroupsComponent6);
      }
    },
    ViewMenuItemGroupsComponent0_detectChangesInternal____closure: {
      "^": "Closure:134;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMenuItemGroupsComponent6")._FocusableActivateItem_1_15], [K.FocusableActivateItem]);
      }
    },
    _ViewMenuItemGroupsComponent1: {
      "^": "AppView;0_menu_item_groups_template$_appEl_2,0_menu_item_groups_template$_NgIf_2_9,0_menu_item_groups_template$_appEl_4,0_menu_item_groups_template$_NgIf_4_9,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_1,0_menu_item_groups_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1, _text_1, _anchor_2, t2, _text_3, _anchor_4, _text_5;
        doc = document;
        t1 = doc.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._menu_item_groups_template$_el_0 = t1;
        t1.className = "group";
        C.DivElement_methods.setAttribute$2(t1, "group", "");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).setAttribute$2(t1, "role", "menu");
        this.addShimC$1(this._menu_item_groups_template$_el_0);
        _text_1 = doc.createTextNode("\n    ");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _text_1);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = this._menu_item_groups_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, _anchor_2);
        t2 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._menu_item_groups_template$_appEl_2 = t2;
        this._menu_item_groups_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent2$closure()), t2, false);
        _text_3 = doc.createTextNode("\n    ");
        t2 = this._menu_item_groups_template$_el_0;
        (t2 && C.DivElement_methods).append$1(t2, _text_3);
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _anchor_4);
        t1 = new V.ViewContainer(4, 0, this, _anchor_4);
        this._menu_item_groups_template$_appEl_4 = t1;
        this._menu_item_groups_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t1, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent4$closure()), t1, false);
        _text_5 = doc.createTextNode("\n  ");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _text_5);
        this.init0$1(this._menu_item_groups_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var local_group, t1, t2, currVal_0;
        local_group = H.interceptedTypeCheck(this.locals.$index(0, "$implicit"), "$isMenuItemGroup");
        t1 = this._menu_item_groups_template$_NgIf_2_9;
        t2 = local_group._labelFcn != null;
        t1.set$ngIf(t2);
        t1 = this._menu_item_groups_template$_NgIf_4_9;
        t1.set$ngIf(!local_group._isCollapsible._observable$_value || local_group._menu$_isExpanded._observable$_value);
        this._menu_item_groups_template$_appEl_2.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_4.detectChangesInNestedViews$0();
        currVal_0 = local_group._hasSeparator._observable$_value;
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 != currVal_0) {
          this.updateClass$3(this._menu_item_groups_template$_el_0, "has-separator", currVal_0);
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
        t1 = this._menu_item_groups_template$_expr_1;
        if (t1 !== t2) {
          this.updateClass$3(this._menu_item_groups_template$_el_0, "has-label", t2);
          this._menu_item_groups_template$_expr_1 = t2;
        }
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_2.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_4.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent2: {
      "^": "AppView;0_menu_item_groups_template$_ButtonDirective_0_5,0_menu_item_groups_template$_appEl_7,0_menu_item_groups_template$_NgIf_7_9,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_1,0_menu_item_groups_template$_el_0,0_menu_item_groups_template$_text_4,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1, t2, _el_2, _text_6, _anchor_7, _text_8, t3, subscription_0;
        doc = document;
        t1 = doc.createElement("div");
        H.interceptedTypeCheck(t1, "$isDivElement");
        this._menu_item_groups_template$_el_0 = t1;
        C.DivElement_methods.setAttribute$2(t1, "buttonDecorator", "");
        t1 = this._menu_item_groups_template$_el_0;
        t1.className = "group-header";
        this.addShimC$1(t1);
        t1 = this._menu_item_groups_template$_el_0;
        t2 = W.UIEvent;
        this._menu_item_groups_template$_ButtonDirective_0_5 = new R.ButtonDirectiveNgCd(new T.ButtonDirective(new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, t1), false);
        (t1 && C.DivElement_methods).append$1(t1, doc.createTextNode("\n      "));
        _el_2 = S.createDivAndAppend(doc, this._menu_item_groups_template$_el_0);
        _el_2.className = "group-label";
        this.addShimC$1(_el_2);
        (_el_2 && C.DivElement_methods).append$1(_el_2, doc.createTextNode("\n        "));
        t1 = doc.createTextNode("");
        this._menu_item_groups_template$_text_4 = t1;
        C.DivElement_methods.append$1(_el_2, t1);
        C.DivElement_methods.append$1(_el_2, doc.createTextNode("\n      "));
        _text_6 = doc.createTextNode("\n      ");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _text_6);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_7 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _anchor_7);
        t1 = new V.ViewContainer(7, 0, this, _anchor_7);
        this._menu_item_groups_template$_appEl_7 = t1;
        this._menu_item_groups_template$_NgIf_7_9 = new K.NgIf(new D.TemplateRef(t1, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent3$closure()), t1, false);
        _text_8 = doc.createTextNode("\n    ");
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).append$1(t1, _text_8);
        t1 = this._menu_item_groups_template$_el_0;
        t3 = W.Event;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "click", this.eventHandler1$2$1(this._menu_item_groups_template$_ButtonDirective_0_5.instance.get$handleClick(), t3, W.MouseEvent));
        t1 = this._menu_item_groups_template$_el_0;
        (t1 && C.DivElement_methods).addEventListener$2(t1, "keypress", this.eventHandler1$2$1(this._menu_item_groups_template$_ButtonDirective_0_5.instance.get$handleKeyPress(), t3, W.KeyboardEvent));
        t3 = this._menu_item_groups_template$_ButtonDirective_0_5.instance._trigger;
        subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_menu_item_groups_template$_handle_trigger_0_0(), t2, t2));
        this.init$2([this._menu_item_groups_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_ButtonDirective_hH0)
          t1 = nodeIndex <= 8;
        else
          t1 = false;
        if (t1)
          return this._menu_item_groups_template$_ButtonDirective_0_5.instance;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var t1, local_group, t2, currVal_0, currVal_1;
        t1 = this.viewData._cdState;
        local_group = H.interceptedTypeCheck(this.parentView.locals.$index(0, "$implicit"), "$isMenuItemGroup");
        if (t1 === 0)
          this._menu_item_groups_template$_ButtonDirective_0_5.instance.ngOnInit$0();
        t1 = this._menu_item_groups_template$_NgIf_7_9;
        t2 = local_group._isCollapsible;
        t1.set$ngIf(t2._observable$_value);
        this._menu_item_groups_template$_appEl_7.detectChangesInNestedViews$0();
        currVal_0 = t2._observable$_value;
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 != currVal_0) {
          this.updateClass$3(this._menu_item_groups_template$_el_0, "is-collapsible", currVal_0);
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
        this._menu_item_groups_template$_ButtonDirective_0_5.detectHostChanges$2(this, this._menu_item_groups_template$_el_0);
        t1 = local_group._labelFcn;
        currVal_1 = Q.interpolate0(t1 != null ? t1.call$0() : null);
        t1 = this._menu_item_groups_template$_expr_1;
        if (t1 !== currVal_1) {
          this._menu_item_groups_template$_text_4.textContent = currVal_1;
          this._menu_item_groups_template$_expr_1 = currVal_1;
        }
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_7.destroyNestedViews$0();
      },
      _menu_item_groups_template$_handle_trigger_0_0$1: [function($$event) {
        var local_group = H.interceptedTypeCheck(this.parentView.locals.$index(0, "$implicit"), "$isMenuItemGroup");
        this.ctx.toggleExpansionIfCollapsible$1(local_group);
      }, "call$1", "get$_menu_item_groups_template$_handle_trigger_0_0", 4, 0, 1],
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent3: {
      "^": "AppView;0_menu_item_groups_template$_compView_0,0_MaterialIconComponent_0_5,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_1,0_menu_item_groups_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._menu_item_groups_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._menu_item_groups_template$_el_0 = t1;
        t1.className = "expansion-icon";
        this.addShimC$1(t1);
        t1 = new Y.MaterialIconComponent(this._menu_item_groups_template$_el_0);
        this._MaterialIconComponent_0_5 = t1;
        document.createTextNode("\n      ");
        this._menu_item_groups_template$_compView_0.create$2(0, t1, []);
        this.init0$1(this._menu_item_groups_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var t1, currVal_1, t2, changed, currVal_0;
        t1 = H.interceptedTypeCheck(this.parentView.parentView.locals.$index(0, "$implicit"), "$isMenuItemGroup")._menu$_isExpanded;
        currVal_1 = t1._observable$_value ? "expand_less" : "expand_more";
        t2 = this._menu_item_groups_template$_expr_1;
        if (t2 !== currVal_1) {
          this._MaterialIconComponent_0_5.set$icon(0, currVal_1);
          this._menu_item_groups_template$_expr_1 = currVal_1;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._menu_item_groups_template$_compView_0.viewData.set$cdMode(1);
        currVal_0 = t1._observable$_value;
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 != currVal_0) {
          this.updateElemClass$3(this._menu_item_groups_template$_el_0, "expanded", currVal_0);
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
        this._menu_item_groups_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent4: {
      "^": "AppView;0_menu_item_groups_template$_appEl_1,0_NgFor_1_9,0_menu_item_groups_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2;
        t1 = document;
        _text_0 = t1.createTextNode("\n      ");
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_groups_template$_appEl_1 = t2;
        this._NgFor_1_9 = new R.NgFor(t2, new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent5$closure()));
        this.init$2([_text_0, t2, t1.createTextNode("\n    ")], null);
      },
      detectChangesInternal$0: function() {
        var local_group, t1;
        local_group = H.interceptedTypeCheck(this.parentView.locals.$index(0, "$implicit"), "$isMenuItemGroup");
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 == null ? local_group != null : t1 !== local_group) {
          this._NgFor_1_9.set$ngForOf(local_group);
          this._menu_item_groups_template$_expr_0 = local_group;
        }
        this._NgFor_1_9.ngDoCheck$0();
        this._menu_item_groups_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent5: {
      "^": "AppView;0_menu_item_groups_template$_appEl_1,0_menu_item_groups_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2;
        t1 = document;
        _text_0 = t1.createTextNode("\n        ");
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(1, null, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_groups_template$_appEl_1 = t2;
        this._menu_item_groups_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent6$closure()), t2, false);
        this.init$2([_text_0, t2, t1.createTextNode("\n      ")], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, local_item, t1;
        _ctx = this.ctx;
        local_item = this.locals.$index(0, "$implicit");
        t1 = this._menu_item_groups_template$_NgIf_1_9;
        H.interceptedTypeCheck(local_item, "$isMenuItem");
        _ctx.toString;
        t1.set$ngIf(true);
        this._menu_item_groups_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent6: {
      "^": "AppView;0_menu_item_groups_template$_compView_1,0_menu_item_groups_template$_appEl_1,0_ActiveItemDirective_1_8,0_AutoFocusDirective_1_9,0_FocusActivableItemDirective_1_10,0_MaterialTooltipDirective_1_11,0_MaterialSelectItemComponent_1_12,0_NgClass_1_13,0_PopupSourceDirective_1_14,0_FocusableActivateItem_1_15,0__TooltipController_1_19,0_menu_item_groups_template$_appEl_3,0_menu_item_groups_template$_NgIf_3_9,0_menu_item_groups_template$_appEl_7,0_menu_item_groups_template$_NgIf_7_9,0_menu_item_groups_template$_appEl_9,0_menu_item_groups_template$_NgIf_9_9,0_appEl_11,0_NgIf_11_9,0_menu_item_groups_template$_appEl_14,0_menu_item_groups_template$_NgIf_14_9,0_menu_item_groups_template$_appEl_16,0_menu_item_groups_template$_NgIf_16_9,0_appEl_19,0_NgIf_19_9,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_1,0_menu_item_groups_template$_expr_2,0_menu_item_groups_template$_expr_3,0_menu_item_groups_template$_expr_4,0_menu_item_groups_template$_expr_5,0_menu_item_groups_template$_expr_6,0_menu_item_groups_template$_expr_7,0_menu_item_groups_template$_expr_8,0_menu_item_groups_template$_expr_9,0_menu_item_groups_template$_expr_10,0_menu_item_groups_template$_expr_11,0_menu_item_groups_template$_expr_12,0_menu_item_groups_template$_expr_14,0_menu_item_groups_template$_expr_16,0_menu_item_groups_template$_expr_17,0_menu_item_groups_template$_expr_20,0_menu_item_groups_template$_el_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      get$_TooltipController_1_19: function() {
        var t1, t2;
        t1 = this.__TooltipController_1_19;
        if (t1 == null) {
          t1 = this.parentView.parentView.parentView.parentView;
          t2 = t1.parentView;
          t1 = G.createTooltipController(H.interceptedTypeCheck(t2.injectorGet$3(C.Type_TooltipController_H6X, t1.viewData.parentIndex, null), "$isTooltipController"), H.interceptedTypeCheck(t2.injectorGet$3(C.Type_Disposer_k0p, t1.viewData.parentIndex, null), "$isDisposer"));
          this.__TooltipController_1_19 = t1;
        }
        return t1;
      },
      build$0: function() {
        var t1, _text_0, t2, t3, t4, t5, t6, t7, t8, _text_2, _text_4, _el_5, _anchor_7, _anchor_9, _anchor_11, _text_13, _text_15, _text_17, _text_18, _text_20, subscription_0;
        t1 = document;
        _text_0 = t1.createTextNode("\n          ");
        t2 = P.String;
        t3 = new M.ViewMaterialSelectItemComponent0(false, P.LinkedHashMap_LinkedHashMap$_empty(t2, null), this, [null]);
        t3.set$viewData(S.AppViewData_AppViewData(t3, 3, C.ViewType_1, 1, [B.MaterialSelectItemComponent,,]));
        t4 = t1.createElement("material-select-item");
        H.interceptedTypeCheck(t4, "$isHtmlElement");
        t3.rootEl = t4;
        t4.className = "item";
        t4.tabIndex = 0;
        t4 = $.ViewMaterialSelectItemComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialSelectItemComponent());
          $.ViewMaterialSelectItemComponent0__renderType = t4;
        }
        t3.setupComponentType$1(t4);
        this._menu_item_groups_template$_compView_1 = t3;
        t3 = t3.rootEl;
        this._menu_item_groups_template$_el_1 = t3;
        t3.className = Q.interpolate2("", "menu-item", " ", "item", "");
        J.setAttribute$2$x(this._menu_item_groups_template$_el_1, "closeOnActivate", "false");
        J.setAttribute$2$x(this._menu_item_groups_template$_el_1, "popupSource", "");
        J.setAttribute$2$x(this._menu_item_groups_template$_el_1, "role", "menuitem");
        J.setAttribute$2$x(this._menu_item_groups_template$_el_1, "useCheckMarks", "true");
        this.addShimC$1(this._menu_item_groups_template$_el_1);
        t3 = this._menu_item_groups_template$_el_1;
        this._menu_item_groups_template$_appEl_1 = new V.ViewContainer(1, null, this, t3);
        t4 = this.parentView.parentView.parentView.parentView;
        t5 = t4.parentView;
        t6 = H.interceptedTypeCheck(t5.injectorGet$2(C.Type_DomService_2jN, t4.viewData.parentIndex), "$isDomService");
        t7 = H.interceptedTypeCheck(t5.injectorGet$3(C.Type_Modal_OjC, t4.viewData.parentIndex, null), "$isModal");
        t8 = H.interceptedTypeCheck(t5.injectorGet$3(C.Type_PopupRef_AWk, t4.viewData.parentIndex, null), "$isPopupRef");
        this._ActiveItemDirective_1_8 = new M.ActiveItemDirectiveNgCd(new B.ActiveItemDirective(t3, t6, t7, t8, false, false, false), false);
        t3 = this._menu_item_groups_template$_el_1;
        t6 = H.interceptedTypeCheck(t5.injectorGet$2(C.Type_DomService_2jN, t4.viewData.parentIndex), "$isDomService");
        t7 = H.interceptedTypeCheck(t5.injectorGet$3(C.Type_ModalComponent_Npb, t4.viewData.parentIndex, null), "$isModalComponent");
        t8 = H.interceptedTypeCheck(t5.injectorGet$3(C.Type_PopupRef_AWk, t4.viewData.parentIndex, null), "$isPopupRef");
        this._AutoFocusDirective_1_9 = new E.AutoFocusDirective(new R.Disposer(true, false), null, t6, t7, t8, t3);
        this._FocusActivableItemDirective_1_10 = new K.FocusActivableItemDirective(this._menu_item_groups_template$_el_1);
        t3 = H.interceptedTypeCheck(t5.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, t4.viewData.parentIndex), "$isDomPopupSourceFactory");
        t6 = this._menu_item_groups_template$_appEl_1;
        t6 = S.MaterialTooltipDirective$(t3, t6, this._menu_item_groups_template$_el_1, t6, this._menu_item_groups_template$_compView_1.viewData.ref, H.interceptedTypeCheck(t5.injectorGet$2(C.Type_Window_0H0, t4.viewData.parentIndex), "$isWindow"));
        this._MaterialTooltipDirective_1_11 = t6;
        t3 = B.MaterialSelectItemComponent$(this._menu_item_groups_template$_el_1, H.interceptedTypeCheck(t5.injectorGet$3(C.Type_DropdownHandle_YMM, t4.viewData.parentIndex, null), "$isDropdownHandle"), H.interceptedTypeCheck(t5.injectorGet$3(C.Type_ActivationHandler_Nm5, t4.viewData.parentIndex, null), "$isActivationHandler"), this._menu_item_groups_template$_compView_1.viewData.ref, "menuitem", null);
        this._MaterialSelectItemComponent_1_12 = t3;
        this._NgClass_1_13 = new Y.NgClass(this._menu_item_groups_template$_el_1, H.setRuntimeTypeInfo([], [t2]));
        t2 = L.PopupSourceDirective$(H.interceptedTypeCheck(t5.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, t4.viewData.parentIndex), "$isDomPopupSourceFactory"), this._menu_item_groups_template$_el_1, H.interceptedTypeCheck(t5.injectorGet$3(C.Type_ReferenceDirective_i58, t4.viewData.parentIndex, null), "$isReferenceDirective"), H.interceptedTypeCheck(t5.injectorGet$3(C.Type_Focusable_adc, t4.viewData.parentIndex, null), "$isFocusable"), null);
        this._PopupSourceDirective_1_14 = t2;
        this._FocusableActivateItem_1_15 = this._FocusActivableItemDirective_1_10;
        _text_2 = t1.createTextNode("\n            ");
        t2 = $.$get$_viewContainerAnchor();
        t3 = new V.ViewContainer(3, 1, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_groups_template$_appEl_3 = t3;
        this._menu_item_groups_template$_NgIf_3_9 = new K.NgIf(new D.TemplateRef(t3, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent7$closure()), t3, false);
        _text_4 = t1.createTextNode("\n            ");
        _el_5 = t1.createElement("span");
        _el_5.className = "menu-item-label-section";
        this.addShimE$1(_el_5);
        t3 = J.getInterceptor$x(_el_5);
        t3.append$1(_el_5, t1.createTextNode("\n              "));
        _anchor_7 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment");
        t3.append$1(_el_5, _anchor_7);
        t4 = new V.ViewContainer(7, 5, this, _anchor_7);
        this._menu_item_groups_template$_appEl_7 = t4;
        this._menu_item_groups_template$_NgIf_7_9 = new K.NgIf(new D.TemplateRef(t4, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent8$closure()), t4, false);
        t3.append$1(_el_5, t1.createTextNode("\n              "));
        _anchor_9 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment");
        t3.append$1(_el_5, _anchor_9);
        t4 = new V.ViewContainer(9, 5, this, _anchor_9);
        this._menu_item_groups_template$_appEl_9 = t4;
        this._menu_item_groups_template$_NgIf_9_9 = new K.NgIf(new D.TemplateRef(t4, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent10$closure()), t4, false);
        t3.append$1(_el_5, t1.createTextNode("\n              "));
        _anchor_11 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment");
        t3.append$1(_el_5, _anchor_11);
        t4 = new V.ViewContainer(11, 5, this, _anchor_11);
        this._appEl_11 = t4;
        this._NgIf_11_9 = new K.NgIf(new D.TemplateRef(t4, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent12$closure()), t4, false);
        t3.append$1(_el_5, t1.createTextNode("\n            "));
        _text_13 = t1.createTextNode("\n            ");
        t3 = new V.ViewContainer(14, 1, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment"));
        this._menu_item_groups_template$_appEl_14 = t3;
        this._menu_item_groups_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t3, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent13$closure()), t3, false);
        _text_15 = t1.createTextNode("\n            ");
        t3 = new V.ViewContainer(16, 1, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment"));
        this._menu_item_groups_template$_appEl_16 = t3;
        this._menu_item_groups_template$_NgIf_16_9 = new K.NgIf(new D.TemplateRef(t3, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent14$closure()), t3, false);
        _text_17 = t1.createTextNode("\n          ");
        this._menu_item_groups_template$_compView_1.create$2(0, this._MaterialSelectItemComponent_1_12, [H.setRuntimeTypeInfo([_text_2, this._menu_item_groups_template$_appEl_3, _text_4, _el_5, _text_13, this._menu_item_groups_template$_appEl_14, _text_15, t3, _text_17], [P.Object])]);
        _text_18 = t1.createTextNode("\n          ");
        t2 = new V.ViewContainer(19, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t2, false), "$isComment"));
        this._appEl_19 = t2;
        this._NgIf_19_9 = new K.NgIf(new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent15$closure()), t2, false);
        _text_20 = t1.createTextNode("\n        ");
        t1 = this._menu_item_groups_template$_el_1;
        t2 = this._ActiveItemDirective_1_8.instance;
        t3 = W.Event;
        J.addEventListener$2$x(t1, "mouseenter", this.eventHandler0$1$1(t2.get$onMouseEnter(t2), t3));
        t2 = this._menu_item_groups_template$_el_1;
        t1 = this._ActiveItemDirective_1_8.instance;
        J.addEventListener$2$x(t2, "mouseleave", this.eventHandler0$1$1(t1.get$onMouseLeave(t1), t3));
        t3 = this._MaterialSelectItemComponent_1_12._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_1_0(), t1, t1));
        this.init$2([_text_0, this._menu_item_groups_template$_appEl_1, _text_18, this._appEl_19, _text_20], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if ((token === C.Type_SelectionItem_uvp || token === C.Type_HasDisabled_qzc || token === C.Type_HasRenderer_wsa) && 1 <= nodeIndex && nodeIndex <= 17)
          return this._MaterialSelectItemComponent_1_12;
        if (token === C.Type_FocusableActivateItem_3fE && 1 <= nodeIndex && nodeIndex <= 17)
          return this._FocusableActivateItem_1_15;
        if (token === C.Type_TooltipController_H6X && 1 <= nodeIndex && nodeIndex <= 17)
          return this.get$_TooltipController_1_19();
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, t2, local_i, local_j, local_item, currVal_6, currVal_7, currVal_8, currVal_11, currVal_20, currVal_2, currVal_3, currVal_5, currVal_0, t3, currVal_4, currVal_10, currVal_12;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        t1 = this.parentView;
        t2 = t1.parentView.parentView.locals;
        local_i = H.intTypeCheck(t2.$index(0, "index"));
        t1 = t1.locals;
        local_j = H.intTypeCheck(t1.$index(0, "index"));
        local_item = t1.$index(0, "$implicit");
        H.interceptedTypeCheck(t2.$index(0, "$implicit"), "$isMenuItemGroup");
        H.interceptedTypeCheck(local_item, "$isMenuItem");
        t2 = _ctx._activeModel;
        currVal_6 = J.$eq$(t2 == null ? null : t2.get$activeItem(), local_item);
        t1 = this._menu_item_groups_template$_expr_6;
        if (t1 !== currVal_6) {
          this._ActiveItemDirective_1_8.instance.set$itemActive(currVal_6);
          this._menu_item_groups_template$_expr_6 = currVal_6;
        }
        t1 = _ctx._activeModel;
        currVal_7 = _ctx.hasAutoFocus$1(t1 == null ? null : t1.id$1(0, local_item));
        t1 = this._menu_item_groups_template$_expr_7;
        if (t1 != currVal_7) {
          this._AutoFocusDirective_1_9._autoFocus = currVal_7;
          this._menu_item_groups_template$_expr_7 = currVal_7;
        }
        if (firstCheck)
          this._AutoFocusDirective_1_9.ngOnInit$0();
        t1 = _ctx._activeModel;
        currVal_8 = t1 == null ? null : t1.id$1(0, local_item);
        t1 = this._menu_item_groups_template$_expr_8;
        if (t1 != currVal_8) {
          this._FocusActivableItemDirective_1_10.key = currVal_8;
          this._menu_item_groups_template$_expr_8 = currVal_8;
        }
        t1 = this._menu_item_groups_template$_expr_9;
        if (t1 !== C.List_MIe) {
          this._MaterialTooltipDirective_1_11.set$positions(C.List_MIe);
          this._menu_item_groups_template$_expr_9 = C.List_MIe;
        }
        local_item.tooltip;
        currVal_11 = local_item.get$showTooltip();
        t1 = this._menu_item_groups_template$_expr_11;
        if (t1 !== currVal_11) {
          this._MaterialTooltipDirective_1_11.set$canShow(currVal_11);
          this._menu_item_groups_template$_expr_11 = currVal_11;
        }
        if (firstCheck) {
          t1 = this._MaterialTooltipDirective_1_11;
          if (t1._canShow)
            t1._attachHostListeners$0();
        }
        if (firstCheck) {
          t1 = this._MaterialSelectItemComponent_1_12;
          t1._role = "menuitem";
          t1.toString;
          t1._useCheckMarks = E.getBool("true");
          t1 = this._MaterialSelectItemComponent_1_12;
          t1.toString;
          t1._closeOnActivate = E.getBool("false");
        }
        t1 = this._menu_item_groups_template$_expr_12;
        if (t1 !== false) {
          this._MaterialSelectItemComponent_1_12.disabled = false;
          this._menu_item_groups_template$_expr_12 = false;
        }
        t1 = this._menu_item_groups_template$_expr_16;
        if (t1 !== false) {
          t1 = this._MaterialSelectItemComponent_1_12;
          t1.toString;
          t1._selectOnActivate = E.getBool(false);
          this._menu_item_groups_template$_expr_16 = false;
        }
        if (firstCheck)
          this._MaterialSelectItemComponent_1_12.ngOnInit$0();
        if (firstCheck)
          this._NgClass_1_13.set$initialClasses("menu-item");
        currVal_20 = local_item.cssClasses;
        t1 = this._menu_item_groups_template$_expr_20;
        if (t1 !== currVal_20) {
          this._NgClass_1_13.set$rawClass(currVal_20);
          this._menu_item_groups_template$_expr_20 = currVal_20;
        }
        this._NgClass_1_13.ngDoCheck$0();
        this._menu_item_groups_template$_NgIf_3_9.set$ngIf(local_item.get$hasIcon());
        t1 = this._menu_item_groups_template$_NgIf_7_9;
        _ctx.get$hasHighlight();
        t1.set$ngIf(false);
        t1 = this._menu_item_groups_template$_NgIf_9_9;
        _ctx.get$hasHighlight();
        t1.set$ngIf(true);
        this._NgIf_11_9.set$ngIf(local_item.get$hasSecondaryLabel());
        t1 = this._menu_item_groups_template$_NgIf_14_9;
        t2 = local_item.itemSuffixes;
        t1.set$ngIf(P.ListMixin.prototype.get$isNotEmpty.call(t2, t2));
        this._menu_item_groups_template$_NgIf_16_9.set$ngIf(local_item.get$hasSubMenu());
        this._NgIf_19_9.set$ngIf(local_item.get$hasSubMenu());
        this._menu_item_groups_template$_appEl_1.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_3.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_7.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_9.detectChangesInNestedViews$0();
        this._appEl_11.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_14.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_16.detectChangesInNestedViews$0();
        this._appEl_19.detectChangesInNestedViews$0();
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 != local_i) {
          t1 = this._menu_item_groups_template$_el_1;
          this.setAttr$3(t1, "data-group-index", local_i == null ? null : C.JSInt_methods.toString$0(local_i));
          this._menu_item_groups_template$_expr_0 = local_i;
        }
        t1 = this._menu_item_groups_template$_expr_1;
        if (t1 != local_j) {
          t1 = this._menu_item_groups_template$_el_1;
          this.setAttr$3(t1, "data-item-index", local_j == null ? null : C.JSInt_methods.toString$0(local_j));
          this._menu_item_groups_template$_expr_1 = local_j;
        }
        t1 = _ctx._activeModel;
        currVal_2 = t1 == null ? null : t1.id$1(0, local_item);
        t1 = this._menu_item_groups_template$_expr_2;
        if (t1 != currVal_2) {
          this.setAttr$3(this._menu_item_groups_template$_el_1, "id", currVal_2);
          this._menu_item_groups_template$_expr_2 = currVal_2;
        }
        currVal_3 = local_item === _ctx._submenuParent;
        t1 = this._menu_item_groups_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateElemClass$3(this._menu_item_groups_template$_el_1, "is-menu-parent", currVal_3);
          this._menu_item_groups_template$_expr_3 = currVal_3;
        }
        t1 = this._menu_item_groups_template$_expr_4;
        if (t1 !== false) {
          t1 = this._menu_item_groups_template$_el_1;
          t2 = String(false);
          this.setAttr$3(t1, "aria-disabled", t2);
          this._menu_item_groups_template$_expr_4 = false;
        }
        currVal_5 = local_item.get$hasSubMenu();
        t1 = this._menu_item_groups_template$_expr_5;
        if (t1 !== currVal_5) {
          t1 = this._menu_item_groups_template$_el_1;
          t2 = String(currVal_5);
          this.setAttr$3(t1, "aria-haspopup", t2);
          this._menu_item_groups_template$_expr_5 = currVal_5;
        }
        t1 = this._ActiveItemDirective_1_8;
        t2 = this._menu_item_groups_template$_el_1;
        currVal_0 = t1.instance._active;
        t3 = t1._active_item_directive_template$_expr_0;
        if (t3 !== currVal_0) {
          t1.updateElemClass$3(t2, "active", currVal_0);
          t1._active_item_directive_template$_expr_0 = currVal_0;
        }
        t1 = this._menu_item_groups_template$_compView_1;
        currVal_4 = J.get$tabIndex$x(t1.ctx);
        t2 = t1._material_select_item_template$_expr_4;
        if (t2 != currVal_4) {
          t1.rootEl.tabIndex = currVal_4;
          t1._material_select_item_template$_expr_4 = currVal_4;
        }
        currVal_5 = t1.ctx.get$ariaRole();
        t2 = t1._material_select_item_template$_expr_5;
        if (t2 != currVal_5) {
          t1.setAttr$3(t1.rootEl, "role", currVal_5);
          t1._material_select_item_template$_expr_5 = currVal_5;
        }
        currVal_6 = t1.ctx.get$disabledStr();
        t2 = t1._material_select_item_template$_expr_6;
        if (t2 !== currVal_6) {
          t1.setAttr$3(t1.rootEl, "aria-disabled", currVal_6);
          t1._material_select_item_template$_expr_6 = currVal_6;
        }
        currVal_7 = J.get$disabled$z(t1.ctx);
        t2 = t1._material_select_item_template$_expr_7;
        if (t2 != currVal_7) {
          t1.updateElemClass$3(t1.rootEl, "is-disabled", currVal_7);
          t1._material_select_item_template$_expr_7 = currVal_7;
        }
        currVal_8 = J.get$disabled$z(t1.ctx);
        t2 = t1._material_select_item_template$_expr_8;
        if (t2 != currVal_8) {
          t1.updateElemClass$3(t1.rootEl, "disabled", currVal_8);
          t1._material_select_item_template$_expr_8 = currVal_8;
        }
        t1.ctx.get$isHidden();
        t2 = t1._material_select_item_template$_expr_9;
        if (t2 !== false) {
          t1.updateElemClass$3(t1.rootEl, "hidden", false);
          t1._material_select_item_template$_expr_9 = false;
        }
        currVal_10 = t1.ctx.get$supportsMultiSelect();
        t2 = t1._material_select_item_template$_expr_10;
        if (t2 !== currVal_10) {
          t1.updateElemClass$3(t1.rootEl, "multiselect", currVal_10);
          t1._material_select_item_template$_expr_10 = currVal_10;
        }
        currVal_11 = t1.ctx.get$isAriaChecked();
        t2 = t1._material_select_item_template$_expr_11;
        if (t2 != currVal_11) {
          t2 = t1.rootEl;
          t1.setAttr$3(t2, "aria-checked", currVal_11 == null ? null : String(currVal_11));
          t1._material_select_item_template$_expr_11 = currVal_11;
        }
        currVal_12 = t1.ctx.get$isSelected();
        t2 = t1._material_select_item_template$_expr_12;
        if (t2 !== currVal_12) {
          t1.updateElemClass$3(t1.rootEl, "selected", currVal_12);
          t1._material_select_item_template$_expr_12 = currVal_12;
        }
        this._menu_item_groups_template$_compView_1.detectChanges$0();
        if (firstCheck) {
          t1 = this._ActiveItemDirective_1_8.instance;
          t1._initialized = true;
          t1._scrollIntoViewIfNecessary$0();
          this._MaterialTooltipDirective_1_11.ngAfterViewInit$0();
          this._PopupSourceDirective_1_14.ngAfterViewInit$0();
        }
      },
      dirtyParentQueriesInternal$0: function() {
        var t1 = H.interceptedTypeCheck(this.parentView.parentView.parentView.parentView, "$isViewMenuItemGroupsComponent0");
        t1._query_AutoFocusDirective_1_0_isDirty = true;
        t1._query_FocusableActivateItem_1_0_isDirty = true;
      },
      destroyInternal$0: function() {
        var t1, t2;
        this._menu_item_groups_template$_appEl_1.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_3.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_7.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_9.destroyNestedViews$0();
        this._appEl_11.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_14.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_16.destroyNestedViews$0();
        this._appEl_19.destroyNestedViews$0();
        this._menu_item_groups_template$_compView_1.destroy$0();
        t1 = this._ActiveItemDirective_1_8.instance;
        t2 = t1._visibilitySubscription;
        if (!(t2 == null))
          t2.cancel$0(0);
        t1._visibilitySubscription = null;
        this._AutoFocusDirective_1_9.ngOnDestroy$0();
        this._MaterialTooltipDirective_1_11.ngOnDestroy$0();
        this._MaterialSelectItemComponent_1_12._material_select_item$_disposer.dispose$0();
        t1 = this._NgClass_1_13;
        t1._applyClasses$2(t1._rawClass, true);
        t1._applyInitialClasses$1(false);
        this._PopupSourceDirective_1_14.ngOnDestroy$0();
      },
      _handle_trigger_1_0$1: [function($$event) {
        var t1, local_item, local_group;
        t1 = this.parentView;
        local_item = t1.locals.$index(0, "$implicit");
        local_group = H.interceptedTypeCheck(t1.parentView.parentView.locals.$index(0, "$implicit"), "$isMenuItemGroup");
        this.ctx.handleSelectItemTrigger$3(H.interceptedTypeCheck(local_item, "$isMenuItem"), local_group, H.interceptedTypeCheck($$event, "$isUIEvent"));
      }, "call$1", "get$_handle_trigger_1_0", 4, 0, 1],
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent7: {
      "^": "AppView;0_menu_item_groups_template$_compView_0,0_MaterialIconComponent_0_5,0_menu_item_groups_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._menu_item_groups_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "material-list-item-primary";
        this.addShimC$1(_el_0);
        t1 = new Y.MaterialIconComponent(_el_0);
        this._MaterialIconComponent_0_5 = t1;
        document.createTextNode("\n            ");
        this._menu_item_groups_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1, changed;
        currVal_0 = J.get$icon$x(this.parentView.parentView.locals.$index(0, "$implicit"));
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._MaterialIconComponent_0_5.set$icon(0, currVal_0);
          this._menu_item_groups_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._menu_item_groups_template$_compView_0.viewData.set$cdMode(1);
        this._menu_item_groups_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent8: {
      "^": "AppView;0_menu_item_groups_template$_compView_2,0_HighlightedTextComponent_2_5,0_appEl_5,0_NgIf_5_9,0_menu_item_groups_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2, t3, _el_2, _anchor_5;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "menu-item-label";
        this.addShimE$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = new R.ViewHighlightedTextComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 1, C.ViewType_1, 2, G.HighlightedTextComponent));
        t3 = doc.createElement("highlighted-text");
        t2.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewHighlightedTextComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$HighlightedTextComponent());
          $.ViewHighlightedTextComponent0__renderType = t3;
        }
        t2.setupComponentType$1(t3);
        this._menu_item_groups_template$_compView_2 = t2;
        _el_2 = t2.rootEl;
        t1.append$1(_el_0, _el_2);
        this.addShimC$1(_el_2);
        t2 = new G.HighlightedTextComponent();
        this._HighlightedTextComponent_2_5 = t2;
        doc.createTextNode("\n                ");
        this._menu_item_groups_template$_compView_2.create$2(0, t2, []);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = $.$get$_viewContainerAnchor();
        _anchor_5 = H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment");
        t1.append$1(_el_0, _anchor_5);
        t2 = new V.ViewContainer(5, 0, this, _anchor_5);
        this._appEl_5 = t2;
        this._NgIf_5_9 = new K.NgIf(new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent9$closure()), t2, false);
        t1.append$1(_el_0, doc.createTextNode("\n              "));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, local_item, t1;
        _ctx = this.ctx;
        local_item = this.parentView.parentView.locals.$index(0, "$implicit");
        _ctx.highlighted$1(local_item.get$uiDisplayName());
        t1 = this._NgIf_5_9;
        local_item.get$labelAnnotation();
        t1.set$ngIf(false);
        this._appEl_5.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_compView_2.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._appEl_5.destroyNestedViews$0();
        this._menu_item_groups_template$_compView_2.destroy$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent9: {
      "^": "AppView;0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("sup");
        _el_0.className = "label-annotation";
        this.addShimE$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = doc.createTextNode("");
        this._menu_item_groups_template$_text_2 = t2;
        t1.append$1(_el_0, t2);
        t1.append$1(_el_0, doc.createTextNode("\n              "));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(this.parentView.parentView.parentView.locals.$index(0, "$implicit").get$labelAnnotation());
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 !== currVal_0) {
          this._menu_item_groups_template$_text_2.textContent = currVal_0;
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent10: {
      "^": "AppView;0_menu_item_groups_template$_appEl_4,0_menu_item_groups_template$_NgIf_4_9,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2, _anchor_4;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "menu-item-label";
        this.addShimE$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = doc.createTextNode("");
        this._menu_item_groups_template$_text_2 = t2;
        t1.append$1(_el_0, t2);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = $.$get$_viewContainerAnchor();
        _anchor_4 = H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment");
        t1.append$1(_el_0, _anchor_4);
        t2 = new V.ViewContainer(4, 0, this, _anchor_4);
        this._menu_item_groups_template$_appEl_4 = t2;
        this._menu_item_groups_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent11$closure()), t2, false);
        t1.append$1(_el_0, doc.createTextNode("\n              "));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var local_item, t1, currVal_0;
        local_item = this.parentView.parentView.locals.$index(0, "$implicit");
        t1 = this._menu_item_groups_template$_NgIf_4_9;
        local_item.get$labelAnnotation();
        t1.set$ngIf(false);
        this._menu_item_groups_template$_appEl_4.detectChangesInNestedViews$0();
        currVal_0 = Q.interpolate0(local_item.get$uiDisplayName());
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 !== currVal_0) {
          this._menu_item_groups_template$_text_2.textContent = currVal_0;
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_4.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent11: {
      "^": "AppView;0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("sup");
        _el_0.className = "label-annotation";
        this.addShimE$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = doc.createTextNode("");
        this._menu_item_groups_template$_text_2 = t2;
        t1.append$1(_el_0, t2);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(this.parentView.parentView.parentView.locals.$index(0, "$implicit").get$labelAnnotation());
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 !== currVal_0) {
          this._menu_item_groups_template$_text_2.textContent = currVal_0;
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent12: {
      "^": "AppView;0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "menu-item-secondary-label";
        this.addShimE$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n                "));
        t2 = doc.createTextNode("");
        this._menu_item_groups_template$_text_2 = t2;
        t1.append$1(_el_0, t2);
        t1.append$1(_el_0, doc.createTextNode("\n              "));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(this.parentView.parentView.locals.$index(0, "$implicit").get$secondaryLabel());
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 !== currVal_0) {
          this._menu_item_groups_template$_text_2.textContent = currVal_0;
          this._menu_item_groups_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent13: {
      "^": "AppView;0_menu_item_groups_template$_compView_0,0_MenuItemAffixListComponent_0_5,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3, _el_0;
        t1 = new N.ViewMenuItemAffixListComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, Q.MenuItemAffixListComponent));
        t2 = document;
        t3 = t2.createElement("menu-item-affix-list");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewMenuItemAffixListComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MenuItemAffixListComponent());
          $.ViewMenuItemAffixListComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._menu_item_groups_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "suffix-list";
        this.addShimC$1(_el_0);
        t1 = this._menu_item_groups_template$_compView_0.viewData.ref;
        t3 = this.parentView.parentView.parentView.parentView.parentView;
        t3 = new Q.MenuItemAffixListComponent(t1, H.interceptedTypeCheck(t3.parentView.injectorGet$3(C.Type_MenuRoot_uHT, t3.viewData.parentIndex, null), "$isMenuRoot"), false);
        this._MenuItemAffixListComponent_0_5 = t3;
        t2.createTextNode("\n            ");
        this._menu_item_groups_template$_compView_0.create$2(0, t3, []);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._MenuItemAffixListComponent_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var local_item, currVal_0, t1, changed, currVal_1;
        local_item = this.parentView.parentView.locals.$index(0, "$implicit");
        currVal_0 = !J.get$enabled$x(local_item);
        t1 = this._menu_item_groups_template$_expr_0;
        if (t1 !== currVal_0) {
          this._MenuItemAffixListComponent_0_5._menu_item_affix_list$_disabled = currVal_0;
          this._menu_item_groups_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        currVal_1 = local_item.get$itemSuffixes();
        t1 = this._menu_item_groups_template$_expr_1;
        if (t1 !== currVal_1) {
          this._MenuItemAffixListComponent_0_5.set$items(0, H.assertSubtype(currVal_1, "$isObservableList", [L.MenuItemAffix], "$asObservableList"));
          this._menu_item_groups_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._menu_item_groups_template$_compView_0.viewData.set$cdMode(1);
        this._menu_item_groups_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_compView_0.destroy$0();
        var t1 = this._MenuItemAffixListComponent_0_5._itemChangeStreamSub;
        if (!(t1 == null))
          t1.cancel$0(0);
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent14: {
      "^": "AppView;0_menu_item_groups_template$_compView_0,0_MaterialIconComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._menu_item_groups_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "material-list-item-secondary submenu-icon";
        J.setAttribute$2$x(_el_0, "icon", "arrow_drop_down");
        this.addShimC$1(_el_0);
        t1 = new Y.MaterialIconComponent(_el_0);
        this._MaterialIconComponent_0_5 = t1;
        document.createTextNode("\n            ");
        this._menu_item_groups_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        if (this.viewData._cdState === 0) {
          this._MaterialIconComponent_0_5.set$icon(0, "arrow_drop_down");
          var changed = true;
        } else
          changed = false;
        if (changed)
          this._menu_item_groups_template$_compView_0.viewData.set$cdMode(1);
        this._menu_item_groups_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent15: {
      "^": "AppView;0_menu_item_groups_template$_compView_0,0_menu_item_groups_template$_appEl_0,0_menu_item_groups_template$_MaterialPopupComponent_0_8,0_menu_item_groups_template$__PopupRef_0_10,0_menu_item_groups_template$__PopupHierarchy_0_12,0_menu_item_groups_template$_appEl_2,0_DeferredContentDirective_2_9,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_3,0_menu_item_groups_template$_expr_4,0_menu_item_groups_template$_expr_5,0_menu_item_groups_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      get$_menu_item_groups_template$_PopupRef_0_10: function() {
        var t1 = this._menu_item_groups_template$__PopupRef_0_10;
        if (t1 == null) {
          t1 = this._menu_item_groups_template$_MaterialPopupComponent_0_8._resolvedPopupRef;
          this._menu_item_groups_template$__PopupRef_0_10 = t1;
        }
        return t1;
      },
      build$0: function() {
        var t1, t2, _text_1, _text_3, subscription_0;
        t1 = A.ViewMaterialPopupComponent0$(this, 0);
        this._menu_item_groups_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._menu_item_groups_template$_el_0 = t1;
        J.setAttribute$2$x(t1, "enforceSpaceConstraints", "");
        this.addShimC$1(this._menu_item_groups_template$_el_0);
        this._menu_item_groups_template$_appEl_0 = new V.ViewContainer(0, null, this, this._menu_item_groups_template$_el_0);
        t1 = this.parentView.parentView.parentView.parentView.parentView;
        t2 = t1.parentView;
        t1 = G.MaterialPopupComponent$(H.interceptedTypeCheck(t2.injectorGet$3(C.Type_PopupHierarchy_7R9, t1.viewData.parentIndex, null), "$isPopupHierarchy"), H.interceptedTypeCheck(t2.injectorGet$3(C.Type_MaterialPopupComponent_OpB, t1.viewData.parentIndex, null), "$isMaterialPopupComponent"), null, H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone"), H.interceptedTypeCheck(t2.injectorGet$2(C.Type_OverlayService_4iH, t1.viewData.parentIndex), "$isOverlayService"), H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService"), H.interceptedTypeCheck(t2.injectorGet$2(C.Type_ZIndexer_ViP, t1.viewData.parentIndex), "$isZIndexer"), H.assertSubtype(t2.injectorGet$2(C.OpaqueToken_defaultPopupPositions, t1.viewData.parentIndex), "$isList", [K.RelativePosition], "$asList"), H.boolTypeCheck(t2.injectorGet$2(C.OpaqueToken_overlayRepositionLoop, t1.viewData.parentIndex)), H.interceptedTypeCheck(t2.injectorGet$3(C.Type_PopupSizeProvider_a5y, t1.viewData.parentIndex, null), "$isPopupSizeProvider"), this._menu_item_groups_template$_compView_0.viewData.ref, this._menu_item_groups_template$_appEl_0, new Z.ElementRef(this._menu_item_groups_template$_el_0));
        this._menu_item_groups_template$_MaterialPopupComponent_0_8 = t1;
        t1 = document;
        _text_1 = t1.createTextNode("\n            ");
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(2, 0, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._menu_item_groups_template$_appEl_2 = t2;
        this._DeferredContentDirective_2_9 = K.DeferredContentDirective$(t2, new D.TemplateRef(t2, B.menu_item_groups_template__viewFactory_MenuItemGroupsComponent16$closure()), this._menu_item_groups_template$_MaterialPopupComponent_0_8);
        _text_3 = t1.createTextNode("\n          ");
        this._menu_item_groups_template$_compView_0.create$2(0, this._menu_item_groups_template$_MaterialPopupComponent_0_8, [C.List_empty, H.setRuntimeTypeInfo([_text_1, this._menu_item_groups_template$_appEl_2, _text_3], [P.Object]), C.List_empty]);
        t1 = this._menu_item_groups_template$_MaterialPopupComponent_0_8.PopupEvents_onVisibleController;
        t2 = P.bool;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_menu_item_groups_template$_handle_visibleChange_0_0(), t2, t2));
        this.init$2([this._menu_item_groups_template$_appEl_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_MaterialPopupComponent_OpB || token === C.Type_DeferredContentAware_BCk || token === C.Type_DropdownHandle_YMM)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this._menu_item_groups_template$_MaterialPopupComponent_0_8;
        if (token === C.Type_PopupRef_AWk)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this.get$_menu_item_groups_template$_PopupRef_0_10();
        if (token === C.Type_PopupHierarchy_7R9)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1) {
          t1 = this._menu_item_groups_template$__PopupHierarchy_0_12;
          if (t1 == null) {
            t1 = this._menu_item_groups_template$_MaterialPopupComponent_0_8.get$hierarchy();
            this._menu_item_groups_template$__PopupHierarchy_0_12 = t1;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, local_subMenuSource, local_item, currVal_5;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        t1 = H.interceptedTypeCheck(this.parentView, "$is_ViewMenuItemGroupsComponent6");
        local_subMenuSource = t1._PopupSourceDirective_1_14;
        local_item = t1.parentView.locals.$index(0, "$implicit");
        if (firstCheck) {
          this._menu_item_groups_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_autoDismiss, false);
          this._menu_item_groups_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_enforceSpaceConstraints, true);
        }
        _ctx.toString;
        t1 = this._menu_item_groups_template$_expr_3;
        if (t1 !== C.List_kaS) {
          this._menu_item_groups_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_preferredPositions, C.List_kaS);
          this._menu_item_groups_template$_expr_3 = C.List_kaS;
        }
        t1 = this._menu_item_groups_template$_expr_4;
        if (t1 == null ? local_subMenuSource != null : t1 !== local_subMenuSource) {
          this._menu_item_groups_template$_MaterialPopupComponent_0_8.set$source(0, local_subMenuSource);
          this._menu_item_groups_template$_expr_4 = local_subMenuSource;
        }
        H.interceptedTypeCheck(local_item, "$isMenuItem");
        t1 = _ctx._submenuParent;
        currVal_5 = local_item == null ? t1 == null : local_item === t1;
        t1 = this._menu_item_groups_template$_expr_5;
        if (t1 !== currVal_5) {
          this._menu_item_groups_template$_MaterialPopupComponent_0_8.set$visible(0, currVal_5);
          this._menu_item_groups_template$_expr_5 = currVal_5;
        }
        if (firstCheck)
          this._DeferredContentDirective_2_9.preserveDimensions = true;
        this._menu_item_groups_template$_appEl_0.detectChangesInNestedViews$0();
        this._menu_item_groups_template$_appEl_2.detectChangesInNestedViews$0();
        _ctx.popupClass;
        this._menu_item_groups_template$_compView_0.detectHostChanges$1(firstCheck);
        this._menu_item_groups_template$_compView_0.detectChanges$0();
        if (firstCheck)
          this._menu_item_groups_template$_MaterialPopupComponent_0_8._updateOverlayCssClass$0();
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_appEl_0.destroyNestedViews$0();
        this._menu_item_groups_template$_appEl_2.destroyNestedViews$0();
        this._menu_item_groups_template$_compView_0.destroy$0();
        this._DeferredContentDirective_2_9.ngOnDestroy$0();
        this._menu_item_groups_template$_MaterialPopupComponent_0_8.ngOnDestroy$0();
      },
      _menu_item_groups_template$_handle_visibleChange_0_0$1: [function($$event) {
        var local_item = this.parentView.parentView.locals.$index(0, "$implicit");
        this.ctx.onSubMenuVisibilityChanged$2(H.interceptedTypeCheck(local_item, "$isMenuItem"), H.boolTypeCheck($$event));
      }, "call$1", "get$_menu_item_groups_template$_handle_visibleChange_0_0", 4, 0, 1],
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    },
    _ViewMenuItemGroupsComponent16: {
      "^": "AppView;0_menu_item_groups_template$_compView_0,0_menu_item_groups_template$_MaterialListComponent_0_5,0_menu_item_groups_template$_compView_2,0_AutoFocusDirective_2_5,0_MenuItemGroupsComponent_2_6,0_menu_item_groups_template$_expr_0,0_menu_item_groups_template$_expr_2,0_menu_item_groups_template$_expr_3,0_menu_item_groups_template$_expr_4,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, _text_1, t2, _el_2, t3, t4, t5, t6, t7, _text_4;
        t1 = B.ViewMaterialListComponent0$(this, 0);
        this._menu_item_groups_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "item-group-list";
        this.addShimC$1(_el_0);
        this._menu_item_groups_template$_MaterialListComponent_0_5 = new B.MaterialListComponent("auto");
        t1 = document;
        _text_1 = t1.createTextNode("\n              ");
        t2 = B.ViewMenuItemGroupsComponent0$(this, 2);
        this._menu_item_groups_template$_compView_2 = t2;
        _el_2 = t2.rootEl;
        J.setAttribute$2$x(_el_2, "autoFocus", "");
        this.addShimC$1(_el_2);
        t2 = this.parentView;
        t3 = t2.parentView.parentView.parentView.parentView.parentView;
        t4 = t3.parentView;
        t5 = H.interceptedTypeCheck(t4.injectorGet$2(C.Type_DomService_2jN, t3.viewData.parentIndex), "$isDomService");
        t6 = H.interceptedTypeCheck(t4.injectorGet$3(C.Type_ModalComponent_Npb, t3.viewData.parentIndex, null), "$isModalComponent");
        H.interceptedTypeCheck(t2, "$is_ViewMenuItemGroupsComponent15");
        t7 = t2.get$_menu_item_groups_template$_PopupRef_0_10();
        this._AutoFocusDirective_2_5 = new E.AutoFocusDirective(new R.Disposer(true, false), null, t5, t6, t7, _el_2);
        t2 = A.MenuItemGroupsComponent_MenuItemGroupsComponent(H.interceptedTypeCheck(t4.injectorGet$2(C.Type_MenuRoot_uHT, t3.viewData.parentIndex), "$isMenuRoot"), this._menu_item_groups_template$_compView_2.viewData.ref, t2._menu_item_groups_template$_MaterialPopupComponent_0_8, H.interceptedTypeCheck(t4.injectorGet$3(C.Type_IdGenerator_yLN, t3.viewData.parentIndex, null), "$isIdGenerator"));
        this._MenuItemGroupsComponent_2_6 = t2;
        t1.createTextNode("\n              ");
        this._menu_item_groups_template$_compView_2.create$2(0, t2, []);
        _text_4 = t1.createTextNode("\n            ");
        this._menu_item_groups_template$_compView_0.create$2(0, this._menu_item_groups_template$_MaterialListComponent_0_5, [H.setRuntimeTypeInfo([_text_1, _el_2, _text_4], [W.Node])]);
        t1 = this._MenuItemGroupsComponent_2_6._selected;
        t2 = [D.MenuItem,,];
        this.init$2([_el_0], [new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onSubMenuItemSelected(), t2, t2))]);
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, local_item, currVal_0, currVal_4, t1, changed;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        local_item = this.parentView.parentView.parentView.locals.$index(0, "$implicit");
        currVal_0 = C.JSNull_methods.get$width(local_item.get$subMenu());
        this._menu_item_groups_template$_MaterialListComponent_0_5.set$width(0, currVal_0);
        this._menu_item_groups_template$_expr_0 = currVal_0;
        this._menu_item_groups_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._AutoFocusDirective_2_5._autoFocus = true;
        if (firstCheck)
          this._AutoFocusDirective_2_5.ngOnInit$0();
        local_item.get$subMenu();
        currVal_4 = _ctx.isKeyboardOpenedSubmenu;
        t1 = this._menu_item_groups_template$_expr_4;
        if (t1 !== currVal_4) {
          t1 = this._MenuItemGroupsComponent_2_6;
          t1.toString;
          t1._activateFirstItemOnInit = E.getBool(currVal_4);
          this._menu_item_groups_template$_expr_4 = currVal_4;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._menu_item_groups_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._MenuItemGroupsComponent_2_6._createActiveMenuModelIfNone$0();
        this._menu_item_groups_template$_compView_0.detectHostChanges$1(firstCheck);
        this._menu_item_groups_template$_compView_0.detectChanges$0();
        this._menu_item_groups_template$_compView_2.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView.parentView.parentView.parentView.parentView.parentView, "$isViewMenuItemGroupsComponent0")._query_AutoFocusDirective_1_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._menu_item_groups_template$_compView_0.destroy$0();
        this._menu_item_groups_template$_compView_2.destroy$0();
        this._AutoFocusDirective_2_5.ngOnDestroy$0();
        this._MenuItemGroupsComponent_2_6.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [A.MenuItemGroupsComponent];
      }
    }
  }], ["", "package:angular_components/material_menu/menu_popup.dart",, G, {
    "^": "",
    MenuPopupComponent: {
      "^": "_MenuPopupComponent_Object_FocusableMixin_MenuPopupWrapper;0popupSource,0popupClass,MenuPopupWrapper_menu,MenuPopupWrapper__expanded,MenuPopupWrapper__width,MenuPopupWrapper_preferredPositions,FocusableMixin__onFocus,0FocusableMixin__focusable,FocusableMixin__focusPending",
      set$menuItemGroups: function(groups) {
        this.set$focusable(H.interceptedTypeCheck(groups, "$isMenuItemGroupsComponent"));
      },
      $isFocusable: 1
    },
    _MenuPopupComponent_Object_FocusableMixin: {
      "^": "Object+FocusableMixin;"
    },
    _MenuPopupComponent_Object_FocusableMixin_MenuPopupWrapper: {
      "^": "_MenuPopupComponent_Object_FocusableMixin+MenuPopupWrapper;"
    }
  }], ["asset_angular_components_lib_material_menu_menu_popup.scss.css.shim.dart", "package:angular_components/material_menu/menu_popup.scss.css.shim.dart",, K, {}], ["", "package:angular_components/material_menu/menu_popup.template.dart",, M, {
    "^": "",
    viewFactory_MenuPopupComponent1: [function(parentView, parentIndex) {
      var t1 = new M._ViewMenuPopupComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, G.MenuPopupComponent));
      t1.componentType = $.ViewMenuPopupComponent0__renderType;
      return t1;
    }, "call$2", "menu_popup_template__viewFactory_MenuPopupComponent1$closure", 8, 0, 235],
    ViewMenuPopupComponent0: {
      "^": "AppView;0_menu_popup_template$_compView_0,0_menu_popup_template$_appEl_0,0_MaterialPopupComponent_0_8,0__PopupRef_0_10,0__PopupHierarchy_0_12,0_menu_popup_template$_appEl_1,_query_MenuItemGroupsComponent_1_0_isDirty,0_DeferredContentDirective_1_9,0_menu_popup_template$_expr_0,0_menu_popup_template$_expr_2,0_menu_popup_template$_expr_3,0_menu_popup_template$_expr_4,0_menu_popup_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      get$_PopupRef_0_10: function() {
        var t1 = this.__PopupRef_0_10;
        if (t1 == null) {
          t1 = this._MaterialPopupComponent_0_8._resolvedPopupRef;
          this.__PopupRef_0_10 = t1;
        }
        return t1;
      },
      build$0: function() {
        var parentRenderNode, t1, t2, t3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = A.ViewMaterialPopupComponent0$(this, 0);
        this._menu_popup_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._menu_popup_template$_el_0 = t1;
        J.append$1$x(parentRenderNode, t1);
        J.setAttribute$2$x(this._menu_popup_template$_el_0, "enforceSpaceConstraints", "");
        this.addShimC$1(this._menu_popup_template$_el_0);
        this._menu_popup_template$_appEl_0 = new V.ViewContainer(0, null, this, this._menu_popup_template$_el_0);
        t1 = this.parentView;
        t1 = G.MaterialPopupComponent$(H.interceptedTypeCheck(t1.injectorGet$3(C.Type_PopupHierarchy_7R9, this.viewData.parentIndex, null), "$isPopupHierarchy"), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_MaterialPopupComponent_OpB, this.viewData.parentIndex, null), "$isMaterialPopupComponent"), null, H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_OverlayService_4iH, this.viewData.parentIndex), "$isOverlayService"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_ZIndexer_ViP, this.viewData.parentIndex), "$isZIndexer"), H.assertSubtype(t1.injectorGet$2(C.OpaqueToken_defaultPopupPositions, this.viewData.parentIndex), "$isList", [K.RelativePosition], "$asList"), H.boolTypeCheck(t1.injectorGet$2(C.OpaqueToken_overlayRepositionLoop, this.viewData.parentIndex)), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_PopupSizeProvider_a5y, this.viewData.parentIndex, null), "$isPopupSizeProvider"), this._menu_popup_template$_compView_0.viewData.ref, this._menu_popup_template$_appEl_0, new Z.ElementRef(this._menu_popup_template$_el_0));
        this._MaterialPopupComponent_0_8 = t1;
        t1 = $.$get$_viewContainerAnchor();
        t1 = new V.ViewContainer(1, 0, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._menu_popup_template$_appEl_1 = t1;
        this._DeferredContentDirective_1_9 = K.DeferredContentDirective$(t1, new D.TemplateRef(t1, M.menu_popup_template__viewFactory_MenuPopupComponent1$closure()), this._MaterialPopupComponent_0_8);
        t1 = this._menu_popup_template$_compView_0;
        t2 = this._MaterialPopupComponent_0_8;
        t3 = this.viewData.projectableNodes;
        if (0 >= t3.length)
          return H.ioore(t3, 0);
        t3 = [t3[0]];
        C.JSArray_methods.addAll$1(t3, [this._menu_popup_template$_appEl_1]);
        t1.create$2(0, t2, [C.List_empty, t3, C.List_empty]);
        t3 = this._MaterialPopupComponent_0_8.PopupEvents_onVisibleController;
        t2 = P.bool;
        this.init$2(C.List_empty, [new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_visibleChange_0_0(), t2, t2))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_MaterialPopupComponent_OpB || token === C.Type_DeferredContentAware_BCk || token === C.Type_DropdownHandle_YMM)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._MaterialPopupComponent_0_8;
        if (token === C.Type_PopupRef_AWk)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this.get$_PopupRef_0_10();
        if (token === C.Type_PopupHierarchy_7R9)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1) {
          t1 = this.__PopupHierarchy_0_12;
          if (t1 == null) {
            t1 = this._MaterialPopupComponent_0_8.get$hierarchy();
            this.__PopupHierarchy_0_12 = t1;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, currVal_3, t1, currVal_4, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck)
          this._MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_enforceSpaceConstraints, true);
        currVal_3 = _ctx.popupSource;
        t1 = this._menu_popup_template$_expr_3;
        if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
          this._MaterialPopupComponent_0_8.set$source(0, currVal_3);
          this._menu_popup_template$_expr_3 = currVal_3;
        }
        currVal_4 = _ctx.MenuPopupWrapper__expanded._observable$_value;
        t1 = this._menu_popup_template$_expr_4;
        if (t1 != currVal_4) {
          this._MaterialPopupComponent_0_8.set$visible(0, currVal_4);
          this._menu_popup_template$_expr_4 = currVal_4;
        }
        if (firstCheck)
          this._DeferredContentDirective_1_9.preserveDimensions = true;
        this._menu_popup_template$_appEl_0.detectChangesInNestedViews$0();
        this._menu_popup_template$_appEl_1.detectChangesInNestedViews$0();
        if (this._query_MenuItemGroupsComponent_1_0_isDirty) {
          t1 = this.ctx;
          t2 = this._menu_popup_template$_appEl_1.mapNestedViews$2$1(new M.ViewMenuPopupComponent0_detectChangesInternal_closure(), A.MenuItemGroupsComponent, M._ViewMenuPopupComponent1);
          t1.set$menuItemGroups(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_MenuItemGroupsComponent_1_0_isDirty = false;
        }
        _ctx.popupClass;
        this._menu_popup_template$_compView_0.detectHostChanges$1(firstCheck);
        this._menu_popup_template$_compView_0.detectChanges$0();
        if (firstCheck)
          this._MaterialPopupComponent_0_8._updateOverlayCssClass$0();
      },
      destroyInternal$0: function() {
        this._menu_popup_template$_appEl_0.destroyNestedViews$0();
        this._menu_popup_template$_appEl_1.destroyNestedViews$0();
        this._menu_popup_template$_compView_0.destroy$0();
        this._DeferredContentDirective_1_9.ngOnDestroy$0();
        this._MaterialPopupComponent_0_8.ngOnDestroy$0();
      },
      _handle_visibleChange_0_0$1: [function($$event) {
        this.ctx.set$isExpanded($$event);
      }, "call$1", "get$_handle_visibleChange_0_0", 4, 0, 1],
      $asAppView: function() {
        return [G.MenuPopupComponent];
      }
    },
    ViewMenuPopupComponent0_detectChangesInternal_closure: {
      "^": "Closure:135;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMenuPopupComponent1")._MenuItemGroupsComponent_1_8], [A.MenuItemGroupsComponent]);
      }
    },
    _ViewMenuPopupComponent1: {
      "^": "AppView;0_menu_popup_template$_compView_0,0_MaterialListComponent_0_5,0_menu_popup_template$_compView_1,0_AutoFocusDirective_1_5,0_MenuRootDirective_1_6,0_MenuRoot_1_7,0_MenuItemGroupsComponent_1_8,0_menu_popup_template$_expr_0,0_menu_popup_template$_expr_2,0_menu_popup_template$_expr_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, _el_1, t2, t3, t4, t5;
        t1 = B.ViewMaterialListComponent0$(this, 0);
        this._menu_popup_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "item-group-list";
        this.addShimC$1(_el_0);
        this._MaterialListComponent_0_5 = new B.MaterialListComponent("auto");
        t1 = B.ViewMenuItemGroupsComponent0$(this, 1);
        this._menu_popup_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        t1 = J.getInterceptor$x(_el_1);
        t1.setAttribute$2(_el_1, "autoFocus", "");
        t1.setAttribute$2(_el_1, "menu-root", "");
        t1.setAttribute$2(_el_1, "preventCloseOnPressLeft", "");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t4 = H.interceptedTypeCheck(t2.injectorGet$3(C.Type_ModalComponent_Npb, t1.viewData.parentIndex, null), "$isModalComponent");
        H.interceptedTypeCheck(t1, "$isViewMenuPopupComponent0");
        t5 = t1.get$_PopupRef_0_10();
        this._AutoFocusDirective_1_5 = new E.AutoFocusDirective(new R.Disposer(true, false), null, t3, t4, t5, _el_1);
        t3 = t1._MaterialPopupComponent_0_8;
        t4 = new Q.MenuRootDirective(t3);
        t4.visible = true;
        this._MenuRootDirective_1_6 = t4;
        this._MenuRoot_1_7 = t4;
        t1 = A.MenuItemGroupsComponent_MenuItemGroupsComponent(t4, this._menu_popup_template$_compView_1.viewData.ref, t3, H.interceptedTypeCheck(t2.injectorGet$3(C.Type_IdGenerator_yLN, t1.viewData.parentIndex, null), "$isIdGenerator"));
        this._MenuItemGroupsComponent_1_8 = t1;
        this._menu_popup_template$_compView_1.create$2(0, t1, []);
        this._menu_popup_template$_compView_0.create$2(0, this._MaterialListComponent_0_5, [H.setRuntimeTypeInfo([_el_1], [W.HtmlElement])]);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_MenuRoot_uHT && 1 === nodeIndex)
          return this._MenuRoot_1_7;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, currVal_0, t1, changed, currVal_2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        currVal_0 = _ctx.get$width(_ctx);
        t1 = this._menu_popup_template$_expr_0;
        if (t1 != currVal_0) {
          this._MaterialListComponent_0_5.set$width(0, currVal_0);
          this._menu_popup_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._menu_popup_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._AutoFocusDirective_1_5._autoFocus = true;
        if (firstCheck)
          this._AutoFocusDirective_1_5.ngOnInit$0();
        if (firstCheck) {
          t1 = this._MenuItemGroupsComponent_1_8;
          t1.toString;
          t1._closeOnPressLeft = !E.getBool("");
          changed = true;
        } else
          changed = false;
        currVal_2 = _ctx.MenuPopupWrapper_menu;
        t1 = this._menu_popup_template$_expr_2;
        if (t1 == null ? currVal_2 != null : t1 !== currVal_2) {
          this._MenuItemGroupsComponent_1_8.menu = currVal_2;
          this._menu_popup_template$_expr_2 = currVal_2;
          changed = true;
        }
        _ctx.popupClass;
        if (changed)
          this._menu_popup_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._MenuItemGroupsComponent_1_8._createActiveMenuModelIfNone$0();
        this._menu_popup_template$_compView_0.detectHostChanges$1(firstCheck);
        this._menu_popup_template$_compView_0.detectChanges$0();
        this._menu_popup_template$_compView_1.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewMenuPopupComponent0")._query_MenuItemGroupsComponent_1_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._menu_popup_template$_compView_0.destroy$0();
        this._menu_popup_template$_compView_1.destroy$0();
        this._AutoFocusDirective_1_5.ngOnDestroy$0();
        this._MenuItemGroupsComponent_1_8.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [G.MenuPopupComponent];
      }
    }
  }], ["", "package:angular_components/material_menu/menu_popup_wrapper.dart",, G, {
    "^": "",
    MenuPopupWrapper: {
      "^": "Object;",
      set$isExpanded: function(value) {
        var t1, t2;
        t1 = this.MenuPopupWrapper__expanded;
        t2 = t1._observable$_value;
        if (t2 == null ? value == null : t2 === value)
          return;
        t1.set$value(0, E.getBool(value));
      },
      get$width: function(_) {
        var t1 = this.MenuPopupWrapper_menu;
        t1 = t1 == null ? null : t1._width;
        return t1 == null ? this.MenuPopupWrapper__width : t1;
      }
    }
  }], ["", "package:angular_components/material_menu/menu_root.dart",, Q, {
    "^": "",
    MenuRootDirective: {
      "^": "MenuRoot;_dropdown,0visible"
    },
    MenuRoot: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/material_popup/material_popup.dart",, G, {
    "^": "",
    _mergeStreams: function(streams, $T) {
      var t1, t2, streamSubscriptions, cachedResults, streamController;
      t1 = {};
      H.assertSubtype(streams, "$isList", [[P.Stream, $T]], "$asList");
      t2 = new Array(2);
      t2.fixed$length = Array;
      streamSubscriptions = H.setRuntimeTypeInfo(t2, [[P.StreamSubscription, $T]]);
      t2 = new Array(2);
      t2.fixed$length = Array;
      cachedResults = H.setRuntimeTypeInfo(t2, [$T]);
      t1.streamController = null;
      t2 = [P.List, $T];
      streamController = new P._SyncBroadcastStreamController(new G._mergeStreams_closure(t1, streams, streamSubscriptions, cachedResults, $T), new G._mergeStreams_closure0(streamSubscriptions), 0, [t2]);
      t1.streamController = streamController;
      return new P._BroadcastStream(streamController, [t2]);
    },
    _flatten: function($async$nested) {
      return P._makeSyncStarIterable(function() {
        var nested = $async$nested;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, item;
        return function $async$_flatten($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = J.get$iterator$ax(nested);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                item = t1.get$current(t1);
                $async$goto = !!J.getInterceptor$(item).$isIterable ? 4 : 6;
                break;
              case 4:
                // then
                $async$goto = 7;
                return P._IterationMarker_yieldStar(G._flatten(item));
              case 7:
                // after yield
                // goto join
                $async$goto = 5;
                break;
              case 6:
                // else
                $async$goto = 8;
                return item;
              case 8:
                // after yield
              case 5:
                // join
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return P._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return P._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, null);
    },
    MaterialPopupComponent: {
      "^": "_MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement;_onOpened,_onContentVisible,_onAutoDismissed,_material_popup$_changeDetector,_material_popup$_viewContainer,_material_popup$_disposer,_material_popup$_ngZone,_overlayService,_material_popup$_domService,_hierarchy,_defaultPreferredPositions,0_alignmentPosition,0_layoutChangeSub,0_layoutInternalSub,0_windowResizeSub,0_overlayRef,elementRef,role>,_material_popup$_uniqueId,0_resolvedPopupRef,_viewInitialized,0_animationTimer,_isOpening,_material_popup$_useRepositionLoop,0_initialSourceDimensions,_repositionOffsetX,_repositionOffsetY,0_repositionLoopId,showPopup,z,0_zIndex,_material_popup$_zIndexer,0_slide,_popupSizeProvider,0minHeight,0minWidth,0maxHeight,0maxWidth,_matchMinSourceWidth,inkBackground,hasBox,state,0templateRef,_isVisible,PopupEvents_onOpenController,PopupEvents_onCloseController,PopupEvents_onVisibleController",
      set$_initialSourceDimensions: function(_initialSourceDimensions) {
        this._initialSourceDimensions = H.assertSubtype(_initialSourceDimensions, "$isRectangle", [P.num], "$asRectangle");
      },
      set$templateRef: function(templateRef) {
        this.templateRef = H.interceptedTypeCheck(templateRef, "$isTemplateRef");
      },
      MaterialPopupComponent$13: function(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _popupSizeProvider, _changeDetector, _viewContainer, elementRef) {
        var t1;
        if (parentPopup != null) {
          t1 = parentPopup.PopupEvents_onCloseController;
          new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new G.MaterialPopupComponent_closure(this));
        }
        this._resolvedPopupRef = new G.MaterialPopupRef(this);
        this._initViewportRect$0();
      },
      _initViewportRect$0: function() {
        var t1, t2, t3;
        if ($.MaterialPopupComponent__viewportRect != null)
          return;
        t1 = window.innerWidth;
        t2 = window.innerHeight;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < 0)
          t1 = -t1 * 0;
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          t2 = -t2 * 0;
        $.MaterialPopupComponent__viewportRect = new P.MutableRectangle(0, 0, t1, t2, [P.num]);
        t2 = this._material_popup$_ngZone;
        t1 = P.Null;
        t2.toString;
        t3 = H.functionTypeCheck(new G.MaterialPopupComponent__initViewportRect_closure(), {func: 1, ret: t1});
        t2._outerZone.run$1$1(t3, t1);
      },
      get$contentVisible: function() {
        var t1, t2;
        t1 = this._onContentVisible;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new P._DistinctStream(null, new P._BroadcastStream(t1, [t2]), [t2]);
      },
      get$hierarchy: function() {
        var t1 = this._hierarchy;
        if (t1 == null)
          t1 = new Z.PopupHierarchy(H.setRuntimeTypeInfo([], [Z.PopupHierarchyElement]));
        this._hierarchy = t1;
        return t1;
      },
      _updateOverlayCssClass$0: function() {
        var hostClassName, t1;
        if (this._overlayRef == null)
          return;
        hostClassName = J.get$className$x(this.elementRef.nativeElement);
        t1 = this._overlayRef.overlayElement;
        t1.className = J.$add$ansx(t1.className, " " + H.S(hostClassName));
      },
      ngOnDestroy$0: function() {
        var t1, t2;
        t1 = this._repositionLoopId;
        if (t1 != null) {
          t2 = window;
          C.Window_methods._ensureRequestAnimationFrame$0(t2);
          C.Window_methods._cancelAnimationFrame$1(t2, t1);
        }
        t1 = this._layoutInternalSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._layoutChangeSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._windowResizeSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._material_popup$_disposer.dispose$0();
        t1 = this._animationTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._isVisible = false;
        this.PopupEvents_onVisibleController.add$1(0, false);
      },
      get$paneId: function() {
        var t1 = this._overlayRef;
        return t1 == null ? null : C.DivElement_methods.getAttribute$1(t1.overlayElement, "pane-id");
      },
      _initView$0: function() {
        var t1, t2, _i, node;
        t1 = this._overlayService.createOverlayRefSync$0();
        this._overlayRef = t1;
        this._material_popup$_disposer.addFunction$1(t1.get$dispose());
        this._material_popup$_zIndexer.toString;
        t1 = J.$add$ansx(self.acxZIndex, 1);
        self.acxZIndex = t1;
        this._zIndex = t1;
        for (t1 = S._flattenNestedViewRenderNodes(this._material_popup$_viewContainer.createEmbeddedView$1(this.templateRef).appView.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], [W.Node])), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          node = t1[_i];
          C.DivElement_methods.append$1(this._overlayRef.overlayElement, node);
        }
        this._updateOverlayCssClass$0();
        this._viewInitialized = true;
      },
      set$visible: function(_, visible) {
        if (visible)
          if (!this._viewInitialized) {
            this._initView$0();
            P.scheduleMicrotask(this.get$_open(this));
          } else
            this._open$0(0);
        else if (this._viewInitialized)
          this._material_popup$_close$0();
      },
      close$0: function(_) {
        this.set$visible(0, false);
      },
      set$source: function(_, source) {
        this.super$PopupBase$source(0, source);
        source.set$popupId(this._material_popup$_uniqueId);
      },
      get$autoDismissBlockers: function() {
        var t1, sourceElement;
        t1 = this.state._backingMap._observable_map$_map;
        sourceElement = !!J.getInterceptor$(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource")).$isElementPopupSource ? H.interceptedTypeCast(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource"), "$isElementPopupSource").get$sourceElement() : null;
        t1 = [W.Element];
        return sourceElement != null ? H.setRuntimeTypeInfo([sourceElement], t1) : H.setRuntimeTypeInfo([], t1);
      },
      _open$0: [function(_) {
        var t1, t2, t3, t4, t5, popupContentsLayoutStream, popupSourceLayoutStream;
        if (this._isOpening) {
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        this._isOpening = true;
        t1 = this._animationTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this.PopupEvents_onOpenController.add$1(0, null);
        if (!this._isOpening) {
          t1 = new P._Future(0, $.Zone__current, [null]);
          t1._asyncComplete$1(null);
          return t1;
        }
        if (!this._viewInitialized)
          throw H.wrapException(P.StateError$("No content is attached."));
        else {
          t1 = this.state._backingMap._observable_map$_map;
          if (H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource") == null)
            throw H.wrapException(P.StateError$("Cannot open popup: no source set."));
        }
        this._updatePopupMinMaxSize$0();
        this._overlayRef.state.set$visibility(0, C.Visibility_Hidden_visibility_hidden);
        t2 = this._overlayRef.overlayElement.style;
        t2.display = "";
        t2.visibility = "hidden";
        this._onContentVisible.add$1(0, true);
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t2 = [P.Rectangle, P.num];
        t3 = new P._Future(0, $.Zone__current, [t2]);
        t4 = this._overlayRef.measureSizeChanges$0();
        t5 = H.getTypeArgumentByIndex(t4, 0);
        popupContentsLayoutStream = P._AsBroadcastStream$(t4, null, H.functionTypeCheck(new G.MaterialPopupComponent__open_closure(this), {func: 1, ret: -1, args: [[P.StreamSubscription, t5]]}), t5);
        popupSourceLayoutStream = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onDimensionsChanged$1$track(H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)));
        if (!H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)))
          popupContentsLayoutStream = new P._TakeStream(1, popupContentsLayoutStream, [H.getTypeArgumentByIndex(popupContentsLayoutStream, 0)]);
        this._layoutChangeSub = G._mergeStreams(H.setRuntimeTypeInfo([popupContentsLayoutStream, popupSourceLayoutStream], [[P.Stream, [P.Rectangle, P.num]]]), t2).listen$1(new G.MaterialPopupComponent__open_closure0(this, new P._AsyncCompleter(t3, [t2])));
        return t3;
      }, "call$0", "get$_open", 1, 0, 22],
      _onPopupOpened$0: function() {
        var t1, t2, t3;
        if (!this._isOpening)
          return;
        this.showPopup = true;
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t1 = this.state._backingMap._observable_map$_map;
        if (H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)) && this._material_popup$_useRepositionLoop)
          this._startRepositionLoop$0();
        t2 = this.get$hierarchy();
        t3 = t2._visiblePopupStack;
        if (t3.length === 0)
          t2._rootPane = Z.closestWithClass(H.interceptedTypeCheck(this.elementRef.nativeElement, "$isElement"), "pane");
        C.JSArray_methods.add$1(t3, this);
        if (t2._triggerListener == null)
          t2._triggerListener = Z.triggersOutside(null).listen$1(t2.get$_popup_hierarchy$_onTrigger());
        if (t2._keyUpListener == null) {
          t3 = W.KeyboardEvent;
          t2._keyUpListener = W._EventStreamSubscription$(document, "keyup", H.functionTypeCheck(t2.get$_onKeyUp(), {func: 1, ret: -1, args: [t3]}), false, t3);
        }
        H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onOpen$0(0);
        this._animationTimer = P.Timer_Timer(C.Duration_150000, new G.MaterialPopupComponent__onPopupOpened_closure(this));
      },
      _material_popup$_close$0: function() {
        var t1, t2, t3;
        if (!this._isOpening)
          return;
        this._isOpening = false;
        t1 = this._animationTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this.PopupEvents_onCloseController.add$1(0, null);
        if (this._isOpening)
          return;
        t1 = this._layoutInternalSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._layoutChangeSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._windowResizeSub;
        if (!(t1 == null))
          t1.cancel$0(0);
        t1 = this._repositionLoopId;
        if (t1 != null) {
          t2 = window;
          C.Window_methods._ensureRequestAnimationFrame$0(t2);
          C.Window_methods._cancelAnimationFrame$1(t2, t1);
          this._repositionLoopId = null;
          t1 = this._repositionOffsetX;
          if (t1 !== 0 || this._repositionOffsetY !== 0) {
            t2 = this._overlayRef.state;
            t3 = t2._left;
            if (typeof t3 !== "number")
              return t3.$add();
            t2.set$left(0, t3 + t1);
            t1 = t2._top;
            t3 = this._repositionOffsetY;
            if (typeof t1 !== "number")
              return t1.$add();
            t2.set$top(0, t1 + t3);
            this._repositionOffsetY = 0;
            this._repositionOffsetX = 0;
          }
        }
        t1 = this.state._backingMap._observable_map$_map;
        if (!!J.getInterceptor$(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource")).$isFocusable) {
          t2 = J.getInterceptor$(this.get$hierarchy()._lastTriggerEvent);
          t2 = !!t2.$isKeyboardEvent || !!t2.$isFocusEvent;
        } else
          t2 = false;
        if (t2)
          this._material_popup$_domService.scheduleWrite$1(new G.MaterialPopupComponent__close_closure(this));
        t2 = this.get$hierarchy();
        t3 = t2._visiblePopupStack;
        if (C.JSArray_methods.remove$1(t3, this) && t3.length === 0) {
          t2._rootPane = null;
          t2._triggerListener.cancel$0(0);
          t2._keyUpListener.cancel$0(0);
          t2._triggerListener = null;
          t2._keyUpListener = null;
        }
        this.showPopup = false;
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").onClose$0(0);
        this._animationTimer = P.Timer_Timer(C.Duration_150000, new G.MaterialPopupComponent__close_closure0(this));
      },
      _onPopupClosed$0: function() {
        this._onContentVisible.add$1(0, false);
        this._material_popup$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        this._overlayRef.state.set$visibility(0, C.Visibility_None_display_none);
        var t1 = this._overlayRef.overlayElement.style;
        t1.display = "none";
        this._isVisible = false;
        this.PopupEvents_onVisibleController.add$1(0, false);
      },
      get$_sourceDimensions: function() {
        var t1, sourceDimensions, containerRect;
        t1 = H.interceptedTypeCheck(this.state._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource");
        sourceDimensions = t1 == null ? null : t1.get$dimensions();
        if (sourceDimensions == null)
          return;
        t1 = this._overlayRef.containerElement;
        containerRect = t1 == null ? null : t1.getBoundingClientRect();
        if (containerRect == null)
          return;
        return P.Rectangle$(C.JSNumber_methods.round$0(sourceDimensions.left - containerRect.left), C.JSNumber_methods.round$0(sourceDimensions.top - containerRect.top), C.JSNumber_methods.round$0(sourceDimensions.width), C.JSNumber_methods.round$0(sourceDimensions.height), P.num);
      },
      _startRepositionLoop$0: function() {
        var t1, t2, t3;
        t1 = this._material_popup$_ngZone;
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new G.MaterialPopupComponent__startRepositionLoop_closure(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      _reposition$1: [function(_) {
        var sourceDimensions, t1, t2, newOffsetX, newOffsetY, popupRect, t3, t4, x, t5, t6, t7, y, viewportShift;
        this._repositionLoopId = C.Window_methods.requestAnimationFrame$1(window, this.get$_reposition());
        sourceDimensions = this.get$_sourceDimensions();
        if (sourceDimensions == null)
          return;
        if (this._initialSourceDimensions == null)
          this.set$_initialSourceDimensions(sourceDimensions);
        t1 = sourceDimensions.left;
        t2 = this._initialSourceDimensions;
        newOffsetX = C.JSNumber_methods.round$0(t1 - t2.left);
        newOffsetY = C.JSNumber_methods.round$0(sourceDimensions.top - t2.top);
        t2 = this._repositionOffsetX;
        t1 = this._repositionOffsetY;
        this._repositionOffsetX = newOffsetX;
        this._repositionOffsetY = newOffsetY;
        if (H.boolTypeCheck(this.state._backingMap._observable_map$_map.$index(0, C.Symbol_constrainToViewport))) {
          popupRect = this._overlayRef.overlayElement.getBoundingClientRect();
          t3 = P.num;
          popupRect = P.Rectangle$(popupRect.left + (newOffsetX - t2), popupRect.top + (newOffsetY - t1), popupRect.width, popupRect.height, t3);
          t1 = $.MaterialPopupComponent__viewportRect;
          t2 = popupRect.left;
          t4 = t1.left;
          if (t2 < t4)
            x = t4 - t2;
          else {
            t5 = popupRect.width;
            if (typeof t5 !== "number")
              return H.iae(t5);
            t5 = H.assertSubtypeOfRuntimeType(t2 + t5, H.getTypeArgumentByIndex(popupRect, 0));
            t6 = t1.get$width(t1);
            if (typeof t6 !== "number")
              return H.iae(t6);
            t7 = H.getTypeArgumentByIndex(t1, 0);
            if (t5 > H.assertSubtypeOfRuntimeType(t4 + t6, t7)) {
              t4 = t1.left;
              t6 = t1.get$width(t1);
              if (typeof t6 !== "number")
                return H.iae(t6);
              x = Math.max(H.assertSubtypeOfRuntimeType(t4 + t6, t7) - t5, t1.left - t2);
            } else
              x = 0;
          }
          t2 = popupRect.top;
          t4 = t1.top;
          if (t2 < t4)
            y = t4 - t2;
          else {
            t5 = popupRect.height;
            if (typeof t5 !== "number")
              return H.iae(t5);
            t5 = H.assertSubtypeOfRuntimeType(t2 + t5, H.getTypeArgumentByIndex(popupRect, 0));
            t6 = t1.get$height(t1);
            if (typeof t6 !== "number")
              return H.iae(t6);
            t7 = H.getTypeArgumentByIndex(t1, 0);
            if (t5 > H.assertSubtypeOfRuntimeType(t4 + t6, t7)) {
              t1 = t1.get$height(t1);
              if (typeof t1 !== "number")
                return H.iae(t1);
              y = Math.max(H.assertSubtypeOfRuntimeType(t4 + t1, t7) - t5, t4 - t2);
            } else
              y = 0;
          }
          viewportShift = P.Rectangle$(C.JSNumber_methods.round$0(x), C.JSNumber_methods.round$0(y), 0, 0, t3);
          this._repositionOffsetX = H.intTypeCheck(this._repositionOffsetX + viewportShift.left);
          this._repositionOffsetY = H.intTypeCheck(this._repositionOffsetY + viewportShift.top);
        }
        t1 = this._overlayRef.overlayElement.style;
        t2 = "translate(" + this._repositionOffsetX + "px, " + this._repositionOffsetY + "px)";
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), t2, "");
      }, "call$1", "get$_reposition", 4, 0, 1, 0],
      _updatePopupMinMaxSize$0: function() {
        return;
      },
      _getBestPosition$3: function(contentRect, sourceRect, containerRect) {
        var t1, t2, containerOffset, t3, t4, positions, bestPosition, t5, bestOverlap, position, containerPos, t6, t7, t8, t9, t10, t11, t12, t13, left, $top, screenPos, overlapRect, overlap;
        t1 = P.num;
        t2 = [t1];
        H.assertSubtype(contentRect, "$isRectangle", t2, "$asRectangle");
        H.assertSubtype(sourceRect, "$isRectangle", t2, "$asRectangle");
        containerOffset = J.get$topLeft$x(H.assertSubtype(containerRect, "$isRectangle", t2, "$asRectangle"));
        t3 = this.state._backingMap._observable_map$_map;
        t4 = G._flatten(H.listSuperNativeTypeCheck(t3.$index(0, C.Symbol_preferredPositions), "$isIterable"));
        positions = G._flatten(!t4.get$isEmpty(t4) ? H.listSuperNativeTypeCheck(t3.$index(0, C.Symbol_preferredPositions), "$isIterable") : this._defaultPreferredPositions);
        bestPosition = positions.get$first(positions);
        for (t4 = new P._SyncStarIterator(positions._outerHelper(), [H.getTypeArgumentByIndex(positions, 0)]), t5 = J.getInterceptor$x(contentRect), bestOverlap = 0; t4.moveNext$0();) {
          position = t4.get$current(t4);
          if (H.interceptedTypeCheck(t3.$index(0, C.Symbol_source), "$isPopupSource").get$isRtl() === true)
            position = position.flipRelativePosition$0();
          containerPos = P.Rectangle$(position.get$originX().calcLeft$2(sourceRect, contentRect), position.get$originY().calcTop$2(sourceRect, contentRect), t5.get$width(contentRect), t5.get$height(contentRect), t1);
          t6 = containerPos.left;
          t7 = containerPos.top;
          t8 = H.getTypeArgumentByIndex(containerPos, 0);
          H.assertSubtype(containerOffset, "$isPoint", [t8], "$asPoint");
          t9 = containerOffset.x;
          if (typeof t9 !== "number")
            return H.iae(t9);
          t10 = H.assertSubtypeOfRuntimeType(t6 + t9, t8);
          t11 = containerOffset.y;
          if (typeof t11 !== "number")
            return H.iae(t11);
          t12 = H.assertSubtypeOfRuntimeType(t7 + t11, t8);
          t13 = containerPos.width;
          if (typeof t13 !== "number")
            return H.iae(t13);
          t13 = H.assertSubtypeOfRuntimeType(t6 + t13, t8);
          t6 = containerPos.height;
          if (typeof t6 !== "number")
            return H.iae(t6);
          t6 = H.assertSubtypeOfRuntimeType(t7 + t6, t8);
          t9 = H.assertSubtypeOfRuntimeType(t13 + t9, t8);
          t8 = H.assertSubtypeOfRuntimeType(t6 + t11, t8);
          left = Math.min(t10, t9);
          t9 = Math.max(t10, t9);
          $top = Math.min(t12, t8);
          screenPos = P.Rectangle$(left, $top, t9 - left, Math.max(t12, t8) - $top, t1);
          t6 = $.MaterialPopupComponent__viewportRect;
          t6.toString;
          H.assertSubtype(screenPos, "$isRectangle", t2, "$asRectangle");
          t7 = t6.left;
          t8 = screenPos.left;
          if (t7 <= t8) {
            t9 = t6.get$width(t6);
            if (typeof t9 !== "number")
              return H.iae(t9);
            t10 = screenPos.width;
            if (typeof t10 !== "number")
              return H.iae(t10);
            if (t7 + t9 >= t8 + t10) {
              t7 = t6.top;
              t8 = screenPos.top;
              if (t7 <= t8) {
                t6 = t6.get$height(t6);
                if (typeof t6 !== "number")
                  return H.iae(t6);
                t9 = screenPos.height;
                if (typeof t9 !== "number")
                  return H.iae(t9);
                t9 = t7 + t6 >= t8 + t9;
                t6 = t9;
              } else
                t6 = false;
            } else
              t6 = false;
          } else
            t6 = false;
          if (t6) {
            bestPosition = position;
            break;
          }
          overlapRect = $.MaterialPopupComponent__viewportRect.intersection$1(0, screenPos);
          if (overlapRect == null)
            continue;
          t6 = overlapRect.width;
          t7 = overlapRect.height;
          if (typeof t6 !== "number")
            return t6.$mul();
          if (typeof t7 !== "number")
            return H.iae(t7);
          overlap = t6 * t7;
          if (overlap > bestOverlap) {
            bestOverlap = overlap;
            bestPosition = position;
          }
        }
        return H.interceptedTypeCheck(bestPosition, "$isRelativePosition");
      },
      _schedulePositionUpdate$2: function(contentClientRect, sourceClientRect) {
        var t1 = [P.num];
        return this._schedulePositionUpdate$body$MaterialPopupComponent(H.assertSubtype(contentClientRect, "$isRectangle", t1, "$asRectangle"), H.assertSubtype(sourceClientRect, "$isRectangle", t1, "$asRectangle"));
      },
      _schedulePositionUpdate$body$MaterialPopupComponent: function(contentClientRect, sourceClientRect) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this, containerRect, t1, isRtl, t2, t3, t4, t5, position, offsetX;
        var $async$_schedulePositionUpdate$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = 3;
                return P._asyncAwait($async$self._overlayService._renderService.measureContainer$0(), $async$_schedulePositionUpdate$2);
              case 3:
                // returning from await.
                containerRect = $async$result;
                t1 = $async$self.state._backingMap._observable_map$_map;
                isRtl = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$isRtl() === true;
                $async$self._overlayRef.state;
                if (H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth))) {
                  t2 = $async$self._overlayRef.state;
                  t3 = J.get$width$x(sourceClientRect);
                  if (t2._minWidth != t3) {
                    t2._minWidth = t3;
                    t2._asyncScheduler.scheduleUpdate$0();
                  }
                }
                if (H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth))) {
                  t2 = J.get$width$x(sourceClientRect);
                  t3 = J.getInterceptor$x(contentClientRect);
                  t4 = t3.get$width(contentClientRect);
                  t4 = Math.max(H.checkNum(t2), H.checkNum(t4));
                  t2 = t3.get$left(contentClientRect);
                  t5 = t3.get$top(contentClientRect);
                  t3 = t3.get$height(contentClientRect);
                  contentClientRect = P.Rectangle$(t2, t5, t4, t3, P.num);
                }
                position = H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)) ? $async$self._getBestPosition$3(contentClientRect, sourceClientRect, containerRect) : null;
                if (position == null) {
                  position = new K.RelativePosition(H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$alignOriginX(), H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource").get$alignOriginY(), "top left");
                  if (isRtl)
                    position = position.flipRelativePosition$0();
                }
                t2 = J.getInterceptor$x(containerRect);
                if (isRtl) {
                  t2 = t2.get$left(containerRect);
                  t3 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetX));
                  if (typeof t3 !== "number") {
                    $async$returnValue = H.iae(t3);
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  offsetX = t2 - t3;
                } else {
                  t3 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetX));
                  t2 = t2.get$left(containerRect);
                  if (typeof t3 !== "number") {
                    $async$returnValue = t3.$sub();
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  offsetX = t3 - t2;
                }
                t1 = H.intTypeCheck(t1.$index(0, C.Symbol_offsetY));
                t2 = J.get$top$x(containerRect);
                if (typeof t1 !== "number") {
                  $async$returnValue = t1.$sub();
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t3 = $async$self._overlayRef.state;
                t3.set$left(0, position.originX.calcLeft$2(sourceClientRect, contentClientRect) + offsetX);
                t3.set$top(0, position.originY.calcTop$2(sourceClientRect, contentClientRect) + (t1 - t2));
                t3.set$visibility(0, C.Visibility_Visible_null_null);
                t3 = $async$self._overlayRef.overlayElement.style;
                t3.visibility = "visible";
                t3.display = "";
                $async$self._alignmentPosition = position;
                $async$self._updatePopupMinMaxSize$0();
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_schedulePositionUpdate$2, $async$completer);
      },
      $isDeferredContentAware: 1,
      $isDropdownHandle: 1,
      static: {
        MaterialPopupComponent$: function(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _popupSizeProvider, _changeDetector, _viewContainer, elementRef) {
          var t1, t2, t3, t4, t5, t6, t7, t8, t9, result;
          t1 = [-1];
          t2 = [P.bool];
          t3 = $.$get$MaterialPopupComponent__idGenerator().nextId$0();
          t4 = P.Symbol0;
          t5 = P.LinkedHashMap_LinkedHashMap$_literal([C.Symbol_autoDismiss, true, C.Symbol_enforceSpaceConstraints, false, C.Symbol_matchMinSourceWidth, false, C.Symbol_offsetX, 0, C.Symbol_offsetY, 0, C.Symbol_preferredPositions, C.List_empty, C.Symbol_source, null, C.Symbol_trackLayoutChanges, true, C.Symbol_constrainToViewport, true], t4, null);
          t6 = P.LinkedHashMap_LinkedHashMap(null, null, null, t4, null);
          t7 = Y.ChangeRecord;
          t8 = new H.TypeImpl(t7).get$_typeName();
          t9 = C.Type_dynamic_0Rz.get$_typeName();
          if (t8 !== t9)
            t8 = new H.TypeImpl(t7).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t8 = true;
          result = new Y.ObservableMap(t6, new B.ChangeNotifier(false, [t7]), t8, [t4, null]);
          result.addAll$1(0, t5);
          t4 = Y.ChangeRecord;
          t5 = new H.TypeImpl(t4).get$_typeName();
          t6 = C.Type_dynamic_0Rz.get$_typeName();
          if (t5 !== t6)
            t5 = new H.TypeImpl(t4).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t5 = true;
          t6 = role == null ? "dialog" : role;
          t1 = new G.MaterialPopupComponent(new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t2), new P._SyncBroadcastStreamController(null, null, 0, [W.Event]), _changeDetector, _viewContainer, new R.Disposer(true, false), _ngZone, _overlayService, _domService, _hierarchy, _defaultPreferredPositions, elementRef, t6, t3, false, false, _useRepositionLoop, 0, 0, false, 2, _zIndexer, _popupSizeProvider, false, false, true, new F.PopupState(result, new B.ChangeNotifier(false, [t4]), t5), false, new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t1), new P._SyncBroadcastStreamController(null, null, 0, t2));
          t1.MaterialPopupComponent$13(_hierarchy, parentPopup, role, _ngZone, _overlayService, _domService, _zIndexer, _defaultPreferredPositions, _useRepositionLoop, _popupSizeProvider, _changeDetector, _viewContainer, elementRef);
          return t1;
        }
      }
    },
    MaterialPopupComponent_closure: {
      "^": "Closure:136;$this",
      call$1: [function(_) {
        this.$this.set$visible(0, false);
        return;
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialPopupComponent__initViewportRect_closure: {
      "^": "Closure:0;",
      call$0: [function() {
        var t1, t2;
        t1 = window;
        t2 = W.Event;
        H.assertSubtype(new R.RateLimitTransformer(C.Duration_100000, H.instantiate1(R.rate_limit_utils__throttleGuaranteeLast$closure(), null), [t2, null]), "$isStreamTransformer", [t2, null], "$asStreamTransformer").bind$1(new W._EventStream(t1, "resize", false, [t2])).listen$1(new G.MaterialPopupComponent__initViewportRect__closure());
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupComponent__initViewportRect__closure: {
      "^": "Closure:4;",
      call$1: [function(_) {
        var t1, t2, t3, width, height;
        t1 = $.MaterialPopupComponent__viewportRect;
        t2 = window.innerWidth;
        t1.toString;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        H.assertSubtypeOfRuntimeType(t2, t3);
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          width = H.assertSubtypeOfRuntimeType(-t2 * 0, t3);
        else
          width = t2;
        t1.set$_math$_width(0, width);
        t1 = $.MaterialPopupComponent__viewportRect;
        t2 = window.innerHeight;
        t1.toString;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        H.assertSubtypeOfRuntimeType(t2, t3);
        if (typeof t2 !== "number")
          return t2.$lt();
        if (t2 < 0)
          height = H.assertSubtypeOfRuntimeType(-t2 * 0, t3);
        else
          height = t2;
        t1.set$_height(0, height);
      }, null, null, 4, 0, null, 0, "call"]
    },
    MaterialPopupComponent__open_closure: {
      "^": "Closure:137;$this",
      call$1: [function(sub) {
        this.$this._layoutInternalSub = H.assertSubtype(sub, "$isStreamSubscription", [[P.Rectangle, P.num]], "$asStreamSubscription");
      }, null, null, 4, 0, null, 66, "call"]
    },
    MaterialPopupComponent__open_closure0: {
      "^": "Closure:138;$this,initialData",
      call$1: [function(layoutRects) {
        var t1, t2;
        H.assertSubtype(layoutRects, "$isList", [[P.Rectangle, P.num]], "$asList");
        t1 = J.getInterceptor$ax(layoutRects);
        if (t1.every$1(layoutRects, new G.MaterialPopupComponent__open__closure())) {
          t2 = this.initialData;
          if (t2.future._state === 0) {
            this.$this._onPopupOpened$0();
            t2.complete$1(0, null);
          }
          t2 = this.$this;
          t2.set$_initialSourceDimensions(null);
          t2._schedulePositionUpdate$2(t1.$index(layoutRects, 0), t1.$index(layoutRects, 1));
        }
      }, null, null, 4, 0, null, 67, "call"]
    },
    MaterialPopupComponent__open__closure: {
      "^": "Closure:139;",
      call$1: function(r) {
        return H.assertSubtype(r, "$isRectangle", [P.num], "$asRectangle") != null;
      }
    },
    MaterialPopupComponent__onPopupOpened_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._animationTimer = null;
        t1._isVisible = true;
        t1.PopupEvents_onVisibleController.add$1(0, true);
        t1._onOpened.add$1(0, null);
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupComponent__close_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        if (J.get$classes$x(window.document.activeElement).contains$1(0, "acx-overlay-focusable-placeholder") || C.DivElement_methods.contains$1(this.$this._overlayRef.overlayElement, window.document.activeElement))
          H.interceptedTypeCast(H.interceptedTypeCheck(this.$this.state._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource"), "$isFocusable").focus$0(0);
      }
    },
    MaterialPopupComponent__close_closure0: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._animationTimer = null;
        t1._onPopupClosed$0();
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupComponent__startRepositionLoop_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._repositionLoopId = C.Window_methods.requestAnimationFrame$1(window, t1.get$_reposition());
      }, null, null, 0, 0, null, "call"]
    },
    MaterialPopupRef: {
      "^": "Object;_popupComponent",
      $isPopupRef: 1
    },
    _mergeStreams_closure: {
      "^": "Closure:0;_box_1,streams,streamSubscriptions,cachedResults,T",
      call$0: function() {
        var t1 = {};
        t1.i = 0;
        C.JSArray_methods.forEach$1(this.streams, new G._mergeStreams__closure(t1, this._box_1, this.streamSubscriptions, this.cachedResults, this.T));
      }
    },
    _mergeStreams__closure: {
      "^": "Closure;_box_0,_box_1,streamSubscriptions,cachedResults,T",
      call$1: function(stream) {
        var t1, t2;
        t1 = this.T;
        H.assertSubtype(stream, "$isStream", [t1], "$asStream");
        t2 = this._box_0.i++;
        C.JSArray_methods.$indexSet(this.streamSubscriptions, t2, stream.listen$1(new G._mergeStreams___closure(this._box_1, this.cachedResults, t2, t1)));
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [[P.Stream, this.T]]};
      }
    },
    _mergeStreams___closure: {
      "^": "Closure;_box_1,cachedResults,n,T",
      call$1: [function(result) {
        var t1 = this.cachedResults;
        C.JSArray_methods.$indexSet(t1, this.n, H.assertSubtypeOfRuntimeType(result, this.T));
        this._box_1.streamController.add$1(0, t1);
      }, null, null, 4, 0, null, 7, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    _mergeStreams_closure0: {
      "^": "Closure:0;streamSubscriptions",
      call$0: function() {
        var t1, t2, _i;
        for (t1 = this.streamSubscriptions, t2 = t1.length, _i = 0; _i < t2; ++_i)
          t1[_i].cancel$0(0);
      }
    },
    _MaterialPopupComponent_Object_PopupBase: {
      "^": "Object+PopupBase;"
    },
    _MaterialPopupComponent_Object_PopupBase_PopupEvents: {
      "^": "_MaterialPopupComponent_Object_PopupBase+PopupEvents;"
    },
    _MaterialPopupComponent_Object_PopupBase_PopupEvents_PopupHierarchyElement: {
      "^": "_MaterialPopupComponent_Object_PopupBase_PopupEvents+PopupHierarchyElement;"
    }
  }], ["asset_angular_components_lib_material_popup_material_popup.scss.css.shim.dart", "package:angular_components/material_popup/material_popup.scss.css.shim.dart",, G, {}], ["", "package:angular_components/material_popup/material_popup.template.dart",, A, {
    "^": "",
    viewFactory_MaterialPopupComponent1: [function(parentView, parentIndex) {
      var t1 = new A._ViewMaterialPopupComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, G.MaterialPopupComponent));
      t1.componentType = $.ViewMaterialPopupComponent0__renderType;
      return t1;
    }, "call$2", "material_popup_template__viewFactory_MaterialPopupComponent1$closure", 8, 0, 236],
    ViewMaterialPopupComponent0: {
      "^": "AppView;0_material_popup_template$_appEl_1,0_TemplateRef_1_7,0_material_popup_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, t3, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = document;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        t3 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_1);
        t3 = new V.ViewContainer(1, null, this, _anchor_1);
        this._material_popup_template$_appEl_1 = t3;
        this._TemplateRef_1_7 = new D.TemplateRef(t3, A.material_popup_template__viewFactory_MaterialPopupComponent1$closure());
        t2.append$1(parentRenderNode, t1.createTextNode("\n"));
        this.ctx.set$templateRef(this._TemplateRef_1_7);
        this.init$2(C.List_empty, null);
      },
      detectHostChanges$1: function(firstCheck) {
        var currVal_0, t1;
        currVal_0 = this.ctx.get$paneId();
        t1 = this._material_popup_template$_expr_0;
        if (t1 != currVal_0) {
          this.setAttr$3(this.rootEl, "pane-id", currVal_0);
          this._material_popup_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [G.MaterialPopupComponent];
      },
      static: {
        ViewMaterialPopupComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new A.ViewMaterialPopupComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, parentIndex, G.MaterialPopupComponent));
          t2 = document.createElement("material-popup");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialPopupComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialPopupComponent());
            $.ViewMaterialPopupComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    _ViewMaterialPopupComponent1: {
      "^": "AppView;0_material_popup_template$_expr_0,0_material_popup_template$_expr_1,0_material_popup_template$_expr_2,0_material_popup_template$_expr_3,0_material_popup_template$_expr_4,0_material_popup_template$_expr_5,0_material_popup_template$_expr_6,0_material_popup_template$_expr_7,0_material_popup_template$_expr_8,0_material_popup_template$_expr_10,0_material_popup_template$_expr_11,0_material_popup_template$_expr_12,0_material_popup_template$_expr_13,0_material_popup_template$_el_1,0_el_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _text_0, t2, _text_2, _text_4, _el_5, _el_7, _el_11, _el_15, _text_19, _text_20, _text_21;
        t1 = document;
        _text_0 = t1.createTextNode("\n  ");
        t2 = t1.createElement("div");
        H.interceptedTypeCheck(t2, "$isDivElement");
        this._material_popup_template$_el_1 = t2;
        t2.className = "popup-wrapper mixin";
        this.addShimC$1(t2);
        _text_2 = t1.createTextNode("\n      ");
        t2 = this._material_popup_template$_el_1;
        (t2 && C.DivElement_methods).append$1(t2, _text_2);
        t2 = S.createDivAndAppend(t1, this._material_popup_template$_el_1);
        this._el_3 = t2;
        t2.className = "popup";
        this.addShimC$1(t2);
        _text_4 = t1.createTextNode("\n          ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_4);
        _el_5 = S.createDivAndAppend(t1, this._el_3);
        _el_5.className = "material-popup-content content";
        this.addShimC$1(_el_5);
        (_el_5 && C.DivElement_methods).append$1(_el_5, t1.createTextNode("\n              "));
        _el_7 = S.createAndAppend(t1, "header", _el_5);
        this.addShimE$1(_el_7);
        t2 = J.getInterceptor$x(_el_7);
        t2.append$1(_el_7, t1.createTextNode("\n                  "));
        this.project$2(_el_7, 0);
        t2.append$1(_el_7, t1.createTextNode("\n              "));
        C.DivElement_methods.append$1(_el_5, t1.createTextNode("\n              "));
        _el_11 = S.createDivAndAppend(t1, _el_5);
        _el_11.className = "main";
        this.addShimC$1(_el_11);
        (_el_11 && C.DivElement_methods).append$1(_el_11, t1.createTextNode("\n                  "));
        this.project$2(_el_11, 1);
        C.DivElement_methods.append$1(_el_11, t1.createTextNode("\n              "));
        C.DivElement_methods.append$1(_el_5, t1.createTextNode("\n              "));
        _el_15 = S.createAndAppend(t1, "footer", _el_5);
        this.addShimE$1(_el_15);
        t2 = J.getInterceptor$x(_el_15);
        t2.append$1(_el_15, t1.createTextNode("\n                  "));
        this.project$2(_el_15, 2);
        t2.append$1(_el_15, t1.createTextNode("\n              "));
        C.DivElement_methods.append$1(_el_5, t1.createTextNode("\n          "));
        _text_19 = t1.createTextNode("\n      ");
        t2 = this._el_3;
        (t2 && C.DivElement_methods).append$1(t2, _text_19);
        _text_20 = t1.createTextNode("\n  ");
        t2 = this._material_popup_template$_el_1;
        (t2 && C.DivElement_methods).append$1(t2, _text_20);
        _text_21 = t1.createTextNode("\n");
        this.init$2([_text_0, this._material_popup_template$_el_1, _text_21], null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2, currVal_0, currVal_3, currVal_5, currVal_6, currVal_7, currVal_8;
        _ctx = this.ctx;
        if (this.viewData._cdState === 0) {
          t1 = this._material_popup_template$_el_1;
          t2 = _ctx.role;
          this.setAttr$3(t1, "role", t2);
        }
        currVal_0 = _ctx.z;
        t1 = this._material_popup_template$_expr_0;
        if (t1 !== currVal_0) {
          t1 = this._material_popup_template$_el_1;
          t2 = C.JSInt_methods.toString$0(currVal_0);
          this.setAttr$3(t1, "elevation", t2);
          this._material_popup_template$_expr_0 = currVal_0;
        }
        _ctx.hasBox;
        t1 = this._material_popup_template$_expr_1;
        if (t1 !== true) {
          this.updateClass$3(this._material_popup_template$_el_1, "shadow", true);
          this._material_popup_template$_expr_1 = true;
        }
        _ctx._matchMinSourceWidth;
        t1 = this._material_popup_template$_expr_2;
        if (t1 !== false) {
          this.updateClass$3(this._material_popup_template$_el_1, "full-width", false);
          this._material_popup_template$_expr_2 = false;
        }
        currVal_3 = _ctx.inkBackground;
        t1 = this._material_popup_template$_expr_3;
        if (t1 !== currVal_3) {
          this.updateClass$3(this._material_popup_template$_el_1, "ink", currVal_3);
          this._material_popup_template$_expr_3 = currVal_3;
        }
        currVal_5 = _ctx._zIndex;
        t1 = this._material_popup_template$_expr_5;
        if (t1 != currVal_5) {
          t1 = this._material_popup_template$_el_1;
          this.setAttr$3(t1, "z-index", currVal_5 == null ? null : C.JSInt_methods.toString$0(currVal_5));
          this._material_popup_template$_expr_5 = currVal_5;
        }
        t1 = _ctx._alignmentPosition;
        currVal_6 = t1 == null ? null : t1.animationOrigin;
        t1 = this._material_popup_template$_expr_6;
        if (t1 != currVal_6) {
          t1 = this._material_popup_template$_el_1.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform-origin"), currVal_6, null);
          this._material_popup_template$_expr_6 = currVal_6;
        }
        currVal_7 = _ctx.showPopup;
        t1 = this._material_popup_template$_expr_7;
        if (t1 !== currVal_7) {
          this.updateClass$3(this._material_popup_template$_el_1, "visible", currVal_7);
          this._material_popup_template$_expr_7 = currVal_7;
        }
        currVal_8 = _ctx._material_popup$_uniqueId;
        t1 = this._material_popup_template$_expr_8;
        if (t1 !== currVal_8) {
          this._material_popup_template$_el_1.id = currVal_8;
          this._material_popup_template$_expr_8 = currVal_8;
        }
        _ctx.maxWidth;
      },
      $asAppView: function() {
        return [G.MaterialPopupComponent];
      }
    }
  }], ["", "package:angular_components/material_progress/material_progress.dart",, X, {
    "^": "",
    MaterialProgressComponent: {
      "^": "Object;_material_progress$_changeDetector,_material_progress$_element,_useFancyAnimation,activeProgress,secondaryProgress,min,max,_material_progress$_indeterminate,_material_progress$_isInitialized,0_primaryIndicator,0_primaryAnimation,0_secondaryIndicator,0_secondaryAnimation",
      _calcRatio$1: function(value) {
        var t1, t2;
        t1 = this.min;
        t2 = this.max;
        return (C.JSInt_methods.clamp$2(value, t1, t2) - t1) / (t2 - t1);
      },
      set$primary: function(value) {
        this._primaryIndicator = value;
      },
      set$secondary: function(value) {
        this._secondaryIndicator = value;
      },
      _tryFancyAnimation$0: function() {
        var width, t1, t2, t3, primaryKeyframes, secondaryKeyframes;
        if (!this._material_progress$_indeterminate || !this._useFancyAnimation || !this._material_progress$_isInitialized || !$.$get$supportsAnimationApi())
          return;
        width = this._material_progress$_element.getBoundingClientRect().width;
        if (width === 0) {
          this._useFancyAnimation = false;
          P.scheduleMicrotask(this._material_progress$_changeDetector.get$markForCheck());
          return;
        }
        t1 = P.String;
        t2 = P.Object;
        t3 = [[P.Map, P.String, P.Object]];
        primaryKeyframes = H.setRuntimeTypeInfo([C.Map_n5nbm, C.Map_IFcF3, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translateX(" + H.S(0.25 * width) + "px) scaleX(0.75)", "offset", 0.5], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translateX(" + H.S(width) + "px) scaleX(0)", "offset", 0.75], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translateX(" + H.S(width) + "px) scaleX(0)"], t1, t1)], t3);
        secondaryKeyframes = H.setRuntimeTypeInfo([C.Map_n5nbm, C.Map_IFWzb, C.Map_IFidk, P.LinkedHashMap_LinkedHashMap$_literal(["transform", "translateX(" + H.S(width) + "px) scaleX(0.1)"], t1, t1)], t3);
        t3 = this._primaryIndicator;
        this._primaryAnimation = (t3 && C.DivElement_methods).animate$2(t3, primaryKeyframes, C.Map_662Zs);
        t3 = this._secondaryIndicator;
        this._secondaryAnimation = (t3 && C.DivElement_methods).animate$2(t3, secondaryKeyframes, C.Map_662Zs);
      }
    }
  }], ["asset_angular_components_lib_material_progress_material_progress.scss.css.shim.dart", "package:angular_components/material_progress/material_progress.scss.css.shim.dart",, V, {}], ["", "package:angular_components/material_progress/material_progress.template.dart",, S, {
    "^": "",
    ViewMaterialProgressComponent0: {
      "^": "AppView;0_material_progress_template$_expr_0,0_material_progress_template$_expr_1,0_material_progress_template$_expr_2,0_material_progress_template$_expr_3,0_material_progress_template$_expr_4,0_material_progress_template$_expr_5,0_material_progress_template$_expr_6,0_material_progress_template$_el_0,0_material_progress_template$_el_1,0_material_progress_template$_el_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, t1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        t1 = S.createDivAndAppend(doc, parentRenderNode);
        this._material_progress_template$_el_0 = t1;
        t1.className = "progress-container";
        (t1 && C.DivElement_methods).setAttribute$2(t1, "role", "progressbar");
        this.addShimC$1(this._material_progress_template$_el_0);
        t1 = S.createDivAndAppend(doc, this._material_progress_template$_el_0);
        this._material_progress_template$_el_1 = t1;
        t1.className = "secondary-progress";
        this.addShimC$1(t1);
        t1 = S.createDivAndAppend(doc, this._material_progress_template$_el_0);
        this._material_progress_template$_el_2 = t1;
        t1.className = "active-progress";
        this.addShimC$1(t1);
        this.ctx.set$primary(this._material_progress_template$_el_2);
        this.ctx.set$secondary(this._material_progress_template$_el_1);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6;
        _ctx = this.ctx;
        currVal_0 = _ctx._material_progress$_indeterminate ? null : "" + _ctx.activeProgress;
        t1 = this._material_progress_template$_expr_0;
        if (t1 != currVal_0) {
          this.setAttr$3(this._material_progress_template$_el_0, "aria-valuenow", currVal_0);
          this._material_progress_template$_expr_0 = currVal_0;
        }
        currVal_1 = _ctx._material_progress$_indeterminate;
        t1 = this._material_progress_template$_expr_1;
        if (t1 !== currVal_1) {
          this.updateClass$3(this._material_progress_template$_el_0, "indeterminate", currVal_1);
          this._material_progress_template$_expr_1 = currVal_1;
        }
        if (_ctx._material_progress$_indeterminate)
          currVal_2 = !_ctx._useFancyAnimation || !$.$get$supportsAnimationApi();
        else
          currVal_2 = false;
        t1 = this._material_progress_template$_expr_2;
        if (t1 !== currVal_2) {
          this.updateClass$3(this._material_progress_template$_el_0, "fallback", currVal_2);
          this._material_progress_template$_expr_2 = currVal_2;
        }
        currVal_3 = Q.interpolate0(_ctx.min);
        t1 = this._material_progress_template$_expr_3;
        if (t1 !== currVal_3) {
          this.setAttr$3(this._material_progress_template$_el_0, "aria-valuemin", currVal_3);
          this._material_progress_template$_expr_3 = currVal_3;
        }
        currVal_4 = Q.interpolate0(_ctx.max);
        t1 = this._material_progress_template$_expr_4;
        if (t1 !== currVal_4) {
          this.setAttr$3(this._material_progress_template$_el_0, "aria-valuemax", currVal_4);
          this._material_progress_template$_expr_4 = currVal_4;
        }
        currVal_5 = "scaleX(" + H.S(_ctx._calcRatio$1(_ctx.secondaryProgress)) + ")";
        t1 = this._material_progress_template$_expr_5;
        if (t1 !== currVal_5) {
          t1 = this._material_progress_template$_el_1.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), currVal_5, null);
          this._material_progress_template$_expr_5 = currVal_5;
        }
        currVal_6 = "scaleX(" + H.S(_ctx._calcRatio$1(_ctx.activeProgress)) + ")";
        t1 = this._material_progress_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._material_progress_template$_el_2.style;
          C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, "transform"), currVal_6, null);
          this._material_progress_template$_expr_6 = currVal_6;
        }
      },
      $asAppView: function() {
        return [X.MaterialProgressComponent];
      }
    }
  }], ["", "package:angular_components/material_ripple/material_ripple.dart",, B, {
    "^": "",
    _createRipple: function(clientX, clientY, container, center) {
      var rect, t1, ripple, t2, containerWidth, containerHeight, minScale, maxScale, initialTransform, finalTransform, $top, left, t3, offsetX, offsetY, transformKeyframes;
      rect = container.getBoundingClientRect();
      if ($._numRipples < 3) {
        t1 = $._rippleTemplate;
        ripple = H.interceptedTypeCast((t1 && C.DivElement_methods).clone$1(t1, false), "$isDivElement");
        t1 = $._ripplePool;
        (t1 && C.JSArray_methods).$indexSet(t1, $._rippleIndex, ripple);
        $._numRipples = $._numRipples + 1;
      } else {
        t1 = $._ripplePool;
        t2 = $._rippleIndex;
        t1.length;
        if (t2 >= 3)
          return H.ioore(t1, t2);
        ripple = t1[t2];
        (ripple && C.DivElement_methods).remove$0(ripple);
      }
      t1 = $._rippleIndex + 1;
      $._rippleIndex = t1;
      if (t1 === 3)
        $._rippleIndex = 0;
      if ($.$get$supportsAnimationApi()) {
        containerWidth = rect.width;
        containerHeight = rect.height;
        minScale = (containerWidth > containerHeight ? containerWidth : containerHeight) * 0.6 / 256;
        t1 = containerWidth / 2;
        t2 = containerHeight / 2;
        maxScale = (Math.sqrt(Math.pow(t1, 2) + Math.pow(t2, 2)) + 10) / 128;
        if (center) {
          initialTransform = "scale(" + H.S(minScale) + ")";
          finalTransform = "scale(" + H.S(maxScale) + ")";
          $top = "calc(50% - 128px)";
          left = "calc(50% - 128px)";
        } else {
          t3 = rect.left;
          if (typeof clientX !== "number")
            return clientX.$sub();
          offsetX = clientX - t3 - 128;
          t3 = rect.top;
          if (typeof clientY !== "number")
            return clientY.$sub();
          offsetY = clientY - t3 - 128;
          $top = H.S(offsetY) + "px";
          left = H.S(offsetX) + "px";
          initialTransform = "translate(0, 0) scale(" + H.S(minScale) + ")";
          finalTransform = "translate(" + H.S(t1 - 128 - offsetX) + "px, " + H.S(t2 - 128 - offsetY) + "px) scale(" + H.S(maxScale) + ")";
        }
        t1 = P.String;
        transformKeyframes = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_literal(["transform", initialTransform], t1, null), P.LinkedHashMap_LinkedHashMap$_literal(["transform", finalTransform], t1, null)], [[P.Map, P.String,,]]);
        ripple.style.cssText = "top: " + $top + "; left: " + left + "; transform: " + finalTransform;
        (ripple && C.DivElement_methods).animate$2(ripple, $._opacityKeyframes, $._opacityTiming);
        C.DivElement_methods.animate$2(ripple, transformKeyframes, $._transformTiming);
      } else {
        if (center) {
          $top = "calc(50% - 128px)";
          left = "calc(50% - 128px)";
        } else {
          t1 = rect.left;
          if (typeof clientX !== "number")
            return clientX.$sub();
          t2 = rect.top;
          if (typeof clientY !== "number")
            return clientY.$sub();
          $top = H.S(clientY - t2 - 128) + "px";
          left = H.S(clientX - t1 - 128) + "px";
        }
        t1 = ripple.style;
        t1.top = $top;
        t1 = ripple.style;
        t1.left = left;
      }
      J.append$1$x(container, ripple);
    },
    MaterialRippleComponent: {
      "^": "Object;_material_ripple$_element,0_onMouseDown,0_onKeyDown,center",
      set$_onMouseDown: function(_onMouseDown) {
        this._onMouseDown = H.functionTypeCheck(_onMouseDown, {func: 1, args: [W.Event]});
      },
      set$_onKeyDown: function(_onKeyDown) {
        this._onKeyDown = H.functionTypeCheck(_onKeyDown, {func: 1, args: [W.Event]});
      },
      MaterialRippleComponent$1: function(_element) {
        var t1, t2, className;
        if ($._ripplePool == null) {
          t1 = new Array(3);
          t1.fixed$length = Array;
          $._ripplePool = H.setRuntimeTypeInfo(t1, [W.DivElement]);
        }
        if ($._opacityTiming == null)
          $._opacityTiming = P.LinkedHashMap_LinkedHashMap$_literal(["duration", 300], P.String, P.double);
        if ($._opacityKeyframes == null) {
          t1 = P.String;
          t2 = P.double;
          $._opacityKeyframes = H.setRuntimeTypeInfo([P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0.16, "offset", 0.25], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0.16, "offset", 0.5], t1, t2), P.LinkedHashMap_LinkedHashMap$_literal(["opacity", 0], t1, t2)], [[P.Map, P.String, P.double]]);
        }
        if ($._transformTiming == null)
          $._transformTiming = P.LinkedHashMap_LinkedHashMap$_literal(["duration", 225, "easing", "cubic-bezier(0.4, 0.0, 0.2, 1)"], P.String, null);
        if ($._rippleTemplate == null) {
          className = $.$get$supportsAnimationApi() ? "__acx-ripple" : "__acx-ripple fallback";
          t1 = document.createElement("div");
          t1.className = className;
          $._rippleTemplate = t1;
        }
        this.set$_onMouseDown(new B.MaterialRippleComponent_closure(this));
        this.set$_onKeyDown(new B.MaterialRippleComponent_closure0(this));
        t1 = this._material_ripple$_element;
        t2 = J.getInterceptor$x(t1);
        t2.addEventListener$2(t1, "mousedown", this._onMouseDown);
        t2.addEventListener$2(t1, "keydown", this._onKeyDown);
      },
      ngOnDestroy$0: function() {
        var t1, t2;
        t1 = this._material_ripple$_element;
        t2 = J.getInterceptor$x(t1);
        t2.removeEventListener$2(t1, "mousedown", this._onMouseDown);
        t2.removeEventListener$2(t1, "keydown", this._onKeyDown);
      },
      static: {
        MaterialRippleComponent$: function(_element) {
          var t1 = new B.MaterialRippleComponent(_element, false);
          t1.MaterialRippleComponent$1(_element);
          return t1;
        }
      }
    },
    MaterialRippleComponent_closure: {
      "^": "Closure:13;$this",
      call$1: [function(e) {
        var t1, t2;
        e = H.interceptedTypeCast(H.interceptedTypeCheck(e, "$isEvent"), "$isMouseEvent");
        t1 = e.clientX;
        t2 = e.clientY;
        B._createRipple(H.intTypeCheck(t1), H.intTypeCheck(t2), this.$this._material_ripple$_element, false);
      }, null, null, 4, 0, null, 8, "call"]
    },
    MaterialRippleComponent_closure0: {
      "^": "Closure:13;$this",
      call$1: [function(e) {
        e = H.interceptedTypeCheck(H.interceptedTypeCheck(e, "$isEvent"), "$isKeyboardEvent");
        if (!(e.keyCode === 13 || Z.isSpaceKey(e)))
          return;
        B._createRipple(0, 0, this.$this._material_ripple$_element, true);
      }, null, null, 4, 0, null, 8, "call"]
    }
  }], ["asset_angular_components_lib_material_ripple_material_ripple.scss.css.dart", "package:angular_components/material_ripple/material_ripple.scss.css.dart",, O, {}], ["", "package:angular_components/material_ripple/material_ripple.template.dart",, L, {
    "^": "",
    ViewMaterialRippleComponent0: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.initViewRoot$1(this.rootEl);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [B.MaterialRippleComponent];
      },
      static: {
        ViewMaterialRippleComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new L.ViewMaterialRippleComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, B.MaterialRippleComponent));
          t2 = document.createElement("material-ripple");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewMaterialRippleComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, $.$get$styles$MaterialRippleComponent());
            $.ViewMaterialRippleComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/material_select/activation_handler.dart",, Z, {
    "^": "",
    ActivationHandler: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/material_select/material_select_item.dart",, B, {
    "^": "",
    MaterialSelectItemComponent: {
      "^": "ButtonDirective;_material_select_item$_disposer,_activationHandler,_cdRef,_material_select_item$_dropdown,element,0_selectionChangeStreamSub,_isHidden,0_material_select_item$_value,_supportsMultiSelect,_hideCheckbox,_itemRenderer,0componentRenderer,0factoryRenderer,_useCheckMarks,_selectOnActivate,_deselectOnActivate,0_selection,_material_select_item$_selected,_closeOnActivate,_trigger,0_hostTabIndex,_role,0_ariaRole,disabled,tabbable,HasTabIndex__tabIndex,_root,$ti",
      MaterialSelectItemComponent$5: function(element, _dropdown, _activationHandler, _cdRef, role, $T) {
        var t1, t2;
        t1 = this._material_select_item$_disposer;
        t2 = this._trigger;
        t1.addStreamSubscription$1$1(new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.get$handleActivate()), W.UIEvent);
        t1.addFunction$1(new B.MaterialSelectItemComponent_closure(this));
      },
      get$disabled: function(_) {
        return this.disabled;
      },
      get$isHidden: function() {
        return false;
      },
      get$supportsMultiSelect: function() {
        return this._supportsMultiSelect;
      },
      get$valueLabel: function() {
        return;
      },
      get$componentType: function() {
        return;
      },
      get$componentFactory: function() {
        return;
      },
      get$isAriaChecked: function() {
        if (!this._supportsMultiSelect || false)
          var t1 = null;
        else
          t1 = this.get$_isSelectedInSelectionModel();
        return t1;
      },
      get$isSelected: function() {
        var t1 = this.get$_isSelectedInSelectionModel();
        return t1;
      },
      get$_isSelectedInSelectionModel: function() {
        return false;
      },
      handleActivate$1: [function(e) {
        var hasCheckbox, t1;
        H.interceptedTypeCheck(e, "$isUIEvent");
        hasCheckbox = this._supportsMultiSelect && true;
        if (this._closeOnActivate && !hasCheckbox) {
          t1 = this._material_select_item$_dropdown;
          if (!(t1 == null))
            t1.set$visible(0, false);
        }
        this._selectOnActivate;
      }, "call$1", "get$handleActivate", 4, 0, 25, 8],
      static: {
        MaterialSelectItemComponent$: function(element, _dropdown, _activationHandler, _cdRef, role, $T) {
          var t1 = new B.MaterialSelectItemComponent(new R.Disposer(true, false), _activationHandler, _cdRef, _dropdown, element, false, false, false, G.has_renderer___nullRenderer$closure(), false, true, true, false, true, new P._SyncBroadcastStreamController(null, null, 0, [W.UIEvent]), role, false, true, null, element, [$T]);
          t1.MaterialSelectItemComponent$5(element, _dropdown, _activationHandler, _cdRef, role, $T);
          return t1;
        }
      }
    },
    MaterialSelectItemComponent_closure: {
      "^": "Closure:22;$this",
      call$0: function() {
        return;
      }
    }
  }], ["asset_angular_components_lib_material_select_material_select_item.scss.css.shim.dart", "package:angular_components/material_select/material_select_item.scss.css.shim.dart",, T, {}], ["", "package:angular_components/material_select/material_select_item.template.dart",, M, {
    "^": "",
    ViewMaterialSelectItemComponent0: {
      "^": "AppView;0_material_select_item_template$_appEl_2,0_material_select_item_template$_NgIf_2_9,0_material_select_item_template$_appEl_4,0_material_select_item_template$_NgIf_4_9,0_appEl_6,0_NgIf_6_9,_material_select_item_template$_expr_0,0_material_select_item_template$_expr_4,0_material_select_item_template$_expr_5,0_material_select_item_template$_expr_6,0_material_select_item_template$_expr_7,0_material_select_item_template$_expr_8,0_material_select_item_template$_expr_9,0_material_select_item_template$_expr_10,0_material_select_item_template$_expr_11,0_material_select_item_template$_expr_12,0_anchor_0,0_el_0_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _ctx, _rootEl, parentRenderNode, t1, t2, t3, _anchor_2, t4, _anchor_4, _anchor_6;
        _ctx = this.ctx;
        _rootEl = this.rootEl;
        parentRenderNode = this.initViewRoot$1(_rootEl);
        t1 = $.$get$_viewContainerAnchor();
        t2 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        this._anchor_0 = t2;
        t3 = J.getInterceptor$x(parentRenderNode);
        t3.append$1(parentRenderNode, t2);
        t2 = document;
        t3.append$1(parentRenderNode, t2.createTextNode(" "));
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3.append$1(parentRenderNode, _anchor_2);
        t4 = new V.ViewContainer(2, null, this, _anchor_2);
        this._material_select_item_template$_appEl_2 = t4;
        this._material_select_item_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t4, new M.ViewMaterialSelectItemComponent0_build_closure(this)), t4, false);
        t3.append$1(parentRenderNode, t2.createTextNode("\n \n"));
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3.append$1(parentRenderNode, _anchor_4);
        t4 = new V.ViewContainer(4, null, this, _anchor_4);
        this._material_select_item_template$_appEl_4 = t4;
        this._material_select_item_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t4, new M.ViewMaterialSelectItemComponent0_build_closure0(this)), t4, false);
        t3.append$1(parentRenderNode, t2.createTextNode("\n "));
        _anchor_6 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t3.append$1(parentRenderNode, _anchor_6);
        t3 = new V.ViewContainer(6, null, this, _anchor_6);
        this._appEl_6 = t3;
        this._NgIf_6_9 = new K.NgIf(new D.TemplateRef(t3, new M.ViewMaterialSelectItemComponent0_build_closure1(this)), t3, false);
        this.project$2(parentRenderNode, 0);
        this.init$2([], null);
        t3 = W.Event;
        t1 = J.getInterceptor$x(_rootEl);
        t1.addEventListener$2(_rootEl, "click", this.eventHandler1$2$1(_ctx.get$handleClick(), t3, W.MouseEvent));
        t1.addEventListener$2(_rootEl, "keypress", this.eventHandler1$2$1(_ctx.get$handleKeyPress(), t3, W.KeyboardEvent));
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, t2;
        _ctx = this.ctx;
        if (!_ctx._supportsMultiSelect)
          currVal_0 = _ctx.get$_isSelectedInSelectionModel();
        else
          currVal_0 = false;
        t1 = this._material_select_item_template$_expr_0;
        if (t1 !== currVal_0) {
          if (currVal_0) {
            t1 = document.createElement("div");
            H.interceptedTypeCheck(t1, "$isDivElement");
            this._el_0_0 = t1;
            t1.className = "selected-accent mixin";
            this.addShimC$1(t1);
            this.addInlinedNodes$3(this._anchor_0, H.setRuntimeTypeInfo([this._el_0_0], [W.Node]), true);
          } else
            this.removeInlinedNodes$2(H.setRuntimeTypeInfo([this._el_0_0], [W.Node]), true);
          this._material_select_item_template$_expr_0 = currVal_0;
        }
        t1 = this._material_select_item_template$_NgIf_2_9;
        if (_ctx._supportsMultiSelect) {
          _ctx._hideCheckbox;
          t2 = true;
        } else
          t2 = false;
        t1.set$ngIf(t2);
        this._material_select_item_template$_NgIf_4_9.set$ngIf(_ctx.get$valueLabel() != null);
        t2 = this._NgIf_6_9;
        t2.set$ngIf(_ctx.get$componentType() != null || _ctx.get$componentFactory() != null);
        this._material_select_item_template$_appEl_2.detectChangesInNestedViews$0();
        this._material_select_item_template$_appEl_4.detectChangesInNestedViews$0();
        this._appEl_6.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_select_item_template$_appEl_2.destroyNestedViews$0();
        this._material_select_item_template$_appEl_4.destroyNestedViews$0();
        this._appEl_6.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    },
    ViewMaterialSelectItemComponent0_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new M._ViewMaterialSelectItemComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [B.MaterialSelectItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [B.MaterialSelectItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewMaterialSelectItemComponent0_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new M._ViewMaterialSelectItemComponent6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [B.MaterialSelectItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [B.MaterialSelectItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    ViewMaterialSelectItemComponent0_build_closure1: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new M._ViewMaterialSelectItemComponent7(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [B.MaterialSelectItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [B.MaterialSelectItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectItemComponent2: {
      "^": "AppView;0_material_select_item_template$_appEl_0,0_material_select_item_template$_NgIf_0_9,0_material_select_item_template$_appEl_2,0_material_select_item_template$_NgIf_2_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2, _text_1;
        t1 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(0, null, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._material_select_item_template$_appEl_0 = t2;
        this._material_select_item_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t2, new M._ViewMaterialSelectItemComponent2_build_closure(this)), t2, false);
        _text_1 = document.createTextNode("  ");
        t1 = new V.ViewContainer(2, null, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._material_select_item_template$_appEl_2 = t1;
        this._material_select_item_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t1, new M._ViewMaterialSelectItemComponent2_build_closure0(this)), t1, false);
        this.init$2([this._material_select_item_template$_appEl_0, _text_1, t1], null);
      },
      detectChangesInternal$0: function() {
        var _ctx = this.ctx;
        this._material_select_item_template$_NgIf_0_9.set$ngIf(!_ctx._useCheckMarks);
        this._material_select_item_template$_NgIf_2_9.set$ngIf(_ctx._useCheckMarks);
        this._material_select_item_template$_appEl_0.detectChangesInNestedViews$0();
        this._material_select_item_template$_appEl_2.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_select_item_template$_appEl_0.destroyNestedViews$0();
        this._material_select_item_template$_appEl_2.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    },
    _ViewMaterialSelectItemComponent2_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new M._ViewMaterialSelectItemComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [B.MaterialSelectItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [B.MaterialSelectItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectItemComponent2_build_closure0: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new M._ViewMaterialSelectItemComponent4(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [B.MaterialSelectItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [B.MaterialSelectItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectItemComponent3: {
      "^": "AppView;0_material_select_item_template$_compView_0,0_MaterialCheckboxComponent_0_5,0_material_select_item_template$_expr_0,0_material_select_item_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2, _el_0, t3;
        t1 = new G.ViewMaterialCheckboxComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, B.MaterialCheckboxComponent));
        t2 = document.createElement("material-checkbox");
        H.interceptedTypeCheck(t2, "$isHtmlElement");
        t1.rootEl = t2;
        t2.className = "themeable";
        t2 = $.ViewMaterialCheckboxComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialCheckboxComponent());
          $.ViewMaterialCheckboxComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._material_select_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.tabIndex = -1;
        this.addShimC$1(_el_0);
        t1 = this._material_select_item_template$_compView_0.viewData.ref;
        t2 = [null];
        t3 = true ? "-1" : "0";
        t1 = new B.MaterialCheckboxComponent(t1, _el_0, t3, "checkbox", new P._AsyncBroadcastStreamController(null, null, 0, t2), new P._AsyncBroadcastStreamController(null, null, 0, t2), new P._AsyncBroadcastStreamController(null, null, 0, t2), false, false, false, false, false, false, "false", false, C.Icon_check_box_outline_blank);
        t1._syncAriaChecked$0();
        this._MaterialCheckboxComponent_0_5 = t1;
        this._material_select_item_template$_compView_0.create$2(0, t1, [C.List_empty]);
        this.init0$1(_el_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_HasDisabled_qzc && 0 === nodeIndex)
          return this._MaterialCheckboxComponent_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2, t3, changed, currVal_1, currVal_6, currVal_8, currVal_9, currVal_10;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        t2 = _ctx.disabled;
        t3 = this._material_select_item_template$_expr_0;
        if (t3 != t2) {
          this._MaterialCheckboxComponent_0_5.disabled = t2;
          this._material_select_item_template$_expr_0 = t2;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.get$_isSelectedInSelectionModel();
        t2 = this._material_select_item_template$_expr_1;
        if (t2 !== currVal_1) {
          this._MaterialCheckboxComponent_0_5.set$checked(0, currVal_1);
          this._material_select_item_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._material_select_item_template$_compView_0.viewData.set$cdMode(1);
        t2 = this._material_select_item_template$_compView_0;
        t2.toString;
        if (t1 === 0) {
          J.get$role$z(t2.ctx);
          t2.setAttr$3(t2.rootEl, "role", J.get$role$z(t2.ctx));
        }
        currVal_6 = J.get$tabIndex$x(t2.ctx);
        t1 = t2._material_checkbox_template$_expr_6;
        if (t1 != currVal_6) {
          t2.setAttr$3(t2.rootEl, "tabindex", currVal_6);
          t2._material_checkbox_template$_expr_6 = currVal_6;
        }
        currVal_8 = J.get$disabled$z(t2.ctx);
        t1 = t2._material_checkbox_template$_expr_8;
        if (t1 != currVal_8) {
          t2.updateElemClass$3(t2.rootEl, "disabled", currVal_8);
          t2._material_checkbox_template$_expr_8 = currVal_8;
        }
        currVal_9 = J.get$disabled$z(t2.ctx);
        t1 = t2._material_checkbox_template$_expr_9;
        if (t1 != currVal_9) {
          t1 = t2.rootEl;
          t2.setAttr$3(t1, "aria-disabled", currVal_9 == null ? null : C.JSBool_methods.toString$0(currVal_9));
          t2._material_checkbox_template$_expr_9 = currVal_9;
        }
        currVal_10 = J.get$label$z(t2.ctx);
        t1 = t2._material_checkbox_template$_expr_10;
        if (t1 != currVal_10) {
          t2.setAttr$3(t2.rootEl, "aria-label", currVal_10);
          t2._material_checkbox_template$_expr_10 = currVal_10;
        }
        this._material_select_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_select_item_template$_compView_0.destroy$0();
        this._MaterialCheckboxComponent_0_5.toString;
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    },
    _ViewMaterialSelectItemComponent4: {
      "^": "AppView;0_material_select_item_template$_appEl_1,0_material_select_item_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var _el_0, t1, _anchor_1;
        _el_0 = document.createElement("span");
        _el_0.className = "check-container";
        this.addShimE$1(_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(_el_0, _anchor_1);
        t1 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._material_select_item_template$_appEl_1 = t1;
        this._material_select_item_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, new M._ViewMaterialSelectItemComponent4_build_closure(this)), t1, false);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2;
        _ctx = this.ctx;
        t1 = this._material_select_item_template$_NgIf_1_9;
        t2 = _ctx.get$_isSelectedInSelectionModel();
        t1.set$ngIf(t2);
        this._material_select_item_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._material_select_item_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    },
    _ViewMaterialSelectItemComponent4_build_closure: {
      "^": "Closure;$this",
      call$2: function(parentView, parentIndex) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this.$this, 0);
        t2 = new M._ViewMaterialSelectItemComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView, [t1]);
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_2, parentIndex, [B.MaterialSelectItemComponent, t1]));
        t2.componentType = $.ViewMaterialSelectItemComponent0__renderType;
        return t2;
      },
      $signature: function() {
        return {func: 1, ret: [S.AppView, [B.MaterialSelectItemComponent, H.getTypeArgumentByIndex(this.$this, 0)]], args: [,,]};
      }
    },
    _ViewMaterialSelectItemComponent5: {
      "^": "AppView;0_material_select_item_template$_compView_0,0_GlyphComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2, _el_0;
        t1 = new M.ViewGlyphComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, L.GlyphComponent));
        t2 = document.createElement("glyph");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewGlyphComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$GlyphComponent());
          $.ViewGlyphComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._material_select_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = J.getInterceptor$x(_el_0);
        t1.setAttribute$2(_el_0, "baseline", "");
        _el_0.className = "check";
        t1.setAttribute$2(_el_0, "icon", "check");
        this.addShimC$1(_el_0);
        t1 = new L.GlyphComponent(true, _el_0);
        this._GlyphComponent_0_5 = t1;
        this._material_select_item_template$_compView_0.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var t1, changed;
        if (this.viewData._cdState === 0) {
          t1 = this._GlyphComponent_0_5;
          t1._glyph$_icon = "check";
          if (C.JSArray_methods.contains$1(C.List_CX7, "check"))
            J.setAttribute$2$x(t1._glyph$_element, "flip", "");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._material_select_item_template$_compView_0.viewData.set$cdMode(1);
        this._material_select_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_select_item_template$_compView_0.destroy$0();
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    },
    _ViewMaterialSelectItemComponent6: {
      "^": "AppView;0_material_select_item_template$_expr_0,0_material_select_item_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("span");
        _el_0.className = "label";
        this.addShimE$1(_el_0);
        t1 = doc.createTextNode("");
        this._material_select_item_template$_text_1 = t1;
        J.append$1$x(_el_0, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = this.ctx.get$valueLabel();
        if (currVal_0 == null)
          currVal_0 = "";
        t1 = this._material_select_item_template$_expr_0;
        if (t1 !== currVal_0) {
          this._material_select_item_template$_text_1.textContent = currVal_0;
          this._material_select_item_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    },
    _ViewMaterialSelectItemComponent7: {
      "^": "AppView;0_material_select_item_template$_compView_0,0_material_select_item_template$_appEl_0,0_DynamicComponent_0_8,0_material_select_item_template$_expr_0,0_material_select_item_template$_expr_1,0_material_select_item_template$_expr_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx,$ti",
      build$0: function() {
        var t1, t2, _el_0, t3;
        t1 = new Q.ViewDynamicComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, Z.DynamicComponent));
        t2 = document.createElement("dynamic-component");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewDynamicComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
          $.ViewDynamicComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._material_select_item_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "dynamic-item";
        this.addShimC$1(_el_0);
        this._material_select_item_template$_appEl_0 = new V.ViewContainer(0, null, this, _el_0);
        t1 = H.interceptedTypeCheck(this.parentView.injectorGet$2(C.Type_SlowComponentLoader_qxe, this.viewData.parentIndex), "$isSlowComponentLoader");
        t2 = this._material_select_item_template$_compView_0;
        t3 = t2.viewData.ref;
        t3 = new Z.DynamicComponent(t1, this._material_select_item_template$_appEl_0, t3, P.StreamController_StreamController(null, null, null, null, false, [D.ComponentRef,,]), false, false, false, false);
        this._DynamicComponent_0_8 = t3;
        t2.create$2(0, t3, []);
        this.init0$1(this._material_select_item_template$_appEl_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, currVal_0, t1, changed, currVal_1, t2;
        _ctx = this.ctx;
        currVal_0 = _ctx.get$componentType();
        t1 = this._material_select_item_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          t1 = this._DynamicComponent_0_8;
          if (!J.$eq$(t1._componentType, currVal_0))
            t1._typeChanged = true;
          t1._componentType = currVal_0;
          this._material_select_item_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.get$componentFactory();
        t1 = this._material_select_item_template$_expr_1;
        if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
          t1 = this._DynamicComponent_0_8;
          t2 = t1._componentFactory;
          if (t2 == null ? currVal_1 != null : t2 !== currVal_1)
            t1._factoryChanged = true;
          t1._componentFactory = currVal_1;
          this._material_select_item_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed) {
          t1 = this._DynamicComponent_0_8;
          if (t1._factoryChanged || t1._typeChanged) {
            t1._disposeChildComponent$0();
            if (t1._dynamic_component$_viewContainerRef != null)
              t1._initialize$0();
            else
              t1._loadDeferred = true;
          } else if (t1._valueChanged)
            t1._updateChildComponent$0();
          t1._typeChanged = false;
          t1._factoryChanged = false;
          t1._valueChanged = false;
        }
        this._material_select_item_template$_appEl_0.detectChangesInNestedViews$0();
        this._material_select_item_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_select_item_template$_appEl_0.destroyNestedViews$0();
        this._material_select_item_template$_compView_0.destroy$0();
        var t1 = this._DynamicComponent_0_8;
        t1._disposeChildComponent$0();
        t1._dynamic_component$_viewContainerRef = null;
      },
      $asAppView: function($T) {
        return [[B.MaterialSelectItemComponent, $T]];
      }
    }
  }], ["", "package:angular_components/material_spinner/material_spinner.dart",, T, {
    "^": "",
    MaterialSpinnerComponent: {
      "^": "Object;"
    }
  }], ["asset_angular_components_lib_material_spinner_material_spinner.scss.css.shim.dart", "package:angular_components/material_spinner/material_spinner.scss.css.shim.dart",, B, {}], ["", "package:angular_components/material_spinner/material_spinner.template.dart",, X, {
    "^": "",
    ViewMaterialSpinnerComponent0: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, _el_1, _el_2, _el_3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "spinner";
        this.addShimC$1(_el_0);
        _el_1 = S.createDivAndAppend(doc, _el_0);
        _el_1.className = "circle left";
        this.addShimC$1(_el_1);
        _el_2 = S.createDivAndAppend(doc, _el_0);
        _el_2.className = "circle right";
        this.addShimC$1(_el_2);
        _el_3 = S.createDivAndAppend(doc, _el_0);
        _el_3.className = "circle gap";
        this.addShimC$1(_el_3);
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [T.MaterialSpinnerComponent];
      }
    }
  }], ["", "package:angular_components/material_tooltip/module.dart",, G, {
    "^": "",
    createTooltipController: function(controller, disposer) {
      var t1;
      if (controller != null)
        return controller;
      t1 = $._singletonController;
      if (t1 != null)
        return t1;
      $._singletonController = new U.TooltipController();
      if (!(disposer == null))
        disposer.addFunction$1(new G.createTooltipController_closure());
      return $._singletonController;
    },
    createTooltipController_closure: {
      "^": "Closure:0;",
      call$0: function() {
        $._singletonController = null;
      }
    }
  }], ["", "package:angular_components/material_yes_no_buttons/material_yes_no_buttons.dart",, E, {
    "^": "",
    MaterialYesNoButtonsComponent: {
      "^": "Object;_yes,_no,yesText,noText,yesHighlighted,raised,yesRaised,disabled>,yesDisabled,yesDisplayed,noDisabled,noDisplayed,pending,0yesButton,0noButton",
      set$yesButton: function(yesButton) {
        this.yesButton = H.interceptedTypeCheck(yesButton, "$isMaterialButtonComponent");
      },
      set$noButton: function(noButton) {
        this.noButton = H.interceptedTypeCheck(noButton, "$isMaterialButtonComponent");
      },
      onYes$1: [function($event) {
        this._yes.add$1(0, H.interceptedTypeCheck($event, "$isUIEvent"));
      }, "call$1", "get$onYes", 4, 0, 25],
      onNo$1: [function($event) {
        this._no.add$1(0, H.interceptedTypeCheck($event, "$isUIEvent"));
      }, "call$1", "get$onNo", 4, 0, 25]
    },
    BoundaryAwareKeyUpDirective: {
      "^": "Object;",
      BoundaryAwareKeyUpDirective$2: function(element, boundary) {
        var keyUpStream, t1;
        keyUpStream = boundary == null ? null : boundary.keyUpStream;
        if (keyUpStream == null)
          keyUpStream = new W._ElementEventStreamImpl(element, "keyup", false, [W.KeyboardEvent]);
        t1 = H.getTypeArgumentByIndex(keyUpStream, 0);
        this._material_yes_no_buttons$_subscription = new P._WhereStream(H.functionTypeCheck(this.get$_isKeyUpMatching(), {func: 1, ret: P.bool, args: [t1]}), keyUpStream, [t1]).listen$1(this.get$_onMatchingKeyUp());
      }
    },
    KeyUpBoundaryDirective: {
      "^": "Object;keyUpStream"
    },
    EnterAcceptsDirective: {
      "^": "BoundaryAwareKeyUpDirective;_yesNo,enterAccepts,0_material_yes_no_buttons$_subscription",
      _isKeyUpMatching$1: [function($event) {
        var t1, t2;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if (!this.enterAccepts)
          return false;
        if ($event.keyCode !== 13)
          return false;
        t1 = this._yesNo;
        t2 = t1.yesButton;
        if (t2 == null || t2.disabled)
          return false;
        t1 = t1.noButton;
        if (t1 != null)
          t1 = t1._focused || t1._clickFocused;
        else
          t1 = false;
        if (t1)
          return false;
        return true;
      }, "call$1", "get$_isKeyUpMatching", 4, 0, 27],
      _onMatchingKeyUp$1: [function($event) {
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        this._yesNo._yes.add$1(0, $event);
        return;
      }, "call$1", "get$_onMatchingKeyUp", 4, 0, 16, 6]
    }
  }], ["asset_angular_components_lib_material_yes_no_buttons_material_yes_no_buttons.scss.css.shim.dart", "package:angular_components/material_yes_no_buttons/material_yes_no_buttons.scss.css.shim.dart",, T, {}], ["", "package:angular_components/material_yes_no_buttons/material_yes_no_buttons.template.dart",, M, {
    "^": "",
    viewFactory_MaterialYesNoButtonsComponent1: [function(parentView, parentIndex) {
      var t1 = new M._ViewMaterialYesNoButtonsComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, E.MaterialYesNoButtonsComponent));
      t1.componentType = $.ViewMaterialYesNoButtonsComponent0__renderType;
      return t1;
    }, "call$2", "material_yes_no_buttons_template__viewFactory_MaterialYesNoButtonsComponent1$closure", 8, 0, 47],
    viewFactory_MaterialYesNoButtonsComponent2: [function(parentView, parentIndex) {
      var t1 = new M._ViewMaterialYesNoButtonsComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, E.MaterialYesNoButtonsComponent));
      t1.componentType = $.ViewMaterialYesNoButtonsComponent0__renderType;
      return t1;
    }, "call$2", "material_yes_no_buttons_template__viewFactory_MaterialYesNoButtonsComponent2$closure", 8, 0, 47],
    viewFactory_MaterialYesNoButtonsComponent3: [function(parentView, parentIndex) {
      var t1 = new M._ViewMaterialYesNoButtonsComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, E.MaterialYesNoButtonsComponent));
      t1.componentType = $.ViewMaterialYesNoButtonsComponent0__renderType;
      return t1;
    }, "call$2", "material_yes_no_buttons_template__viewFactory_MaterialYesNoButtonsComponent3$closure", 8, 0, 47],
    ViewMaterialYesNoButtonsComponent0: {
      "^": "AppView;0_material_yes_no_buttons_template$_appEl_0,0_material_yes_no_buttons_template$_NgIf_0_9,0_material_yes_no_buttons_template$_appEl_1,_query_yesButton_1_0_isDirty,0_material_yes_no_buttons_template$_NgIf_1_9,0_material_yes_no_buttons_template$_appEl_2,_query_noButton_1_1_isDirty,0_material_yes_no_buttons_template$_NgIf_2_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, _anchor_0, t2, t3, _anchor_1, _anchor_2;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_0 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, _anchor_0);
        t3 = new V.ViewContainer(0, null, this, _anchor_0);
        this._material_yes_no_buttons_template$_appEl_0 = t3;
        this._material_yes_no_buttons_template$_NgIf_0_9 = new K.NgIf(new D.TemplateRef(t3, M.material_yes_no_buttons_template__viewFactory_MaterialYesNoButtonsComponent1$closure()), t3, false);
        _anchor_1 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_1);
        t3 = new V.ViewContainer(1, null, this, _anchor_1);
        this._material_yes_no_buttons_template$_appEl_1 = t3;
        this._material_yes_no_buttons_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, M.material_yes_no_buttons_template__viewFactory_MaterialYesNoButtonsComponent2$closure()), t3, false);
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_2);
        t2 = new V.ViewContainer(2, null, this, _anchor_2);
        this._material_yes_no_buttons_template$_appEl_2 = t2;
        this._material_yes_no_buttons_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, M.material_yes_no_buttons_template__viewFactory_MaterialYesNoButtonsComponent3$closure()), t2, false);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, t2;
        _ctx = this.ctx;
        this._material_yes_no_buttons_template$_NgIf_0_9.set$ngIf(_ctx.pending);
        t1 = this._material_yes_no_buttons_template$_NgIf_1_9;
        if (!_ctx.pending) {
          _ctx.yesDisplayed;
          t2 = true;
        } else
          t2 = false;
        t1.set$ngIf(t2);
        t2 = this._material_yes_no_buttons_template$_NgIf_2_9;
        if (!_ctx.pending) {
          _ctx.noDisplayed;
          t1 = true;
        } else
          t1 = false;
        t2.set$ngIf(t1);
        this._material_yes_no_buttons_template$_appEl_0.detectChangesInNestedViews$0();
        this._material_yes_no_buttons_template$_appEl_1.detectChangesInNestedViews$0();
        this._material_yes_no_buttons_template$_appEl_2.detectChangesInNestedViews$0();
        if (this._query_yesButton_1_0_isDirty) {
          t1 = this.ctx;
          t2 = this._material_yes_no_buttons_template$_appEl_1.mapNestedViews$2$1(new M.ViewMaterialYesNoButtonsComponent0_detectChangesInternal_closure(), B.MaterialButtonComponent, M._ViewMaterialYesNoButtonsComponent2);
          t1.set$yesButton(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_yesButton_1_0_isDirty = false;
        }
        if (this._query_noButton_1_1_isDirty) {
          t1 = this.ctx;
          t2 = this._material_yes_no_buttons_template$_appEl_2.mapNestedViews$2$1(new M.ViewMaterialYesNoButtonsComponent0_detectChangesInternal_closure0(), B.MaterialButtonComponent, M._ViewMaterialYesNoButtonsComponent3);
          t1.set$noButton(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_noButton_1_1_isDirty = false;
        }
      },
      destroyInternal$0: function() {
        this._material_yes_no_buttons_template$_appEl_0.destroyNestedViews$0();
        this._material_yes_no_buttons_template$_appEl_1.destroyNestedViews$0();
        this._material_yes_no_buttons_template$_appEl_2.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [E.MaterialYesNoButtonsComponent];
      }
    },
    ViewMaterialYesNoButtonsComponent0_detectChangesInternal_closure: {
      "^": "Closure:140;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMaterialYesNoButtonsComponent2")._MaterialButtonComponent_0_6], [B.MaterialButtonComponent]);
      }
    },
    ViewMaterialYesNoButtonsComponent0_detectChangesInternal_closure0: {
      "^": "Closure:141;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewMaterialYesNoButtonsComponent3")._MaterialButtonComponent_0_6], [B.MaterialButtonComponent]);
      }
    },
    _ViewMaterialYesNoButtonsComponent1: {
      "^": "AppView;0_material_yes_no_buttons_template$_compView_1,0_MaterialSpinnerComponent_1_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2, _el_1;
        doc = document;
        _el_0 = doc.createElement("div");
        _el_0.className = "btn spinner";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = new X.ViewMaterialSpinnerComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 1, T.MaterialSpinnerComponent));
        t2 = doc.createElement("material-spinner");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewMaterialSpinnerComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialSpinnerComponent());
          $.ViewMaterialSpinnerComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._material_yes_no_buttons_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        J.append$1$x(_el_0, _el_1);
        this.addShimC$1(_el_1);
        t1 = new T.MaterialSpinnerComponent();
        this._MaterialSpinnerComponent_1_5 = t1;
        this._material_yes_no_buttons_template$_compView_1.create$2(0, t1, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        this._material_yes_no_buttons_template$_compView_1.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._material_yes_no_buttons_template$_compView_1.destroy$0();
      },
      $asAppView: function() {
        return [E.MaterialYesNoButtonsComponent];
      }
    },
    _ViewMaterialYesNoButtonsComponent2: {
      "^": "AppView;0_material_yes_no_buttons_template$_compView_0,0_AcxDarkTheme_0_5,0_MaterialButtonComponent_0_6,0_material_yes_no_buttons_template$_expr_0,0_material_yes_no_buttons_template$_expr_1,0_material_yes_no_buttons_template$_expr_2,0_material_yes_no_buttons_template$_expr_3,0_material_yes_no_buttons_template$_el_0,0_material_yes_no_buttons_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, subscription_0;
        t1 = U.ViewMaterialButtonComponent0$(this, 0);
        this._material_yes_no_buttons_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._material_yes_no_buttons_template$_el_0 = t1;
        t1.className = "btn btn-yes";
        this.addShimC$1(t1);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(this.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_0_5 = t1;
        t1 = B.MaterialButtonComponent$(this._material_yes_no_buttons_template$_el_0, t1, this._material_yes_no_buttons_template$_compView_0.viewData.ref, null);
        this._MaterialButtonComponent_0_6 = t1;
        t2 = document.createTextNode("");
        this._material_yes_no_buttons_template$_text_1 = t2;
        this._material_yes_no_buttons_template$_compView_0.create$2(0, t1, [H.setRuntimeTypeInfo([t2], [W.Text])]);
        t2 = this._MaterialButtonComponent_0_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onYes(), t1, t1));
        this.init$2([this._material_yes_no_buttons_template$_el_0], [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_AcxDarkTheme_Tng)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._AcxDarkTheme_0_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._MaterialButtonComponent_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_3;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        _ctx.disabled;
        t1 = this._material_yes_no_buttons_template$_expr_1;
        if (t1 !== false) {
          this._MaterialButtonComponent_0_6.disabled = false;
          this._material_yes_no_buttons_template$_expr_1 = false;
          changed = true;
        } else
          changed = false;
        _ctx.raised;
        t1 = this._material_yes_no_buttons_template$_expr_2;
        if (t1 !== false) {
          this._MaterialButtonComponent_0_6.raised = false;
          this._material_yes_no_buttons_template$_expr_2 = false;
          changed = true;
        }
        if (changed)
          this._material_yes_no_buttons_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialButtonComponent_0_6.ngOnInit$0();
        _ctx.yesHighlighted;
        t1 = this._material_yes_no_buttons_template$_expr_0;
        if (t1 !== false) {
          this.updateElemClass$3(this._material_yes_no_buttons_template$_el_0, "highlighted", false);
          this._material_yes_no_buttons_template$_expr_0 = false;
        }
        this._material_yes_no_buttons_template$_compView_0.detectHostChanges$1(firstCheck);
        currVal_3 = _ctx.yesText;
        if (currVal_3 == null)
          currVal_3 = "";
        t1 = this._material_yes_no_buttons_template$_expr_3;
        if (t1 !== currVal_3) {
          this._material_yes_no_buttons_template$_text_1.textContent = currVal_3;
          this._material_yes_no_buttons_template$_expr_3 = currVal_3;
        }
        this._material_yes_no_buttons_template$_compView_0.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewMaterialYesNoButtonsComponent0")._query_yesButton_1_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._material_yes_no_buttons_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [E.MaterialYesNoButtonsComponent];
      }
    },
    _ViewMaterialYesNoButtonsComponent3: {
      "^": "AppView;0_material_yes_no_buttons_template$_compView_0,0_AcxDarkTheme_0_5,0_MaterialButtonComponent_0_6,0_material_yes_no_buttons_template$_expr_0,0_material_yes_no_buttons_template$_expr_1,0_material_yes_no_buttons_template$_expr_2,0_material_yes_no_buttons_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2;
        t1 = U.ViewMaterialButtonComponent0$(this, 0);
        this._material_yes_no_buttons_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "btn btn-no";
        this.addShimC$1(_el_0);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(this.parentView.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_0_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_0, t1, this._material_yes_no_buttons_template$_compView_0.viewData.ref, null);
        this._MaterialButtonComponent_0_6 = t1;
        t2 = document.createTextNode("");
        this._material_yes_no_buttons_template$_text_1 = t2;
        this._material_yes_no_buttons_template$_compView_0.create$2(0, t1, [H.setRuntimeTypeInfo([t2], [W.Text])]);
        t2 = this._MaterialButtonComponent_0_6._trigger;
        t1 = W.UIEvent;
        this.init$2([_el_0], [new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onNo(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_AcxDarkTheme_Tng)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._AcxDarkTheme_0_5;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._MaterialButtonComponent_0_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        _ctx.disabled;
        t1 = this._material_yes_no_buttons_template$_expr_0;
        if (t1 !== false) {
          this._MaterialButtonComponent_0_6.disabled = false;
          this._material_yes_no_buttons_template$_expr_0 = false;
          changed = true;
        } else
          changed = false;
        _ctx.raised;
        t1 = this._material_yes_no_buttons_template$_expr_1;
        if (t1 !== false) {
          this._MaterialButtonComponent_0_6.raised = false;
          this._material_yes_no_buttons_template$_expr_1 = false;
          changed = true;
        }
        if (changed)
          this._material_yes_no_buttons_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialButtonComponent_0_6.ngOnInit$0();
        this._material_yes_no_buttons_template$_compView_0.detectHostChanges$1(firstCheck);
        currVal_2 = _ctx.noText;
        if (currVal_2 == null)
          currVal_2 = "";
        t1 = this._material_yes_no_buttons_template$_expr_2;
        if (t1 !== currVal_2) {
          this._material_yes_no_buttons_template$_text_1.textContent = currVal_2;
          this._material_yes_no_buttons_template$_expr_2 = currVal_2;
        }
        this._material_yes_no_buttons_template$_compView_0.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewMaterialYesNoButtonsComponent0")._query_noButton_1_1_isDirty = true;
      },
      destroyInternal$0: function() {
        this._material_yes_no_buttons_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [E.MaterialYesNoButtonsComponent];
      }
    }
  }], ["", "package:angular_components/mixins/focusable_mixin.dart",, O, {
    "^": "",
    FocusableMixin: {
      "^": "Object;",
      get$onFocus: function(_) {
        var t1 = this.FocusableMixin__onFocus;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      set$focusable: ["super$FocusableMixin$focusable", function(component) {
        this.FocusableMixin__focusable = component;
        if (this.FocusableMixin__focusPending && component != null) {
          this.FocusableMixin__focusPending = false;
          component.focus$0(0);
        }
      }],
      focus$0: ["super$FocusableMixin$focus", function(_) {
        var t1 = this.FocusableMixin__focusable;
        if (t1 == null)
          this.FocusableMixin__focusPending = true;
        else
          t1.focus$0(0);
      }],
      $isFocusable: 1
    }
  }], ["", "package:angular_components/mixins/has_tab_index.dart",, B, {
    "^": "",
    HasTabIndex: {
      "^": "Object;",
      get$tabIndex: function(_) {
        var t1 = this._computeTabIndex$0();
        return t1;
      },
      _computeTabIndex$0: function() {
        if (this.get$disabled(this))
          return "-1";
        else {
          var t1 = this.get$disabled(this);
          t1 = !t1 ? this._hostTabIndex : "-1";
          if (!(t1 == null || C.JSString_methods.trim$0(t1).length === 0)) {
            t1 = this.get$disabled(this);
            return !t1 ? this._hostTabIndex : "-1";
          } else
            return "0";
        }
      }
    }
  }], ["", "package:angular_components/mixins/material_dropdown_base.dart",, M, {
    "^": "",
    DropdownHandle: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/model/a11y/active_item.dart",, O, {
    "^": "",
    ActiveItemModel: {
      "^": "Object;0_items,$ti",
      set$_items: function(_items) {
        this._items = H.assertSubtype(_items, "$isList", this.$ti, "$asList");
      },
      ActiveItemModel$3$items$loop: function(idGenerator, items, loop, $T) {
        var t1;
        this._loop = true;
        this.set$_items(items);
        t1 = this._items;
        if (t1.get$isNotEmpty(t1))
          this._activeIndex = 0;
      },
      get$activeItem: function() {
        var t1 = this._items;
        return t1.get$isEmpty(t1) || this._activeIndex === -1 ? null : this._items.$index(0, this._activeIndex);
      },
      activate$1: function(value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._items;
        this._activeIndex = t1.indexOf$1(t1, value);
        this._active_item$_modelChanged.add$1(0, null);
      },
      id$1: [function(_, item) {
        var t1;
        H.assertSubtypeOfRuntimeType(item, H.getTypeArgumentByIndex(this, 0));
        if (item == null)
          return;
        t1 = this._ids;
        if (!t1.containsKey$1(0, item))
          t1.$indexSet(0, item, this._idGenerator.nextId$0());
        return t1.$index(0, item);
      }, "call$1", "get$id", 5, 0, 142, 5]
    }
  }], ["", "package:angular_components/model/a11y/active_item_directive.dart",, B, {
    "^": "",
    ActiveItemDirective: {
      "^": "Object;_active_item_directive$_element,_active_item_directive$_domService,_active_item_directive$_modal,_active_item_directive$_popupRef,_active,_initialized,0_visibilitySubscription,_hasHover",
      set$itemActive: function(value) {
        if (value === this._active)
          return;
        this._active = value;
        this._scrollIntoViewIfNecessary$0();
      },
      _scrollIntoViewIfNecessary$0: function() {
        var t1, t2, isVisible, t3, onVisibleChanged;
        t1 = this._visibilitySubscription;
        if (!(t1 == null))
          t1.cancel$0(0);
        if (this._initialized && this._active && !this._hasHover) {
          t1 = this._active_item_directive$_popupRef;
          t2 = t1 != null;
          if (t2)
            isVisible = t1._popupComponent._isVisible;
          else {
            t3 = this._active_item_directive$_modal;
            isVisible = t3 == null || t3._modal$_isVisible;
          }
          if (isVisible)
            this._scrollIntoView$0(0);
          else {
            if (t2) {
              t1 = t1._popupComponent.PopupEvents_onVisibleController;
              onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
            } else {
              t1 = this._active_item_directive$_modal._onVisibleChanged;
              onVisibleChanged = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
            }
            this._visibilitySubscription = onVisibleChanged.listen$1(new B.ActiveItemDirective__scrollIntoViewIfNecessary_closure(this));
          }
        }
      },
      _scrollIntoView$0: function(_) {
        this._active_item_directive$_domService.scheduleWrite$1(new B.ActiveItemDirective__scrollIntoView_closure(this));
      },
      onMouseEnter$0: [function(_) {
        this._hasHover = true;
      }, "call$0", "get$onMouseEnter", 1, 0, 2],
      onMouseLeave$0: [function(_) {
        this._hasHover = false;
      }, "call$0", "get$onMouseLeave", 1, 0, 2]
    },
    ActiveItemDirective__scrollIntoViewIfNecessary_closure: {
      "^": "Closure:29;$this",
      call$1: [function(isVisible) {
        var t1, t2;
        if (H.boolTypeCheck(isVisible)) {
          t1 = this.$this;
          t2 = t1._visibilitySubscription;
          if (!(t2 == null))
            t2.cancel$0(0);
          if (t1._initialized && t1._active && !t1._hasHover)
            t1._scrollIntoView$0(0);
        }
      }, null, null, 4, 0, null, 23, "call"]
    },
    ActiveItemDirective__scrollIntoView_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var options, t1, exception, hasScrollIntoViewIfNeeded;
        try {
          options = {};
          options.block = "nearest";
          options.inline = "nearest";
          t1 = this.$this._active_item_directive$_element;
          t1.scrollIntoView.apply(t1, [options]);
        } catch (exception) {
          H.unwrapException(exception);
          t1 = this.$this._active_item_directive$_element;
          hasScrollIntoViewIfNeeded = !!t1.scrollIntoViewIfNeeded;
          if (hasScrollIntoViewIfNeeded)
            t1.scrollIntoViewIfNeeded();
          else
            t1.scrollIntoView();
        }
      }
    }
  }], ["", "package:angular_components/model/a11y/active_item_directive.template.dart",, M, {
    "^": "",
    ActiveItemDirectiveNgCd: {
      "^": "DirectiveChangeDetector;instance,0_active_item_directive_template$_expr_0,0directive,0view,0el,_hasHostChanges"
    }
  }], ["", "package:angular_components/model/a11y/keyboard_handler_mixin.dart",, R, {
    "^": "",
    KeyboardHandlerMixin: {
      "^": "Object;",
      onKeyUp$1: [function(_, $event) {
        var t1;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if ($event.keyCode === 27) {
          t1 = this.escapeHandler;
          if (t1 != null)
            t1.call$1($event);
        }
      }, "call$1", "get$onKeyUp", 5, 0, 16]
    }
  }], ["", "package:angular_components/model/action/delayed_action.dart",, T, {
    "^": "",
    DelayedAction: {
      "^": "Object;_delayed_action$_callback,_delayed_action$_duration,0_delayed_action$_timer,0_delayed_action$_completer",
      set$_delayed_action$_completer: function(_completer) {
        this._delayed_action$_completer = H.assertSubtype(_completer, "$isCompleter", [P.bool], "$asCompleter");
      },
      _wrappedCallback$0: [function() {
        this._delayed_action$_callback.call$0();
        this._reset$1(true);
      }, "call$0", "get$_wrappedCallback", 0, 0, 2],
      start$0: function(_) {
        var t1;
        if (this._delayed_action$_timer == null) {
          t1 = P.bool;
          this.set$_delayed_action$_completer(new P._AsyncCompleter(new P._Future(0, $.Zone__current, [t1]), [t1]));
          this._delayed_action$_timer = P.Timer_Timer(this._delayed_action$_duration, this.get$_wrappedCallback());
        }
        return this._delayed_action$_completer.future;
      },
      _reset$1: function(complete) {
        var t1 = this._delayed_action$_timer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._delayed_action$_timer = null;
        t1 = this._delayed_action$_completer;
        if (!(t1 == null))
          t1.complete$1(0, H.futureOrCheck(complete, {futureOr: 1, type: P.bool}));
        this.set$_delayed_action$_completer(null);
      }
    }
  }], ["", "package:angular_components/model/collection/combined_list.dart",, B, {
    "^": "",
    CombinedList: {
      "^": "ListMixin;_lists,$ti",
      get$isEmpty: function(_) {
        return C.JSArray_methods.every$1(this._lists, new B.CombinedList_isEmpty_closure());
      },
      get$isNotEmpty: function(_) {
        return C.JSArray_methods.any$1(this._lists, new B.CombinedList_isNotEmpty_closure());
      },
      get$length: function(_) {
        return C.JSArray_methods.fold$1$2(this._lists, 0, new B.CombinedList_length_closure(), P.int);
      },
      $index: function(_, index) {
        var t1, i, list, t2, t3;
        H.intTypeCheck(index);
        for (t1 = this._lists, i = 0; i < t1.length; ++i) {
          list = t1[i];
          t2 = J.getInterceptor$asx(list);
          t3 = t2.get$length(list);
          if (typeof index !== "number")
            return index.$lt();
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (index < t3)
            return t2.$index(list, index);
          t2 = t2.get$length(list);
          if (typeof t2 !== "number")
            return H.iae(t2);
          index -= t2;
        }
        throw H.wrapException(P.StateError$("Index out of range: " + H.S(index) + " (" + H.S(this.get$length(this)) + ")"));
      },
      $indexSet: function(_, index, value) {
        var t1, i, list, t2, t3;
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        for (t1 = this._lists, i = 0; i < t1.length; ++i) {
          list = t1[i];
          t2 = J.getInterceptor$asx(list);
          t3 = t2.get$length(list);
          if (typeof index !== "number")
            return index.$lt();
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (index < t3) {
            t2.$indexSet(list, index, value);
            return;
          }
          t2 = t2.get$length(list);
          if (typeof t2 !== "number")
            return H.iae(t2);
          index -= t2;
        }
        throw H.wrapException(P.StateError$("Index out of range: " + H.S(index) + " (" + H.S(this.get$length(this)) + ")"));
      },
      set$length: function(_, newLength) {
        return H.throwExpression(P.UnimplementedError$(null));
      }
    },
    CombinedList_isEmpty_closure: {
      "^": "Closure:48;",
      call$1: function(list) {
        return J.get$isEmpty$asx(H.listTypeCheck(list));
      }
    },
    CombinedList_isNotEmpty_closure: {
      "^": "Closure:48;",
      call$1: function(list) {
        return J.get$isNotEmpty$asx(H.listTypeCheck(list));
      }
    },
    CombinedList_length_closure: {
      "^": "Closure:144;",
      call$2: function(sum, list) {
        var t1;
        H.intTypeCheck(sum);
        t1 = J.get$length$asx(H.listTypeCheck(list));
        if (typeof sum !== "number")
          return sum.$add();
        if (typeof t1 !== "number")
          return H.iae(t1);
        return sum + t1;
      }
    }
  }], ["", "package:angular_components/model/collection/labeled_list.dart",, G, {
    "^": "",
    LabeledList: {
      "^": "DelegatingList;$ti",
      get$uiDisplayName: function() {
        var t1 = this._labelFcn;
        return t1 != null ? t1.call$0() : null;
      }
    }
  }], ["", "package:angular_components/model/menu/menu.dart",, D, {
    "^": "",
    MenuItemGroup: {
      "^": "LabeledList;_isCollapsible<,_menu$_isExpanded<,_hasSeparator,_labelFcn,_wrappers$_base,$ti",
      set$isExpanded: function(value) {
        this._menu$_isExpanded.set$value(0, H.boolTypeCheck(value));
      },
      static: {
        MenuItemGroup$: function(items, label, hasSeparator, isCollapsible, isExpanded, $T) {
          var t1, t2;
          t1 = [P.bool];
          t2 = P.List_List$unmodifiable(items, $T);
          return new D.MenuItemGroup(new Q.ObservableReference(Q.observable_ObservableReference__defaultEq$closure(), false, false, false, t1), new Q.ObservableReference(Q.observable_ObservableReference__defaultEq$closure(), true, false, false, t1), new Q.ObservableReference(Q.observable_ObservableReference__defaultEq$closure(), true, false, false, t1), null, t2, [$T]);
        }
      }
    },
    MenuModel: {
      "^": "Object;itemGroups,icon>,tooltipText,0_width,$ti",
      get$width: function(_) {
        return this._width;
      },
      static: {
        MenuModel$: function(itemGroups, icon, tooltipText, width, $T) {
          var t1 = P.List_List$unmodifiable(itemGroups, [D.MenuItemGroup, $T]);
          return new D.MenuModel(t1, icon, tooltipText, [$T]);
        }
      }
    },
    MenuItem: {
      "^": "Object;label>,secondaryLabel<,tooltip,labelAnnotation<,subMenu<,action,icon>,itemSuffixes<,cssClasses,enabled>,$ti",
      get$nullAwareActionHandler: function() {
        return this.action;
      },
      get$hasIcon: function() {
        return false;
      },
      get$hasSubMenu: function() {
        return false;
      },
      get$showTooltip: function() {
        return false;
      },
      get$uiDisplayName: function() {
        return this.label;
      },
      get$hasSecondaryLabel: function() {
        return false;
      },
      toString$0: function(_) {
        var t1, t2, t3;
        t1 = this.itemSuffixes;
        t2 = P.String;
        t3 = H.getTypeArgumentByIndex(t1, 0);
        return P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["label", this.label, "secondaryLabel", this.secondaryLabel, "labelAnnotation", this.labelAnnotation, "enabled", true, "icon", this.icon, "suffixes", new H.MappedListIterable(t1, H.functionTypeCheck(new D.MenuItem_toString_closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).join$1(0, ",")], t2, P.Object));
      },
      nullAwareActionHandler$0: function() {
        return this.get$nullAwareActionHandler().call$0();
      },
      static: {
        MenuItem$: function(label, action, cssClasses, enabled, icon, itemSuffix, itemSuffixes, labelAnnotation, secondaryLabel, subMenu, tooltip, $T) {
          var t1, t2, t3, t4, t5;
          t1 = L.MenuItemAffix;
          t2 = P.List_List$from(new X.Optional(itemSuffix, [null]), true, t1);
          t3 = Y.ChangeRecord;
          t4 = new H.TypeImpl(t3).get$_typeName();
          t5 = C.Type_dynamic_0Rz.get$_typeName();
          if (t4 !== t5)
            t4 = new H.TypeImpl(t3).get$_typeName() === C.Type_ChangeRecord_INA.get$_typeName();
          else
            t4 = true;
          t1 = new R.ObservableList(t2, new B.ChangeNotifier(false, [t3]), t4, [t1]);
          return new D.MenuItem(label, secondaryLabel, tooltip, labelAnnotation, subMenu, action, icon, t1, S.BuiltList_BuiltList$from(C.List_empty, P.String), true, [$T]);
        }
      }
    },
    MenuItem_toString_closure: {
      "^": "Closure:145;",
      call$1: [function(affix) {
        return H.S(H.interceptedTypeCheck(affix, "$isMenuItemAffix"));
      }, null, null, 4, 0, null, 90, "call"]
    },
    ActiveMenuItemModel: {
      "^": "ActiveItemModel;_filterOutUnselectableItems,_active_item$_modelChanged,_ids,_idGenerator,0_items,0_loop,_activeIndex,$ti",
      static: {
        ActiveMenuItemModel__createEnabledItemGroupList: function(menuGroups, filterOutUnselectableItems, $T) {
          var t1, t2;
          t1 = [P.List, $T];
          t2 = [t1];
          H.assertSubtype(menuGroups, "$isList", t2, "$asList");
          if (menuGroups == null)
            return new B.CombinedList(H.setRuntimeTypeInfo([], t2), [$T]);
          t2 = H.getTypeArgumentByIndex(menuGroups, 0);
          return new B.CombinedList(new H.MappedListIterable(menuGroups, H.functionTypeCheck(new D.ActiveMenuItemModel__createEnabledItemGroupList_closure($T), {func: 1, ret: t1, args: [t2]}), [t2, t1]).toList$0(0), [$T]);
        }
      }
    },
    ActiveMenuItemModel__createEnabledItemGroupList_closure: {
      "^": "Closure;T",
      call$1: [function(group) {
        var t1 = this.T;
        t1 = J.where$1$ax(H.assertSubtype(group, "$isList", [t1], "$asList"), new D.ActiveMenuItemModel__createEnabledItemGroupList__closure(t1));
        return P.List_List$from(t1, true, H.getTypeArgumentByIndex(t1, 0));
      }, null, null, 4, 0, null, 69, "call"],
      $signature: function() {
        var t1 = this.T;
        return {func: 1, ret: [P.List, t1], args: [[P.List, t1]]};
      }
    },
    ActiveMenuItemModel__createEnabledItemGroupList__closure: {
      "^": "Closure;T",
      call$1: function(item) {
        H.assertSubtypeOfRuntimeType(item, this.T);
        return true;
      },
      $signature: function() {
        return {func: 1, ret: P.bool, args: [this.T]};
      }
    }
  }], ["", "package:angular_components/model/menu/menu_item_affix.dart",, L, {
    "^": "",
    MenuItemAffix: {
      "^": "Object;"
    }
  }], ["angular_components.model.observable.observable", "package:angular_components/model/observable/observable.dart",, Q, {
    "^": "",
    Change: {
      "^": "Object;$ti"
    },
    ChangeNotificationProvider: {
      "^": "Object;0_streamController,$ti",
      set$_streamController: function(_streamController) {
        this._streamController = H.assertSubtype(_streamController, "$isStreamController", this.$ti, "$asStreamController");
      },
      get$stream: function(_) {
        var t1;
        if (this._streamController == null)
          this.set$_streamController(new P._SyncBroadcastStreamController(null, null, 0, this.$ti));
        t1 = this._streamController;
        t1.toString;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      notifyChange$2: function(previous, next) {
        var t1, t2, t3;
        t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(previous, t1);
        H.assertSubtypeOfRuntimeType(next, t1);
        t1 = this._streamController;
        t2 = t1 != null;
        if (!(t2 && t1._firstSubscription != null))
          t3 = false;
        else
          t3 = true;
        if (!t3)
          return;
        if (!(t2 && t1._firstSubscription != null) || (t1._state & 4) !== 0)
          t1 = true;
        else
          t1 = false;
        if (t1)
          return;
        this._doNotifyChange$2(previous, next);
      },
      _doNotifyChange$2: function(previous, next) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        H.assertSubtypeOfRuntimeType(previous, t1);
        H.assertSubtypeOfRuntimeType(next, t1);
        t1 = this._streamController;
        if (t1 != null && t1._firstSubscription != null)
          t1.add$1(0, next);
      },
      $isDisposable: 1
    },
    ObservableViewMixin: {
      "^": "Object;"
    },
    ObservableReference: {
      "^": "_ObservableReference_ChangeNotificationProvider_ObservableViewMixin;_equalsFn,0_listenSub,_observable$_value,_coalesce,_coalesceScheduled,0_streamController,0_observable$_changeController,0_observable$_previous,0_observable$_next,$ti",
      set$_observable$_value: function(_value) {
        this._observable$_value = H.assertSubtypeOfRuntimeType(_value, H.getTypeArgumentByIndex(this, 0));
      },
      set$value: function(_, value) {
        var previous;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (this._equalsFn.call$2(this._observable$_value, value))
          return;
        previous = this._observable$_value;
        this.set$_observable$_value(value);
        this.notifyChange$2(previous, value);
      },
      static: {
        ObservableReference__defaultEq: [function(a, b) {
          return a == b;
        }, "call$2", "observable_ObservableReference__defaultEq$closure", 8, 0, 64]
      }
    },
    _ObservableReference_ChangeNotificationProvider_ObservableViewMixin: {
      "^": "ChangeNotificationProvider+ObservableViewMixin;"
    }
  }], ["", "package:angular_components/model/selection/selection_container.dart",, L, {
    "^": "",
    SelectionItem: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/model/ui/has_renderer.dart",, G, {
    "^": "",
    _nullRenderer: [function(value) {
      return H.throwExpression(P.StateError$("nullRenderer should never be called"));
    }, "call$1", "has_renderer___nullRenderer$closure", 4, 0, 238, 1],
    HasRenderer: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/model/ui/highlighted_text_model.dart",, M, {
    "^": "",
    HighlightedTextSegment: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/model/ui/icon.dart",, L, {
    "^": "",
    Icon: {
      "^": "Object;name>"
    }
  }], ["", "package:angular_components/src/laminate/components/modal/modal_controller_directive.dart",, Y, {
    "^": "",
    ModalControllerDirective: {
      "^": "TemplatePortal;_locals,template,viewContainer,0_attachedHost"
    }
  }], ["", "package:angular_components/src/laminate/overlay/overlay_ref.dart",, B, {
    "^": "",
    OverlayRef: {
      "^": "Object;state,containerElement,overlayElement,_asyncApplyState,_overlay_ref$_asyncMeasureSize,_delegatePortalHost,_runOutsideAngular,_lastVisible,0_onVisibleController,0_stateUpdateListener",
      set$_onVisibleController: function(_onVisibleController) {
        this._onVisibleController = H.assertSubtype(_onVisibleController, "$isStreamController", [P.bool], "$asStreamController");
      },
      measureSizeChanges$0: function() {
        var $async$measureSizeChanges$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          switch ($async$errorCode) {
            case 2:
              $async$next = $async$nextWhenCanceled;
              $async$goto = $async$next.pop();
              break;
            case 1:
              $async$currentError = $async$result;
              $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.state;
                if (t1._visibility === C.Visibility_None_display_none)
                  t1.set$visibility(0, C.Visibility_Hidden_visibility_hidden);
                $async$goto = 3;
                return P._asyncStarHelper($async$self._applyChanges$0(), $async$measureSizeChanges$0, $async$controller);
              case 3:
                // returning from await.
                $async$goto = 4;
                $async$nextWhenCanceled = [1];
                return P._asyncStarHelper(P._IterationMarker_yieldStar(H.subtypeCast($async$self._runOutsideAngular.call$1(new B.OverlayRef_measureSizeChanges_closure($async$self)), "$isStream", [[P.Rectangle, P.num]], "$asStream")), $async$measureSizeChanges$0, $async$controller);
              case 4:
                // after yield
              case 1:
                // return
                return P._asyncStarHelper(null, 0, $async$controller);
              case 2:
                // rethrow
                return P._asyncStarHelper($async$currentError, 1, $async$controller);
            }
        });
        var $async$goto = 0,
          $async$controller = P._makeAsyncStarStreamController($async$measureSizeChanges$0, [P.Rectangle, P.num]),
          $async$nextWhenCanceled, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1;
        return P._streamOfController($async$controller);
      },
      get$onVisibleChanged: function() {
        if (this._onVisibleController == null)
          this.set$_onVisibleController(new P._SyncBroadcastStreamController(null, null, 0, [P.bool]));
        var t1 = this._onVisibleController;
        t1.toString;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      setVisible$1: function(visible) {
        var t1 = visible ? C.Visibility_Visible_null_null : C.Visibility_None_display_none;
        this.state.set$visibility(0, t1);
      },
      dispose$0: [function() {
        var t1, t2;
        C.DivElement_methods.remove$0(this.overlayElement);
        t1 = this._onVisibleController;
        if (t1 != null)
          t1.close$0(0);
        t1 = this._delegatePortalHost;
        t2 = t1._attachedPortal != null;
        if (t2) {
          if (t2)
            t1.detach$0(0);
          t1._portal$_isDisposed = true;
        }
        this._stateUpdateListener.cancel$0(0);
      }, "call$0", "get$dispose", 0, 0, 2],
      _applyChanges$0: function() {
        var t1, t2, t3;
        t1 = this._lastVisible;
        t2 = this.state;
        t3 = t2._visibility !== C.Visibility_None_display_none;
        if (t1 !== t3) {
          this._lastVisible = t3;
          t1 = this._onVisibleController;
          if (t1 != null)
            t1.add$1(0, t3);
        }
        return this._asyncApplyState.call$2(t2, this.overlayElement);
      },
      OverlayRef$7$state: function(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state) {
        var t1, t2;
        t1 = this.state._asyncScheduler;
        t2 = t1._onUpdateStreamController;
        if (t2 == null) {
          t2 = new P._SyncBroadcastStreamController(null, null, 0, [null]);
          t1._onUpdateStreamController = t2;
          t1 = t2;
        } else
          t1 = t2;
        this._stateUpdateListener = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(new B.OverlayRef_closure(this));
      },
      $isPortalHost: 1,
      $isDisposable: 1,
      static: {
        OverlayRef__isEqualSize: [function(a, b) {
          var t1, t2;
          t1 = [P.num];
          H.assertSubtype(a, "$isRectangle", t1, "$asRectangle");
          H.assertSubtype(b, "$isRectangle", t1, "$asRectangle");
          t1 = J.getInterceptor$x(a);
          t2 = J.getInterceptor$x(b);
          return t1.get$width(a) == t2.get$width(b) && t1.get$height(a) == t2.get$height(b);
        }, "call$2", "overlay_ref_OverlayRef__isEqualSize$closure", 8, 0, 56],
        OverlayRef$: function(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state) {
          var t1 = new B.OverlayRef(Z.MutableOverlayState_MutableOverlayState$from(state), containerElement, overlayElement, _asyncApplyState, _asyncMeasureSize, _delegatePortalHost, _runOutsideAngular, false);
          t1.OverlayRef$7$state(_asyncApplyState, _asyncMeasureSize, _delegatePortalHost, containerElement, overlayElement, _runOutsideAngular, state);
          return t1;
        }
      }
    },
    OverlayRef_measureSizeChanges_closure: {
      "^": "Closure:146;$this",
      call$0: [function() {
        var t1 = this.$this;
        return t1._overlay_ref$_asyncMeasureSize.call$2$track(t1.overlayElement, true).distinct$1(B.overlay_ref_OverlayRef__isEqualSize$closure());
      }, null, null, 0, 0, null, "call"]
    },
    OverlayRef_closure: {
      "^": "Closure:147;$this",
      call$1: [function(_) {
        return this.$this._applyChanges$0();
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["", "package:angular_components/src/laminate/overlay/overlay_service.dart",, X, {
    "^": "",
    OverlayService: {
      "^": "Object;_useDomSynchronously,_ngZone,_renderService",
      createOverlayRefSync$1: function(initialState) {
        var t1, pane, t2;
        t1 = this._renderService;
        t1.toString;
        pane = document.createElement("div");
        C.DivElement_methods.setAttribute$2(pane, "pane-id", H.S(t1._containerName) + "-" + ++t1._uniqueId);
        pane.classList.add("pane");
        t1.applyStateSync$2(initialState, pane);
        t2 = t1.containerElement;
        J.append$1$x(t2, pane);
        return B.OverlayRef$(t1.get$applyState(), this.get$_measurePane(), new L.DomPortalHost(pane, t1._imperativeViewUtils, false), t2, pane, this._ngZone.get$runOutsideAngular(), initialState);
      },
      createOverlayRefSync$0: function() {
        return this.createOverlayRefSync$1(C._ImmutableOverlayState_oyn0);
      },
      _measurePane$2$track: [function(pane, track) {
        return this._renderService.measureSize$3$sync$track(pane, this._useDomSynchronously, true);
      }, function(pane) {
        return this._measurePane$2$track(pane, false);
      }, "_measurePane$1", "call$2$track", "call$1", "get$_measurePane", 4, 3, 69]
    }
  }], ["", "package:angular_components/src/laminate/overlay/overlay_state.dart",, Z, {
    "^": "",
    _stateEquals: function(a, b) {
      var t1;
      if (a === b)
        return true;
      if (a.get$captureEvents() === b.get$captureEvents())
        if (a.get$left(a) == b.get$left(b))
          if (a.get$top(a) == b.get$top(b))
            if (a.get$right(a) == b.get$right(b))
              if (a.get$bottom(a) == b.get$bottom(b)) {
                a.get$width(a);
                b.get$width(b);
                if (a.get$minWidth(a) == b.get$minWidth(b)) {
                  a.get$height(a);
                  b.get$height(b);
                  a.get$zIndex(a);
                  b.get$zIndex(b);
                  a.get$position(a);
                  b.get$position(b);
                  t1 = true;
                } else
                  t1 = false;
              } else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      return t1;
    },
    _stateHashCode: function(a) {
      return X.hashObjects([a.get$captureEvents(), a.get$left(a), a.get$top(a), a.get$right(a), a.get$bottom(a), a.get$width(a), a.get$minWidth(a), a.get$height(a), a.get$zIndex(a), a.get$position(a)]);
    },
    OverlayState: {
      "^": "Object;"
    },
    _ImmutableOverlayState: {
      "^": "Object;captureEvents<,left>,top>,right>,bottom>,width>,minWidth>,height>,visibility>,zIndex>,position>",
      $eq: function(_, o) {
        if (o == null)
          return false;
        return !!J.getInterceptor$(o).$isOverlayState && Z._stateEquals(this, o);
      },
      get$hashCode: function(_) {
        return Z._stateHashCode(this);
      },
      toString$0: function(_) {
        return "ImmutableOverlayState " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["captureEvents", this.captureEvents, "left", this.left, "top", this.top, "right", this.right, "bottom", this.bottom, "width", this.width, "height", this.height, "visibility", this.visibility, "zIndex", this.zIndex, "position", this.position], P.String, P.Object));
      },
      $isOverlayState: 1
    },
    MutableOverlayState: {
      "^": "Object;_asyncScheduler,0_captureEvents,0_left,0_top,0_right,0_bottom,0_overlay_state$_width,0_minWidth,0_overlay_state$_height,0_overlay_state$_zIndex,0_visibility,0_overlay_state$_position",
      $eq: function(_, o) {
        if (o == null)
          return false;
        return !!J.getInterceptor$(o).$isOverlayState && Z._stateEquals(this, o);
      },
      get$hashCode: function(_) {
        return Z._stateHashCode(this);
      },
      get$captureEvents: function() {
        return this._captureEvents;
      },
      get$left: function(_) {
        return this._left;
      },
      set$left: function(_, left) {
        if (this._left !== left) {
          this._left = left;
          this._asyncScheduler.scheduleUpdate$0();
        }
      },
      get$top: function(_) {
        return this._top;
      },
      set$top: function(_, $top) {
        if (this._top !== $top) {
          this._top = $top;
          this._asyncScheduler.scheduleUpdate$0();
        }
      },
      get$right: function(_) {
        return this._right;
      },
      get$bottom: function(_) {
        return this._bottom;
      },
      get$width: function(_) {
        return this._overlay_state$_width;
      },
      get$minWidth: function(_) {
        return this._minWidth;
      },
      get$height: function(_) {
        return this._overlay_state$_height;
      },
      get$zIndex: function(_) {
        return this._overlay_state$_zIndex;
      },
      get$visibility: function(_) {
        return this._visibility;
      },
      set$visibility: function(_, visibility) {
        if (this._visibility !== visibility) {
          this._visibility = visibility;
          this._asyncScheduler.scheduleUpdate$0();
        }
      },
      get$position: function(_) {
        return this._overlay_state$_position;
      },
      toString$0: function(_) {
        return "MutableOverlayState " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["captureEvents", this._captureEvents, "left", this._left, "top", this._top, "right", this._right, "bottom", this._bottom, "width", this._overlay_state$_width, "minWidth", this._minWidth, "height", this._overlay_state$_height, "zIndex", this._overlay_state$_zIndex, "visibility", this._visibility, "position", this._overlay_state$_position], P.String, P.Object));
      },
      $isOverlayState: 1,
      static: {
        MutableOverlayState_MutableOverlayState$from: function(other) {
          return Z.MutableOverlayState$(other.bottom, other.captureEvents, other.height, other.left, other.minWidth, other.position, other.right, other.top, other.visibility, other.width, other.zIndex);
        },
        MutableOverlayState$: function(bottom, $captureEvents, height, left, minWidth, position, right, $top, visibility, width, zIndex) {
          var t1 = new Z.MutableOverlayState(new Z.AsyncUpdateScheduler(null, false));
          t1._captureEvents = $captureEvents;
          t1._left = left;
          t1._top = $top;
          t1._right = right;
          t1._bottom = bottom;
          t1._overlay_state$_width = width;
          t1._minWidth = minWidth;
          t1._overlay_state$_height = height;
          t1._overlay_state$_zIndex = zIndex;
          t1._visibility = visibility;
          return t1;
        }
      }
    }
  }], ["", "package:angular_components/src/laminate/overlay/render/overlay_dom_render_service.dart",, K, {
    "^": "",
    OverlayDomRenderService: {
      "^": "Object;containerElement,_containerName,_overlay_dom_render_service$_domRuler,_domService,_imperativeViewUtils,_overlay_dom_render_service$_useDomSynchronously,_useRepositionLoop,_zIndexer,0_lastZIndex,_uniqueId",
      applyState$2: [function(state, pane) {
        return this.applyState$body$OverlayDomRenderService(H.interceptedTypeCheck(state, "$isOverlayState"), H.interceptedTypeCheck(pane, "$isHtmlElement"));
      }, "call$2", "get$applyState", 8, 0, 149, 70, 71],
      applyState$body$OverlayDomRenderService: function(state, pane) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this;
        var $async$applyState$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                if (!$async$self._overlay_dom_render_service$_useDomSynchronously) {
                  $async$returnValue = $async$self._domService.onWrite$0(0).then$1$1(new K.OverlayDomRenderService_applyState_closure($async$self, state, pane), null);
                  // goto return
                  $async$goto = 1;
                  break;
                } else
                  $async$self.applyStateSync$2(state, pane);
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$applyState$2, $async$completer);
      },
      applyStateSync$2: function(state, pane) {
        var cssClasses, t1, t2, t3, t4, t5, t6, t7, t8;
        cssClasses = H.setRuntimeTypeInfo([], [P.String]);
        if (state.get$captureEvents())
          C.JSArray_methods.add$1(cssClasses, "modal");
        if (state.get$visibility(state) === C.Visibility_Visible_null_null)
          C.JSArray_methods.add$1(cssClasses, "visible");
        t1 = this._overlay_dom_render_service$_domRuler;
        t2 = state.get$width(state);
        t3 = state.get$height(state);
        t4 = state.get$top(state);
        t5 = state.get$left(state);
        t6 = state.get$bottom(state);
        t7 = state.get$right(state);
        t8 = state.get$visibility(state);
        t1.updateSync$11$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width(pane, t6, cssClasses, t3, t5, state.get$position(state), t7, t4, !this._useRepositionLoop, t8, t2);
        if (state.get$minWidth(state) != null) {
          t2 = pane.style;
          t3 = H.S(state.get$minWidth(state)) + "px";
          t2.minWidth = t3;
        }
        state.get$zIndex(state);
        if (pane.parentElement != null) {
          t2 = this._lastZIndex;
          this._zIndexer.toString;
          if (t2 != self.acxZIndex) {
            t2 = J.$add$ansx(self.acxZIndex, 1);
            self.acxZIndex = t2;
            this._lastZIndex = t2;
          }
          t1.updateSync$2$zIndex(pane.parentElement, this._lastZIndex);
        }
      },
      measureSize$3$sync$track: function(pane, sync, track) {
        var t1 = this._overlay_dom_render_service$_domRuler.track$1(0, pane);
        return t1;
      },
      measureContainer$0: function() {
        var t1, t2;
        t1 = [P.Rectangle, P.num];
        if (!this._overlay_dom_render_service$_useDomSynchronously)
          return this._domService.onWrite$0(0).then$1$1(new K.OverlayDomRenderService_measureContainer_closure(this), t1);
        else {
          t2 = this.containerElement.getBoundingClientRect();
          t1 = new P._Future(0, $.Zone__current, [t1]);
          t1._asyncComplete$1(t2);
          return t1;
        }
      }
    },
    OverlayDomRenderService_applyState_closure: {
      "^": "Closure:4;$this,state,pane",
      call$1: [function(_) {
        this.$this.applyStateSync$2(this.state, this.pane);
      }, null, null, 4, 0, null, 0, "call"]
    },
    OverlayDomRenderService_measureContainer_closure: {
      "^": "Closure:150;$this",
      call$1: [function(_) {
        return this.$this.containerElement.getBoundingClientRect();
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["", "package:angular_components/src/laminate/overlay/render/overlay_style_config.dart",, R, {
    "^": "",
    OverlayStyleConfig: {
      "^": "Object;_styleHost,_stylesRegistered,_document",
      registerStyles$0: function() {
        var t1, t2;
        if (this.get$stylesRegistered())
          return;
        t1 = this._styleHost;
        t2 = document.createElement("style");
        t2.id = "__overlay_styles";
        t2.textContent = "  #default-acx-overlay-container,\n  .acx-overlay-container {\n    position: absolute;\n\n    /* Disable event captures. This is an invisible container! */\n    pointer-events: none;\n\n    /* Make this full width and height in the viewport. */\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n\n    /* TODO(google): Use the ACX z-index guide instead. */\n    z-index: 10;\n  }\n\n  .acx-overlay-container > .pane {\n    display: flex;\n    /* TODO(google): verify prefixing flexbox fixes popups in IE */\n    display: -ms-flexbox;\n    position: absolute;\n\n    /* TODO(google): Use the ACX z-index guide instead. */\n    z-index: 11;\n\n    /* Disable event captures. This is an invisible container!\n       Panes that would like to capture events can enable this with .modal. */\n    pointer-events: none;\n  }\n\n  /* Children should have normal events. */\n  .acx-overlay-container > .pane > * { pointer-events: auto; }\n\n  .acx-overlay-container > .pane.modal {\n    justify-content: center;\n    align-items: center;\n    background: rgba(33,33,33,.4);\n    pointer-events: auto;\n\n    /* TODO(google): Pull out into a .fixed class instead. */\n    position: fixed;\n\n    /* Promote the .modal element to its own layer to fix scrolling issues.\n       will-change: transform is preferred, but not yet supported by Edge. */\n    -webkit-backface-visibility: hidden;  /* Safari 9/10 */\n    backface-visibility: hidden;\n  }\n\n  .acx-overlay-container > .pane,\n  .acx-overlay-container > .pane > * {\n    display: flex;\n    display: -ms-flexbox;\n  }\n\n  /* Optional debug mode that highlights the container and individual panes.\n     TODO(google): Pull this into a mixin so it won't get auto-exported. */\n  .acx-overlay-container.debug {\n    background: rgba(255, 0, 0, 0.15);\n  }\n\n  .acx-overlay-container.debug > .pane {\n    background: rgba(0, 0, 2555, 0.15);\n  }\n\n  .acx-overlay-container.debug > .pane.modal {\n    background: rgba(0, 0, 0, 0.30);\n  }\n";
        (t1 && C.HeadElement_methods).append$1(t1, t2);
        this._stylesRegistered = true;
      },
      get$stylesRegistered: function() {
        if (this._stylesRegistered)
          return true;
        var t1 = this._document;
        if ((t1 && C.HtmlDocument_methods).querySelector$1(t1, "#__overlay_styles") != null)
          this._stylesRegistered = true;
        return this._stylesRegistered;
      }
    }
  }], ["", "package:angular_components/src/laminate/popup/dom_popup_source.dart",, K, {
    "^": "",
    DomPopupSourceFactory: {
      "^": "Object;_domRuler",
      _asyncMeasureSize$2$track: [function(element, track) {
        var t1;
        H.interceptedTypeCheck(element, "$isHtmlElement");
        t1 = this._domRuler;
        if (H.boolTypeCheck(track))
          return t1.track$1(0, element);
        else
          return t1.measure$1(0, element).asStream$0();
      }, function(element) {
        return this._asyncMeasureSize$2$track(element, false);
      }, "_asyncMeasureSize$1", "call$2$track", "call$1", "get$_asyncMeasureSize", 4, 3, 69, 72, 33, 73]
    },
    DomPopupSource: {
      "^": "Object;_asyncMeasureSize,sourceElement<,_dom_popup_source$_initAriaAttributes,0_dom_popup_source$_alignOriginX,0_dom_popup_source$_alignOriginY,0_dom_popup_source$_id",
      get$alignOriginX: function() {
        return this._dom_popup_source$_alignOriginX;
      },
      get$alignOriginY: function() {
        return this._dom_popup_source$_alignOriginY;
      },
      onDimensionsChanged$1$track: function(track) {
        return this._asyncMeasureSize.call$2$track(this.sourceElement, track);
      },
      get$dimensions: function() {
        return this.sourceElement.getBoundingClientRect();
      },
      get$isRtl: function() {
        return $.$get$DomPopupSource__isRtl();
      },
      set$popupId: function(id) {
        this._dom_popup_source$_id = id;
        if (id == null || !this._dom_popup_source$_initAriaAttributes)
          return;
        J.setAttribute$2$x(this.sourceElement, "aria-haspopup", "true");
      },
      focus$0: function(_) {
        this.sourceElement.focus();
      },
      toString$0: function(_) {
        return "DomPopupSource " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["alignOriginX", this._dom_popup_source$_alignOriginX, "alignOriginY", this._dom_popup_source$_alignOriginY], P.String, K.Alignment));
      },
      onOpen$0: function(_) {
        var t1 = this._dom_popup_source$_id;
        if (t1 == null || !this._dom_popup_source$_initAriaAttributes)
          return;
        J.setAttribute$2$x(this.sourceElement, "aria-owns", t1);
      },
      onClose$0: function(_) {
        var t1;
        if (this._dom_popup_source$_id == null || !this._dom_popup_source$_initAriaAttributes)
          return;
        t1 = this.sourceElement;
        t1.toString;
        new W._ElementAttributeMap(t1).remove$1(0, "aria-owns");
      },
      $isFocusable: 1,
      $isPopupSource: 1,
      $isElementPopupSource: 1
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_hierarchy.dart",, Z, {
    "^": "",
    PopupHierarchy: {
      "^": "Object;_visiblePopupStack,0_rootPane,0_triggerListener,0_keyUpListener,0_lastTriggerEvent",
      _isInHiddenModal$0: function() {
        var t1, t2, modalPanes;
        t1 = document;
        t2 = W.Element;
        H.assertIsSubtype(t2, t2, "The type argument '", "' is not a subtype of the type variable bound '", "' of type variable 'T' in 'querySelectorAll'.");
        t1 = C.HtmlDocument_methods._querySelectorAll$1(t1, ".acx-overlay-container .pane.modal.visible");
        modalPanes = new W._FrozenElementList(t1, [t2]);
        if (!modalPanes.get$isEmpty(modalPanes)) {
          t2 = this._rootPane;
          if (t2 != null)
            t1 = t2 !== H.interceptedTypeCheck(C.NodeList_methods.get$last(t1), "$isElement") && modalPanes.contains$1(modalPanes, this._rootPane);
          else
            t1 = true;
          if (t1)
            return true;
        }
        return false;
      },
      _popup_hierarchy$_onTrigger$1: [function($event) {
        var t1, i, t2, current, t3, t4, _i;
        H.interceptedTypeCheck($event, "$isEvent");
        if (($event == null ? null : J.get$target$x($event)) == null)
          return;
        this._lastTriggerEvent = $event;
        if (this._isInHiddenModal$0())
          return;
        for (t1 = this._visiblePopupStack, i = t1.length - 1, t2 = J.getInterceptor$x($event); i >= 0; --i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          current = t1[i];
          t3 = current._overlayRef;
          t4 = t3 == null ? null : t3.overlayElement;
          if (t4 == null)
            continue;
          t3 = t3 == null ? null : t3.overlayElement;
          if (Z.isParentOf(t3, H.interceptedTypeCheck(t2.get$target($event), "$isNode")))
            return;
          for (t3 = current.get$autoDismissBlockers(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, H.throwConcurrentModificationError)(t3), ++_i)
            if (Z.isParentOf(t3[_i], H.interceptedTypeCheck(t2.get$target($event), "$isNode")))
              return;
          if (H.boolTypeCheck(current.state._backingMap._observable_map$_map.$index(0, C.Symbol_autoDismiss))) {
            current.set$visible(0, false);
            t3 = current._onAutoDismissed;
            H.assertSubtypeOfRuntimeType($event, H.getTypeArgumentByIndex(t3, 0));
            if (!t3.get$_mayAddEvent())
              H.throwExpression(t3._addEventError$0());
            t3._sendData$1($event);
          }
        }
      }, "call$1", "get$_popup_hierarchy$_onTrigger", 4, 0, 33, 6],
      _onKeyUp$1: [function($event) {
        var t1, i, current, t2, t3, _i;
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if (($event == null ? null : W._convertNativeToDart_EventTarget($event.target)) == null)
          return;
        this._lastTriggerEvent = $event;
        if (this._isInHiddenModal$0())
          return;
        if ($event.keyCode === 27)
          for (t1 = this._visiblePopupStack, i = t1.length - 1; i >= 0; --i) {
            if (i >= t1.length)
              return H.ioore(t1, i);
            current = t1[i];
            t2 = current._overlayRef;
            t3 = t2 == null ? null : t2.overlayElement;
            if (t3 == null)
              continue;
            t2 = t2 == null ? null : t2.overlayElement;
            if (Z.isParentOf(t2, H.interceptedTypeCheck(W._convertNativeToDart_EventTarget($event.target), "$isNode"))) {
              $event.stopPropagation();
              current.set$visible(0, false);
              return;
            }
            for (t2 = current.get$autoDismissBlockers(), t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
              if (Z.isParentOf(t2[_i], H.interceptedTypeCheck(W._convertNativeToDart_EventTarget($event.target), "$isNode"))) {
                $event.stopPropagation();
                current.set$visible(0, false);
                return;
              }
          }
      }, "call$1", "get$_onKeyUp", 4, 0, 16]
    },
    PopupHierarchyElement: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_interface.dart",, L, {
    "^": "",
    PopupEvents: {
      "^": "Object;"
    },
    PopupBase: {
      "^": "Object;",
      set$matchMinSourceWidth: ["super$PopupBase$matchMinSourceWidth", function(matchMinSourceWidth) {
        this.state._backingMap.$indexSet(0, C.Symbol_matchMinSourceWidth, false);
      }],
      set$source: ["super$PopupBase$source", function(_, source) {
        this.state._backingMap.$indexSet(0, C.Symbol_source, source);
      }]
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_ref.dart",, V, {
    "^": "",
    PopupRef: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_size_provider.dart",, F, {
    "^": "",
    PopupSizeProvider: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_source_directive.dart",, L, {
    "^": "",
    PopupSourceDirective: {
      "^": "Object;_domPopupSourceFactory,_initAriaAttributes,_popup_source_directive$_element,_referenceDirective,_focusable,_alignOriginX,_alignOriginY,0_popupSource,0_popupId",
      ngOnDestroy$0: function() {
        this._popup_source_directive$_element = null;
        this._popupSource = null;
        this._referenceDirective = null;
        this._focusable = null;
      },
      ngAfterViewInit$0: function() {
        var t1, t2;
        t1 = this._referenceDirective;
        t1 = t1 == null ? null : t1.popupSourceEl;
        t1 = t1 == null ? null : t1.nativeElement;
        t1 = H.interceptedTypeCheck(t1 == null ? this._popup_source_directive$_element : t1, "$isHtmlElement");
        this._popup_source_directive$_element = t1;
        t1 = new K.DomPopupSource(this._domPopupSourceFactory.get$_asyncMeasureSize(), t1, this._initAriaAttributes);
        t1._dom_popup_source$_alignOriginX = this._alignOriginX;
        t1._dom_popup_source$_alignOriginY = this._alignOriginY;
        this._popupSource = t1;
        t2 = this._popupId;
        if (t2 != null)
          t1.set$popupId(t2);
      },
      get$sourceElement: function() {
        return this._popup_source_directive$_element;
      },
      get$alignOriginX: function() {
        return this._popupSource._dom_popup_source$_alignOriginX;
      },
      get$alignOriginY: function() {
        return this._popupSource._dom_popup_source$_alignOriginY;
      },
      onDimensionsChanged$1$track: function(track) {
        var t1, t2;
        t1 = this._popupSource;
        if (t1 == null)
          t1 = null;
        else {
          t2 = t1.sourceElement;
          t2 = t1._asyncMeasureSize.call$2$track(t2, track);
          t1 = t2;
        }
        return t1 == null ? null : new P._DistinctStream(null, t1, [H.getRuntimeTypeArgument(t1, "Stream", 0)]);
      },
      get$dimensions: function() {
        var t1 = this._popupSource;
        return t1 == null ? null : t1.sourceElement.getBoundingClientRect();
      },
      get$isRtl: function() {
        this._popupSource.toString;
        return $.$get$DomPopupSource__isRtl();
      },
      set$popupId: ["super$PopupSourceDirective$popupId", function(id) {
        var t1;
        this._popupId = id;
        t1 = this._popupSource;
        if (!(t1 == null))
          t1.set$popupId(id);
      }],
      focus$0: function(_) {
        var t1 = this._focusable;
        if (t1 != null)
          t1.focus$0(0);
        else {
          t1 = this._popup_source_directive$_element;
          if (!(t1 == null))
            t1.focus();
        }
      },
      onOpen$0: function(_) {
        var t1 = this._popupSource;
        if (!(t1 == null))
          t1.onOpen$0(0);
      },
      onClose$0: function(_) {
        var t1 = this._popupSource;
        if (!(t1 == null))
          t1.onClose$0(0);
      },
      $isFocusable: 1,
      $isPopupSource: 1,
      $isElementPopupSource: 1,
      static: {
        PopupSourceDirective$: function(_domPopupSourceFactory, _element, _referenceDirective, _focusable, initAriaAttributes) {
          return new L.PopupSourceDirective(_domPopupSourceFactory, E.attributeToBool(initAriaAttributes, true), _element, _referenceDirective, _focusable, C.Alignment_dMH, C.Alignment_dMH);
        }
      }
    }
  }], ["", "package:angular_components/src/laminate/popup/popup_state.dart",, F, {
    "^": "",
    PopupState: {
      "^": "Observable;_backingMap,Observable__delegate,Observable__isNotGeneric",
      get$source: function(_) {
        return H.interceptedTypeCheck(this._backingMap._observable_map$_map.$index(0, C.Symbol_source), "$isPopupSource");
      },
      $eq: function(_, o) {
        var t1, t2, t3, t4;
        if (o == null)
          return false;
        if (o instanceof F.PopupState) {
          t1 = o._backingMap._observable_map$_map;
          t2 = this._backingMap._observable_map$_map;
          if (H.boolTypeCheck(t1.$index(0, C.Symbol_autoDismiss)) == H.boolTypeCheck(t2.$index(0, C.Symbol_autoDismiss)))
            if (H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)) == H.boolTypeCheck(t2.$index(0, C.Symbol_enforceSpaceConstraints)))
              if (H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)) == H.boolTypeCheck(t2.$index(0, C.Symbol_matchMinSourceWidth))) {
                t3 = H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource");
                t4 = H.interceptedTypeCheck(t2.$index(0, C.Symbol_source), "$isPopupSource");
                t1 = (t3 == null ? t4 == null : t3 === t4) && H.intTypeCheck(t1.$index(0, C.Symbol_offsetX)) == H.intTypeCheck(t2.$index(0, C.Symbol_offsetX)) && H.intTypeCheck(t1.$index(0, C.Symbol_offsetY)) == H.intTypeCheck(t2.$index(0, C.Symbol_offsetY)) && J.$eq$(H.listSuperNativeTypeCheck(t1.$index(0, C.Symbol_preferredPositions), "$isIterable"), H.listSuperNativeTypeCheck(t2.$index(0, C.Symbol_preferredPositions), "$isIterable")) && H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)) == H.boolTypeCheck(t2.$index(0, C.Symbol_trackLayoutChanges)) && H.boolTypeCheck(t1.$index(0, C.Symbol_constrainToViewport)) == H.boolTypeCheck(t2.$index(0, C.Symbol_constrainToViewport));
              } else
                t1 = false;
            else
              t1 = false;
          else
            t1 = false;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1 = this._backingMap._observable_map$_map;
        return X.hashObjects([H.boolTypeCheck(t1.$index(0, C.Symbol_autoDismiss)), H.boolTypeCheck(t1.$index(0, C.Symbol_enforceSpaceConstraints)), H.boolTypeCheck(t1.$index(0, C.Symbol_matchMinSourceWidth)), H.interceptedTypeCheck(t1.$index(0, C.Symbol_source), "$isPopupSource"), H.intTypeCheck(t1.$index(0, C.Symbol_offsetX)), H.intTypeCheck(t1.$index(0, C.Symbol_offsetY)), H.listSuperNativeTypeCheck(t1.$index(0, C.Symbol_preferredPositions), "$isIterable"), H.boolTypeCheck(t1.$index(0, C.Symbol_trackLayoutChanges)), H.boolTypeCheck(t1.$index(0, C.Symbol_constrainToViewport))]);
      },
      toString$0: function(_) {
        return "PopupState " + P.MapBase_mapToString(this._backingMap);
      },
      $asObservable: function() {
        return [Y.ChangeRecord];
      }
    }
  }], ["", "package:angular_components/src/laminate/ruler/ruler_interface.dart",, L, {
    "^": "",
    RulerBase: {
      "^": "Object;$ti",
      measure$2$offset: ["super$RulerBase$measure", function(_, element, offset) {
        var t1, t2, completer;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
        t1 = this._dom_ruler$_domService;
        t2 = new P._Future(0, $.Zone__current, [null]);
        completer = new P._SyncCompleter(t2, [null]);
        t1.scheduleRead$1(completer.get$complete(completer));
        return new E.ZonedFuture(t2, H.instantiate1(t1._dom_service$_ngZone.get$runOutsideAngular(), null), [null]).then$1$1(new L.RulerBase_measure_closure(this, element, false), [P.Rectangle, P.num]);
      }],
      track$1: ["super$RulerBase$track", function(_, element) {
        var t1, controller;
        t1 = {};
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
        t1.controller = null;
        t1.subscription = null;
        controller = P.StreamController_StreamController(new L.RulerBase_track_closure(t1), new L.RulerBase_track_closure0(t1, this, element), null, null, true, [P.Rectangle, P.num]);
        t1.controller = controller;
        t1 = H.getTypeArgumentByIndex(controller, 0);
        return new P._DistinctStream(H.functionTypeCheck(new L.RulerBase_track_closure1(), {func: 1, ret: P.bool, args: [t1, t1]}), new P._ControllerStream(controller, [t1]), [t1]);
      }],
      updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex: function(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width, zIndex) {
        var setProperty, t1, t2, lastCssClasses, t3;
        H.assertSubtypeOfRuntimeType(element, H.getRuntimeTypeArgument(this, "RulerBase", 0));
        H.assertSubtype(cssClasses, "$isList", [P.String], "$asList");
        setProperty = new L.RulerBase_updateSync_closure(this, element);
        setProperty.call$2("display", null);
        setProperty.call$2("visibility", null);
        t1 = visibility != null;
        if (t1 && visibility !== C.Visibility_Visible_null_null)
          visibility.apply$1(setProperty);
        if (cssClasses != null) {
          t2 = this._addedCssClasses;
          lastCssClasses = t2.$index(0, element);
          if (lastCssClasses != null)
            this.removeCssClassesSync$2(element, lastCssClasses);
          this.addCssClassesSync$2(element, cssClasses);
          t2.$indexSet(0, element, cssClasses);
        }
        setProperty.call$2("width", null);
        setProperty.call$2("height", null);
        if (useCssTransform) {
          if (left != null) {
            setProperty.call$2("left", "0");
            t2 = "translateX(" + C.JSNumber_methods.round$0(left) + "px) ";
          } else {
            setProperty.call$2("left", null);
            t2 = "";
          }
          if ($top != null) {
            setProperty.call$2("top", "0");
            t2 += "translateY(" + C.JSNumber_methods.round$0($top) + "px)";
          } else
            setProperty.call$2("top", null);
          t3 = t2.charCodeAt(0) == 0 ? t2 : t2;
          setProperty.call$2("transform", t3);
          setProperty.call$2("-webkit-transform", t3);
          if (t2.length !== 0) {
            setProperty.call$2("transform", t3);
            setProperty.call$2("-webkit-transform", t3);
          }
        } else {
          if (left != null)
            setProperty.call$2("left", left === 0 ? "0" : H.S(left) + "px");
          else
            setProperty.call$2("left", null);
          if ($top != null)
            setProperty.call$2("top", $top === 0 ? "0" : H.S($top) + "px");
          else
            setProperty.call$2("top", null);
          setProperty.call$2("transform", null);
          setProperty.call$2("-webkit-transform", null);
        }
        if (right != null)
          setProperty.call$2("right", right === 0 ? "0" : H.S(right) + "px");
        else
          setProperty.call$2("right", null);
        if (bottom != null)
          setProperty.call$2("bottom", bottom === 0 ? "0" : H.S(bottom) + "px");
        else
          setProperty.call$2("bottom", null);
        if (zIndex != null)
          setProperty.call$2("z-index", H.S(zIndex));
        else
          setProperty.call$2("z-index", null);
        if (t1 && visibility === C.Visibility_Visible_null_null)
          visibility.apply$1(setProperty);
      },
      updateSync$11$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width: function(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width) {
        return this.updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex(element, bottom, cssClasses, height, left, position, right, $top, useCssTransform, visibility, width, null);
      },
      updateSync$2$zIndex: function(element, zIndex) {
        return this.updateSync$12$bottom$cssClasses$height$left$position$right$top$useCssTransform$visibility$width$zIndex(element, null, null, null, null, null, null, null, true, null, null, zIndex);
      }
    },
    RulerBase_measure_closure: {
      "^": "Closure:151;$this,element,offset",
      call$1: [function(_) {
        return this.$this.measureSync$2$offset(this.element, this.offset);
      }, null, null, 4, 0, null, 0, "call"]
    },
    RulerBase_track_closure0: {
      "^": "Closure:0;_box_0,$this,element",
      call$0: function() {
        var t1, t2, t3, t4, t5;
        t1 = this.$this;
        t2 = this.element;
        t3 = t1.measure$1(0, t2);
        t4 = this._box_0;
        t5 = t4.controller;
        t3.then$1$1(t5.get$add(t5), -1);
        t4.subscription = t1._dom_ruler$_domService.get$onLayoutChanged().listen$2$onDone(new L.RulerBase_track__closure(t4, t1, t2), new L.RulerBase_track__closure0(t4));
      }
    },
    RulerBase_track__closure: {
      "^": "Closure:4;_box_0,$this,element",
      call$1: [function(_) {
        this._box_0.controller.add$1(0, this.$this.measureSync$1(this.element));
      }, null, null, 4, 0, null, 0, "call"]
    },
    RulerBase_track__closure0: {
      "^": "Closure:0;_box_0",
      call$0: [function() {
        this._box_0.controller.close$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    RulerBase_track_closure: {
      "^": "Closure:0;_box_0",
      call$0: [function() {
        this._box_0.subscription.cancel$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    RulerBase_track_closure1: {
      "^": "Closure:56;",
      call$2: function(previous, next) {
        var t1, t2, t3;
        t1 = [P.num];
        H.assertSubtype(previous, "$isRectangle", t1, "$asRectangle");
        H.assertSubtype(next, "$isRectangle", t1, "$asRectangle");
        if (previous == null || next == null)
          return previous == null ? next == null : previous === next;
        t1 = new L.RulerBase_track_closure_withinEpsilon();
        t2 = J.getInterceptor$x(previous);
        t3 = J.getInterceptor$x(next);
        return t1.call$2(t2.get$top(previous), t3.get$top(next)) && t1.call$2(t2.get$left(previous), t3.get$left(next)) && t1.call$2(t2.get$width(previous), t3.get$width(next)) && t1.call$2(t2.get$height(previous), t3.get$height(next));
      }
    },
    RulerBase_track_closure_withinEpsilon: {
      "^": "Closure:153;",
      call$2: function(a, b) {
        if (typeof a !== "number")
          return a.$sub();
        if (typeof b !== "number")
          return H.iae(b);
        return Math.abs(a - b) < 0.01;
      }
    },
    RulerBase_updateSync_closure: {
      "^": "Closure:51;$this,element",
      call$2: function($name, value) {
        var t1 = this.element.style;
        C.CssStyleDeclaration_methods._setPropertyHelper$3(t1, (t1 && C.CssStyleDeclaration_methods)._browserPropertyName$1(t1, $name), value, null);
      }
    }
  }], ["", "package:angular_components/src/material_tooltip/ink_tooltip.dart",, F, {
    "^": "",
    MaterialInkTooltipComponent: {
      "^": "Object;_tooltipController,_ink_tooltip$_changeDetector,0_tooltipSource,positions,0_controllerProxy,_showPopup,0text",
      set$positions: function(positions) {
        this.positions = H.assertSubtype(positions, "$isList", [K.RelativePosition], "$asList");
      },
      onMouseOver$0: [function(_) {
        this._tooltipController.keepOpen$1(this);
      }, "call$0", "get$onMouseOver", 1, 0, 2],
      onMouseLeave$0: [function(_) {
        this._tooltipController.deactivate$1(this);
      }, "call$0", "get$onMouseLeave", 1, 0, 2],
      set$tooltipRef: function(target) {
        var t1;
        this._tooltipSource = target;
        t1 = this._controllerProxy;
        if (t1 == null) {
          t1 = this._tooltipController;
          t1.toString;
          t1 = new U._ProxyTooltip(this, t1);
          this._controllerProxy = t1;
        }
        if (target._tooltip == null)
          target._delayedActivate.start$0(0);
        target._tooltip = t1;
      },
      $isTooltip: 1
    }
  }], ["asset_angular_components_lib_src_material_tooltip_ink_tooltip.scss.css.shim.dart", "package:angular_components/src/material_tooltip/ink_tooltip.scss.css.shim.dart",, Y, {}], ["", "package:angular_components/src/material_tooltip/ink_tooltip.template.dart",, L, {
    "^": "",
    viewFactory_MaterialInkTooltipComponent1: [function(parentView, parentIndex) {
      var t1 = new L._ViewMaterialInkTooltipComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, F.MaterialInkTooltipComponent));
      t1.componentType = $.ViewMaterialInkTooltipComponent0__renderType;
      return t1;
    }, "call$2", "ink_tooltip_template__viewFactory_MaterialInkTooltipComponent1$closure", 8, 0, 40],
    viewFactory_MaterialInkTooltipComponent2: [function(parentView, parentIndex) {
      var t1 = new L._ViewMaterialInkTooltipComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, F.MaterialInkTooltipComponent));
      t1.componentType = $.ViewMaterialInkTooltipComponent0__renderType;
      return t1;
    }, "call$2", "ink_tooltip_template__viewFactory_MaterialInkTooltipComponent2$closure", 8, 0, 40],
    viewFactory_MaterialInkTooltipComponentHost0: [function(parentView, parentIndex) {
      var t1 = new L._ViewMaterialInkTooltipComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, F.MaterialInkTooltipComponent));
      return t1;
    }, "call$2", "ink_tooltip_template__viewFactory_MaterialInkTooltipComponentHost0$closure", 8, 0, 40],
    ViewMaterialInkTooltipComponent0: {
      "^": "AppView;0_ink_tooltip_template$_appEl_1,0_ink_tooltip_template$_NgIf_1_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, t1, t2, _anchor_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = J.getInterceptor$x(parentRenderNode);
        t1.append$1(parentRenderNode, document.createTextNode("        "));
        t2 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment");
        t1.append$1(parentRenderNode, _anchor_1);
        t1 = new V.ViewContainer(1, null, this, _anchor_1);
        this._ink_tooltip_template$_appEl_1 = t1;
        this._ink_tooltip_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, L.ink_tooltip_template__viewFactory_MaterialInkTooltipComponent1$closure()), t1, false);
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var _ctx = this.ctx;
        this._ink_tooltip_template$_NgIf_1_9.set$ngIf(_ctx._tooltipSource != null);
        this._ink_tooltip_template$_appEl_1.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._ink_tooltip_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [F.MaterialInkTooltipComponent];
      }
    },
    _ViewMaterialInkTooltipComponent1: {
      "^": "AppView;0_ink_tooltip_template$_compView_0,0_ink_tooltip_template$_appEl_0,0_ink_tooltip_template$_MaterialPopupComponent_0_8,0__PopupHierarchy_0_11,0__PopupRef_0_12,0_ink_tooltip_template$_appEl_2,0_ink_tooltip_template$_DeferredContentDirective_2_9,0_ink_tooltip_template$_expr_3,0_ink_tooltip_template$_expr_4,0_ink_tooltip_template$_expr_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, _text_1, t2, _text_3;
        t1 = A.ViewMaterialPopupComponent0$(this, 0);
        this._ink_tooltip_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        _el_0.className = "aacmtit-ink-tooltip-shadow";
        t1 = J.getInterceptor$x(_el_0);
        t1.setAttribute$2(_el_0, "enforceSpaceConstraints", "");
        t1.setAttribute$2(_el_0, "ink", "");
        t1.setAttribute$2(_el_0, "role", "tooltip");
        t1.setAttribute$2(_el_0, "trackLayoutChanges", "");
        this.addShimC$1(_el_0);
        this._ink_tooltip_template$_appEl_0 = new V.ViewContainer(0, null, this, _el_0);
        t1 = this.parentView;
        t1 = G.MaterialPopupComponent$(H.interceptedTypeCheck(t1.injectorGet$3(C.Type_PopupHierarchy_7R9, this.viewData.parentIndex, null), "$isPopupHierarchy"), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_MaterialPopupComponent_OpB, this.viewData.parentIndex, null), "$isMaterialPopupComponent"), "tooltip", H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_OverlayService_4iH, this.viewData.parentIndex), "$isOverlayService"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), H.interceptedTypeCheck(t1.injectorGet$2(C.Type_ZIndexer_ViP, this.viewData.parentIndex), "$isZIndexer"), H.assertSubtype(t1.injectorGet$2(C.OpaqueToken_defaultPopupPositions, this.viewData.parentIndex), "$isList", [K.RelativePosition], "$asList"), H.boolTypeCheck(t1.injectorGet$2(C.OpaqueToken_overlayRepositionLoop, this.viewData.parentIndex)), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_PopupSizeProvider_a5y, this.viewData.parentIndex, null), "$isPopupSizeProvider"), this._ink_tooltip_template$_compView_0.viewData.ref, this._ink_tooltip_template$_appEl_0, new Z.ElementRef(_el_0));
        this._ink_tooltip_template$_MaterialPopupComponent_0_8 = t1;
        t1 = document;
        _text_1 = t1.createTextNode("\n          ");
        t2 = $.$get$_viewContainerAnchor();
        t2 = new V.ViewContainer(2, 0, this, H.interceptedTypeCheck((t2 && C.Comment_methods).clone$1(t2, false), "$isComment"));
        this._ink_tooltip_template$_appEl_2 = t2;
        this._ink_tooltip_template$_DeferredContentDirective_2_9 = K.DeferredContentDirective$(t2, new D.TemplateRef(t2, L.ink_tooltip_template__viewFactory_MaterialInkTooltipComponent2$closure()), this._ink_tooltip_template$_MaterialPopupComponent_0_8);
        _text_3 = t1.createTextNode("\n        ");
        this._ink_tooltip_template$_compView_0.create$2(0, this._ink_tooltip_template$_MaterialPopupComponent_0_8, [C.List_empty, H.setRuntimeTypeInfo([_text_1, this._ink_tooltip_template$_appEl_2, _text_3], [P.Object]), C.List_empty]);
        this.init0$1(this._ink_tooltip_template$_appEl_0);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_MaterialPopupComponent_OpB || token === C.Type_DeferredContentAware_BCk || token === C.Type_DropdownHandle_YMM)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this._ink_tooltip_template$_MaterialPopupComponent_0_8;
        if (token === C.Type_PopupHierarchy_7R9)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1) {
          t1 = this.__PopupHierarchy_0_11;
          if (t1 == null) {
            t1 = this._ink_tooltip_template$_MaterialPopupComponent_0_8.get$hierarchy();
            this.__PopupHierarchy_0_11 = t1;
          }
          return t1;
        }
        if (token === C.Type_PopupRef_AWk)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1) {
          t1 = this.__PopupRef_0_12;
          if (t1 == null) {
            t1 = this._ink_tooltip_template$_MaterialPopupComponent_0_8._resolvedPopupRef;
            this.__PopupRef_0_12 = t1;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, currVal_3, currVal_4, currVal_6;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_autoDismiss, false);
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_enforceSpaceConstraints, true);
          t1 = this._ink_tooltip_template$_MaterialPopupComponent_0_8;
          t1.super$PopupBase$matchMinSourceWidth(false);
          t1._matchMinSourceWidth = false;
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_trackLayoutChanges, true);
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.inkBackground = true;
        }
        currVal_3 = _ctx.positions;
        t1 = this._ink_tooltip_template$_expr_3;
        if (t1 == null ? currVal_3 != null : t1 !== currVal_3) {
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.state._backingMap.$indexSet(0, C.Symbol_preferredPositions, currVal_3);
          this._ink_tooltip_template$_expr_3 = currVal_3;
        }
        currVal_4 = _ctx._tooltipSource;
        t1 = this._ink_tooltip_template$_expr_4;
        if (t1 == null ? currVal_4 != null : t1 !== currVal_4) {
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.set$source(0, currVal_4);
          this._ink_tooltip_template$_expr_4 = currVal_4;
        }
        currVal_6 = _ctx._showPopup;
        t1 = this._ink_tooltip_template$_expr_6;
        if (t1 !== currVal_6) {
          this._ink_tooltip_template$_MaterialPopupComponent_0_8.set$visible(0, currVal_6);
          this._ink_tooltip_template$_expr_6 = currVal_6;
        }
        if (firstCheck)
          this._ink_tooltip_template$_DeferredContentDirective_2_9.preserveDimensions = true;
        this._ink_tooltip_template$_appEl_0.detectChangesInNestedViews$0();
        this._ink_tooltip_template$_appEl_2.detectChangesInNestedViews$0();
        this._ink_tooltip_template$_compView_0.detectHostChanges$1(firstCheck);
        this._ink_tooltip_template$_compView_0.detectChanges$0();
        if (firstCheck)
          this._ink_tooltip_template$_MaterialPopupComponent_0_8._updateOverlayCssClass$0();
      },
      destroyInternal$0: function() {
        this._ink_tooltip_template$_appEl_0.destroyNestedViews$0();
        this._ink_tooltip_template$_appEl_2.destroyNestedViews$0();
        this._ink_tooltip_template$_compView_0.destroy$0();
        this._ink_tooltip_template$_DeferredContentDirective_2_9.ngOnDestroy$0();
        this._ink_tooltip_template$_MaterialPopupComponent_0_8.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [F.MaterialInkTooltipComponent];
      }
    },
    _ViewMaterialInkTooltipComponent2: {
      "^": "AppView;0_ink_tooltip_template$_expr_0,0_ink_tooltip_template$_text_2,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1, t2;
        doc = document;
        _el_0 = doc.createElement("div");
        _el_0.className = "ink-container";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = J.getInterceptor$x(_el_0);
        t1.append$1(_el_0, doc.createTextNode("\n            "));
        t2 = doc.createTextNode("");
        this._ink_tooltip_template$_text_2 = t2;
        t1.append$1(_el_0, t2);
        this.project$2(_el_0, 0);
        t1.append$1(_el_0, doc.createTextNode("\n          "));
        t2 = W.Event;
        t1.addEventListener$2(_el_0, "mouseover", this.eventHandler0$1$1(J.get$onMouseOver$x(this.ctx), t2));
        t1.addEventListener$2(_el_0, "mouseleave", this.eventHandler0$1$1(J.get$onMouseLeave$x(this.ctx), t2));
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        this.ctx.text;
        var t1 = this._ink_tooltip_template$_expr_0;
        if (t1 !== "") {
          this._ink_tooltip_template$_text_2.textContent = "";
          this._ink_tooltip_template$_expr_0 = "";
        }
      },
      $asAppView: function() {
        return [F.MaterialInkTooltipComponent];
      }
    },
    _ViewMaterialInkTooltipComponentHost0: {
      "^": "AppView;0_ink_tooltip_template$_compView_0,0_TooltipController_0_5,0_MaterialInkTooltipComponent_0_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new L.ViewMaterialInkTooltipComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = F.MaterialInkTooltipComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, t2));
        t3 = document.createElement("material-tooltip-text");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewMaterialInkTooltipComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialInkTooltipComponent());
          $.ViewMaterialInkTooltipComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._ink_tooltip_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t1 = G.createTooltipController(H.interceptedTypeCheck(this.injectorGet$3(C.Type_TooltipController_H6X, this.viewData.parentIndex, null), "$isTooltipController"), H.interceptedTypeCheck(this.injectorGet$3(C.Type_Disposer_k0p, this.viewData.parentIndex, null), "$isDisposer"));
        this._TooltipController_0_5 = t1;
        t3 = this._ink_tooltip_template$_compView_0;
        t1 = new F.MaterialInkTooltipComponent(t1, t3.viewData.ref, C.List_ALf, false);
        this._MaterialInkTooltipComponent_0_6 = t1;
        t3.create$2(0, t1, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._MaterialInkTooltipComponent_0_6, [t2]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_TooltipController_H6X && 0 === nodeIndex)
          return this._TooltipController_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        this._ink_tooltip_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._ink_tooltip_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [F.MaterialInkTooltipComponent];
      }
    }
  }], ["", "package:angular_components/src/material_tooltip/tooltip.dart",, S, {
    "^": "",
    MaterialTooltipDirective: {
      "^": "TooltipTarget;_tooltip$_disposer,_viewLoader,_tooltip$_changeDetector,_tooltip$_window,0_lastText,_isInitialized,0_tooltip,_canShow,_isShown,0_inkTooltip,0_delayedActivate,element,0inLongPress,_hostListenersAttached,0_componentRef,0positions,0_tooltip_target$_tooltip,viewContainerRef,_tooltip_target$_element,0_id,_domPopupSourceFactory,_initAriaAttributes,_popup_source_directive$_element,_referenceDirective,_focusable,_alignOriginX,_alignOriginY,0_popupSource,0_popupId",
      set$positions: function(positions) {
        this.positions = H.assertSubtype(positions, "$isList", [K.RelativePosition], "$asList");
      },
      _attachHostListeners$0: function() {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        if (this._hostListenersAttached)
          return;
        this._hostListenersAttached = true;
        t1 = this._tooltip$_disposer;
        t2 = this.element;
        t2.toString;
        t3 = W.MouseEvent;
        t4 = {func: 1, ret: -1, args: [t3]};
        t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t2, "click", H.functionTypeCheck(new S.MaterialTooltipDirective__attachHostListeners_closure(this), t4), false, t3), t3);
        t5 = J.getInterceptor$x(t2);
        t6 = t5.get$onBlur(t2);
        t7 = H.getTypeArgumentByIndex(t6, 0);
        t8 = W.Event;
        t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t6._html$_target, t6._eventType, H.functionTypeCheck(new S.MaterialTooltipDirective__attachHostListeners_closure0(this), {func: 1, ret: -1, args: [t7]}), false, t7), t8);
        t5 = t5.get$onFocus(t2);
        t7 = H.getTypeArgumentByIndex(t5, 0);
        t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t5._html$_target, t5._eventType, H.functionTypeCheck(new S.MaterialTooltipDirective__attachHostListeners_closure1(this), {func: 1, ret: -1, args: [t7]}), false, t7), t8);
        t5 = this._tooltip$_window;
        t6 = (t5 && C.Window_methods).matchMedia$1(t5, "(hover: none)");
        t6 = t6 == null ? null : t6.matches;
        if (!((t6 == null ? false : t6) || J.contains$1$asx(t5.navigator.userAgent, "Nexus 9"))) {
          t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t2, "mouseover", H.functionTypeCheck(new S.MaterialTooltipDirective__attachHostListeners_closure2(this), t4), false, t3), t3);
          t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t2, "mouseleave", H.functionTypeCheck(new S.MaterialTooltipDirective__attachHostListeners_closure3(this), t4), false, t3), t3);
        }
        if ($.$get$context().hasProperty$1("Hammer")) {
          t3 = new W.ElementEvents(t2).$index(0, "press");
          t4 = H.getTypeArgumentByIndex(t3, 0);
          t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t3._html$_target, t3._eventType, H.functionTypeCheck(this.get$handleLongPress(), {func: 1, ret: -1, args: [t4]}), false, t4), t8);
          t8 = W.TouchEvent;
          t1.addStreamSubscription$1$1(W._EventStreamSubscription$(t2, "touchend", H.functionTypeCheck(this.get$endLongPress(), {func: 1, ret: -1, args: [t8]}), false, t8), t8);
        }
      },
      handleLongPress$1: [function(_) {
        this.inLongPress = true;
        this.show$0(0);
      }, "call$1", "get$handleLongPress", 4, 0, 33],
      endLongPress$1: [function($event) {
        H.interceptedTypeCheck($event, "$isTouchEvent");
        if (this.inLongPress) {
          $event.preventDefault();
          this.inLongPress = false;
          this.hide$1(true);
        }
      }, "call$1", "get$endLongPress", 4, 0, 154],
      show$0: function(_) {
        if (this._isShown || !this._canShow)
          return;
        this._isShown = true;
        this._maybeLoadTooltip$0();
        this._delayedActivate.start$0(0);
      },
      hide$1: function(immediate) {
        var t1;
        if (!this._isShown)
          return;
        this._isShown = false;
        this._delayedActivate._reset$1(false);
        t1 = this._tooltip;
        if (!(t1 == null))
          t1.deactivate$1$immediate(immediate);
      },
      hide$0: function() {
        return this.hide$1(false);
      },
      _maybeLoadTooltip$0: function() {
        if (this._isInitialized)
          return;
        this._isInitialized = true;
        var t1 = this._viewLoader.loadNextToLocation$1$2(C.ComponentFactory_S1h, this.viewContainerRef, null);
        this._componentRef = t1;
        this._inkTooltip = H.interceptedTypeCheck(t1._component, "$isMaterialInkTooltipComponent");
        this._tooltip$_disposer.addDisposable$1$1(t1.get$destroy(), {func: 1, ret: -1});
        t1 = this._inkTooltip;
        t1.text = this._lastText;
        t1.set$tooltipRef(this);
        t1 = this.positions;
        if (t1 != null)
          this._inkTooltip.set$positions(t1);
      },
      _activate$0: [function() {
        this._tooltip$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        var t1 = this._tooltip;
        t1._tooltip_controller$_controller.activate$1(t1._tooltip_controller$_tooltip);
      }, "call$0", "get$_activate", 0, 0, 2],
      set$canShow: function(value) {
        var t1;
        if (value === this._canShow)
          return;
        if (value)
          this._attachHostListeners$0();
        else {
          t1 = this._tooltip;
          if (!(t1 == null))
            t1.deactivate$1$immediate(true);
          this._delayedActivate._reset$1(false);
        }
        this._canShow = value;
      },
      ngOnDestroy$0: function() {
        var t1 = this._tooltip;
        if (!(t1 == null))
          t1.deactivate$1$immediate(true);
        this._delayedActivate._reset$1(false);
        this._tooltip$_disposer.dispose$0();
      },
      static: {
        MaterialTooltipDirective$: function(domPopupSourceFactory, viewContainerRef, element, _viewLoader, _changeDetector, _window) {
          var t1 = new S.MaterialTooltipDirective(new R.Disposer(false, false), _viewLoader, _changeDetector, _window, false, true, false, element, false, viewContainerRef, element, domPopupSourceFactory, E.attributeToBool(null, true), element, null, null, C.Alignment_dMH, C.Alignment_dMH);
          t1.inLongPress = false;
          t1._delayedActivate = new T.DelayedAction(t1.get$_activate(), C.Duration_600000);
          return t1;
        }
      }
    },
    MaterialTooltipDirective__attachHostListeners_closure: {
      "^": "Closure:24;$this",
      call$1: function(_) {
        H.interceptedTypeCheck(_, "$isMouseEvent");
        this.$this.hide$1(true);
      }
    },
    MaterialTooltipDirective__attachHostListeners_closure0: {
      "^": "Closure:13;$this",
      call$1: function(_) {
        this.$this.hide$1(true);
      }
    },
    MaterialTooltipDirective__attachHostListeners_closure1: {
      "^": "Closure:13;$this",
      call$1: function(_) {
        this.$this.show$0(0);
      }
    },
    MaterialTooltipDirective__attachHostListeners_closure2: {
      "^": "Closure:24;$this",
      call$1: function(_) {
        H.interceptedTypeCheck(_, "$isMouseEvent");
        this.$this.show$0(0);
      }
    },
    MaterialTooltipDirective__attachHostListeners_closure3: {
      "^": "Closure:24;$this",
      call$1: function(_) {
        H.interceptedTypeCheck(_, "$isMouseEvent");
        this.$this.hide$0();
      }
    }
  }], ["", "package:angular_components/src/material_tooltip/tooltip_controller.dart",, U, {
    "^": "",
    TooltipController: {
      "^": "Object;0_activeTooltip,0_closeTimer",
      activate$1: function(tooltip) {
        var t1 = this._activeTooltip;
        if (tooltip === t1)
          return;
        if (!(t1 == null)) {
          t1._showPopup = false;
          t1._ink_tooltip$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        }
        tooltip._showPopup = true;
        tooltip._ink_tooltip$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        this._activeTooltip = tooltip;
      },
      deactivate$1: function(tooltip) {
        this._closeTimer = P.Timer_Timer(C.Duration_500000, new U.TooltipController_deactivate_closure(this, tooltip));
      },
      keepOpen$1: function(tooltip) {
        var t1;
        if (tooltip !== this._activeTooltip)
          return;
        t1 = this._closeTimer;
        if (!(t1 == null))
          t1.cancel$0(0);
        this._closeTimer = null;
      }
    },
    TooltipController_deactivate_closure: {
      "^": "Closure:0;$this,tooltipToClose",
      call$0: [function() {
        var t1, t2;
        t1 = this.tooltipToClose;
        t1._showPopup = false;
        t1._ink_tooltip$_changeDetector.appView.markPathToRootAsCheckOnce$0();
        t2 = this.$this;
        if (t1 === t2._activeTooltip)
          t2._activeTooltip = null;
      }, null, null, 0, 0, null, "call"]
    },
    _ProxyTooltip: {
      "^": "Object;_tooltip_controller$_tooltip,_tooltip_controller$_controller",
      deactivate$1$immediate: function(immediate) {
        var t1, t2;
        t1 = this._tooltip_controller$_controller;
        t2 = this._tooltip_controller$_tooltip;
        if (immediate) {
          t2._showPopup = false;
          t2._ink_tooltip$_changeDetector.appView.markPathToRootAsCheckOnce$0();
          if (t2 === t1._activeTooltip)
            t1._activeTooltip = null;
        } else
          t1.deactivate$1(t2);
      },
      $isTooltip: 1
    }
  }], ["", "package:angular_components/src/material_tooltip/tooltip_target.dart",, A, {
    "^": "",
    TooltipTarget: {
      "^": "PopupSourceDirective;",
      set$popupId: function(id) {
        this.super$PopupSourceDirective$popupId(id);
        this._id = id;
      },
      onOpen$0: function(_) {
        var t1 = this._id;
        if (t1 == null)
          return;
        J.setAttribute$2$x(this._tooltip_target$_element, "aria-describedby", t1);
      },
      onClose$0: function(_) {
        var t1;
        if (this._id == null)
          return;
        t1 = this._tooltip_target$_element;
        t1.toString;
        new W._ElementAttributeMap(t1).remove$1(0, "aria-describedby");
      }
    }
  }], ["", "package:angular_components/src/model/action/async_action.dart",, L, {
    "^": "",
    AsyncAction: {
      "^": "Object;_async_action$_onDone,_onDefer,_async_action$_futureCancellations,_async_action$_executionDeferrals,_cancelledGetter,_lockedGetter,_doneGetter,_syncCancelled,$ti",
      cancelIf$1: function(whetherToCancel) {
        H.assertSubtype(whetherToCancel, "$isFuture", [P.bool], "$asFuture");
        if (this._syncCancelled || H.boolTypeCheck(this._cancelledGetter.call$0()))
          return;
        if (H.boolTypeCheck(this._doneGetter.call$0()))
          throw H.wrapException(P.StateError$("Cannot register. Action is complete."));
        if (H.boolTypeCheck(this._lockedGetter.call$0()))
          throw H.wrapException(P.StateError$("Cannot register. Already waiting."));
        C.JSArray_methods.add$1(this._async_action$_futureCancellations, whetherToCancel);
      },
      cancel$0: function(_) {
        var t1, t2;
        if (this._syncCancelled || H.boolTypeCheck(this._cancelledGetter.call$0()))
          return;
        if (H.boolTypeCheck(this._doneGetter.call$0()))
          throw H.wrapException(P.StateError$("Cannot register. Action is complete."));
        if (H.boolTypeCheck(this._lockedGetter.call$0()))
          throw H.wrapException(P.StateError$("Cannot register. Already waiting."));
        this._syncCancelled = true;
        t1 = this._async_action$_futureCancellations;
        C.JSArray_methods.set$length(t1, 0);
        t2 = new P._Future(0, $.Zone__current, [P.bool]);
        t2._asyncComplete$1(true);
        C.JSArray_methods.add$1(t1, t2);
      }
    }
  }], ["", "package:angular_components/src/model/action/async_action_controller.dart",, Z, {
    "^": "",
    AsyncActionController: {
      "^": "Object;_executeCompleter,_deferCompleter,_executionDeferrals,_futureCancellations,_locked,_cancelled,_done,0_action,$ti",
      set$_action: function(_action) {
        this._action = H.assertSubtype(_action, "$isAsyncAction", this.$ti, "$asAsyncAction");
      },
      get$action: function(_) {
        if (this._action == null)
          this.set$_action(new L.AsyncAction(this._executeCompleter.future, this._deferCompleter.future, this._futureCancellations, this._executionDeferrals, new Z.AsyncActionController_action_closure(this), new Z.AsyncActionController_action_closure0(this), new Z.AsyncActionController_action_closure1(this), false, this.$ti));
        return this._action;
      },
      execute$3$onCancel$valueOnCancel: function(exec, onCancel, valueOnCancel) {
        return P.Future_Future$microtask(new Z.AsyncActionController_execute_closure(this, H.functionTypeCheck(exec, {func: 1}), onCancel, H.assertSubtypeOfRuntimeType(valueOnCancel, H.getTypeArgumentByIndex(this, 0))), null);
      },
      execute$2$valueOnCancel: function(exec, valueOnCancel) {
        return this.execute$3$onCancel$valueOnCancel(exec, null, valueOnCancel);
      },
      execute$1: function(exec) {
        return this.execute$3$onCancel$valueOnCancel(exec, null, null);
      },
      _shouldCancel$0: function() {
        return P.Future_Future$microtask(new Z.AsyncActionController__shouldCancel_closure(this), P.bool);
      },
      _attachFuture$1: function(future) {
        var t1 = this._executeCompleter;
        H.assertSubtype(future, "$isFuture", this.$ti, "$asFuture").then$1$1(t1.get$complete(t1), -1).catchError$1(t1.get$completeError());
      }
    },
    AsyncActionController_action_closure0: {
      "^": "Closure:6;$this",
      call$0: function() {
        return this.$this._locked;
      }
    },
    AsyncActionController_action_closure: {
      "^": "Closure:6;$this",
      call$0: function() {
        return this.$this._cancelled;
      }
    },
    AsyncActionController_action_closure1: {
      "^": "Closure:6;$this",
      call$0: function() {
        return this.$this._done;
      }
    },
    AsyncActionController_execute_closure: {
      "^": "Closure:22;$this,exec,onCancel,valueOnCancel",
      call$0: function() {
        var t1 = this.$this;
        if (t1._locked)
          throw H.wrapException(P.StateError$("Cannot execute, execution already in process."));
        t1._locked = true;
        return t1._shouldCancel$0().then$1$1(new Z.AsyncActionController_execute__closure(t1, this.exec, this.onCancel, this.valueOnCancel), null);
      }
    },
    AsyncActionController_execute__closure: {
      "^": "Closure:156;$this,exec,onCancel,valueOnCancel",
      call$1: [function(shouldCancel) {
        var t1, shouldProceed;
        H.boolTypeCheck(shouldCancel);
        t1 = this.$this;
        t1._cancelled = shouldCancel;
        shouldProceed = !shouldCancel;
        t1._deferCompleter.complete$1(0, shouldProceed);
        if (shouldProceed)
          return P.Future_wait(t1._executionDeferrals, null, false, null).then$1$1(new Z.AsyncActionController_execute___closure(t1, this.exec), null);
        else {
          t1._done = true;
          t1._executeCompleter.complete$1(0, this.valueOnCancel);
          return;
        }
      }, null, null, 4, 0, null, 74, "call"]
    },
    AsyncActionController_execute___closure: {
      "^": "Closure:4;$this,exec",
      call$1: [function(_) {
        var t1, execResult, t2;
        t1 = this.$this;
        execResult = this.exec.call$0();
        t1._done = true;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        if (!!J.getInterceptor$(execResult).$isFuture)
          t1._attachFuture$1(H.assertSubtype(execResult, "$isFuture", [t2], "$asFuture"));
        else
          t1._executeCompleter.complete$1(0, H.futureOrCheck(execResult, {futureOr: 1, type: t2}));
      }, null, null, 4, 0, null, 0, "call"]
    },
    AsyncActionController__shouldCancel_closure: {
      "^": "Closure:41;$this",
      call$0: function() {
        var t1 = P.bool;
        return P.Future_wait(this.$this._futureCancellations, null, false, t1).then$1$1(new Z.AsyncActionController__shouldCancel__closure(), t1);
      }
    },
    AsyncActionController__shouldCancel__closure: {
      "^": "Closure:157;",
      call$1: [function(results) {
        return J.any$1$ax(H.assertSubtype(results, "$isList", [P.bool], "$asList"), new Z.AsyncActionController__shouldCancel___closure());
      }, null, null, 4, 0, null, 75, "call"]
    },
    AsyncActionController__shouldCancel___closure: {
      "^": "Closure:32;",
      call$1: function(cancel) {
        return H.boolTypeCheck(cancel) === true;
      }
    }
  }], ["", "package:angular_components/src/utils/angular/managed_zone/managed_zone.dart",, V, {
    "^": "",
    ManagedZone: {
      "^": "Object;",
      $isDisposable: 1
    },
    ManagedZoneBase: {
      "^": "ManagedZone;",
      capturedTurnStart$1: [function($event) {
        this._managed_zone$_isRunning = true;
      }, "call$1", "get$capturedTurnStart", 4, 0, 1, 6],
      capturedTurnDone$1: ["super$ManagedZoneBase$capturedTurnDone", function($event) {
        this._managed_zone$_isRunning = false;
      }],
      capturedEventDone$1: ["super$ManagedZoneBase$capturedEventDone", function($event) {
      }],
      toString$0: function(_) {
        var t1, t2;
        t1 = $.Zone__current;
        t2 = this.outerZone;
        t2 = t1 == null ? t2 == null : t1 === t2;
        return "ManagedZone " + P.MapBase_mapToString(P.LinkedHashMap_LinkedHashMap$_literal(["inInnerZone", !t2, "inOuterZone", t2], P.String, P.bool));
      }
    }
  }], ["", "package:angular_components/src/utils/async/async_update_scheduler.dart",, Z, {
    "^": "",
    AsyncUpdateScheduler: {
      "^": "Object;_updateCallback,_isUpdateScheduled,0_onUpdateStreamController",
      scheduleUpdate$0: function() {
        if (!this._isUpdateScheduled) {
          this._isUpdateScheduled = true;
          P.scheduleMicrotask(new Z.AsyncUpdateScheduler_scheduleUpdate_closure(this));
        }
      }
    },
    AsyncUpdateScheduler_scheduleUpdate_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1 = this.$this;
        t1._isUpdateScheduled = false;
        t1 = t1._onUpdateStreamController;
        if (t1 != null)
          t1.add$1(0, null);
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/src/utils/async/rate_limit.dart",, R, {
    "^": "",
    _RateLimitSink: {
      "^": "Object;_outputSink,_rate_limit$_duration,_rateLimitStrategy,0_addEvent",
      set$_addEvent: function(_addEvent) {
        this._addEvent = H.functionTypeCheck(_addEvent, {func: 1, ret: -1, args: [,]});
      },
      add$1: [function(_, $event) {
        this._addEvent.call$1($event);
      }, null, "get$add", 5, 0, null, 6],
      addError$2: function(error, stackTrace) {
        var t1 = this._outputSink._async$_sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_addError(error, stackTrace);
      },
      close$0: function(_) {
        var t1 = this._outputSink._async$_sink;
        if ((t1._state & 2) !== 0)
          H.throwExpression(P.StateError$("Stream is already closed"));
        t1.super$_BufferingStreamSubscription$_close();
      },
      $isEventSink: 1,
      $asEventSink: Isolate.functionThatReturnsNull
    },
    RateLimitTransformer: {
      "^": "StreamTransformerBase;_rate_limit$_duration,_rateLimitStrategy,$ti",
      bind$1: function(stream) {
        return new P._BoundSinkStream(new R.RateLimitTransformer_bind_closure(this), H.assertSubtype(stream, "$isStream", [H.getTypeArgumentByIndex(this, 0)], "$asStream"), [null, H.getTypeArgumentByIndex(this, 1)]);
      }
    },
    RateLimitTransformer_bind_closure: {
      "^": "Closure:158;$this",
      call$1: function(sink) {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._rate_limit$_duration;
        t1 = t1._rateLimitStrategy;
        t3 = new R._RateLimitSink(sink, t2, t1);
        t3.set$_addEvent(t1.call$2(sink.get$add(sink), t2));
        return t3;
      }
    }
  }], ["", "package:angular_components/src/utils/async/zoned_async.dart",, E, {
    "^": "",
    _ZoneRunner: {
      "^": "Object;"
    },
    ZonedFuture: {
      "^": "_ZoneRunner;_innerFuture,_runInZoneFn,$ti",
      asStream$0: function() {
        var t1 = this._innerFuture;
        return new E.ZonedStream(P.Stream_Stream$fromFuture(t1, H.getTypeArgumentByIndex(t1, 0)), this._runInZoneFn, this.$ti);
      },
      catchError$2$test: function(onError, test) {
        var t1 = [P.Future, H.getTypeArgumentByIndex(this, 0)];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_catchError_closure(this, onError, test), {func: 1, ret: t1})), t1);
      },
      catchError$1: function(onError) {
        return this.catchError$2$test(onError, null);
      },
      then$1$2$onError: function(onValue, onError, $S) {
        var t1 = [P.Future, $S];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_then_closure(this, H.functionTypeCheck(onValue, {func: 1, ret: {futureOr: 1, type: $S}, args: [H.getTypeArgumentByIndex(this, 0)]}), onError, $S), {func: 1, ret: t1})), t1);
      },
      then$1$1: function(onValue, $S) {
        return this.then$1$2$onError(onValue, null, $S);
      },
      whenComplete$1: function(action) {
        var t1 = [P.Future, H.getTypeArgumentByIndex(this, 0)];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedFuture_whenComplete_closure(this, H.functionTypeCheck(action, {func: 1})), {func: 1, ret: t1})), t1);
      },
      $isFuture: 1
    },
    ZonedFuture_catchError_closure: {
      "^": "Closure;$this,onError,test",
      call$0: [function() {
        return this.$this._innerFuture.catchError$2$test(this.onError, this.test);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.Future, H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    ZonedFuture_then_closure: {
      "^": "Closure;$this,onValue,onError,S",
      call$0: [function() {
        return this.$this._innerFuture.then$1$2$onError(this.onValue, this.onError, this.S);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.Future, this.S]};
      }
    },
    ZonedFuture_whenComplete_closure: {
      "^": "Closure;$this,action",
      call$0: [function() {
        return this.$this._innerFuture.whenComplete$1(this.action);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.Future, H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    ZonedStream: {
      "^": "_ZonedStream_Stream__ZoneRunner;_innerStream,_runInZoneFn,$ti",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this, 0);
        t2 = [P.StreamSubscription, t1];
        return H.subtypeOfRuntimeTypeCast(this._runInZoneFn.call$1(H.functionTypeCheck(new E.ZonedStream_listen_closure(this, H.functionTypeCheck(onData, {func: 1, ret: -1, args: [t1]}), onError, H.functionTypeCheck(onDone, {func: 1, ret: -1}), cancelOnError), {func: 1, ret: t2})), t2);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      }
    },
    ZonedStream_listen_closure: {
      "^": "Closure;$this,onData,onError,onDone,cancelOnError",
      call$0: [function() {
        return this.$this._innerStream.listen$4$cancelOnError$onDone$onError(this.onData, this.cancelOnError, this.onDone, this.onError);
      }, null, null, 0, 0, null, "call"],
      $signature: function() {
        return {func: 1, ret: [P.StreamSubscription, H.getTypeArgumentByIndex(this.$this, 0)]};
      }
    },
    _ZonedStream_Stream__ZoneRunner: {
      "^": "Stream+_ZoneRunner;"
    }
  }], ["", "package:angular_components/theme/dark_theme.dart",, F, {
    "^": "",
    AcxDarkTheme: {
      "^": "Object;isDarkTheme",
      static: {
        AcxDarkTheme$: function(dark) {
          return new F.AcxDarkTheme(dark == null ? false : dark);
        }
      }
    }
  }], ["", "package:angular_components/utils/angular/imperative_view/imperative_view.dart",, O, {
    "^": "",
    AcxImperativeViewUtils: {
      "^": "Object;_componentLoader,_imperative_view$_domService",
      insertAngularView$3: function(intoDomElement, templateRef, viewContainer) {
        return this._imperative_view$_domService.onWrite$0(0).then$1$1(new O.AcxImperativeViewUtils_insertAngularView_closure(viewContainer, templateRef, intoDomElement), O.ImperativeViewRef);
      }
    },
    AcxImperativeViewUtils_insertAngularView_closure: {
      "^": "Closure:159;viewContainer,templateRef,intoDomElement",
      call$1: [function(_) {
        var t1, viewRef, t2, t3, t4, _i;
        t1 = this.viewContainer;
        viewRef = t1.createEmbeddedView$1(this.templateRef);
        for (t2 = S._flattenNestedViewRenderNodes(viewRef.appView.viewData.rootNodesOrViewContainers, H.setRuntimeTypeInfo([], [W.Node])), t3 = t2.length, t4 = this.intoDomElement, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i)
          C.DivElement_methods.append$1(t4, t2[_i]);
        return new O.ImperativeViewRef(new O.AcxImperativeViewUtils_insertAngularView__closure(t1, viewRef), viewRef);
      }, null, null, 4, 0, null, 0, "call"]
    },
    AcxImperativeViewUtils_insertAngularView__closure: {
      "^": "Closure:0;viewContainer,viewRef",
      call$0: function() {
        var t1, t2, index;
        t1 = this.viewContainer;
        t2 = t1.nestedViews;
        index = (t2 && C.JSArray_methods).indexOf$1(t2, this.viewRef.appView);
        if (index > -1)
          t1.remove$1(0, index);
      }
    },
    ImperativeViewRef: {
      "^": "Object;_disposeFn,viewRef",
      dispose$0: [function() {
        this._disposeFn.call$0();
      }, "call$0", "get$dispose", 0, 0, 2],
      $isDisposable: 1
    }
  }], ["", "package:angular_components/utils/angular/managed_zone/angular_2.dart",, T, {
    "^": "",
    Angular2ManagedZone: {
      "^": "ManagedZoneBase;_angular_2$_ngZone,_isDisposed,0innerZone,0outerZone,0_onTurnDoneController,0_onTurnStartController,0_onEventDoneController,_managed_zone$_isRunning",
      Angular2ManagedZone$1: function(_ngZone) {
        var t1, t2, t3;
        t1 = this._angular_2$_ngZone;
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new T.Angular2ManagedZone_closure(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      capturedTurnDone$1: [function($event) {
        if (this._isDisposed)
          return;
        this.super$ManagedZoneBase$capturedTurnDone($event);
      }, "call$1", "get$capturedTurnDone", 4, 0, 1, 6],
      capturedEventDone$1: [function($event) {
        if (this._isDisposed)
          return;
        this.super$ManagedZoneBase$capturedEventDone($event);
      }, "call$1", "get$capturedEventDone", 4, 0, 1, 6],
      static: {
        Angular2ManagedZone$: function(_ngZone) {
          var t1 = new T.Angular2ManagedZone(_ngZone, false, false);
          t1.Angular2ManagedZone$1(_ngZone);
          return t1;
        }
      }
    },
    Angular2ManagedZone_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2, t3;
        t1 = this.$this;
        t1.outerZone = $.Zone__current;
        t2 = t1._angular_2$_ngZone;
        t3 = t2._onTurnStart;
        new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(t1.get$capturedTurnStart());
        t3 = t2._onMicrotaskEmpty;
        new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(t1.get$capturedTurnDone());
        t2 = t2._onTurnDone;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(t1.get$capturedEventDone());
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_components/utils/angular/properties/properties.dart",, E, {
    "^": "",
    _parseBool: function(strValue) {
      switch (strValue) {
        case "":
          return true;
        case "true":
          return true;
        case "false":
          return false;
        default:
          throw H.wrapException(P.ArgumentError$value(strValue, "strValue", 'Only "", "true", and "false" are acceptable values for parseBool. Found: '));
      }
    },
    getBool: function(inputValue) {
      if (inputValue == null)
        throw H.wrapException(P.ArgumentError$notNull("inputValue"));
      if (typeof inputValue === "string")
        return E._parseBool(inputValue);
      if (typeof inputValue === "boolean")
        return inputValue;
      throw H.wrapException(P.ArgumentError$value(inputValue, "inputValue", "Expected a String, or bool type"));
    },
    attributeToBool: function(inputValue, defaultValue) {
      return defaultValue;
    },
    getInt: function(inputValue, defaultValue) {
      if (inputValue == null)
        return defaultValue;
      else
        return inputValue;
    }
  }], ["", "package:angular_components/utils/angular/reference/reference.dart",, F, {
    "^": "",
    ReferenceDirective: {
      "^": "Object;"
    }
  }], ["", "package:angular_components/utils/browser/dom_iterator/dom_iterator.dart",, Q, {
    "^": "",
    lastDescendant: function(scope) {
      var t1, current, t2, t3, children;
      for (t1 = [W.Element], current = scope; t2 = J.getInterceptor$x(current), t3 = t2.get$children(current), !t3.get$isEmpty(t3);) {
        children = H.assertSubtype(t2.get$children(current), "$isListBase", t1, "$asListBase");
        t2 = children.get$length(children);
        if (typeof t2 !== "number")
          return t2.$sub();
        current = children.$index(0, t2 - 1);
      }
      return current;
    },
    _lastChild: function(element) {
      var children, t1;
      children = H.assertSubtype(J.get$children$x(element), "$isListBase", [W.Element], "$asListBase");
      t1 = children.get$length(children);
      if (typeof t1 !== "number")
        return t1.$sub();
      return children.$index(0, t1 - 1);
    },
    DomTreeIterator: {
      "^": "Object;_reverse,_wraps,_startingElement,_scope,_dom_iterator$_element",
      get$current: function(_) {
        return this._dom_iterator$_element;
      },
      moveNext$0: function() {
        var t1, t2;
        t1 = this._dom_iterator$_element;
        if (t1 == null)
          return false;
        if (t1 === this._scope) {
          t1 = J.get$children$x(t1);
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (t1) {
          this._dom_iterator$_element = null;
          return false;
        }
        if (this._reverse)
          this._navigateBackward$0();
        else
          this._navigateForward$0();
        t1 = this._dom_iterator$_element;
        t2 = this._startingElement;
        if (t1 == null ? t2 == null : t1 === t2) {
          this._dom_iterator$_element = null;
          t1 = null;
        }
        return t1 != null;
      },
      _navigateBackward$0: function() {
        var t1, t2, t3, children;
        t1 = this._dom_iterator$_element;
        t2 = this._scope;
        if (t1 == null ? t2 == null : t1 === t2)
          if (this._wraps)
            this._dom_iterator$_element = Q.lastDescendant(t2);
          else
            this._dom_iterator$_element = null;
        else {
          t2 = t1.parentElement;
          if (t2 == null)
            this._dom_iterator$_element = null;
          else {
            t2 = J.get$children$x(t2).$index(0, 0);
            t3 = this._dom_iterator$_element;
            if (t1 == null ? t2 == null : t1 === t2)
              this._dom_iterator$_element = t3.parentElement;
            else {
              t1 = t3.previousElementSibling;
              this._dom_iterator$_element = t1;
              for (t2 = [W.Element]; t1 = J.get$children$x(t1), !t1.get$isEmpty(t1);) {
                children = H.assertSubtype(J.get$children$x(this._dom_iterator$_element), "$isListBase", t2, "$asListBase");
                t1 = children.get$length(children);
                if (typeof t1 !== "number")
                  return t1.$sub();
                t1 = children.$index(0, t1 - 1);
                this._dom_iterator$_element = t1;
              }
            }
          }
        }
      },
      _navigateForward$0: function() {
        var t1, t2, t3, t4, children;
        t1 = J.get$children$x(this._dom_iterator$_element);
        if (!t1.get$isEmpty(t1))
          this._dom_iterator$_element = J.get$children$x(this._dom_iterator$_element).$index(0, 0);
        else {
          t1 = this._scope;
          t2 = [W.Element];
          while (true) {
            t3 = this._dom_iterator$_element;
            t4 = t3.parentElement;
            if (t4 != null)
              if (t4 !== t1) {
                children = H.assertSubtype(J.get$children$x(t4), "$isListBase", t2, "$asListBase");
                t4 = children.get$length(children);
                if (typeof t4 !== "number")
                  return t4.$sub();
                t4 = children.$index(0, t4 - 1);
                t4 = t3 == null ? t4 == null : t3 === t4;
                t3 = t4;
              } else
                t3 = false;
            else
              t3 = false;
            if (!t3)
              break;
            this._dom_iterator$_element = this._dom_iterator$_element.parentElement;
          }
          t2 = this._dom_iterator$_element;
          t3 = t2.parentElement;
          if (t3 != null)
            if (t3 === t1) {
              t3 = Q._lastChild(t3);
              t3 = t2 == null ? t3 == null : t2 === t3;
              t2 = t3;
            } else
              t2 = false;
          else
            t2 = true;
          if (t2)
            if (this._wraps)
              this._dom_iterator$_element = t1;
            else
              this._dom_iterator$_element = null;
          else
            this._dom_iterator$_element = this._dom_iterator$_element.nextElementSibling;
        }
      },
      $isIterator: 1,
      $asIterator: function() {
        return [W.Element];
      },
      static: {
        DomTreeIterator$: function(element, reverse, scope, wraps) {
          if (wraps && scope == null)
            H.throwExpression(P.Exception_Exception("global wrapping is disallowed, scope is required"));
          if (scope != null && !C.DivElement_methods.contains$1(scope, element))
            H.throwExpression(P.Exception_Exception("if scope is set, starting element should be inside of scope"));
          return new Q.DomTreeIterator(reverse, wraps, element, scope, element);
        }
      }
    }
  }], ["", "package:angular_components/utils/browser/dom_service/angular_2.dart",, T, {
    "^": "",
    createDomService: function(service, disposer, zone, $window) {
      var t1;
      if (service != null)
        return service;
      t1 = $._singletonService;
      if (t1 != null)
        return t1;
      t1 = [{func: 1, ret: -1}];
      t1 = new F.DomService(H.setRuntimeTypeInfo([], t1), H.setRuntimeTypeInfo([], t1), zone, $window, C.C__RootZone, false, false, -1, C.DomServiceState_0, false, 4000, false, false);
      $._singletonService = t1;
      M.createDomServiceWebdriverTestability(t1).register$0(0);
      if (!(disposer == null))
        disposer.addFunction$1(new T.createDomService_closure());
      return $._singletonService;
    },
    createDomService_closure: {
      "^": "Closure:0;",
      call$0: function() {
        $._singletonService = null;
      }
    }
  }], ["", "package:angular_components/utils/browser/dom_service/dom_service.dart",, F, {
    "^": "",
    DomService: {
      "^": "Object;_domReadQueue,_domWriteQueue,_dom_service$_ngZone,_dom_service$_window,_rootZone,_insideDigest,0_layoutObserveRead,_scheduledProcessQueue,0_onLayoutChangedController,0_onLayoutChangedStream,0_onQueuesProcessedController,0_onQueuesProcessedStream,_nextFrameId,0_nextFrameCompleter,0_nextFrameFuture,_dom_service$_state,_crossAppInitialized,0_onIdleController,0_onIdleStream,_idleTimerMillis,0_idleTimer,_inDispatchTurnDoneEvent,0isDomMutatedPredicate,0resetIsDomMutated,_writeQueueChangedLayout",
      set$_nextFrameFuture: function(_nextFrameFuture) {
        this._nextFrameFuture = H.assertSubtype(_nextFrameFuture, "$isFuture", [P.num], "$asFuture");
      },
      init$0: function() {
        var t1, t2, t3;
        if (this._crossAppInitialized)
          return;
        this._crossAppInitialized = true;
        t1 = this._dom_service$_ngZone;
        t2 = P.Null;
        t1.toString;
        t3 = H.functionTypeCheck(new F.DomService_init_closure(this), {func: 1, ret: t2});
        t1._outerZone.run$1$1(t3, t2);
      },
      get$nextFrame: function() {
        var t1, t2, completer, t3, t4, t5;
        if (this._nextFrameFuture == null) {
          t1 = P.num;
          t2 = new P._Future(0, $.Zone__current, [t1]);
          completer = new P._SyncCompleter(t2, [t1]);
          this._nextFrameCompleter = completer;
          t3 = this._dom_service$_ngZone;
          t4 = P.Null;
          t3.toString;
          t5 = H.functionTypeCheck(new F.DomService_nextFrame_closure(this, completer), {func: 1, ret: t4});
          t3._outerZone.run$1$1(t5, t4);
          this.set$_nextFrameFuture(new E.ZonedFuture(t2, H.instantiate1(t3.get$runOutsideAngular(), null), [t1]));
        }
        return this._nextFrameFuture;
      },
      scheduleRead$1: function(fn) {
        var callback;
        H.functionTypeCheck(fn, {func: 1, ret: -1});
        if (this._dom_service$_state === C.DomServiceState_2) {
          fn.call$0();
          return C.C__NoopDisposable;
        }
        callback = new X.DisposableCallback();
        callback._disposable_callback$_callback = fn;
        this._scheduleInQueue$2(callback.get$$call(), this._domReadQueue);
        return callback;
      },
      scheduleWrite$1: function(fn) {
        var callback;
        H.functionTypeCheck(fn, {func: 1, ret: -1});
        if (this._dom_service$_state === C.DomServiceState_1) {
          fn.call$0();
          return C.C__NoopDisposable;
        }
        callback = new X.DisposableCallback();
        callback._disposable_callback$_callback = fn;
        this._scheduleInQueue$2(callback.get$$call(), this._domWriteQueue);
        return callback;
      },
      _scheduleInQueue$2: function(fn, queue) {
        var t1 = {func: 1, ret: -1};
        H.functionTypeCheck(fn, t1);
        H.assertSubtype(queue, "$isList", [t1], "$asList");
        C.JSArray_methods.add$1(queue, $.DomService_maintainZoneOnCallbacks ? $.Zone__current.bindCallback$1$1(fn, -1) : fn);
        this._scheduleProcessQueue$0();
      },
      onWrite$0: function(_) {
        var t1, completer;
        t1 = new P._Future(0, $.Zone__current, [null]);
        completer = new P._SyncCompleter(t1, [null]);
        this.scheduleWrite$1(completer.get$complete(completer));
        return new E.ZonedFuture(t1, H.instantiate1(this._dom_service$_ngZone.get$runOutsideAngular(), null), [null]);
      },
      _processQueues$0: function() {
        var t1, t2, t3;
        t1 = this._domReadQueue;
        if (t1.length === 0 && this._domWriteQueue.length === 0) {
          this._scheduledProcessQueue = false;
          return;
        }
        this._dom_service$_state = C.DomServiceState_2;
        this._processQueue$1(t1);
        this._dom_service$_state = C.DomServiceState_1;
        t2 = this._domWriteQueue;
        t3 = this._processQueue$1(t2) > 0;
        this._writeQueueChangedLayout = t3;
        this._dom_service$_state = C.DomServiceState_0;
        if (t3)
          this._scheduleOnLayoutChanged$0();
        this._scheduledProcessQueue = false;
        if (t1.length !== 0 || t2.length !== 0)
          this._scheduleProcessQueue$0();
        else {
          t1 = this._onQueuesProcessedController;
          if (t1 != null)
            t1.add$1(0, this);
        }
      },
      _processQueue$1: function(queue) {
        var previousLength, i, fn;
        H.assertSubtype(queue, "$isList", [{func: 1, ret: -1}], "$asList");
        previousLength = queue.length;
        for (i = 0; i < queue.length; ++i) {
          fn = queue[i];
          fn.call$0();
        }
        C.JSArray_methods.set$length(queue, 0);
        return previousLength;
      },
      get$onLayoutChanged: function() {
        var t1, t2, t3;
        if (this._onLayoutChangedStream == null) {
          t1 = new P._SyncBroadcastStreamController(null, null, 0, [null]);
          this._onLayoutChangedController = t1;
          t2 = this._dom_service$_ngZone;
          this._onLayoutChangedStream = new E.ZonedStream(new P._BroadcastStream(t1, [null]), H.instantiate1(t2.get$runOutsideAngular(), null), [null]);
          t1 = P.Null;
          t3 = H.functionTypeCheck(new F.DomService_onLayoutChanged_closure(this), {func: 1, ret: t1});
          t2._outerZone.run$1$1(t3, t1);
        }
        return this._onLayoutChangedStream;
      },
      _listenOnLayoutEvents$1: function(events) {
        var t1 = H.getTypeArgumentByIndex(events, 0);
        W._EventStreamSubscription$(events._html$_target, events._eventType, H.functionTypeCheck(new F.DomService__listenOnLayoutEvents_closure(this), {func: 1, ret: -1, args: [t1]}), false, t1);
      },
      _scheduleProcessQueue$0: function() {
        if (!this._scheduledProcessQueue) {
          this._scheduledProcessQueue = true;
          this.get$nextFrame().then$1$1(new F.DomService__scheduleProcessQueue_closure(this), -1);
        }
      },
      _scheduleOnLayoutChanged$0: function() {
        if (this._layoutObserveRead != null)
          return;
        var t1 = this._onLayoutChangedController;
        t1 = t1 == null ? null : t1._firstSubscription != null;
        if (t1 !== true && true)
          return;
        if (this._dom_service$_state === C.DomServiceState_2) {
          this.scheduleWrite$1(new F.DomService__scheduleOnLayoutChanged_closure());
          return;
        }
        this._layoutObserveRead = this.scheduleRead$1(new F.DomService__scheduleOnLayoutChanged_closure0(this));
      },
      _resetIdleTimer$0: function() {
        return;
      }
    },
    DomService_init_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t2 = t1._dom_service$_ngZone._onMicrotaskEmpty;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new F.DomService_init__closure(t1));
      }, null, null, 0, 0, null, "call"]
    },
    DomService_init__closure: {
      "^": "Closure:19;$this",
      call$1: [function(_) {
        var t1, t2, e;
        t1 = this.$this;
        t1._inDispatchTurnDoneEvent = true;
        t2 = t1._dom_service$_window;
        e = C.HtmlDocument_methods._createEvent$1(document, "Event");
        J._initEvent$3$x(e, "doms-turn", true, true);
        (t2 && C.Window_methods).dispatchEvent$1(t2, e);
        t1._inDispatchTurnDoneEvent = false;
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService_nextFrame_closure: {
      "^": "Closure:0;$this,completer",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t1.init$0();
        t2 = t1._dom_service$_window;
        t1._nextFrameId = (t2 && C.Window_methods).requestAnimationFrame$1(t2, new F.DomService_nextFrame__closure(t1, this.completer));
      }, null, null, 0, 0, null, "call"]
    },
    DomService_nextFrame__closure: {
      "^": "Closure:160;$this,completer",
      call$1: [function(highResTimer) {
        var t1, t2;
        H.numTypeCheck(highResTimer);
        t1 = this.completer;
        if (t1.future._state !== 0)
          return;
        t2 = this.$this;
        if (t1 === t2._nextFrameCompleter) {
          t2.set$_nextFrameFuture(null);
          t2._nextFrameCompleter = null;
        }
        t1.complete$1(0, highResTimer);
      }, null, null, 4, 0, null, 76, "call"]
    },
    DomService_onLayoutChanged_closure: {
      "^": "Closure:0;$this",
      call$0: [function() {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._dom_service$_ngZone;
        t3 = t2._onTurnStart;
        new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(new F.DomService_onLayoutChanged__closure(t1));
        t2 = t2._onMicrotaskEmpty;
        new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(new F.DomService_onLayoutChanged__closure0(t1));
        t2 = t1._dom_service$_window;
        t2.toString;
        t1._listenOnLayoutEvents$1(new W._EventStream(t2, "webkitAnimationEnd", false, [W.AnimationEvent]));
        t1._listenOnLayoutEvents$1(new W._EventStream(t2, "resize", false, [W.Event]));
        t1._listenOnLayoutEvents$1(new W._EventStream(t2, H.stringTypeCheck(W.Element__determineTransitionEventType(t2)), false, [W.TransitionEvent]));
        (t2 && C.Window_methods).addEventListener$2(t2, "doms-turn", new F.DomService_onLayoutChanged__closure1(t1));
      }, null, null, 0, 0, null, "call"]
    },
    DomService_onLayoutChanged__closure: {
      "^": "Closure:19;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        if (t1._dom_service$_state !== C.DomServiceState_0)
          return;
        t1._insideDigest = true;
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService_onLayoutChanged__closure0: {
      "^": "Closure:19;$this",
      call$1: [function(_) {
        var t1 = this.$this;
        if (t1._dom_service$_state !== C.DomServiceState_0)
          return;
        t1._insideDigest = false;
        t1._scheduleOnLayoutChanged$0();
        t1._writeQueueChangedLayout = false;
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService_onLayoutChanged__closure1: {
      "^": "Closure:13;$this",
      call$1: [function(_) {
        var t1;
        H.interceptedTypeCheck(_, "$isEvent");
        t1 = this.$this;
        if (!t1._inDispatchTurnDoneEvent)
          t1._scheduleOnLayoutChanged$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService__listenOnLayoutEvents_closure: {
      "^": "Closure:1;$this",
      call$1: function(_) {
        return this.$this._scheduleOnLayoutChanged$0();
      }
    },
    DomService__scheduleProcessQueue_closure: {
      "^": "Closure:161;$this",
      call$1: [function(_) {
        H.numTypeCheck(_);
        return this.$this._processQueues$0();
      }, null, null, 4, 0, null, 0, "call"]
    },
    DomService__scheduleOnLayoutChanged_closure: {
      "^": "Closure:0;",
      call$0: function() {
      }
    },
    DomService__scheduleOnLayoutChanged_closure0: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1, t2;
        t1 = this.$this;
        t1._layoutObserveRead = null;
        t2 = t1._onLayoutChangedController;
        if (t2 != null)
          t2.add$1(0, t1);
        t1._resetIdleTimer$0();
      }
    },
    DomServiceState: {
      "^": "Object;index>,_dom_service$_name",
      toString$0: function(_) {
        return this._dom_service$_name;
      }
    }
  }], ["", "package:angular_components/utils/browser/dom_service/dom_service_webdriver_testability.dart",, M, {
    "^": "",
    createDomServiceWebdriverTestability: function(domService) {
      if ($.$get$testabilitiesEnabled())
        return M.DomServiceWebdriverTestability$_(domService);
      return new D.NullTestability();
    },
    DomServiceWebdriverTestability: {
      "^": "AbstractTestability;_dom_service_webdriver_testability$_domService,_callbacks",
      DomServiceWebdriverTestability$_$1: function(_domService) {
        var t1, t2;
        t1 = this._dom_service_webdriver_testability$_domService;
        t2 = t1._onQueuesProcessedStream;
        if (t2 == null) {
          t2 = new P._SyncBroadcastStreamController(null, null, 0, [null]);
          t1._onQueuesProcessedController = t2;
          t2 = new E.ZonedStream(new P._BroadcastStream(t2, [null]), H.instantiate1(t1._dom_service$_ngZone.get$runOutsideAngular(), null), [null]);
          t1._onQueuesProcessedStream = t2;
          t1 = t2;
        } else
          t1 = t2;
        t1.listen$1(new M.DomServiceWebdriverTestability$__closure(this));
      },
      static: {
        DomServiceWebdriverTestability$_: function(_domService) {
          var t1 = new M.DomServiceWebdriverTestability(_domService, H.setRuntimeTypeInfo([], [{func: 1, ret: -1, args: [P.bool, P.String]}]));
          t1.DomServiceWebdriverTestability$_$1(_domService);
          return t1;
        }
      }
    },
    DomServiceWebdriverTestability$__closure: {
      "^": "Closure:1;$this",
      call$1: [function(_) {
        this.$this._runCallbacksIfStable$0();
        return;
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["events", "package:angular_components/utils/browser/events/events.dart",, Z, {
    "^": "",
    isSpaceKey: function($event) {
      var t1 = $event.keyCode;
      return t1 !== 0 ? t1 === 32 : $event.key === " ";
    },
    triggersOutside: function(element) {
      var t1 = {};
      t1.element = element;
      return Z.triggersOutsideAny(new Z.triggersOutside_closure(t1));
    },
    triggersOutsideAny: function(checkNodeInside) {
      var t1, t2, controller;
      t1 = {};
      H.functionTypeCheck(checkNodeInside, {func: 1, ret: P.bool, args: [W.Node]});
      t1.controller = null;
      t1.clickListener = null;
      t1.mouseDownListener = null;
      t1.mouseUpListener = null;
      t1.listener = null;
      if ($.enableNewTriggerLogic == null)
        $.enableNewTriggerLogic = false;
      t2 = W.Event;
      controller = new P._SyncBroadcastStreamController(new Z.triggersOutsideAny_closure(t1, checkNodeInside), new Z.triggersOutsideAny_closure0(t1), 0, [t2]);
      t1.controller = controller;
      return new P._BroadcastStream(controller, [t2]);
    },
    closestWithClass: function(target, className) {
      for (; target != null;) {
        if (J._hasAttribute$1$x(target, "class") && J.get$classes$x(target).contains$1(0, className))
          return target;
        target = target.parentElement;
      }
      return;
    },
    isParentOf: function(element, node) {
      for (; node != null;)
        if (node === element)
          return true;
        else
          node = node.parentElement;
      return false;
    },
    triggersOutside_closure: {
      "^": "Closure:71;_box_0",
      call$1: function(node) {
        return false;
      }
    },
    triggersOutsideAny_closure: {
      "^": "Closure:0;_box_1,checkNodeInside",
      call$0: function() {
        var t1, t2, t3, t4, t5;
        t1 = {};
        t1.lastEvent = null;
        t1.lastDownEvent = null;
        t2 = this._box_1;
        t2.listener = new Z.triggersOutsideAny__closure(t1, t2, this.checkNodeInside);
        if ($.enableNewTriggerLogic) {
          t3 = W.MouseEvent;
          t2.mouseDownListener = W._EventStreamSubscription$(document, "mousedown", H.functionTypeCheck(new Z.triggersOutsideAny__closure0(t1), {func: 1, ret: -1, args: [t3]}), false, t3);
        }
        t3 = document;
        t4 = W.MouseEvent;
        t5 = {func: 1, ret: -1, args: [t4]};
        t2.mouseUpListener = W._EventStreamSubscription$(t3, "mouseup", H.functionTypeCheck(new Z.triggersOutsideAny__closure1(t1, t2), t5), false, t4);
        t2.clickListener = W._EventStreamSubscription$(t3, "click", H.functionTypeCheck(new Z.triggersOutsideAny__closure2(t1, t2), t5), false, t4);
        C.HtmlDocument_methods.addEventListener$3(t3, "focus", t2.listener, true);
        C.HtmlDocument_methods.addEventListener$2(t3, "touchend", t2.listener);
      }
    },
    triggersOutsideAny__closure: {
      "^": "Closure:13;_box_0,_box_1,checkNodeInside",
      call$1: [function(e) {
        var node, t1;
        H.interceptedTypeCheck(e, "$isEvent");
        this._box_0.lastEvent = e;
        node = H.interceptedTypeCast(J.get$target$x(e), "$isNode");
        for (t1 = this.checkNodeInside; node != null;)
          if (t1.call$1(node))
            return;
          else
            node = node.parentElement;
        this._box_1.controller.add$1(0, e);
      }, null, null, 4, 0, null, 8, "call"]
    },
    triggersOutsideAny__closure0: {
      "^": "Closure:24;_box_0",
      call$1: function(e) {
        this._box_0.lastDownEvent = H.interceptedTypeCheck(e, "$isMouseEvent");
      }
    },
    triggersOutsideAny__closure1: {
      "^": "Closure:24;_box_0,_box_1",
      call$1: function(e) {
        var t1, t2, t3;
        H.interceptedTypeCheck(e, "$isMouseEvent");
        t1 = this._box_0;
        t2 = t1.lastDownEvent;
        if (t2 != null) {
          t3 = W._convertNativeToDart_EventTarget(e.target);
          t2 = W._convertNativeToDart_EventTarget(t2.target);
          t2 = t3 == null ? t2 == null : t3 === t2;
        } else
          t2 = true;
        if (t2)
          this._box_1.listener.call$1(e);
        t1.lastEvent = e;
      }
    },
    triggersOutsideAny__closure2: {
      "^": "Closure:24;_box_0,_box_1",
      call$1: function(e) {
        var t1, t2, t3, t4;
        H.interceptedTypeCheck(e, "$isMouseEvent");
        t1 = this._box_0;
        t2 = t1.lastEvent;
        t3 = t2 == null;
        if ((t3 ? null : t2.type) === "mouseup") {
          t4 = W._convertNativeToDart_EventTarget(e.target);
          t2 = t4 == null ? (t3 ? null : J.get$target$x(t2)) == null : t4 === (t3 ? null : J.get$target$x(t2));
        } else
          t2 = false;
        if (t2)
          return;
        t2 = t1.lastDownEvent;
        if (t2 != null) {
          t3 = W._convertNativeToDart_EventTarget(e.target);
          t2 = W._convertNativeToDart_EventTarget(t2.target);
          t2 = t3 == null ? t2 == null : t3 === t2;
        } else
          t2 = true;
        if (t2)
          this._box_1.listener.call$1(e);
        t1.lastDownEvent = null;
      }
    },
    triggersOutsideAny_closure0: {
      "^": "Closure:0;_box_1",
      call$0: function() {
        var t1, t2;
        t1 = this._box_1;
        t1.clickListener.cancel$0(0);
        t1.clickListener = null;
        t2 = t1.mouseDownListener;
        if (!(t2 == null))
          t2.cancel$0(0);
        t1.mouseDownListener = null;
        t1.mouseUpListener.cancel$0(0);
        t1.mouseUpListener = null;
        t2 = document;
        C.HtmlDocument_methods.removeEventListener$3(t2, "focus", t1.listener, true);
        C.HtmlDocument_methods.removeEventListener$2(t2, "touchend", t1.listener);
      }
    }
  }], ["", "package:angular_components/utils/browser/feature_detector/feature_detector.dart",, S, {}], ["", "package:angular_components/utils/disposer/disposable_callback.dart",, X, {
    "^": "",
    DisposableCallbackBase: {
      "^": "Object;",
      dispose$0: function() {
        this._disposable_callback$_callback = null;
      },
      $isDisposable: 1
    },
    DisposableCallback: {
      "^": "DisposableCallbackBase;0_disposable_callback$_callback",
      call$0: [function() {
        var t1 = this._disposable_callback$_callback;
        if (t1 != null)
          t1.call$0();
      }, "call$0", "get$$call", 0, 0, 46]
    }
  }], ["", "package:angular_components/utils/disposer/disposer.dart",, R, {
    "^": "",
    Disposable: {
      "^": "Object;"
    },
    _NoopDisposable: {
      "^": "Object;",
      dispose$0: function() {
      },
      $isDisposable: 1
    },
    Disposer: {
      "^": "Object;0_disposeFunctions,0_disposeSubs,0_disposeSinks,0_disposeDisposables,_oneShot,_disposeCalled",
      set$_disposeFunctions: function(_disposeFunctions) {
        this._disposeFunctions = H.assertSubtype(_disposeFunctions, "$isList", [{func: 1, ret: -1}], "$asList");
      },
      set$_disposeSubs: function(_disposeSubs) {
        this._disposeSubs = H.assertSubtype(_disposeSubs, "$isList", [[P.StreamSubscription,,]], "$asList");
      },
      set$_disposeSinks: function(_disposeSinks) {
        this._disposeSinks = H.assertSubtype(_disposeSinks, "$isList", [[P.EventSink,,]], "$asList");
      },
      set$_disposeDisposables: function(_disposeDisposables) {
        this._disposeDisposables = H.assertSubtype(_disposeDisposables, "$isList", [R.Disposable], "$asList");
      },
      addDisposable$1$1: function(disposable, $T) {
        var t1;
        H.assertSubtypeOfRuntimeType(disposable, $T);
        if (!!J.getInterceptor$(disposable).$isDisposable) {
          if (this._disposeDisposables == null)
            this.set$_disposeDisposables(H.setRuntimeTypeInfo([], [R.Disposable]));
          t1 = this._disposeDisposables;
          (t1 && C.JSArray_methods).add$1(t1, disposable);
        } else if (H.functionTypeTest(disposable, {func: 1, ret: -1}))
          this.addFunction$1(disposable);
        else
          throw H.wrapException(P.ArgumentError$value(disposable, "disposable", null));
        return disposable;
      },
      addStreamSubscription$1$1: function(disposable, $T) {
        var t1;
        H.assertSubtype(disposable, "$isStreamSubscription", [$T], "$asStreamSubscription");
        if (this._disposeSubs == null)
          this.set$_disposeSubs(H.setRuntimeTypeInfo([], [[P.StreamSubscription,,]]));
        t1 = this._disposeSubs;
        (t1 && C.JSArray_methods).add$1(t1, disposable);
        return disposable;
      },
      addFunction$1: function(disposable) {
        var t1 = {func: 1, ret: -1};
        H.functionTypeCheck(disposable, t1);
        if (this._disposeFunctions == null)
          this.set$_disposeFunctions(H.setRuntimeTypeInfo([], [t1]));
        t1 = this._disposeFunctions;
        (t1 && C.JSArray_methods).add$1(t1, disposable);
        return disposable;
      },
      dispose$0: function() {
        var t1, len, i;
        t1 = this._disposeSubs;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeSubs;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].cancel$0(0);
          }
          this.set$_disposeSubs(null);
        }
        t1 = this._disposeSinks;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeSinks;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].close$0(0);
          }
          this.set$_disposeSinks(null);
        }
        t1 = this._disposeDisposables;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeDisposables;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].dispose$0();
          }
          this.set$_disposeDisposables(null);
        }
        t1 = this._disposeFunctions;
        if (t1 != null) {
          len = t1.length;
          for (i = 0; i < len; ++i) {
            t1 = this._disposeFunctions;
            if (i >= t1.length)
              return H.ioore(t1, i);
            t1[i].call$0();
          }
          this.set$_disposeFunctions(null);
        }
        this._disposeCalled = true;
      },
      $isDisposable: 1
    }
  }], ["", "package:angular_components/utils/id_generator/id_generator.dart",, R, {
    "^": "",
    IdGenerator: {
      "^": "Object;"
    },
    SequentialIdGenerator: {
      "^": "Object;_prefix,_seq",
      nextId$0: function() {
        return this._prefix + "--" + this._seq++;
      },
      $isIdGenerator: 1,
      static: {
        SequentialIdGenerator$fromUUID: function() {
          return new R.SequentialIdGenerator(R.SequentialIdGenerator__createUuid(), 0);
        },
        SequentialIdGenerator__createUuid: function() {
          var bytes, t1, t2, chars;
          bytes = P.List_List$generate(16, new R.SequentialIdGenerator__createUuid_closure(), true, P.int);
          if (6 >= bytes.length)
            return H.ioore(bytes, 6);
          C.JSArray_methods.$indexSet(bytes, 6, J.$or$n(J.$and$bn(bytes[6], 15), 64));
          if (8 >= bytes.length)
            return H.ioore(bytes, 8);
          C.JSArray_methods.$indexSet(bytes, 8, J.$or$n(J.$and$bn(bytes[8], 63), 128));
          t1 = P.String;
          t2 = H.getTypeArgumentByIndex(bytes, 0);
          chars = new H.MappedListIterable(bytes, H.functionTypeCheck(new R.SequentialIdGenerator__createUuid_closure0(), {func: 1, ret: t1, args: [t2]}), [t2, t1]).join$0(0).toUpperCase();
          return C.JSString_methods.substring$2(chars, 0, 8) + "-" + C.JSString_methods.substring$2(chars, 8, 12) + "-" + C.JSString_methods.substring$2(chars, 12, 16) + "-" + C.JSString_methods.substring$2(chars, 16, 20) + "-" + C.JSString_methods.substring$2(chars, 20, 32);
        }
      }
    },
    SequentialIdGenerator__createUuid_closure: {
      "^": "Closure:162;",
      call$1: function(_) {
        return $.$get$SequentialIdGenerator__rnd().nextInt$1(256);
      }
    },
    SequentialIdGenerator__createUuid_closure0: {
      "^": "Closure:15;",
      call$1: [function(b) {
        return C.JSString_methods.padLeft$2(J.toRadixString$1$n(H.intTypeCheck(b), 16), 2, "0");
      }, null, null, 4, 0, null, 25, "call"]
    }
  }], ["", "package:angular_components/utils/rate_limit_utils/rate_limit_utils.dart",, R, {
    "^": "",
    throttleGuaranteeLast: [function(delegate, interval, $T) {
      return R._throttle(H.functionTypeCheck(delegate, {func: 1, args: [$T]}), interval, true, $T);
    }, function(delegate, interval) {
      return R.throttleGuaranteeLast(delegate, interval, null);
    }, "call$1$2", "call$2", "rate_limit_utils__throttleGuaranteeLast$closure", 8, 0, 240],
    _throttle: function(delegate, interval, guaranteeLast, $T) {
      var t1, $self;
      t1 = {};
      H.functionTypeCheck(delegate, {func: 1, args: [$T]});
      t1.onCooldown = false;
      t1.hasLastArg = false;
      t1.lastArg = null;
      t1.self = null;
      $self = new R._throttle_closure(t1, interval, delegate, guaranteeLast, $T);
      t1.self = $self;
      return $self;
    },
    _throttle_closure: {
      "^": "Closure;_box_0,interval,delegate,guaranteeLast,T",
      call$1: [function(argument) {
        var t1, t2;
        t1 = this.T;
        H.assertSubtypeOfRuntimeType(argument, t1);
        t2 = this._box_0;
        if (!t2.onCooldown) {
          t2.onCooldown = true;
          P.Timer_Timer(this.interval, new R._throttle__closure(t2, t1));
          this.delegate.call$1(argument);
        } else if (this.guaranteeLast) {
          t2.lastArg = argument;
          t2.hasLastArg = true;
        }
      }, null, null, 4, 0, null, 77, "call"],
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T]};
      }
    },
    _throttle__closure: {
      "^": "Closure:0;_box_0,T",
      call$0: [function() {
        var t1 = this._box_0;
        t1.onCooldown = false;
        if (t1.hasLastArg) {
          t1.self.call$1(H.assertSubtypeOfRuntimeType(t1.lastArg, this.T));
          t1.hasLastArg = false;
        }
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_forms/src/directives/abstract_control_directive.dart",, G, {
    "^": "",
    AbstractControlDirective: {
      "^": "Object;0name>,$ti",
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      },
      get$enabled: function(_) {
        var t1 = this._control;
        return t1 == null ? null : t1._status !== "DISABLED";
      },
      get$path: function(_) {
        return;
      }
    }
  }], ["", "package:angular_forms/src/directives/control_value_accessor.dart",, L, {
    "^": "",
    ControlValueAccessor: {
      "^": "Object;"
    },
    TouchHandler: {
      "^": "Object;TouchHandler_onTouched",
      set$onTouched: function(onTouched) {
        this.TouchHandler_onTouched = H.functionTypeCheck(onTouched, {func: 1});
      },
      registerOnTouched$1: function(fn) {
        this.set$onTouched(H.functionTypeCheck(fn, {func: 1}));
      }
    },
    TouchHandler_closure: {
      "^": "Closure:0;",
      call$0: function() {
      }
    },
    ChangeHandler: {
      "^": "Object;ChangeHandler_onChange,$ti",
      set$onChange: function(_, onChange) {
        this.ChangeHandler_onChange = H.functionTypeCheck(onChange, {func: 1, args: [H.getRuntimeTypeArgument(this, "ChangeHandler", 0)], named: {rawValue: P.String}});
      },
      registerOnChange$1: function(fn) {
        this.set$onChange(0, H.functionTypeCheck(fn, {func: 1, args: [H.getRuntimeTypeArgument(this, "ChangeHandler", 0)], named: {rawValue: P.String}}));
      }
    },
    ChangeHandler_closure: {
      "^": "Closure;T",
      call$2$rawValue: function(_, rawValue) {
        H.assertSubtypeOfRuntimeType(_, this.T);
      },
      call$1: function(_) {
        return this.call$2$rawValue(_, null);
      },
      $signature: function() {
        return {func: 1, ret: P.Null, args: [this.T], named: {rawValue: P.String}};
      }
    }
  }], ["", "package:angular_forms/src/directives/default_value_accessor.dart",, O, {
    "^": "",
    DefaultValueAccessor: {
      "^": "_DefaultValueAccessor_Object_TouchHandler_ChangeHandler;_default_value_accessor$_element,ChangeHandler_onChange,TouchHandler_onTouched",
      writeValue$1: function(_, value) {
        var normalizedValue = value == null ? "" : value;
        this._default_value_accessor$_element.value = normalizedValue;
      },
      onDisabledChanged$1: [function(isDisabled) {
        this._default_value_accessor$_element.disabled = H.boolTypeCheck(isDisabled);
      }, "call$1", "get$onDisabledChanged", 4, 0, 21, 24],
      $isControlValueAccessor: 1,
      $asControlValueAccessor: Isolate.functionThatReturnsNull,
      $asChangeHandler: function() {
        return [P.String];
      }
    },
    _DefaultValueAccessor_Object_TouchHandler: {
      "^": "Object+TouchHandler;TouchHandler_onTouched",
      set$onTouched: function(onTouched) {
        this.TouchHandler_onTouched = H.functionTypeCheck(onTouched, {func: 1});
      }
    },
    _DefaultValueAccessor_Object_TouchHandler_ChangeHandler: {
      "^": "_DefaultValueAccessor_Object_TouchHandler+ChangeHandler;ChangeHandler_onChange",
      set$onChange: function(_, onChange) {
        this.ChangeHandler_onChange = H.functionTypeCheck(onChange, {func: 1, args: [H.getRuntimeTypeArgument(this, "ChangeHandler", 0)], named: {rawValue: P.String}});
      }
    }
  }], ["", "package:angular_forms/src/directives/ng_control.dart",, T, {
    "^": "",
    NgControl: {
      "^": "AbstractControlDirective;",
      $asAbstractControlDirective: function() {
        return [[Z.Control,,]];
      }
    }
  }], ["", "package:angular_forms/src/directives/ng_model.dart",, U, {
    "^": "",
    NgModel: {
      "^": "_NgModel_NgControl_ComponentState;0_control,0_update,0_model,_modelChanged,0viewModel,ComponentState__stateChangeCallback,valueAccessor,validator,0name",
      set$model: function(value) {
        var t1 = this._model;
        if (t1 == null ? value == null : t1 === value)
          return;
        this._model = value;
        t1 = this.viewModel;
        if (value == null ? t1 == null : value === t1)
          return;
        this._modelChanged = true;
      },
      _init$1: function(valueAccessors) {
        var t1;
        H.assertSubtype(valueAccessors, "$isList", [[L.ControlValueAccessor,,]], "$asList");
        t1 = new Z.Control(null, null, new P._AsyncBroadcastStreamController(null, null, 0, [null]), new P._AsyncBroadcastStreamController(null, null, 0, [P.String]), new P._AsyncBroadcastStreamController(null, null, 0, [P.bool]), true, false, [null]);
        t1.updateValueAndValidity$2$emitEvent$onlySelf(false, true);
        this._control = t1;
        this._update = new P._SyncBroadcastStreamController(null, null, 0, [null]);
      },
      ngAfterChanges$0: function() {
        if (this._modelChanged) {
          this._control.updateValue$1(this._model);
          H.functionTypeCheck(new U.NgModel_ngAfterChanges_closure(this), {func: 1, ret: -1}).call$0();
          this._modelChanged = false;
        }
      },
      ngOnInit$0: function() {
        X.setUpControl(this._control, this);
        this._control.updateValueAndValidity$1$emitEvent(false);
      },
      get$path: function(_) {
        return H.setRuntimeTypeInfo([], [P.String]);
      },
      static: {
        NgModel$: function(validators, valueAccessors) {
          var t1, t2, t3;
          t1 = X.selectValueAccessor(valueAccessors);
          if (validators != null) {
            t2 = {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]};
            t3 = H.getTypeArgumentByIndex(validators, 0);
            t2 = B.Validators_compose(new H.MappedListIterable(validators, H.functionTypeCheck(D.normalize_validator__normalizeValidator$closure(), {func: 1, ret: t2, args: [t3]}), [t3, t2]).toList$0(0));
          } else
            t2 = null;
          t2 = new U.NgModel(false, null, t1, t2);
          t2._init$1(valueAccessors);
          return t2;
        }
      }
    },
    NgModel_ngAfterChanges_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        var t1 = this.$this;
        t1.viewModel = t1._model;
      }
    },
    _NgModel_NgControl_ComponentState: {
      "^": "NgControl+ComponentState;"
    }
  }], ["", "package:angular_forms/src/directives/normalize_validator.dart",, D, {
    "^": "",
    normalizeValidator: [function(validator) {
      var t1, t2;
      t1 = J.getInterceptor$(validator);
      if (!!t1.$isValidator)
        return new D.normalizeValidator_closure(validator);
      else {
        t2 = {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]};
        if (!!t1.$isFunction)
          return H.functionTypeCast(validator, t2);
        else
          return H.functionTypeCast(validator.get$$call(), t2);
      }
    }, "call$1", "normalize_validator__normalizeValidator$closure", 4, 0, 241, 78],
    normalizeValidator_closure: {
      "^": "Closure:35;validator",
      call$1: [function(c) {
        return this.validator.validate$1(H.interceptedTypeCheck(c, "$isAbstractControl"));
      }, null, null, 4, 0, null, 79, "call"]
    }
  }], ["", "package:angular_forms/src/directives/shared.dart",, X, {
    "^": "",
    setUpControl: function(control, dir) {
      var t1, t2;
      if (control == null)
        X._throwError(dir, "Cannot find control");
      control.set$validator(B.Validators_compose(H.setRuntimeTypeInfo([control.validator, dir.validator], [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}])));
      dir.valueAccessor.writeValue$1(0, control._model$_value);
      dir.valueAccessor.registerOnChange$1(new X.setUpControl_closure(dir, control));
      control._onChange = new X.setUpControl_closure0(dir);
      t1 = control._disabledChanges;
      t2 = dir.valueAccessor;
      t2 = t2 == null ? null : t2.get$onDisabledChanged();
      new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(t2);
      dir.valueAccessor.registerOnTouched$1(new X.setUpControl_closure1(control));
    },
    _throwError: function(dir, message) {
      var t1;
      H.assertSubtype(dir, "$isAbstractControlDirective", [[Z.AbstractControl,,]], "$asAbstractControlDirective");
      if ((dir == null ? null : H.setRuntimeTypeInfo([], [P.String])) != null) {
        t1 = message + " (";
        dir.toString;
        message = t1 + C.JSArray_methods.join$1(H.setRuntimeTypeInfo([], [P.String]), " -> ") + ")";
      }
      throw H.wrapException(P.ArgumentError$(message));
    },
    selectValueAccessor: function(valueAccessors) {
      var t1, defaultAccessor, builtinAccessor, customAccessor, _i, v;
      H.assertSubtype(valueAccessors, "$isList", [[L.ControlValueAccessor,,]], "$asList");
      if (valueAccessors == null)
        return;
      for (t1 = valueAccessors.length, defaultAccessor = null, builtinAccessor = null, customAccessor = null, _i = 0; _i < valueAccessors.length; valueAccessors.length === t1 || (0, H.throwConcurrentModificationError)(valueAccessors), ++_i) {
        v = valueAccessors[_i];
        if (v instanceof O.DefaultValueAccessor)
          defaultAccessor = v;
        else {
          if (customAccessor != null)
            X._throwError(null, "More than one custom value accessor matches");
          customAccessor = v;
        }
      }
      if (customAccessor != null)
        return customAccessor;
      if (defaultAccessor != null)
        return defaultAccessor;
      X._throwError(null, "No valid value accessor for");
    },
    setUpControl_closure: {
      "^": "Closure:163;dir,control",
      call$2$rawValue: function(newValue, rawValue) {
        var t1 = this.dir;
        t1.viewModel = newValue;
        t1._update.add$1(0, newValue);
        t1 = this.control;
        t1.updateValue$3$emitModelToViewChange$rawValue(newValue, false, rawValue);
        t1._model$_pristine = false;
      },
      call$1: function(newValue) {
        return this.call$2$rawValue(newValue, null);
      }
    },
    setUpControl_closure0: {
      "^": "Closure:1;dir",
      call$1: function(newValue) {
        var t1 = this.dir.valueAccessor;
        return t1 == null ? null : t1.writeValue$1(0, newValue);
      }
    },
    setUpControl_closure1: {
      "^": "Closure:2;control",
      call$0: function() {
        var t1 = this.control;
        t1._touched = true;
        t1._model$_parent;
        return;
      }
    }
  }], ["", "package:angular_forms/src/model.dart",, Z, {
    "^": "",
    AbstractControl: {
      "^": "Object;validator,_model$_value,0_errors,$ti",
      set$validator: function(validator) {
        this.validator = H.functionTypeCheck(validator, {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]});
      },
      set$_model$_value: function(_value) {
        this._model$_value = H.assertSubtypeOfRuntimeType(_value, H.getTypeArgumentByIndex(this, 0));
      },
      set$_errors: function(_errors) {
        this._errors = H.assertSubtype(_errors, "$isMap", [P.String, null], "$asMap");
      },
      get$disabled: function(_) {
        return this._status === "DISABLED";
      },
      get$enabled: function(_) {
        return this._status !== "DISABLED";
      },
      updateValueAndValidity$2$emitEvent$onlySelf: function(emitEvent, onlySelf) {
        var t1;
        if (emitEvent == null)
          emitEvent = true;
        t1 = this.validator;
        this.set$_errors(t1 != null ? t1.call$1(this) : null);
        this._status = this._calculateStatus$0();
        if (emitEvent) {
          this._valueChanges.add$1(0, this._model$_value);
          this._statusChanges.add$1(0, this._status);
        }
      },
      updateValueAndValidity$1$emitEvent: function(emitEvent) {
        return this.updateValueAndValidity$2$emitEvent$onlySelf(emitEvent, null);
      },
      _calculateStatus$0: function() {
        if (this._status === "DISABLED")
          return "DISABLED";
        if (this._errors != null)
          return "INVALID";
        this._anyControlsHaveStatus$1("PENDING");
        this._anyControlsHaveStatus$1("INVALID");
        return "VALID";
      },
      _anyControlsHaveStatus$1: function($status) {
        H.functionTypeCheck(new Z.AbstractControl__anyControlsHaveStatus_closure($status), {func: 1, ret: P.bool, args: [[Z.AbstractControl,,]]});
        return false;
      }
    },
    AbstractControl__anyControlsHaveStatus_closure: {
      "^": "Closure:164;status",
      call$1: function(c) {
        c.get$status(c);
        return false;
      }
    },
    Control: {
      "^": "AbstractControl;0_onChange,0_rawValue,validator,_model$_value,_valueChanges,_statusChanges,_disabledChanges,0_status,0_errors,_model$_pristine,_touched,0_model$_parent,$ti",
      updateValue$5$emitEvent$emitModelToViewChange$onlySelf$rawValue: function(value, emitEvent, emitModelToViewChange, onlySelf, rawValue) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        if (emitModelToViewChange == null)
          emitModelToViewChange = true;
        this.set$_model$_value(value);
        this._rawValue = rawValue;
        t1 = this._onChange;
        if (t1 != null && emitModelToViewChange)
          t1.call$1(this._model$_value);
        this.updateValueAndValidity$2$emitEvent$onlySelf(emitEvent, onlySelf);
      },
      updateValue$3$emitModelToViewChange$rawValue: function(value, emitModelToViewChange, rawValue) {
        return this.updateValue$5$emitEvent$emitModelToViewChange$onlySelf$rawValue(value, null, emitModelToViewChange, null, rawValue);
      },
      updateValue$1: function(value) {
        return this.updateValue$5$emitEvent$emitModelToViewChange$onlySelf$rawValue(value, null, null, null, null);
      }
    }
  }], ["", "package:angular_forms/src/validators.dart",, B, {
    "^": "",
    Validators_compose: function(validators) {
      var t1, presentValidators;
      t1 = {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]};
      H.assertSubtype(validators, "$isList", [t1], "$asList");
      presentValidators = B.Validators__removeNullValidators(validators, t1);
      if (presentValidators.length === 0)
        return;
      return new B.Validators_compose_closure(presentValidators);
    },
    Validators__removeNullValidators: function(validators, $T) {
      var result, len, i, validator;
      H.assertSubtype(validators, "$isList", [$T], "$asList");
      result = H.setRuntimeTypeInfo([], [$T]);
      for (len = validators.length, i = 0; i < len; ++i) {
        if (i >= validators.length)
          return H.ioore(validators, i);
        validator = validators[i];
        if (validator != null)
          C.JSArray_methods.add$1(result, validator);
      }
      return result;
    },
    _executeValidators: function(control, validators) {
      var result, len, i, localResult;
      H.assertSubtype(validators, "$isList", [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}], "$asList");
      result = new H.JsLinkedHashMap(0, 0, [P.String, null]);
      for (len = validators.length, i = 0; i < len; ++i) {
        if (i >= validators.length)
          return H.ioore(validators, i);
        localResult = validators[i].call$1(control);
        if (localResult != null)
          result.addAll$1(0, localResult);
      }
      return result.get$isEmpty(result) ? null : result;
    },
    Validators_compose_closure: {
      "^": "Closure:35;presentValidators",
      call$1: [function(control) {
        return B._executeValidators(H.interceptedTypeCheck(control, "$isAbstractControl"), this.presentValidators);
      }, null, null, 4, 0, null, 35, "call"]
    }
  }], ["", "package:angular_router/src/directives/router_link_directive.dart",, G, {
    "^": "",
    RouterLink: {
      "^": "Object;_router_link_directive$_router,_router_link_directive$_location,_router_link_directive$_target,0_keyPressSubscription,0_routerLink,0_cachedVisibleHref,0_cachedUrl",
      set$_keyPressSubscription: function(_keyPressSubscription) {
        this._keyPressSubscription = H.assertSubtype(_keyPressSubscription, "$isStreamSubscription", [W.KeyboardEvent], "$asStreamSubscription");
      },
      get$url: function(_) {
        var t1, parsedUrl;
        t1 = this._cachedUrl;
        if (t1 == null) {
          parsedUrl = F.Url_parse(this._routerLink);
          t1 = F.Url$(this._router_link_directive$_location.normalizePath$1(parsedUrl.path), parsedUrl.fragment, parsedUrl.queryParameters);
          this._cachedUrl = t1;
        }
        return t1;
      },
      onClick$1: [function(_, $event) {
        H.interceptedTypeCheck($event, "$isMouseEvent");
        if ($event.ctrlKey || $event.metaKey)
          return;
        this._router_link_directive$_trigger$1($event);
      }, "call$1", "get$onClick", 5, 0, 18],
      _onKeyPress$1: [function($event) {
        H.interceptedTypeCheck($event, "$isKeyboardEvent");
        if ($event.keyCode !== 13 || $event.ctrlKey || $event.metaKey)
          return;
        this._router_link_directive$_trigger$1($event);
      }, "call$1", "get$_onKeyPress", 4, 0, 16],
      _router_link_directive$_trigger$1: function($event) {
        var t1, t2;
        $event.preventDefault();
        t1 = this.get$url(this).path;
        t2 = this.get$url(this).queryParameters;
        this._router_link_directive$_router.navigate$2(0, t1, Q.NavigationParams$(this.get$url(this).fragment, t2, false, false, true));
      },
      static: {
        RouterLink$: function(_router, _location, _target, element) {
          var t1, t2;
          t1 = new G.RouterLink(_router, _location, _target);
          if (!J.getInterceptor$(element).$isAnchorElement) {
            element.toString;
            t2 = W.KeyboardEvent;
            t1.set$_keyPressSubscription(W._EventStreamSubscription$(element, "keypress", H.functionTypeCheck(t1.get$_onKeyPress(), {func: 1, ret: -1, args: [t2]}), false, t2));
          }
          return t1;
        }
      }
    }
  }], ["", "package:angular_router/src/directives/router_link_directive.template.dart",, G, {
    "^": "",
    RouterLinkNgCd: {
      "^": "DirectiveChangeDetector;instance,0_router_link_directive_template$_expr_0,0directive,0view,0el,_hasHostChanges"
    }
  }], ["", "package:angular_router/src/directives/router_outlet_directive.dart",, Z, {
    "^": "",
    RouterOutlet: {
      "^": "Object;_viewContainerRef,_router_outlet_directive$_router,_router_outlet_directive$_routerHook,_loadedComponents,0_activeComponentFactory,_routes",
      set$_routes: function(_routes) {
        this._routes = H.assertSubtype(_routes, "$isList", [N.RouteDefinition], "$asList");
      },
      set$routes: function(routes) {
        H.assertSubtype(routes, "$isList", [N.RouteDefinition], "$asList");
        this.set$_routes(routes);
      },
      get$routes: function() {
        var t1 = this._routes;
        return t1;
      },
      ngOnDestroy$0: function() {
        for (var t1 = this._loadedComponents, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1); t1.moveNext$0();)
          t1.get$current(t1)._parentView.detachAndDestroy$0();
        this._viewContainerRef.clear$0(0);
        t1 = this._router_outlet_directive$_router;
        if (t1._rootOutlet === this) {
          t1._rootOutlet = null;
          t1._activeState = null;
        }
      },
      prepare$1: function(componentFactory) {
        return this._loadedComponents.putIfAbsent$2(0, componentFactory, new Z.RouterOutlet_prepare_closure(this, componentFactory));
      },
      activate$3: function(componentFactory, oldState, newState) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.Null),
          $async$returnValue, $async$self = this, t1, t2, i, nested, index;
        var $async$activate$3 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._loadedComponents;
                t2 = t1.$index(0, $async$self._activeComponentFactory);
                $async$goto = t2 != null ? 3 : 4;
                break;
              case 3:
                // then
                $async$self._shouldReuse$3(t2._component, oldState, newState);
                $async$goto = 5;
                return P._asyncAwait(false, $async$activate$3);
              case 5:
                // returning from await.
                if ($async$result) {
                  t1 = $async$self._activeComponentFactory;
                  if (t1 == null ? componentFactory == null : t1 === componentFactory) {
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  for (t1 = $async$self._viewContainerRef, i = t1.get$length(t1) - 1; i >= 0; --i) {
                    if (i === -1) {
                      nested = t1.nestedViews;
                      index = (nested == null ? 0 : nested.length) - 1;
                    } else
                      index = i;
                    t1.detachView$1(index).viewData.ref;
                  }
                } else {
                  t1.remove$1(0, $async$self._activeComponentFactory);
                  t2._parentView.detachAndDestroy$0();
                  $async$self._viewContainerRef.clear$0(0);
                }
              case 4:
                // join
                $async$self._activeComponentFactory = componentFactory;
                t1 = $async$self.prepare$1(componentFactory)._parentView;
                $async$self._viewContainerRef.insert$1(0, t1.viewData.ref);
                t1.viewData.ref.appView.detectChanges$0();
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$activate$3, $async$completer);
      },
      _shouldReuse$3: function(instance, oldState, newState) {
        return false;
      },
      static: {
        RouterOutlet$: function(token, _viewContainerRef, _router, _routerHook) {
          var t1 = new Z.RouterOutlet(_viewContainerRef, _router, _routerHook, P.LinkedHashMap_LinkedHashMap$_empty([D.ComponentFactory,,], [D.ComponentRef,,]), C.List_empty2);
          if (!(token == null))
            token.routerOutlet = t1;
          return t1;
        }
      }
    },
    RouterOutlet_prepare_closure: {
      "^": "Closure:165;$this,componentFactory",
      call$0: function() {
        var t1, t2, t3, componentRef;
        t1 = P.Object;
        t1 = P.LinkedHashMap_LinkedHashMap$_literal([C.Type_RouterOutletToken_Wv6, new S.RouterOutletToken()], t1, t1);
        t2 = this.$this._viewContainerRef;
        t3 = t2.parentView;
        t2 = t2.index;
        componentRef = this.componentFactory.create$1(0, new A.MapInjector(t1, new G.ElementInjector(t3, t2, C.EmptyInjector_null)));
        componentRef._parentView.viewData.ref.appView.detectChanges$0();
        return componentRef;
      }
    }
  }], ["", "package:angular_router/src/location/base_href.dart",, O, {
    "^": "",
    baseHrefFromDOM: [function() {
      var href, t1, e, pathname;
      href = O._getBaseElementHref();
      if (href == null)
        return;
      t1 = $._urlParsingNode;
      if (t1 == null) {
        e = document.createElement("a");
        $._urlParsingNode = e;
        t1 = e;
      }
      t1.href = href;
      pathname = t1.pathname;
      t1 = pathname.length;
      if (t1 !== 0) {
        if (0 >= t1)
          return H.ioore(pathname, 0);
        t1 = pathname[0] === "/";
      } else
        t1 = true;
      return t1 ? pathname : "/" + H.S(pathname);
    }, "call$0", "base_href__baseHrefFromDOM$closure", 0, 0, 7],
    _getBaseElementHref: function() {
      var t1 = $._baseElement;
      if (t1 == null) {
        t1 = C.HtmlDocument_methods.querySelector$1(document, "base");
        $._baseElement = t1;
        if (t1 == null)
          return;
      }
      return J.getAttribute$1$x(t1, "href");
    }
  }], ["", "package:angular_router/src/location/browser_platform_location.dart",, M, {
    "^": "",
    BrowserPlatformLocation: {
      "^": "PlatformLocation;0_location,0_history"
    }
  }], ["", "package:angular_router/src/location/hash_location_strategy.dart",, O, {
    "^": "",
    HashLocationStrategy: {
      "^": "LocationStrategy;_platformLocation,_baseHref",
      path$0: [function(_) {
        var path = this._platformLocation._location.hash;
        if (path == null)
          path = "";
        return path.length === 0 ? path : C.JSString_methods.substring$1(path, 1);
      }, "call$0", "get$path", 1, 0, 7],
      prepareExternalUrl$1: function(internal) {
        var url, t1;
        url = V.Location_joinWithSlash(this._baseHref, internal);
        if (url.length === 0) {
          t1 = this._platformLocation;
          t1 = H.S(t1._location.pathname) + H.S(t1._location.search);
        } else
          t1 = "#" + H.S(url);
        return t1;
      },
      replaceState$4: function(_, state, title, path, queryParams) {
        var url, t1;
        url = this.prepareExternalUrl$1(path + (queryParams.length === 0 || C.JSString_methods.startsWith$1(queryParams, "?") ? queryParams : "?" + queryParams));
        t1 = this._platformLocation._history;
        t1.toString;
        (t1 && C.History_methods)._replaceState_1$3(t1, new P._StructuredCloneDart2Js([], []).walk$1(state), title, url);
      }
    }
  }], ["", "package:angular_router/src/location/location.dart",, V, {
    "^": "",
    _stripBaseHref: function(baseHref, url) {
      var t1 = baseHref.length;
      if (t1 !== 0 && J.startsWith$1$s(url, baseHref))
        return J.substring$1$s(url, t1);
      return url;
    },
    _stripIndexHtml: function(url) {
      if (J.getInterceptor$s(url).endsWith$1(url, "/index.html"))
        return C.JSString_methods.substring$2(url, 0, url.length - 11);
      return url;
    },
    Location: {
      "^": "Object;locationStrategy,_subject,_location$_baseHref",
      Location$1: function(locationStrategy) {
        var t1, t2;
        t1 = this.locationStrategy;
        t1.toString;
        t2 = H.functionTypeCheck(new V.Location_closure(this), {func: 1, args: [W.Event]});
        t1._platformLocation.toString;
        C.Window_methods.addEventListener$3(window, "popstate", t2, false);
      },
      path$0: [function(_) {
        return V.Location_stripTrailingSlash(V._stripBaseHref(this._location$_baseHref, V._stripIndexHtml(this.locationStrategy.path$0(0))));
      }, "call$0", "get$path", 1, 0, 7],
      normalizePath$1: function(path) {
        if (path == null)
          return;
        if (!C.JSString_methods.startsWith$1(path, "/"))
          path = "/" + path;
        return C.JSString_methods.endsWith$1(path, "/") ? C.JSString_methods.substring$2(path, 0, path.length - 1) : path;
      },
      static: {
        Location$: function(locationStrategy) {
          var t1 = new V.Location(locationStrategy, P.StreamController_StreamController(null, null, null, null, false, null), V.Location_stripTrailingSlash(V._stripIndexHtml(locationStrategy._baseHref)));
          t1.Location$1(locationStrategy);
          return t1;
        },
        Location_joinWithSlash: function(start, end) {
          var slashes;
          if (start.length === 0)
            return end;
          if (end.length === 0)
            return start;
          slashes = J.endsWith$1$s(start, "/") ? 1 : 0;
          if (J.getInterceptor$s(end).startsWith$1(end, "/"))
            ++slashes;
          if (slashes === 2)
            return start + C.JSString_methods.substring$1(end, 1);
          if (slashes === 1)
            return start + end;
          return start + "/" + end;
        },
        Location_stripTrailingSlash: function(url) {
          return J.getInterceptor$s(url).endsWith$1(url, "/") ? C.JSString_methods.substring$2(url, 0, url.length - 1) : url;
        }
      }
    },
    Location_closure: {
      "^": "Closure:13;$this",
      call$1: [function(ev) {
        var t1;
        H.interceptedTypeCheck(ev, "$isEvent");
        t1 = this.$this;
        t1._subject.add$1(0, P.LinkedHashMap_LinkedHashMap$_literal(["url", V.Location_stripTrailingSlash(V._stripBaseHref(t1._location$_baseHref, V._stripIndexHtml(t1.locationStrategy.path$0(0)))), "pop", true, "type", ev.type], P.String, P.Object));
      }, null, null, 4, 0, null, 80, "call"]
    }
  }], ["", "package:angular_router/src/location/location_strategy.dart",, X, {
    "^": "",
    LocationStrategy: {
      "^": "Object;"
    }
  }], ["", "package:angular_router/src/location/platform_location.dart",, X, {
    "^": "",
    PlatformLocation: {
      "^": "Object;"
    }
  }], ["", "package:angular_router/src/route_definition.dart",, N, {
    "^": "",
    RouteDefinition: {
      "^": "Object;path>,useAsDefault<",
      get$parameters: function(_) {
        var t1, t2, t3;
        t1 = $.$get$RouteDefinition__findParameters().allMatches$1(0, this.path);
        t2 = P.String;
        t3 = H.getRuntimeTypeArgument(t1, "Iterable", 0);
        return H.MappedIterable_MappedIterable(t1, H.functionTypeCheck(new N.RouteDefinition_parameters_closure(), {func: 1, ret: t2, args: [t3]}), t3, t2);
      },
      toUrl$1: function(_, paramValues) {
        var t1, url, t2, t3;
        t1 = P.String;
        H.assertSubtype(paramValues, "$isMap", [t1, t1], "$asMap");
        url = C.JSString_methods.$add("/", this.path);
        for (t1 = this.get$parameters(this), t1 = new H.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();) {
          t2 = t1.__internal$_current;
          t3 = ":" + H.S(t2);
          t2 = P._Uri__uriEncode(C.List_KIf, paramValues.$index(0, t2), C.Utf8Codec_false, false);
          if (typeof t2 !== "string")
            H.throwExpression(H.argumentErrorValue(t2));
          url = H.stringReplaceFirstUnchecked(url, t3, t2, 0);
        }
        return url;
      }
    },
    RouteDefinition_parameters_closure: {
      "^": "Closure:36;",
      call$1: [function(m) {
        return H.interceptedTypeCheck(m, "$isMatch").$index(0, 1);
      }, null, null, 4, 0, null, 36, "call"]
    },
    ComponentRouteDefinition: {
      "^": "RouteDefinition;component,path,useAsDefault,additionalData",
      static: {
        ComponentRouteDefinition$_: function(additionalData, component, path, routePath, useAsDefault) {
          var t1, t2, t3;
          t1 = routePath == null ? null : routePath.path;
          t1 = F.Url_trimSlashes(t1);
          t2 = routePath == null && null;
          if (t2 == null)
            t2 = false;
          t3 = routePath == null ? null : routePath.additionalData;
          return new N.ComponentRouteDefinition(component, t1, t2, t3);
        }
      }
    },
    RedirectRouteDefinition: {
      "^": "RouteDefinition;redirectTo,path,useAsDefault,additionalData",
      redirectToUrl$1: function(paramValues) {
        var t1, url, t2, t3;
        t1 = P.String;
        H.assertSubtype(paramValues, "$isMap", [t1, t1], "$asMap");
        url = this.redirectTo;
        for (t1 = this.get$_redirectToParameters(), t1 = new H.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]); t1.moveNext$0();) {
          t2 = t1.__internal$_current;
          t3 = ":" + H.S(t2);
          t2 = P._Uri__uriEncode(C.List_KIf, paramValues.$index(0, t2), C.Utf8Codec_false, false);
          if (typeof t2 !== "string")
            H.throwExpression(H.argumentErrorValue(t2));
          url = H.stringReplaceFirstUnchecked(url, t3, t2, 0);
        }
        return url;
      },
      get$_redirectToParameters: function() {
        var t1, t2, t3;
        t1 = $.$get$RouteDefinition__findParameters().allMatches$1(0, this.redirectTo);
        t2 = P.String;
        t3 = H.getRuntimeTypeArgument(t1, "Iterable", 0);
        return H.MappedIterable_MappedIterable(t1, H.functionTypeCheck(new N.RedirectRouteDefinition__redirectToParameters_closure(), {func: 1, ret: t2, args: [t3]}), t3, t2);
      }
    },
    RedirectRouteDefinition__redirectToParameters_closure: {
      "^": "Closure:36;",
      call$1: [function(m) {
        return H.interceptedTypeCheck(m, "$isMatch").$index(0, 1);
      }, null, null, 4, 0, null, 36, "call"]
    }
  }], ["", "package:angular_router/src/route_path.dart",, O, {
    "^": "",
    RoutePath: {
      "^": "Object;path>,parent,useAsDefault<,additionalData",
      toUrl$3$fragment$parameters$queryParameters: function(_, fragment, parameters, queryParameters) {
        var t1, url, t2, t3;
        t1 = P.String;
        H.assertSubtype(parameters, "$isMap", [t1, t1], "$asMap");
        url = V.Location_joinWithSlash("/", this.path);
        if (parameters != null)
          for (t1 = parameters.get$keys(parameters), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
            t2 = t1.get$current(t1);
            t3 = ":" + H.S(t2);
            t2 = P._Uri__uriEncode(C.List_KIf, parameters.$index(0, t2), C.Utf8Codec_false, false);
            url.toString;
            if (typeof t2 !== "string")
              H.throwExpression(H.argumentErrorValue(t2));
            url.length;
            url = H.stringReplaceFirstUnchecked(url, t3, t2, 0);
          }
        return F.Url$(url, fragment, queryParameters).toUrl$0(0);
      },
      toUrl$0: function($receiver) {
        return this.toUrl$3$fragment$parameters$queryParameters($receiver, null, null, null);
      },
      toUrl$1$parameters: function($receiver, parameters) {
        return this.toUrl$3$fragment$parameters$queryParameters($receiver, null, parameters, null);
      },
      static: {
        RoutePath$: function(additionalData, $parent, path, useAsDefault) {
          return new O.RoutePath(F.Url_trimSlashes(path), $parent, false, additionalData);
        }
      }
    }
  }], ["", "package:angular_router/src/router/navigation_params.dart",, Q, {
    "^": "",
    NavigationParams: {
      "^": "Object;queryParameters,fragment,reload,replace,updateUrl",
      assertValid$0: function() {
        return;
      },
      static: {
        NavigationParams$: function(fragment, queryParameters, reload, replace, updateUrl) {
          return new Q.NavigationParams(queryParameters, fragment, false, replace, updateUrl);
        }
      }
    }
  }], ["", "package:angular_router/src/router/router.dart",, Z, {
    "^": "",
    NavigationResult: {
      "^": "Object;index>,_router$_name",
      toString$0: function(_) {
        return this._router$_name;
      }
    },
    Router: {
      "^": "Object;"
    }
  }], ["", "package:angular_router/src/router/router_impl.dart",, Z, {
    "^": "",
    RouterImpl: {
      "^": "Router;_onRouteActivated,_router_impl$_location,_routerHook,0_activeState,_activeComponentRefs,0_onNavigationStart,0_rootOutlet,_lastNavigation",
      set$_activeComponentRefs: function(_activeComponentRefs) {
        this._activeComponentRefs = H.assertSubtype(_activeComponentRefs, "$isIterable", [[D.ComponentRef,,]], "$asIterable");
      },
      set$_lastNavigation: function(_lastNavigation) {
        this._lastNavigation = H.assertSubtype(_lastNavigation, "$isFuture", [-1], "$asFuture");
      },
      RouterImpl$2: function(_location, _routerHook) {
        var t1, t2;
        t1 = this._router_impl$_location;
        $.Url_isHashStrategy = t1.locationStrategy instanceof O.HashLocationStrategy;
        t1.toString;
        t2 = H.functionTypeCheck(new Z.RouterImpl_closure(this), {func: 1, ret: -1, args: [,]});
        t1 = t1._subject;
        new P._ControllerStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$3$onDone$onError(t2, null, null);
      },
      navigate$2: function(_, path, navigationParams) {
        return this._enqueueNavigation$2(this._getAbsolutePath$2(path, this._activeState), navigationParams);
      },
      navigate$1: function($receiver, path) {
        return this.navigate$2($receiver, path, null);
      },
      _enqueueNavigation$2: function(path, navigationParams) {
        var t1, t2;
        t1 = Z.NavigationResult;
        t2 = new P._Future(0, $.Zone__current, [t1]);
        this.set$_lastNavigation(this._lastNavigation.then$1$1(new Z.RouterImpl__enqueueNavigation_closure(this, path, navigationParams, new P._SyncCompleter(t2, [t1])), -1));
        return t2;
      },
      _navigate$3$isRedirect: function(path, navigationParams, isRedirect) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(Z.NavigationResult),
          $async$returnValue, $async$self = this, path0, t1, navigationParams0, t2, queryParameters, t3, t4, nextState, leaf, url;
        var $async$_navigate$3$isRedirect = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$goto = !isRedirect ? 3 : 4;
                break;
              case 3:
                // then
                $async$goto = 5;
                return P._asyncAwait($async$self._canNavigate$0(), $async$_navigate$3$isRedirect);
              case 5:
                // returning from await.
                if (!$async$result) {
                  $async$returnValue = C.NavigationResult_1;
                  // goto return
                  $async$goto = 1;
                  break;
                }
              case 4:
                // join
                if (!(navigationParams == null))
                  navigationParams.assertValid$0();
                $async$goto = 6;
                return P._asyncAwait(null, $async$_navigate$3$isRedirect);
              case 6:
                // returning from await.
                path0 = $async$result;
                path = path0 == null ? path : path0;
                t1 = $async$self._router_impl$_location;
                path = t1.normalizePath$1(path);
                $async$goto = 7;
                return P._asyncAwait(null, $async$_navigate$3$isRedirect);
              case 7:
                // returning from await.
                navigationParams0 = $async$result;
                navigationParams = navigationParams0 == null ? navigationParams : navigationParams0;
                t2 = navigationParams == null;
                if (!t2)
                  navigationParams.assertValid$0();
                queryParameters = t2 ? null : navigationParams.queryParameters;
                if (queryParameters == null) {
                  t3 = P.String;
                  queryParameters = P.LinkedHashMap_LinkedHashMap$_empty(t3, t3);
                }
                t3 = $async$self._activeState;
                if (t3 != null)
                  if (path === t3.path) {
                    t4 = t2 ? null : navigationParams.fragment;
                    if (t4 == null)
                      t4 = "";
                    t3 = t4 === t3.fragment && C.MapEquality_DefaultEquality_DefaultEquality.equals$2(queryParameters, t3.queryParameters);
                  } else
                    t3 = false;
                else
                  t3 = false;
                if (t3) {
                  $async$returnValue = C.NavigationResult_0;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 8;
                return P._asyncAwait($async$self._resolveState$2(path, navigationParams), $async$_navigate$3$isRedirect);
              case 8:
                // returning from await.
                nextState = $async$result;
                if (nextState == null || nextState.routes.length === 0) {
                  $async$returnValue = C.NavigationResult_2;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t3 = nextState.routes;
                if (t3.length !== 0) {
                  leaf = C.JSArray_methods.get$last(t3);
                  if (leaf instanceof N.RedirectRouteDefinition) {
                    $async$returnValue = $async$self._navigate$3$isRedirect($async$self._getAbsolutePath$2(leaf.redirectToUrl$1(nextState.parameters), nextState.build$0()), navigationParams, true);
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                }
                $async$goto = 9;
                return P._asyncAwait($async$self._canDeactivate$1(nextState), $async$_navigate$3$isRedirect);
              case 9:
                // returning from await.
                if (!$async$result) {
                  $async$returnValue = C.NavigationResult_1;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 10;
                return P._asyncAwait($async$self._canActivate$1(nextState), $async$_navigate$3$isRedirect);
              case 10:
                // returning from await.
                if (!$async$result) {
                  $async$returnValue = C.NavigationResult_1;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                $async$goto = 11;
                return P._asyncAwait($async$self._activateRouterState$1(nextState), $async$_navigate$3$isRedirect);
              case 11:
                // returning from await.
                t2 = !t2;
                if (!t2 || navigationParams.updateUrl) {
                  url = nextState.build$0().toUrl$0(0);
                  t2 = t2 && navigationParams.replace;
                  t1 = t1.locationStrategy;
                  if (t2)
                    t1.replaceState$4(0, null, "", url, "");
                  else {
                    url = t1.prepareExternalUrl$1(url);
                    t1 = t1._platformLocation._history;
                    t1.toString;
                    (t1 && C.History_methods)._pushState_1$3(t1, new P._StructuredCloneDart2Js([], []).walk$1(null), "", url);
                  }
                }
                $async$returnValue = C.NavigationResult_0;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_navigate$3$isRedirect, $async$completer);
      },
      _navigate$2: function(path, navigationParams) {
        return this._navigate$3$isRedirect(path, navigationParams, false);
      },
      _getAbsolutePath$2: function(path, state) {
        var t1;
        if (C.JSString_methods.startsWith$1(path, "./")) {
          t1 = state.routes;
          return V.Location_joinWithSlash(H.SubListIterable$(t1, 0, t1.length - 1, H.getTypeArgumentByIndex(t1, 0)).fold$1$2(0, "", new Z.RouterImpl__getAbsolutePath_closure(state), P.String), C.JSString_methods.substring$1(path, 2));
        }
        return path;
      },
      _resolveState$2: function(path, navigationParams) {
        return this._resolveStateForOutlet$2(this._rootOutlet, path).then$1$1(new Z.RouterImpl__resolveState_closure(this, path, navigationParams), M.MutableRouterState);
      },
      _resolveStateForOutlet$2: function(outlet, path) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(M.MutableRouterState),
          $async$returnValue, $async$self = this, t1, t2, _i, route, t3, t4, t5, match, component, componentRef, t6, t7, t8, t9, routerState, parameters, index, index0;
        var $async$_resolveStateForOutlet$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            $async$outer:
              switch ($async$goto) {
                case 0:
                  // Function start
                  if (outlet == null) {
                    if (path === "") {
                      t1 = [D.ComponentRef,,];
                      t2 = P.String;
                      $async$returnValue = new M.MutableRouterState(H.setRuntimeTypeInfo([], [t1]), P.LinkedHashMap_LinkedHashMap$_empty(t1, [D.ComponentFactory,,]), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), H.setRuntimeTypeInfo([], [N.RouteDefinition]), "", "", P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
                      // goto return
                      $async$goto = 1;
                      break;
                    }
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  t1 = outlet.get$routes(), t2 = t1.length, _i = 0;
                case 3:
                  // for condition
                  if (!(_i < t1.length)) {
                    // goto after for
                    $async$goto = 5;
                    break;
                  }
                  route = t1[_i];
                  t3 = J.getInterceptor$z(route);
                  t4 = t3.get$path(route);
                  t5 = $.$get$RouteDefinition__findParameters();
                  t4.toString;
                  t4 = P.RegExp_RegExp("/?" + H.stringReplaceAllUnchecked(t4, t5, "((?:[\\w'\\.\\-~!\\$&\\(\\)\\*\\+,;=:@]|%[0-9a-fA-F]{2})+)"), true, false);
                  t5 = path.length;
                  match = t4._execAnchored$2(path, 0);
                  $async$goto = match != null ? 6 : 7;
                  break;
                case 6:
                  // then
                  $async$goto = 8;
                  return P._asyncAwait($async$self._getTypeFromRoute$1(route), $async$_resolveStateForOutlet$2);
                case 8:
                  // returning from await.
                  component = $async$result;
                  t4 = component != null;
                  componentRef = t4 ? outlet.prepare$1(component) : null;
                  t6 = match._match;
                  t7 = t6.index + t6[0].length;
                  t5 = t7 !== t5;
                  if (t5) {
                    if (componentRef == null) {
                      // goto for update
                      $async$goto = 4;
                      break;
                    }
                    t8 = componentRef._parentView;
                    t9 = componentRef._nodeIndex;
                    if (new G.ElementInjector(t8, t9, C.EmptyInjector_null).$get$1(0, C.Type_RouterOutletToken_Wv6).get$routerOutlet() == null) {
                      // goto for update
                      $async$goto = 4;
                      break;
                    }
                  }
                  $async$goto = componentRef != null ? 9 : 11;
                  break;
                case 9:
                  // then
                  t8 = componentRef._parentView;
                  t9 = componentRef._nodeIndex;
                  $async$goto = 12;
                  return P._asyncAwait($async$self._resolveStateForOutlet$2(new G.ElementInjector(t8, t9, C.EmptyInjector_null).$get$1(0, C.Type_RouterOutletToken_Wv6).get$routerOutlet(), C.JSString_methods.substring$1(path, t7)), $async$_resolveStateForOutlet$2);
                case 12:
                  // returning from await.
                  routerState = $async$result;
                  // goto join
                  $async$goto = 10;
                  break;
                case 11:
                  // else
                  routerState = null;
                case 10:
                  // join
                  if (routerState == null) {
                    if (t5) {
                      // goto for update
                      $async$goto = 4;
                      break;
                    }
                    t1 = [D.ComponentRef,,];
                    t2 = P.String;
                    routerState = new M.MutableRouterState(H.setRuntimeTypeInfo([], [t1]), P.LinkedHashMap_LinkedHashMap$_empty(t1, [D.ComponentFactory,,]), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), H.setRuntimeTypeInfo([], [N.RouteDefinition]), "", "", P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
                  }
                  C.JSArray_methods.insert$2(routerState.routes, 0, route);
                  if (t4) {
                    routerState.factories.$indexSet(0, componentRef, component);
                    C.JSArray_methods.insert$2(routerState.components, 0, componentRef);
                  }
                  parameters = t3.get$parameters(route);
                  for (t1 = new H.MappedIterator(J.get$iterator$ax(parameters.__internal$_iterable), parameters._f, [H.getTypeArgumentByIndex(parameters, 0), H.getTypeArgumentByIndex(parameters, 1)]), t2 = routerState.parameters, index = 1; t1.moveNext$0(); index = index0) {
                    t3 = t1.__internal$_current;
                    index0 = index + 1;
                    if (index >= t6.length) {
                      $async$returnValue = H.ioore(t6, index);
                      // goto return
                      $async$goto = 1;
                      break $async$outer;
                    }
                    t4 = t6[index];
                    t2.$indexSet(0, t3, P._Uri__uriDecode(t4, 0, t4.length, C.Utf8Codec_false, false));
                  }
                  $async$returnValue = routerState;
                  // goto return
                  $async$goto = 1;
                  break;
                case 7:
                  // join
                case 4:
                  // for update
                  t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i;
                  // goto for condition
                  $async$goto = 3;
                  break;
                case 5:
                  // after for
                  if (path === "") {
                    t1 = [D.ComponentRef,,];
                    t2 = P.String;
                    $async$returnValue = new M.MutableRouterState(H.setRuntimeTypeInfo([], [t1]), P.LinkedHashMap_LinkedHashMap$_empty(t1, [D.ComponentFactory,,]), P.LinkedHashMap_LinkedHashMap$_empty(t2, t2), H.setRuntimeTypeInfo([], [N.RouteDefinition]), "", "", P.LinkedHashMap_LinkedHashMap$_empty(t2, t2));
                    // goto return
                    $async$goto = 1;
                    break;
                  }
                  // goto return
                  $async$goto = 1;
                  break;
                case 1:
                  // return
                  return P._asyncReturn($async$returnValue, $async$completer);
              }
        });
        return P._asyncStartSync($async$_resolveStateForOutlet$2, $async$completer);
      },
      _getTypeFromRoute$1: function(route) {
        if (route instanceof N.ComponentRouteDefinition)
          return route.component;
        return;
      },
      _attachDefaultChildren$1: function(stateSoFar) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(M.MutableRouterState),
          $async$returnValue, $async$self = this, t1, nextOutlet, t2, _i;
        var $async$_attachDefaultChildren$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = stateSoFar.routes;
                $async$goto = t1.length === 0 ? 3 : 5;
                break;
              case 3:
                // then
                nextOutlet = $async$self._rootOutlet;
                // goto join
                $async$goto = 4;
                break;
              case 5:
                // else
                $async$goto = 6;
                return P._asyncAwait($async$self._getTypeFromRoute$1(C.JSArray_methods.get$last(t1)), $async$_attachDefaultChildren$1);
              case 6:
                // returning from await.
                if ($async$result == null) {
                  $async$returnValue = stateSoFar;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = C.JSArray_methods.get$last(stateSoFar.components);
                t2 = t1._parentView;
                t1 = t1._nodeIndex;
                nextOutlet = new G.ElementInjector(t2, t1, C.EmptyInjector_null).$get$1(0, C.Type_RouterOutletToken_Wv6).get$routerOutlet();
              case 4:
                // join
                if (nextOutlet == null) {
                  $async$returnValue = stateSoFar;
                  // goto return
                  $async$goto = 1;
                  break;
                }
                for (t1 = nextOutlet.get$routes(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
                  t1[_i].get$useAsDefault();
                $async$returnValue = stateSoFar;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_attachDefaultChildren$1, $async$completer);
      },
      _canNavigate$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$self = this, t1, t2, _i;
        var $async$_canNavigate$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                for (t1 = $async$self._activeComponentRefs, t2 = t1.length, _i = 0; _i < t2; ++_i)
                  t1[_i]._component;
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_canNavigate$0, $async$completer);
      },
      _canDeactivate$1: function(mutableNextState) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$self = this, t1, t2, _i;
        var $async$_canDeactivate$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                mutableNextState.build$0();
                for (t1 = $async$self._activeComponentRefs, t2 = t1.length, _i = 0; _i < t2; ++_i)
                  t1[_i]._component;
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_canDeactivate$1, $async$completer);
      },
      _canActivate$1: function(mutableNextState) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, t1, t2, _i;
        var $async$_canActivate$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                mutableNextState.build$0();
                for (t1 = mutableNextState.components, t2 = t1.length, _i = 0; _i < t2; ++_i)
                  t1[_i]._component;
                $async$returnValue = true;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_canActivate$1, $async$completer);
      },
      _activateRouterState$1: function(mutableNextState) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this, nextState, t1, t2, _i, currentOutlet, len, i, resolvedComponentRef, componentFactory, componentRef, t3, t4, component;
        var $async$_activateRouterState$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                nextState = mutableNextState.build$0();
                for (t1 = $async$self._activeComponentRefs, t2 = t1.length, _i = 0; _i < t2; ++_i)
                  t1[_i]._component;
                currentOutlet = $async$self._rootOutlet;
                t1 = mutableNextState.components, len = t1.length, t2 = mutableNextState.factories, i = 0;
              case 3:
                // for condition
                if (!(i < len)) {
                  // goto after for
                  $async$goto = 5;
                  break;
                }
                if (i >= t1.length) {
                  $async$returnValue = H.ioore(t1, i);
                  // goto return
                  $async$goto = 1;
                  break;
                }
                resolvedComponentRef = t1[i];
                componentFactory = t2.$index(0, resolvedComponentRef);
                $async$goto = 6;
                return P._asyncAwait(currentOutlet.activate$3(componentFactory, $async$self._activeState, nextState), $async$_activateRouterState$1);
              case 6:
                // returning from await.
                componentRef = currentOutlet.prepare$1(componentFactory);
                if (componentRef == null ? resolvedComponentRef != null : componentRef !== resolvedComponentRef)
                  C.JSArray_methods.$indexSet(t1, i, componentRef);
                t3 = componentRef._parentView;
                t4 = componentRef._nodeIndex;
                currentOutlet = new G.ElementInjector(t3, t4, C.EmptyInjector_null).$get$1(0, C.Type_RouterOutletToken_Wv6).get$routerOutlet();
                component = componentRef._component;
                if (!!J.getInterceptor$(component).$isOnActivate)
                  component.onActivate$2(0, $async$self._activeState, nextState);
              case 4:
                // for update
                ++i;
                // goto for condition
                $async$goto = 3;
                break;
              case 5:
                // after for
                $async$self._onRouteActivated.add$1(0, nextState);
                $async$self._activeState = nextState;
                $async$self.set$_activeComponentRefs(t1);
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_activateRouterState$1, $async$completer);
      },
      static: {
        RouterImpl$: function(_location, _routerHook) {
          var t1, t2;
          t1 = H.setRuntimeTypeInfo([], [[D.ComponentRef,,]]);
          t2 = new P._Future(0, $.Zone__current, [-1]);
          t2._asyncComplete$1(null);
          t2 = new Z.RouterImpl(new P._SyncBroadcastStreamController(null, null, 0, [M.RouterState]), _location, _routerHook, t1, t2);
          t2.RouterImpl$2(_location, _routerHook);
          return t2;
        }
      }
    },
    RouterImpl_closure: {
      "^": "Closure:4;$this",
      call$1: [function(_) {
        var t1, t2, t3, t4, url, fragment;
        t1 = this.$this;
        t2 = t1._router_impl$_location;
        t3 = t2.locationStrategy;
        t4 = t3.path$0(0);
        t2 = t2._location$_baseHref;
        url = F.Url_parse(V.Location_stripTrailingSlash(V._stripBaseHref(t2, V._stripIndexHtml(t4))));
        fragment = $.Url_isHashStrategy ? url.fragment : F.Url_normalizeHash(V.Location_stripTrailingSlash(V._stripBaseHref(t2, V._stripIndexHtml(t3._platformLocation._location.hash))));
        t1._enqueueNavigation$2(url.path, Q.NavigationParams$(fragment, url.queryParameters, false, false, false)).then$1$1(new Z.RouterImpl__closure(t1), null);
      }, null, null, 4, 0, null, 0, "call"]
    },
    RouterImpl__closure: {
      "^": "Closure:167;$this",
      call$1: [function(navigationResult) {
        var t1, t2;
        if (H.interceptedTypeCheck(navigationResult, "$isNavigationResult") === C.NavigationResult_1) {
          t1 = this.$this;
          t2 = t1._activeState.toUrl$0(0);
          t1._router_impl$_location.locationStrategy.replaceState$4(0, null, "", t2, "");
        }
      }, null, null, 4, 0, null, 82, "call"]
    },
    RouterImpl__enqueueNavigation_closure: {
      "^": "Closure:168;$this,path,navigationParams,navigationCompleter",
      call$1: [function(_) {
        var t1 = this.navigationCompleter;
        return this.$this._navigate$2(this.path, this.navigationParams).then$1$1(t1.get$complete(t1), -1).catchError$1(t1.get$completeError());
      }, null, null, 4, 0, null, 0, "call"]
    },
    RouterImpl__getAbsolutePath_closure: {
      "^": "Closure:169;state",
      call$2: function(soFar, route) {
        return J.$add$ansx(H.stringTypeCheck(soFar), H.interceptedTypeCheck(route, "$isRouteDefinition").toUrl$1(0, this.state.parameters));
      }
    },
    RouterImpl__resolveState_closure: {
      "^": "Closure:256;$this,path,navigationParams",
      call$1: [function(routerState) {
        var t1;
        H.interceptedTypeCheck(routerState, "$isMutableRouterState");
        if (routerState != null) {
          routerState.path = this.path;
          t1 = this.navigationParams;
          if (t1 != null) {
            routerState.fragment = t1.fragment;
            routerState.set$queryParameters(t1.queryParameters);
          }
          return this.$this._attachDefaultChildren$1(routerState);
        }
      }, null, null, 4, 0, null, 83, "call"]
    }
  }], ["", "package:angular_router/src/router/router_outlet_token.dart",, S, {
    "^": "",
    RouterOutletToken: {
      "^": "Object;0routerOutlet<"
    }
  }], ["", "package:angular_router/src/router/router_state.dart",, M, {
    "^": "",
    RouterState: {
      "^": "Url;routes,parameters>,0_routePath,fragment,path,queryParameters",
      toString$0: function(_) {
        return "#" + C.Type_RouterState_k6P.toString$0(0) + " {" + this.super$Url$toString(0) + "}";
      }
    },
    MutableRouterState: {
      "^": "Object;components,factories,parameters>,routes,fragment,path>,queryParameters",
      set$queryParameters: function(queryParameters) {
        var t1 = P.String;
        this.queryParameters = H.assertSubtype(queryParameters, "$isMap", [t1, t1], "$asMap");
      },
      build$0: function() {
        var t1, t2, t3, t4, t5, t6;
        t1 = this.path;
        t2 = this.routes;
        t2 = H.setRuntimeTypeInfo(t2.slice(0), [H.getTypeArgumentByIndex(t2, 0)]);
        t3 = this.fragment;
        t4 = this.queryParameters;
        t5 = P.String;
        t6 = H.ConstantMap_ConstantMap$from(this.parameters, t5, t5);
        t2 = P.List_List$unmodifiable(t2, N.RouteDefinition);
        if (t1 == null)
          t1 = "";
        if (t3 == null)
          t3 = "";
        return new M.RouterState(t2, t6, t3, t1, H.ConstantMap_ConstantMap$from(t4, t5, t5));
      }
    }
  }], ["", "package:angular_router/src/router_hook.dart",, B, {
    "^": "",
    RouterHook: {
      "^": "Object;"
    }
  }], ["", "package:angular_router/src/url.dart",, F, {
    "^": "",
    Url: {
      "^": "Object;fragment,path>,queryParameters",
      toUrl$0: function(_) {
        var t1, t2, t3;
        t1 = this.path;
        t2 = this.queryParameters;
        t3 = t2.get$isNotEmpty(t2);
        if (t3)
          t1 = P.StringBuffer__writeAll(t1 + "?", J.map$1$1$ax(t2.get$keys(t2), new F.Url_toUrl_closure(this), null), "&");
        t2 = this.fragment;
        if (t2.length !== 0)
          t1 = t1 + "#" + t2;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      toString$0: ["super$Url$toString", function(_) {
        return this.toUrl$0(0);
      }],
      static: {
        Url_parse: function(url) {
          var uri = P.Uri_parse(url, 0, null);
          return F.Url$(uri.get$path(uri), uri.get$fragment(), uri.get$queryParameters());
        },
        Url_normalizeHash: function(hash) {
          if (J.getInterceptor$s(hash).startsWith$1(hash, "#"))
            return C.JSString_methods.substring$1(hash, 1);
          return hash;
        },
        Url_trimSlashes: function(path) {
          if (path == null)
            return;
          if (C.JSString_methods.startsWith$1(path, "/"))
            path = C.JSString_methods.substring$1(path, 1);
          return C.JSString_methods.endsWith$1(path, "/") ? C.JSString_methods.substring$2(path, 0, path.length - 1) : path;
        },
        Url$: function(path, fragment, queryParameters) {
          var t1, t2, t3, t4;
          t1 = path == null ? "" : path;
          t2 = fragment == null ? "" : fragment;
          t3 = queryParameters == null ? P.LinkedHashMap__makeEmpty() : queryParameters;
          t4 = P.String;
          return new F.Url(t2, t1, H.ConstantMap_ConstantMap$from(t3, t4, t4));
        }
      }
    },
    Url_toUrl_closure: {
      "^": "Closure:10;$this",
      call$1: [function(k) {
        var v;
        H.stringTypeCheck(k);
        v = this.$this.queryParameters.$index(0, k);
        k = P._Uri__uriEncode(C.List_KIf, k, C.Utf8Codec_false, false);
        return v != null ? H.S(k) + "=" + H.S(P._Uri__uriEncode(C.List_KIf, v, C.Utf8Codec_false, false)) : k;
      }, null, null, 4, 0, null, 84, "call"]
    }
  }], ["asset_angular_tour_of_heroes_lib_app_component.css.shim.dart", "package:angular_tour_of_heroes/app_component.css.shim.dart",, L, {}], ["", "package:angular_tour_of_heroes/app_component.dart",, Q, {
    "^": "",
    AppComponent: {
      "^": "Object;_app_component$_router,0navMenu",
      set$navMenu: function(navMenu) {
        this.navMenu = H.assertSubtype(navMenu, "$isMenuModel", [[D.MenuItem,,]], "$asMenuModel");
      },
      openUiWindow$0: [function() {
        G.get("http://localhost:3000/open/BCUI", null).then$1$1(new Q.AppComponent_openUiWindow_closure(), null);
      }, "call$0", "get$openUiWindow", 0, 0, 2],
      goHome$0: [function() {
        this._app_component$_router.navigate$1(0, $.$get$RoutePaths_dash().toUrl$0(0));
      }, "call$0", "get$goHome", 0, 0, 2],
      ngOnInit$0: function() {
        var t1 = [D.MenuItem,,];
        this.set$navMenu(D.MenuModel$(H.setRuntimeTypeInfo([D.MenuItemGroup$(H.setRuntimeTypeInfo([D.MenuItem$("Tournaments", new Q.AppComponent_ngOnInit_closure(this), null, true, null, null, null, null, null, null, null, null), D.MenuItem$("Matches", new Q.AppComponent_ngOnInit_closure0(this), null, true, null, null, null, null, null, null, null, null), D.MenuItem$("Users", new Q.AppComponent_ngOnInit_closure1(this), null, true, null, null, null, null, null, null, null, null)], [t1]), null, true, false, true, t1)], [[D.MenuItemGroup, [D.MenuItem,,]]]), null, null, null, t1));
      }
    },
    AppComponent_openUiWindow_closure: {
      "^": "Closure:171;",
      call$1: [function(response) {
        P.print("Response status: " + H.S(H.interceptedTypeCheck(response, "$isResponse").statusCode));
      }, null, null, 4, 0, null, 85, "call"]
    },
    AppComponent_ngOnInit_closure: {
      "^": "Closure:23;$this",
      call$0: function() {
        var t1 = P.String;
        return this.$this._app_component$_router.navigate$1(0, $.$get$RoutePaths_list().toUrl$1$parameters(0, P.LinkedHashMap_LinkedHashMap$_literal(["type", "tournaments"], t1, t1)));
      }
    },
    AppComponent_ngOnInit_closure0: {
      "^": "Closure:23;$this",
      call$0: function() {
        var t1 = P.String;
        return this.$this._app_component$_router.navigate$1(0, $.$get$RoutePaths_list().toUrl$1$parameters(0, P.LinkedHashMap_LinkedHashMap$_literal(["type", "matches"], t1, t1)));
      }
    },
    AppComponent_ngOnInit_closure1: {
      "^": "Closure:23;$this",
      call$0: function() {
        var t1 = P.String;
        return this.$this._app_component$_router.navigate$1(0, $.$get$RoutePaths_list().toUrl$1$parameters(0, P.LinkedHashMap_LinkedHashMap$_literal(["type", "users"], t1, t1)));
      }
    }
  }], ["", "package:angular_tour_of_heroes/app_component.template.dart",, V, {
    "^": "",
    viewFactory_AppComponentHost0: [function(parentView, parentIndex) {
      var t1 = new V._ViewAppComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, Q.AppComponent));
      return t1;
    }, "call$2", "app_component_template__viewFactory_AppComponentHost0$closure", 8, 0, 242],
    ViewAppComponent0: {
      "^": "AppView;0_app_component_template$_compView_2,0_app_component_template$_AcxDarkTheme_2_5,0_app_component_template$_MaterialButtonComponent_2_6,0_app_component_template$_compView_4,0_RaisableMenuComponent_4_5,0_compView_7,0_MaterialIconComponent_7_5,0_compView_8,0_AcxDarkTheme_8_5,0_MaterialButtonComponent_8_6,0_app_component_template$_appEl_13,0_RouterOutlet_13_8,0_app_component_template$_expr_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, _el_1, t1, _el_2, t2, _text_3, t3, _el_4, _el_5, t4, _el_7, _el_8, _text_9, _el_13;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "appcontainer";
        this.addShimC$1(_el_0);
        _el_1 = S.createDivAndAppend(doc, _el_0);
        _el_1.className = "hrdiv";
        this.addShimC$1(_el_1);
        t1 = U.ViewMaterialButtonComponent0$(this, 2);
        this._app_component_template$_compView_2 = t1;
        _el_2 = t1.rootEl;
        (_el_1 && C.DivElement_methods).append$1(_el_1, _el_2);
        this.addShimC$1(_el_2);
        t1 = this.parentView;
        t2 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._app_component_template$_AcxDarkTheme_2_5 = t2;
        t2 = B.MaterialButtonComponent$(_el_2, t2, this._app_component_template$_compView_2.viewData.ref, null);
        this._app_component_template$_MaterialButtonComponent_2_6 = t2;
        _text_3 = doc.createTextNode("Dashboard");
        t3 = [W.Text];
        this._app_component_template$_compView_2.create$2(0, t2, [H.setRuntimeTypeInfo([_text_3], t3)]);
        t2 = G.ViewRaisableMenuComponent0$(this, 4);
        this._app_component_template$_compView_4 = t2;
        _el_4 = t2.rootEl;
        C.DivElement_methods.append$1(_el_1, _el_4);
        J.setAttribute$2$x(_el_4, "raised-button", "");
        this.addShimC$1(_el_4);
        t2 = P.StreamController_StreamController(null, null, null, null, false, -1);
        this._RaisableMenuComponent_4_5 = new F.RaisableMenuComponent(_el_4, t2, new R.Disposer(true, false), false, false, true, false, null, new Q.ObservableReference(Q.observable_ObservableReference__defaultEq$closure(), false, false, false, [P.bool]), 0, null, new P._SyncBroadcastStreamController(null, null, 0, [W.FocusEvent]), false);
        _el_5 = doc.createElement("section");
        t2 = J.getInterceptor$x(_el_5);
        t2.setAttribute$2(_el_5, "menu-button", "");
        this.addShimE$1(_el_5);
        t2.append$1(_el_5, doc.createTextNode("Services"));
        t4 = M.ViewMaterialIconComponent0$(this, 7);
        this._compView_7 = t4;
        _el_7 = t4.rootEl;
        t2.append$1(_el_5, _el_7);
        t2 = J.getInterceptor$x(_el_7);
        t2.setAttribute$2(_el_7, "baseline", "");
        t2.setAttribute$2(_el_7, "icon", "arrow_drop_down");
        t2.setAttribute$2(_el_7, "size", "medium");
        this.addShimC$1(_el_7);
        t2 = new Y.MaterialIconComponent(_el_7);
        this._MaterialIconComponent_7_5 = t2;
        this._compView_7.create$2(0, t2, []);
        this._app_component_template$_compView_4.create$2(0, this._RaisableMenuComponent_4_5, [H.setRuntimeTypeInfo([_el_5], [W.Element]), C.List_empty]);
        t2 = U.ViewMaterialButtonComponent0$(this, 8);
        this._compView_8 = t2;
        _el_8 = t2.rootEl;
        C.DivElement_methods.append$1(_el_1, _el_8);
        t2 = J.getInterceptor$x(_el_8);
        t2.setAttribute$2(_el_8, "style", "float: right;");
        this.addShimC$1(_el_8);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_8_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_8, t4, this._compView_8.viewData.ref, null);
        this._MaterialButtonComponent_8_6 = t4;
        _text_9 = doc.createTextNode("Open ChainUI");
        this._compView_8.create$2(0, t4, [H.setRuntimeTypeInfo([_text_9], t3)]);
        this.addShimE$1(S.createAndAppend(doc, "br", _el_1));
        C.DivElement_methods.append$1(_el_1, doc.createTextNode(" "));
        this.addShimE$1(S.createAndAppend(doc, "br", _el_1));
        _el_13 = S.createAndAppend(doc, "router-outlet", _el_0);
        this.addShimE$1(_el_13);
        this._app_component_template$_appEl_13 = new V.ViewContainer(13, 0, this, _el_13);
        t1 = Z.RouterOutlet$(H.interceptedTypeCheck(t1.injectorGet$3(C.Type_RouterOutletToken_Wv6, this.viewData.parentIndex, null), "$isRouterOutletToken"), this._app_component_template$_appEl_13, H.interceptedTypeCheck(t1.injectorGet$2(C.Type_Router_yx3, this.viewData.parentIndex), "$isRouter"), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_RouterHook_okS, this.viewData.parentIndex, null), "$isRouterHook"));
        this._RouterOutlet_13_8 = t1;
        t1 = W.Event;
        J.addEventListener$2$x(_el_2, "click", this.eventHandler0$1$1(this.ctx.get$goHome(), t1));
        t2.addEventListener$2(_el_8, "click", this.eventHandler0$1$1(this.ctx.get$openUiWindow(), t1));
        this.init$2(C.List_empty, null);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._app_component_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._app_component_template$_MaterialButtonComponent_2_6;
        t3 = token === C.Type_HasDisabled_qzc;
        if (t3 && 4 <= nodeIndex && nodeIndex <= 7)
          return this._RaisableMenuComponent_4_5;
        if (t1 && 8 <= nodeIndex && nodeIndex <= 9)
          return this._AcxDarkTheme_8_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || t3) && 8 <= nodeIndex && nodeIndex <= 9)
          return this._MaterialButtonComponent_8_6;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, currVal_1, t1, t2, t3, t4, url;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._app_component_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._app_component_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._app_component_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._RaisableMenuComponent_4_5.raised = true;
          changed = true;
        } else
          changed = false;
        currVal_1 = _ctx.navMenu;
        t1 = this._app_component_template$_expr_1;
        if (t1 == null ? currVal_1 != null : t1 !== currVal_1) {
          this._RaisableMenuComponent_4_5.MenuPopupWrapper_menu = currVal_1;
          this._app_component_template$_expr_1 = currVal_1;
          changed = true;
        }
        if (changed)
          this._app_component_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialIconComponent_7_5.set$icon(0, "arrow_drop_down");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_7.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialButtonComponent_8_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_8.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialButtonComponent_8_6.ngOnInit$0();
        if (firstCheck) {
          t1 = $.$get$Routes_all();
          this._RouterOutlet_13_8.set$routes(t1);
        }
        if (firstCheck) {
          t1 = this._RouterOutlet_13_8;
          t2 = t1._router_outlet_directive$_router;
          if (t2._rootOutlet == null) {
            t2._rootOutlet = t1;
            t1 = t2._router_impl$_location;
            t3 = t1.locationStrategy;
            t4 = t3.path$0(0);
            t1 = t1._location$_baseHref;
            url = F.Url_parse(V.Location_stripTrailingSlash(V._stripBaseHref(t1, V._stripIndexHtml(t4))));
            t1 = $.Url_isHashStrategy ? url.fragment : F.Url_normalizeHash(V.Location_stripTrailingSlash(V._stripBaseHref(t1, V._stripIndexHtml(t3._platformLocation._location.hash))));
            t2._enqueueNavigation$2(url.path, Q.NavigationParams$(t1, url.queryParameters, false, true, true));
          }
        }
        this._app_component_template$_appEl_13.detectChangesInNestedViews$0();
        this._app_component_template$_compView_2.detectHostChanges$1(firstCheck);
        this._compView_8.detectHostChanges$1(firstCheck);
        this._app_component_template$_compView_2.detectChanges$0();
        this._app_component_template$_compView_4.detectChanges$0();
        this._compView_7.detectChanges$0();
        this._compView_8.detectChanges$0();
        if (firstCheck)
          this._RaisableMenuComponent_4_5.ngAfterViewInit$0();
      },
      destroyInternal$0: function() {
        this._app_component_template$_appEl_13.destroyNestedViews$0();
        this._app_component_template$_compView_2.destroy$0();
        this._app_component_template$_compView_4.destroy$0();
        this._compView_7.destroy$0();
        this._compView_8.destroy$0();
        this._RaisableMenuComponent_4_5._raisable_menu_component$_disposer.dispose$0();
        this._RouterOutlet_13_8.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [Q.AppComponent];
      }
    },
    _ViewAppComponentHost0: {
      "^": "AppView;0_compView_0,0_AppComponent_0_5,0__Document_0_6,0__Window_0_7,0__DomService_0_8,0__AcxImperativeViewUtils_0_9,0__DomRuler_0_10,0__ManagedZone_0_11,0__overlayContainerName_0_12,0__overlayContainerParent_0_13,0__overlayContainer_0_14,0__overlaySyncDom_0_15,0__overlayRepositionLoop_0_16,0__OverlayStyleConfig_0_17,0__ZIndexer_0_18,0__OverlayDomRenderService_0_19,0__OverlayService_0_20,0__defaultPopupPositions_0_21,0__DomPopupSourceFactory_0_22,0__Clock_0_23,0__InteropBarcodeService_0_25,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      set$__defaultPopupPositions_0_21: function(__defaultPopupPositions_0_21) {
        this.__defaultPopupPositions_0_21 = H.assertSubtype(__defaultPopupPositions_0_21, "$isList", [K.RelativePosition], "$asList");
      },
      get$_Document_0_6: function() {
        var t1 = this.__Document_0_6;
        if (t1 == null) {
          t1 = document;
          this.__Document_0_6 = t1;
        }
        return t1;
      },
      get$_Window_0_7: function() {
        var t1 = this.__Window_0_7;
        if (t1 == null) {
          t1 = window;
          this.__Window_0_7 = t1;
        }
        return t1;
      },
      get$_DomService_0_8: function() {
        var t1 = this.__DomService_0_8;
        if (t1 == null) {
          t1 = T.createDomService(H.interceptedTypeCheck(this.injectorGet$3(C.Type_DomService_2jN, this.viewData.parentIndex, null), "$isDomService"), H.interceptedTypeCheck(this.injectorGet$3(C.Type_Disposer_k0p, this.viewData.parentIndex, null), "$isDisposer"), H.interceptedTypeCheck(this.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"), this.get$_Window_0_7());
          this.__DomService_0_8 = t1;
        }
        return t1;
      },
      get$_AcxImperativeViewUtils_0_9: function() {
        var t1 = this.__AcxImperativeViewUtils_0_9;
        if (t1 == null) {
          t1 = new O.AcxImperativeViewUtils(H.interceptedTypeCheck(this.injectorGet$2(C.Type_ComponentLoader_7xV, this.viewData.parentIndex), "$isComponentLoader"), H.interceptedTypeCheck(this.get$_DomService_0_8(), "$isDomService"));
          this.__AcxImperativeViewUtils_0_9 = t1;
        }
        return t1;
      },
      get$_DomRuler_0_10: function() {
        var t1 = this.__DomRuler_0_10;
        if (t1 == null) {
          t1 = new K.DomRulerImpl(this.get$_Document_0_6(), H.interceptedTypeCheck(this.get$_DomService_0_8(), "$isDomService"), P.Expando$(null, [P.List, P.String]));
          this.__DomRuler_0_10 = t1;
        }
        return t1;
      },
      get$_ManagedZone_0_11: function() {
        var t1 = this.__ManagedZone_0_11;
        if (t1 == null) {
          t1 = T.Angular2ManagedZone$(H.interceptedTypeCheck(this.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone"));
          this.__ManagedZone_0_11 = t1;
        }
        return t1;
      },
      get$_overlayContainerName_0_12: function() {
        var t1 = this.__overlayContainerName_0_12;
        if (t1 == null) {
          t1 = G.getDefaultContainerName(this.injectorGet$3(C.OpaqueToken_overlayContainerName, this.viewData.parentIndex, null));
          this.__overlayContainerName_0_12 = t1;
        }
        return t1;
      },
      get$_overlayContainerParent_0_13: function() {
        var t1 = this.__overlayContainerParent_0_13;
        if (t1 == null) {
          t1 = G.getOverlayContainerParent(this.get$_Document_0_6(), this.injectorGet$3(C.OpaqueToken_overlayContainerParent, this.viewData.parentIndex, null));
          this.__overlayContainerParent_0_13 = t1;
        }
        return t1;
      },
      get$_overlayContainer_0_14: function() {
        var t1 = this.__overlayContainer_0_14;
        if (t1 == null) {
          t1 = G.getDefaultContainer(H.stringTypeCheck(this.get$_overlayContainerName_0_12()), H.interceptedTypeCheck(this.get$_overlayContainerParent_0_13(), "$isHtmlElement"), this.injectorGet$3(C.OpaqueToken_overlayContainer, this.viewData.parentIndex, null));
          this.__overlayContainer_0_14 = t1;
        }
        return t1;
      },
      get$_overlaySyncDom_0_15: function() {
        var t1 = this.__overlaySyncDom_0_15;
        if (t1 == null) {
          this.__overlaySyncDom_0_15 = true;
          t1 = true;
        }
        return t1;
      },
      get$_overlayRepositionLoop_0_16: function() {
        var t1 = this.__overlayRepositionLoop_0_16;
        if (t1 == null) {
          this.__overlayRepositionLoop_0_16 = true;
          t1 = true;
        }
        return t1;
      },
      get$_OverlayStyleConfig_0_17: function() {
        var t1 = this.__OverlayStyleConfig_0_17;
        if (t1 == null) {
          t1 = this.get$_Document_0_6();
          t1 = new R.OverlayStyleConfig(H.interceptedTypeCheck((t1 && C.HtmlDocument_methods).querySelector$1(t1, "head"), "$isHeadElement"), false, t1);
          this.__OverlayStyleConfig_0_17 = t1;
        }
        return t1;
      },
      get$_ZIndexer_0_18: function() {
        var t1 = this.__ZIndexer_0_18;
        if (t1 == null) {
          t1 = $.ZIndexer__currentInstance;
          if (t1 == null) {
            t1 = new X.ZIndexer();
            if (self.acxZIndex == null)
              self.acxZIndex = 1000;
            $.ZIndexer__currentInstance = t1;
          }
          this.__ZIndexer_0_18 = t1;
        }
        return t1;
      },
      get$_OverlayDomRenderService_0_19: function() {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9;
        t1 = this.__OverlayDomRenderService_0_19;
        if (t1 == null) {
          t1 = this.get$_OverlayStyleConfig_0_17();
          t2 = H.interceptedTypeCheck(this.get$_overlayContainer_0_14(), "$isHtmlElement");
          t3 = H.stringTypeCheck(this.get$_overlayContainerName_0_12());
          t4 = this.get$_DomRuler_0_10();
          t5 = H.interceptedTypeCheck(this.get$_DomService_0_8(), "$isDomService");
          t6 = H.interceptedTypeCheck(this.get$_AcxImperativeViewUtils_0_9(), "$isAcxImperativeViewUtils");
          t7 = this.get$_overlaySyncDom_0_15();
          t8 = this.get$_overlayRepositionLoop_0_16();
          t9 = this.get$_ZIndexer_0_18();
          t8 = new K.OverlayDomRenderService(t2, t3, t4, t5, t6, t7, t8, t9, 0);
          J.setAttribute$2$x(t2, "name", t3);
          t1.registerStyles$0();
          t9.toString;
          t8._lastZIndex = self.acxZIndex;
          this.__OverlayDomRenderService_0_19 = t8;
          t1 = t8;
        }
        return t1;
      },
      get$_OverlayService_0_20: function() {
        var t1, t2, t3;
        t1 = this.__OverlayService_0_20;
        if (t1 == null) {
          t1 = H.interceptedTypeCheck(this.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
          t2 = this.get$_overlaySyncDom_0_15();
          t3 = this.get$_OverlayDomRenderService_0_19();
          H.interceptedTypeCheck(this.injectorGet$3(C.Type_OverlayService_4iH, this.viewData.parentIndex, null), "$isOverlayService");
          t3 = new X.OverlayService(t2, t1, t3);
          this.__OverlayService_0_20 = t3;
          t1 = t3;
        }
        return t1;
      },
      build$0: function() {
        var t1, t2, t3;
        t1 = new V.ViewAppComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = Q.AppComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("tr-app");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewAppComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$AppComponent());
          $.ViewAppComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._compView_0 = t1;
        this.rootEl = t1.rootEl;
        t1 = new Q.AppComponent(H.interceptedTypeCheck(this.injectorGet$2(C.Type_Router_yx3, this.viewData.parentIndex), "$isRouter"));
        this._AppComponent_0_5 = t1;
        this._compView_0.create$2(0, t1, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._AppComponent_0_5, [t2]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_Document_woc && 0 === nodeIndex)
          return this.get$_Document_0_6();
        if (token === C.Type_Window_0H0 && 0 === nodeIndex)
          return this.get$_Window_0_7();
        if (token === C.Type_DomService_2jN && 0 === nodeIndex)
          return this.get$_DomService_0_8();
        if (token === C.Type_AcxImperativeViewUtils_Ucj && 0 === nodeIndex)
          return this.get$_AcxImperativeViewUtils_0_9();
        if (token === C.Type_DomRuler_2Vk && 0 === nodeIndex)
          return this.get$_DomRuler_0_10();
        if (token === C.Type_ManagedZone_s3L && 0 === nodeIndex)
          return this.get$_ManagedZone_0_11();
        if (token === C.OpaqueToken_overlayContainerName && 0 === nodeIndex)
          return this.get$_overlayContainerName_0_12();
        if (token === C.OpaqueToken_overlayContainerParent && 0 === nodeIndex)
          return this.get$_overlayContainerParent_0_13();
        if (token === C.OpaqueToken_overlayContainer && 0 === nodeIndex)
          return this.get$_overlayContainer_0_14();
        if (token === C.OpaqueToken_overlaySyncDom && 0 === nodeIndex)
          return this.get$_overlaySyncDom_0_15();
        if (token === C.OpaqueToken_overlayRepositionLoop && 0 === nodeIndex)
          return this.get$_overlayRepositionLoop_0_16();
        if (token === C.Type_OverlayStyleConfig_rp8 && 0 === nodeIndex)
          return this.get$_OverlayStyleConfig_0_17();
        if (token === C.Type_ZIndexer_ViP && 0 === nodeIndex)
          return this.get$_ZIndexer_0_18();
        if (token === C.Type_OverlayDomRenderService_qUY && 0 === nodeIndex)
          return this.get$_OverlayDomRenderService_0_19();
        if (token === C.Type_OverlayService_4iH && 0 === nodeIndex)
          return this.get$_OverlayService_0_20();
        if (token === C.OpaqueToken_defaultPopupPositions && 0 === nodeIndex) {
          if (this.__defaultPopupPositions_0_21 == null)
            this.set$__defaultPopupPositions_0_21(C.List_ezW);
          return this.__defaultPopupPositions_0_21;
        }
        if (token === C.Type_DomPopupSourceFactory_gmZ && 0 === nodeIndex) {
          t1 = this.__DomPopupSourceFactory_0_22;
          if (t1 == null) {
            t1 = new K.DomPopupSourceFactory(this.get$_DomRuler_0_10());
            this.__DomPopupSourceFactory_0_22 = t1;
          }
          return t1;
        }
        if ((token === C.Type_Clock_MYz || token === C.OpaqueToken_8qt) && 0 === nodeIndex) {
          t1 = this.__Clock_0_23;
          if (t1 == null) {
            this.__Clock_0_23 = C.Clock_systemTime;
            t1 = C.Clock_systemTime;
          }
          return t1;
        }
        if (token === C.Type_InteropBarcodeService_P5u && 0 === nodeIndex) {
          t1 = this.__InteropBarcodeService_0_25;
          if (t1 == null) {
            t1 = $.serviceSingleton;
            if (t1 == null) {
              t1 = new Y.InteropBarcodeService();
              $.$get$context().$indexSet(0, "jsInteropToDart", P.allowInterop(t1.get$_acceptJsObject(), {func: 1, ret: -1, args: [P.JsObject]}));
              t1.set$_barcodeStreamer(new P._SyncBroadcastStreamController(null, null, 0, [L.Barcode]));
              $.serviceSingleton = t1;
            }
            this.__InteropBarcodeService_0_25 = t1;
          }
          return t1;
        }
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._AppComponent_0_5.ngOnInit$0();
        this._compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._compView_0.destroy$0();
      },
      $asAppView: function() {
        return [Q.AppComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_admin_admin_component.css.shim.dart", "package:angular_tour_of_heroes/src/component/admin/admin_component.css.shim.dart",, T, {}], ["", "package:angular_tour_of_heroes/src/component/admin/admin_component.dart",, O, {
    "^": "",
    AdminComponent: {
      "^": "Object;_admin_component$_router,0adminMenu",
      set$adminMenu: function(adminMenu) {
        this.adminMenu = H.assertSubtype(adminMenu, "$isMenuModel", [[D.MenuItem,,]], "$asMenuModel");
      },
      ngOnInit$0: function() {
        var t1 = [D.MenuItem,,];
        this.set$adminMenu(D.MenuModel$(H.setRuntimeTypeInfo([D.MenuItemGroup$(H.setRuntimeTypeInfo([D.MenuItem$("Tournaments", new O.AdminComponent_ngOnInit_closure(this), null, true, null, null, null, null, null, null, null, null), D.MenuItem$("Matches", new O.AdminComponent_ngOnInit_closure0(this), null, true, null, null, null, null, null, null, null, null), D.MenuItem$("Players", new O.AdminComponent_ngOnInit_closure1(this), null, true, null, null, null, null, null, null, null, null)], [t1]), null, true, false, true, t1)], [[D.MenuItemGroup, [D.MenuItem,,]]]), null, null, null, t1));
      }
    },
    AdminComponent_ngOnInit_closure: {
      "^": "Closure:23;$this",
      call$0: function() {
        return this.$this._admin_component$_router.navigate$1(0, $.$get$RoutePaths_list().toUrl$0(0));
      }
    },
    AdminComponent_ngOnInit_closure0: {
      "^": "Closure:23;$this",
      call$0: function() {
        return this.$this._admin_component$_router.navigate$1(0, $.$get$RoutePaths_list().toUrl$0(0));
      }
    },
    AdminComponent_ngOnInit_closure1: {
      "^": "Closure:23;$this",
      call$0: function() {
        return this.$this._admin_component$_router.navigate$1(0, $.$get$RoutePaths_list().toUrl$0(0));
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/admin/admin_component.template.dart",, K, {
    "^": "",
    viewFactory_AdminComponentHost0: [function(parentView, parentIndex) {
      var t1 = new K._ViewAdminComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, O.AdminComponent));
      return t1;
    }, "call$2", "admin_component_template__viewFactory_AdminComponentHost0$closure", 8, 0, 243],
    ViewAdminComponent0: {
      "^": "AppView;0_admin_component_template$_compView_1,0_RaisableMenuComponent_1_5,0_admin_component_template$_compView_4,0_MaterialIconComponent_4_5,0_admin_component_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, _el_2, t2, _el_4;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "appcontainer";
        this.addShimC$1(_el_0);
        t1 = G.ViewRaisableMenuComponent0$(this, 1);
        this._admin_component_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        this.addShimC$1(_el_1);
        t1 = P.StreamController_StreamController(null, null, null, null, false, -1);
        this._RaisableMenuComponent_1_5 = new F.RaisableMenuComponent(_el_1, t1, new R.Disposer(true, false), false, false, true, false, null, new Q.ObservableReference(Q.observable_ObservableReference__defaultEq$closure(), false, false, false, [P.bool]), 0, null, new P._SyncBroadcastStreamController(null, null, 0, [W.FocusEvent]), false);
        _el_2 = doc.createElement("section");
        t1 = J.getInterceptor$x(_el_2);
        t1.setAttribute$2(_el_2, "menu-button", "");
        this.addShimE$1(_el_2);
        t1.append$1(_el_2, doc.createTextNode("Services"));
        t2 = M.ViewMaterialIconComponent0$(this, 4);
        this._admin_component_template$_compView_4 = t2;
        _el_4 = t2.rootEl;
        t1.append$1(_el_2, _el_4);
        t1 = J.getInterceptor$x(_el_4);
        t1.setAttribute$2(_el_4, "baseline", "");
        t1.setAttribute$2(_el_4, "icon", "arrow_drop_down");
        t1.setAttribute$2(_el_4, "size", "medium");
        this.addShimC$1(_el_4);
        t1 = new Y.MaterialIconComponent(_el_4);
        this._MaterialIconComponent_4_5 = t1;
        this._admin_component_template$_compView_4.create$2(0, t1, []);
        this._admin_component_template$_compView_1.create$2(0, this._RaisableMenuComponent_1_5, [H.setRuntimeTypeInfo([_el_2], [W.Element]), C.List_empty]);
        this.init$2(C.List_empty, null);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        if (token === C.Type_HasDisabled_qzc && 1 <= nodeIndex && nodeIndex <= 4)
          return this._RaisableMenuComponent_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, currVal_0, t1;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._RaisableMenuComponent_1_5.raised = true;
          changed = true;
        } else
          changed = false;
        currVal_0 = _ctx.adminMenu;
        t1 = this._admin_component_template$_expr_0;
        if (t1 == null ? currVal_0 != null : t1 !== currVal_0) {
          this._RaisableMenuComponent_1_5.MenuPopupWrapper_menu = currVal_0;
          this._admin_component_template$_expr_0 = currVal_0;
          changed = true;
        }
        if (changed)
          this._admin_component_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck) {
          this._MaterialIconComponent_4_5.set$icon(0, "arrow_drop_down");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._admin_component_template$_compView_4.viewData.set$cdMode(1);
        this._admin_component_template$_compView_1.detectChanges$0();
        this._admin_component_template$_compView_4.detectChanges$0();
        if (firstCheck)
          this._RaisableMenuComponent_1_5.ngAfterViewInit$0();
      },
      destroyInternal$0: function() {
        this._admin_component_template$_compView_1.destroy$0();
        this._admin_component_template$_compView_4.destroy$0();
        this._RaisableMenuComponent_1_5._raisable_menu_component$_disposer.dispose$0();
      },
      $asAppView: function() {
        return [O.AdminComponent];
      }
    },
    _ViewAdminComponentHost0: {
      "^": "AppView;0_admin_component_template$_compView_0,0_AdminComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new K.ViewAdminComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = O.AdminComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("admin-comp");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewAdminComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$AdminComponent());
          $.ViewAdminComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._admin_component_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t1 = new O.AdminComponent(H.interceptedTypeCheck(this.injectorGet$2(C.Type_Router_yx3, this.viewData.parentIndex), "$isRouter"));
        this._AdminComponent_0_5 = t1;
        this._admin_component_template$_compView_0.create$2(0, t1, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._AdminComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._AdminComponent_0_5.ngOnInit$0();
        this._admin_component_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._admin_component_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [O.AdminComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_dash_dashboard_component.css.shim.dart", "package:angular_tour_of_heroes/src/component/dash/dashboard_component.css.shim.dart",, R, {}], ["", "package:angular_tour_of_heroes/src/component/dash/dashboard_component.dart",, K, {
    "^": "",
    DashboardComponent: {
      "^": "Object;sections",
      getSectionLink$1: function(section) {
        var t1, t2;
        t1 = section.name;
        switch (t1.toLowerCase()) {
          case "admin":
            return $.$get$RoutePaths_admin().toUrl$0(0);
        }
        t2 = P.String;
        return $.$get$RoutePaths_list().toUrl$1$parameters(0, P.LinkedHashMap_LinkedHashMap$_literal(["type", t1.toLowerCase()], t2, t2));
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/dash/dashboard_component.template.dart",, T, {
    "^": "",
    viewFactory_DashboardComponent1: [function(parentView, parentIndex) {
      var t1 = new T._ViewDashboardComponent1(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, K.DashboardComponent));
      t1.componentType = $.ViewDashboardComponent0__renderType;
      return t1;
    }, "call$2", "dashboard_component_template__viewFactory_DashboardComponent1$closure", 8, 0, 31],
    viewFactory_DashboardComponent2: [function(parentView, parentIndex) {
      var t1 = new T._ViewDashboardComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, K.DashboardComponent));
      t1.componentType = $.ViewDashboardComponent0__renderType;
      return t1;
    }, "call$2", "dashboard_component_template__viewFactory_DashboardComponent2$closure", 8, 0, 31],
    viewFactory_DashboardComponent3: [function(parentView, parentIndex) {
      var t1 = new T._ViewDashboardComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, K.DashboardComponent));
      t1.componentType = $.ViewDashboardComponent0__renderType;
      return t1;
    }, "call$2", "dashboard_component_template__viewFactory_DashboardComponent3$closure", 8, 0, 31],
    viewFactory_DashboardComponentHost0: [function(parentView, parentIndex) {
      var t1 = new T._ViewDashboardComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, K.DashboardComponent));
      return t1;
    }, "call$2", "dashboard_component_template__viewFactory_DashboardComponentHost0$closure", 8, 0, 31],
    ViewDashboardComponent0: {
      "^": "AppView;0_dashboard_component_template$_appEl_3,0_dashboard_component_template$_NgFor_3_9,0_dashboard_component_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, _el_2, t1, _anchor_3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createAndAppend(doc, "h3", parentRenderNode);
        this.addShimE$1(_el_0);
        J.append$1$x(_el_0, doc.createTextNode("Available Functions"));
        _el_2 = S.createDivAndAppend(doc, parentRenderNode);
        _el_2.className = "grid grid-pad";
        this.addShimC$1(_el_2);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_3 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        (_el_2 && C.DivElement_methods).append$1(_el_2, _anchor_3);
        t1 = new V.ViewContainer(3, 2, this, _anchor_3);
        this._dashboard_component_template$_appEl_3 = t1;
        this._dashboard_component_template$_NgFor_3_9 = new R.NgFor(t1, new D.TemplateRef(t1, T.dashboard_component_template__viewFactory_DashboardComponent1$closure()));
        this.init$2(C.List_empty, null);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = this.ctx.sections;
        t1 = this._dashboard_component_template$_expr_0;
        if (t1 !== currVal_0) {
          this._dashboard_component_template$_NgFor_3_9.set$ngForOf(currVal_0);
          this._dashboard_component_template$_expr_0 = currVal_0;
        }
        this._dashboard_component_template$_NgFor_3_9.ngDoCheck$0();
        this._dashboard_component_template$_appEl_3.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._dashboard_component_template$_appEl_3.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [K.DashboardComponent];
      }
    },
    _ViewDashboardComponent1: {
      "^": "AppView;0_dashboard_component_template$_appEl_1,0_dashboard_component_template$_NgIf_1_9,0_dashboard_component_template$_appEl_2,0_dashboard_component_template$_NgIf_2_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _el_0, t1, _anchor_1, t2, t3, _anchor_2;
        _el_0 = document.createElement("div");
        _el_0.className = "col-1-4";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        t2 = J.getInterceptor$x(_el_0);
        t2.append$1(_el_0, _anchor_1);
        t3 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._dashboard_component_template$_appEl_1 = t3;
        this._dashboard_component_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, T.dashboard_component_template__viewFactory_DashboardComponent2$closure()), t3, false);
        _anchor_2 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(_el_0, _anchor_2);
        t2 = new V.ViewContainer(2, 0, this, _anchor_2);
        this._dashboard_component_template$_appEl_2 = t2;
        this._dashboard_component_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t2, T.dashboard_component_template__viewFactory_DashboardComponent3$closure()), t2, false);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var local_section, t1, t2;
        local_section = H.interceptedTypeCheck(this.locals.$index(0, "$implicit"), "$isDashSection");
        t1 = this._dashboard_component_template$_NgIf_1_9;
        t2 = local_section.enabled;
        t1.set$ngIf(!t2);
        this._dashboard_component_template$_NgIf_2_9.set$ngIf(t2);
        this._dashboard_component_template$_appEl_1.detectChangesInNestedViews$0();
        this._dashboard_component_template$_appEl_2.detectChangesInNestedViews$0();
      },
      destroyInternal$0: function() {
        this._dashboard_component_template$_appEl_1.destroyNestedViews$0();
        this._dashboard_component_template$_appEl_2.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [K.DashboardComponent];
      }
    },
    _ViewDashboardComponent2: {
      "^": "AppView;0_dashboard_component_template$_expr_0,0_dashboard_component_template$_text_4,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, _el_1, _el_2, _el_3, t1;
        doc = document;
        _el_0 = doc.createElement("div");
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        _el_1 = S.createDivAndAppend(doc, _el_0);
        _el_1.className = "module section";
        this.addShimC$1(_el_1);
        _el_2 = S.createAndAppend(doc, "i", _el_1);
        this.addShimE$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        t1 = doc.createTextNode("");
        this._dashboard_component_template$_text_4 = t1;
        J.append$1$x(_el_3, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var currVal_0, t1;
        currVal_0 = Q.interpolate0(H.interceptedTypeCheck(this.parentView.locals.$index(0, "$implicit"), "$isDashSection").name);
        t1 = this._dashboard_component_template$_expr_0;
        if (t1 !== currVal_0) {
          this._dashboard_component_template$_text_4.textContent = currVal_0;
          this._dashboard_component_template$_expr_0 = currVal_0;
        }
      },
      $asAppView: function() {
        return [K.DashboardComponent];
      }
    },
    _ViewDashboardComponent3: {
      "^": "AppView;0_RouterLink_0_5,0_dashboard_component_template$_expr_0,0_dashboard_component_template$_expr_1,0_dashboard_component_template$_el_0,0_text_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, t1, t2, _el_1, _el_2;
        doc = document;
        t1 = doc.createElement("a");
        H.interceptedTypeCheck(t1, "$isAnchorElement");
        this._dashboard_component_template$_el_0 = t1;
        this.addShimC$1(t1);
        t1 = this.parentView.parentView;
        t2 = t1.parentView;
        t1 = G.RouterLink$(H.interceptedTypeCheck(t2.injectorGet$2(C.Type_Router_yx3, t1.viewData.parentIndex), "$isRouter"), H.interceptedTypeCheck(t2.injectorGet$2(C.Type_Location_ckm, t1.viewData.parentIndex), "$isLocation"), null, this._dashboard_component_template$_el_0);
        this._RouterLink_0_5 = new G.RouterLinkNgCd(t1, false);
        _el_1 = S.createDivAndAppend(doc, this._dashboard_component_template$_el_0);
        _el_1.className = "module section";
        this.addShimC$1(_el_1);
        _el_2 = S.createAndAppend(doc, "h4", _el_1);
        this.addShimE$1(_el_2);
        t1 = doc.createTextNode("");
        this._text_3 = t1;
        J.append$1$x(_el_2, t1);
        t1 = this._dashboard_component_template$_el_0;
        t2 = this._RouterLink_0_5.instance;
        (t1 && C.AnchorElement_methods).addEventListener$2(t1, "click", this.eventHandler1$2$1(t2.get$onClick(t2), W.Event, W.MouseEvent));
        this.init0$1(this._dashboard_component_template$_el_0);
      },
      detectChangesInternal$0: function() {
        var _ctx, local_section, currVal_0, t1, t2, t3, t4, url, currVal_1;
        _ctx = this.ctx;
        local_section = H.interceptedTypeCheck(this.parentView.locals.$index(0, "$implicit"), "$isDashSection");
        currVal_0 = _ctx.getSectionLink$1(local_section);
        t1 = this._dashboard_component_template$_expr_0;
        if (t1 !== currVal_0) {
          t1 = this._RouterLink_0_5.instance;
          t1._routerLink = currVal_0;
          t1._cachedVisibleHref = null;
          t1._cachedUrl = null;
          this._dashboard_component_template$_expr_0 = currVal_0;
        }
        t1 = this._RouterLink_0_5;
        t2 = this._dashboard_component_template$_el_0;
        t3 = t1.instance;
        currVal_0 = t3._cachedVisibleHref;
        if (currVal_0 == null) {
          t4 = t3._router_link_directive$_location;
          url = t3._routerLink;
          t4.toString;
          if (url.length !== 0 && !J.startsWith$1$s(url, "/"))
            url = "/" + H.S(url);
          currVal_0 = t4.locationStrategy.prepareExternalUrl$1(url);
          t3._cachedVisibleHref = currVal_0;
        }
        t3 = t1._router_link_directive_template$_expr_0;
        if (t3 !== currVal_0) {
          t1.setAttr$3(t2, "href", currVal_0);
          t1._router_link_directive_template$_expr_0 = currVal_0;
        }
        currVal_1 = Q.interpolate0(local_section.name);
        t1 = this._dashboard_component_template$_expr_1;
        if (t1 !== currVal_1) {
          this._text_3.textContent = currVal_1;
          this._dashboard_component_template$_expr_1 = currVal_1;
        }
      },
      destroyInternal$0: function() {
        var t1 = this._RouterLink_0_5.instance._keyPressSubscription;
        if (!(t1 == null))
          t1.cancel$0(0);
      },
      $asAppView: function() {
        return [K.DashboardComponent];
      }
    },
    _ViewDashboardComponentHost0: {
      "^": "AppView;0_dashboard_component_template$_compView_0,0_DashboardComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new T.ViewDashboardComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = K.DashboardComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("tr-dashboard");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewDashboardComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$DashboardComponent());
          $.ViewDashboardComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._dashboard_component_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new K.DashboardComponent($.$get$dashSections());
        this._DashboardComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._DashboardComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        this._dashboard_component_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._dashboard_component_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [K.DashboardComponent];
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/dash/sections.dart",, E, {}], ["asset_angular_tour_of_heroes_lib_src_component_detailView_entrant_entrant.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/entrant/entrant.css.shim.dart",, F, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/entrant/entrant.dart",, D, {
    "^": "",
    EntrantDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_entrant$_buttonStreamer,0barcodeSlot",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isEntrant");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      set$_entrant$_buttonStreamer: function(_buttonStreamer) {
        this._entrant$_buttonStreamer = H.assertSubtype(_buttonStreamer, "$isStreamController", [P.String], "$asStreamController");
      },
      set$barcodeSlot: function(barcodeSlot) {
        this.barcodeSlot = H.interceptedTypeCheck(barcodeSlot, "$isMaterialInputComponent");
      },
      get$buttonStream: function() {
        var t1 = this._entrant$_buttonStreamer;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        this._entrant$_buttonStreamer.add$1(0, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/entrant/entrant.template.dart",, S, {
    "^": "",
    viewFactory_EntrantDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new S._ViewEntrantDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, D.EntrantDetailComponent));
      t1.componentType = $.ViewEntrantDetailComponent0__renderType;
      return t1;
    }, "call$2", "entrant_template__viewFactory_EntrantDetailComponent1$closure", 8, 0, 74],
    viewFactory_EntrantDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new S._ViewEntrantDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, D.EntrantDetailComponent));
      return t1;
    }, "call$2", "entrant_template__viewFactory_EntrantDetailComponentHost0$closure", 8, 0, 74],
    ViewEntrantDetailComponent0: {
      "^": "AppView;0_entrant_template$_compView_1,0_entrant_template$_MaterialExpansionPanel_1_5,0_entrant_template$_compView_5,0_entrant_template$_DeferredValidator_5_5,0_entrant_template$_NgValidators_5_6,0_entrant_template$_NgModel_5_7,0_entrant_template$_NgControl_5_8,0_entrant_template$_MaterialInputComponent_5_9,0_entrant_template$_BaseMaterialInput_5_10,0_entrant_template$_MaterialInputDefaultValueAccessor_5_11,0_entrant_template$_compView_9,0_entrant_template$_DeferredValidator_9_5,0_entrant_template$_NgValidators_9_6,0_entrant_template$_NgModel_9_7,0_entrant_template$_NgControl_9_8,0_entrant_template$_MaterialInputComponent_9_9,0_entrant_template$_BaseMaterialInput_9_10,0_entrant_template$_MaterialInputDefaultValueAccessor_9_11,0_entrant_template$_compView_13,0_entrant_template$_DeferredValidator_13_5,0_NgValidators_13_6,0_NgModel_13_7,0_NgControl_13_8,0_MaterialInputComponent_13_9,0_BaseMaterialInput_13_10,0_MaterialInputDefaultValueAccessor_13_11,0_entrant_template$_appEl_14,0_entrant_template$_NgIf_14_9,0_entrant_template$_expr_4,0_entrant_template$_expr_6,0_entrant_template$_expr_8,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _anchor_14, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._entrant_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._entrant_template$_compView_1.viewData.ref;
        t1 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t4 = [P.bool];
        t5 = $.$get$MaterialExpansionPanel__msgSave();
        t6 = $.$get$MaterialExpansionPanel__msgCancel();
        t7 = [[L.AsyncAction, P.bool]];
        t1 = new T.MaterialExpansionPanel(t2, t3, t1, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t4), new P._SyncBroadcastStreamController(null, null, 0, t4), false, false, false, false, false, false, false, false, true, true, false, t5, t6, new P._SyncBroadcastStreamController(null, null, 0, t7), new P._SyncBroadcastStreamController(null, null, 0, t7), new P._SyncBroadcastStreamController(null, null, 0, t7), new P._SyncBroadcastStreamController(null, null, 0, t7));
        this._entrant_template$_MaterialExpansionPanel_1_5 = t1;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t1 = Q.ViewMaterialInputComponent0$(this, 5);
        this._entrant_template$_compView_5 = t1;
        _el_5 = t1.rootEl;
        J.append$1$x(_el_2, _el_5);
        J.setAttribute$2$x(_el_5, "placeholder", "-");
        this.addShimC$1(_el_5);
        t1 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t1));
        this._entrant_template$_DeferredValidator_5_5 = t2;
        t2 = [t2];
        this._entrant_template$_NgValidators_5_6 = t2;
        t2 = U.NgModel$(t2, null);
        this._entrant_template$_NgModel_5_7 = t2;
        this._entrant_template$_NgControl_5_8 = t2;
        t2 = L.MaterialInputComponent$(null, null, null, t2, this._entrant_template$_compView_5.viewData.ref, this._entrant_template$_DeferredValidator_5_5);
        this._entrant_template$_MaterialInputComponent_5_9 = t2;
        this._entrant_template$_BaseMaterialInput_5_10 = t2;
        t3 = this._entrant_template$_NgControl_5_8;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t2, t3);
        t4.BaseMaterialInputValueAccessor$2(t2, t3);
        this._entrant_template$_MaterialInputDefaultValueAccessor_5_11 = t4;
        this._entrant_template$_compView_5.create$2(0, this._entrant_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 9);
        this._entrant_template$_compView_9 = t2;
        _el_9 = t2.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t1));
        this._entrant_template$_DeferredValidator_9_5 = t2;
        t2 = [t2];
        this._entrant_template$_NgValidators_9_6 = t2;
        t2 = U.NgModel$(t2, null);
        this._entrant_template$_NgModel_9_7 = t2;
        this._entrant_template$_NgControl_9_8 = t2;
        t2 = L.MaterialInputComponent$(null, null, null, t2, this._entrant_template$_compView_9.viewData.ref, this._entrant_template$_DeferredValidator_9_5);
        this._entrant_template$_MaterialInputComponent_9_9 = t2;
        this._entrant_template$_BaseMaterialInput_9_10 = t2;
        t3 = this._entrant_template$_NgControl_9_8;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t2, t3);
        t4.BaseMaterialInputValueAccessor$2(t2, t3);
        this._entrant_template$_MaterialInputDefaultValueAccessor_9_11 = t4;
        this._entrant_template$_compView_9.create$2(0, this._entrant_template$_MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Event ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 13);
        this._entrant_template$_compView_13 = t2;
        _el_13 = t2.rootEl;
        J.append$1$x(_el_10, _el_13);
        this.addShimC$1(_el_13);
        t1 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t1));
        this._entrant_template$_DeferredValidator_13_5 = t1;
        t1 = [t1];
        this._NgValidators_13_6 = t1;
        t1 = U.NgModel$(t1, null);
        this._NgModel_13_7 = t1;
        this._NgControl_13_8 = t1;
        t1 = L.MaterialInputComponent$(null, null, null, t1, this._entrant_template$_compView_13.viewData.ref, this._entrant_template$_DeferredValidator_13_5);
        this._MaterialInputComponent_13_9 = t1;
        this._BaseMaterialInput_13_10 = t1;
        t2 = this._NgControl_13_8;
        t3 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t1, t2);
        t3.BaseMaterialInputValueAccessor$2(t1, t2);
        this._MaterialInputDefaultValueAccessor_13_11 = t3;
        this._entrant_template$_compView_13.create$2(0, this._MaterialInputComponent_13_9, [C.List_empty, C.List_empty]);
        this._entrant_template$_compView_1.create$2(0, this._entrant_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10], [W.Element]), C.List_empty]);
        t3 = $.$get$_viewContainerAnchor();
        _anchor_14 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_14);
        t3 = new V.ViewContainer(14, 0, this, _anchor_14);
        this._entrant_template$_appEl_14 = t3;
        this._entrant_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t3, S.entrant_template__viewFactory_EntrantDetailComponent1$closure()), t3, false);
        t3 = this._entrant_template$_NgModel_9_7._update;
        t3.toString;
        subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_entrant_template$_handle_ngModelChange_9_0(), null, null));
        t3 = this._NgModel_13_7._update;
        t3.toString;
        this.init$2(C.List_empty, [subscription_0, new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_entrant_template$_handle_ngModelChange_13_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._entrant_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._entrant_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._entrant_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._entrant_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._entrant_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._entrant_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._entrant_template$_DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._entrant_template$_NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._entrant_template$_NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._entrant_template$_MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._entrant_template$_BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._entrant_template$_MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._entrant_template$_DeferredValidator_13_5;
        if (t2 && 13 === nodeIndex)
          return this._NgModel_13_7;
        if (t3 && 13 === nodeIndex)
          return this._NgControl_13_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._MaterialInputComponent_13_9;
        if (t5 && 13 === nodeIndex)
          return this._BaseMaterialInput_13_10;
        if (t6 && 13 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_13_11;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 13)
          return this._entrant_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_8, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._entrant_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._entrant_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._entrant_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._entrant_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._entrant_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._entrant_template$_expr_4;
        if (t1 !== true) {
          t1 = this._entrant_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._entrant_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_5.viewData.set$cdMode(1);
        this._entrant_template$_NgModel_9_7.set$model(_ctx.item.name);
        this._entrant_template$_NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._entrant_template$_NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._entrant_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._entrant_template$_MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._entrant_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_9.viewData.set$cdMode(1);
        this._NgModel_13_7.set$model(_ctx.item.eventId);
        this._NgModel_13_7.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_13_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_8 = t1 >= 1;
        t1 = this._entrant_template$_expr_8;
        if (t1 !== currVal_8) {
          t1 = this._MaterialInputComponent_13_9;
          t1._disabled = currVal_8;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._entrant_template$_expr_8 = currVal_8;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_13.viewData.set$cdMode(1);
        t1 = this._entrant_template$_NgIf_14_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._entrant_template$_appEl_14.detectChangesInNestedViews$0();
        this._entrant_template$_compView_1.detectChanges$0();
        this._entrant_template$_compView_5.detectChanges$0();
        this._entrant_template$_compView_9.detectChanges$0();
        this._entrant_template$_compView_13.detectChanges$0();
        if (firstCheck) {
          this._entrant_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._entrant_template$_MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._MaterialInputComponent_13_9.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._entrant_template$_appEl_14.destroyNestedViews$0();
        this._entrant_template$_compView_1.destroy$0();
        this._entrant_template$_compView_5.destroy$0();
        this._entrant_template$_compView_9.destroy$0();
        this._entrant_template$_compView_13.destroy$0();
        var t1 = this._entrant_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._entrant_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._entrant_template$_MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._entrant_template$_MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._MaterialInputComponent_13_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_13_11.disposer.dispose$0();
        this._entrant_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _entrant_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_entrant_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _entrant_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$eventId(H.intTypeCheck($$event));
      }, "call$1", "get$_entrant_template$_handle_ngModelChange_13_0", 4, 0, 1],
      $asAppView: function() {
        return [D.EntrantDetailComponent];
      }
    },
    _ViewEntrantDetailComponent1: {
      "^": "AppView;0_entrant_template$_compView_0,0_entrant_template$_MaterialExpansionPanel_0_5,0_entrant_template$_compView_2,0_entrant_template$_AcxDarkTheme_2_5,0_entrant_template$_MaterialButtonComponent_2_6,0_entrant_template$_compView_4,0_entrant_template$_AcxDarkTheme_4_5,0_entrant_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._entrant_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._entrant_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._entrant_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._entrant_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._entrant_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._entrant_template$_compView_2.viewData.ref, null);
        this._entrant_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._entrant_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._entrant_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._entrant_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._entrant_template$_compView_4.viewData.ref, null);
        this._entrant_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._entrant_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._entrant_template$_compView_0.create$2(0, this._entrant_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._entrant_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_entrant_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._entrant_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_entrant_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._entrant_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._entrant_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._entrant_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._entrant_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._entrant_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._entrant_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._entrant_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._entrant_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._entrant_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._entrant_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._entrant_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._entrant_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._entrant_template$_compView_2.detectHostChanges$1(firstCheck);
        this._entrant_template$_compView_4.detectHostChanges$1(firstCheck);
        this._entrant_template$_compView_0.detectChanges$0();
        this._entrant_template$_compView_2.detectChanges$0();
        this._entrant_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._entrant_template$_compView_0.destroy$0();
        this._entrant_template$_compView_2.destroy$0();
        this._entrant_template$_compView_4.destroy$0();
        this._entrant_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _entrant_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_entrant_template$_handle_trigger_2_0", 4, 0, 1],
      _entrant_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_entrant_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [D.EntrantDetailComponent];
      }
    },
    _ViewEntrantDetailComponentHost0: {
      "^": "AppView;0_entrant_template$_compView_0,0_EntrantDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3, t4;
        t1 = P.String;
        t2 = new S.ViewEntrantDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3 = D.EntrantDetailComponent;
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_1, 0, t3));
        t4 = document.createElement("entrant-detail");
        t2.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewEntrantDetailComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$EntrantDetailComponent());
          $.ViewEntrantDetailComponent0__renderType = t4;
        }
        t2.setupComponentType$1(t4);
        this._entrant_template$_compView_0 = t2;
        this.rootEl = t2.rootEl;
        t2 = new D.EntrantDetailComponent();
        t2.set$_entrant$_buttonStreamer(new P._SyncBroadcastStreamController(null, null, 0, [t1]));
        this._EntrantDetailComponent_0_5 = t2;
        this._entrant_template$_compView_0.create$2(0, t2, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._EntrantDetailComponent_0_5, [t3]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._EntrantDetailComponent_0_5.ngOnInit$0();
        this._entrant_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._entrant_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [D.EntrantDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_event_event.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/event/event.css.shim.dart",, Q, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/event/event.dart",, X, {
    "^": "",
    EventDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isEvent0");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      get$buttonStream: function() {
        return C.JSNull_methods.get$stream(this._buttonStreamer);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        C.JSNull_methods.add$1(this._buttonStreamer, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/event/event.template.dart",, G, {
    "^": "",
    viewFactory_EventDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new G._ViewEventDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, X.EventDetailComponent));
      t1.componentType = $.ViewEventDetailComponent0__renderType;
      return t1;
    }, "call$2", "event_template__viewFactory_EventDetailComponent1$closure", 8, 0, 75],
    viewFactory_EventDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new G._ViewEventDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, X.EventDetailComponent));
      return t1;
    }, "call$2", "event_template__viewFactory_EventDetailComponentHost0$closure", 8, 0, 75],
    ViewEventDetailComponent0: {
      "^": "AppView;0_compView_1,0_MaterialExpansionPanel_1_5,0_compView_5,0_DeferredValidator_5_5,0_NgValidators_5_6,0_NgModel_5_7,0_NgControl_5_8,0_MaterialInputComponent_5_9,0_BaseMaterialInput_5_10,0_MaterialInputDefaultValueAccessor_5_11,0_compView_9,0_DeferredValidator_9_5,0_NgValidators_9_6,0_NgModel_9_7,0_NgControl_9_8,0_MaterialInputComponent_9_9,0_BaseMaterialInput_9_10,0_MaterialInputDefaultValueAccessor_9_11,0_compView_13,0_DeferredValidator_13_5,0_MaterialNumberValidator_13_6,0_NgValidators_13_7,0_NgModel_13_8,0_NgControl_13_9,0_MaterialInputComponent_13_10,0_BaseMaterialInput_13_11,0_MaterialInputDefaultValueAccessor_13_12,0_MaterialNumberValueAccessor_13_13,0_appEl_14,0_NgIf_14_9,0_event_template$_expr_4,0_event_template$_expr_6,0_event_template$_expr_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _anchor_14, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._NgModel_5_7 = t3;
        this._NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._compView_5.viewData.ref, this._DeferredValidator_5_5);
        this._MaterialInputComponent_5_9 = t3;
        this._BaseMaterialInput_5_10 = t3;
        t4 = this._NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._MaterialInputDefaultValueAccessor_5_11 = t5;
        this._compView_5.create$2(0, this._MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._DeferredValidator_9_5 = t3;
        t3 = [t3];
        this._NgValidators_9_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._NgModel_9_7 = t3;
        this._NgControl_9_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._compView_9.viewData.ref, this._DeferredValidator_9_5);
        this._MaterialInputComponent_9_9 = t3;
        this._BaseMaterialInput_9_10 = t3;
        t4 = this._NgControl_9_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._MaterialInputDefaultValueAccessor_9_11 = t5;
        this._compView_9.create$2(0, this._MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Owner ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._DeferredValidator_13_5 = t2;
        t3 = new F.MaterialNumberValidator();
        this._MaterialNumberValidator_13_6 = t3;
        t3 = [t2, t3];
        this._NgValidators_13_7 = t3;
        t3 = U.NgModel$(t3, null);
        this._NgModel_13_8 = t3;
        this._NgControl_13_9 = t3;
        t3 = L.MaterialInputComponent$("number", null, null, t3, this._compView_13.viewData.ref, this._DeferredValidator_13_5);
        this._MaterialInputComponent_13_10 = t3;
        this._BaseMaterialInput_13_11 = t3;
        t2 = this._NgControl_13_9;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t2);
        t4.BaseMaterialInputValueAccessor$2(t3, t2);
        this._MaterialInputDefaultValueAccessor_13_12 = t4;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._BaseMaterialInput_13_11, this._NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._MaterialNumberValueAccessor_13_13 = t1;
        this._compView_13.create$2(0, this._MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        this._compView_1.create$2(0, this._MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10], [W.Element]), C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_14 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_14);
        t1 = new V.ViewContainer(14, 0, this, _anchor_14);
        this._appEl_14 = t1;
        this._NgIf_14_9 = new K.NgIf(new D.TemplateRef(t1, G.event_template__viewFactory_EventDetailComponent1$closure()), t1, false);
        t1 = this._NgModel_9_7._update;
        t1.toString;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_ngModelChange_9_0(), null, null));
        t1 = this._NgModel_13_8._update;
        t1.toString;
        this.init$2(C.List_empty, [subscription_0, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_ngModelChange_13_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._DeferredValidator_13_5;
        if (token === C.Type_MaterialNumberValidator_86y && 13 === nodeIndex)
          return this._MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_13_12;
        if (token === C.Type_MaterialNumberValueAccessor_mqh && 13 === nodeIndex)
          return this._MaterialNumberValueAccessor_13_13;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 13)
          return this._MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_9, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialExpansionPanel_1_5.ngOnInit$0();
        this._NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._event_template$_expr_4;
        if (t1 !== true) {
          t1 = this._MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._event_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_5.viewData.set$cdMode(1);
        this._NgModel_9_7.set$model(_ctx.item.name);
        this._NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._event_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._event_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_9.viewData.set$cdMode(1);
        this._NgModel_13_8.set$model(_ctx.item.ownerId);
        this._NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_9 = t1 >= 1;
        t1 = this._event_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this._MaterialInputComponent_13_10;
          t1._disabled = currVal_9;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._event_template$_expr_9 = currVal_9;
          changed = true;
        }
        if (changed)
          this._compView_13.viewData.set$cdMode(1);
        t1 = this._NgIf_14_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._appEl_14.detectChangesInNestedViews$0();
        this._compView_1.detectChanges$0();
        this._compView_5.detectChanges$0();
        this._compView_9.detectChanges$0();
        this._compView_13.detectChanges$0();
        if (firstCheck) {
          this._MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._MaterialInputComponent_13_10.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._appEl_14.destroyNestedViews$0();
        this._compView_1.destroy$0();
        this._compView_5.destroy$0();
        this._compView_9.destroy$0();
        this._compView_13.destroy$0();
        var t1 = this._MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        this._MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_handle_ngModelChange_9_0", 4, 0, 1],
      _handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$ownerId(H.intTypeCheck($$event));
      }, "call$1", "get$_handle_ngModelChange_13_0", 4, 0, 1],
      $asAppView: function() {
        return [X.EventDetailComponent];
      }
    },
    _ViewEventDetailComponent1: {
      "^": "AppView;0_event_template$_compView_0,0_MaterialExpansionPanel_0_5,0_event_template$_compView_2,0_AcxDarkTheme_2_5,0_MaterialButtonComponent_2_6,0_compView_4,0_AcxDarkTheme_4_5,0_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._event_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._event_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._event_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._event_template$_compView_2.viewData.ref, null);
        this._MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._event_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._compView_4.viewData.ref, null);
        this._MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._event_template$_compView_0.create$2(0, this._MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_2_0(), t1, t1));
        t5 = this._MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._event_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._event_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialButtonComponent_4_6.ngOnInit$0();
        this._event_template$_compView_2.detectHostChanges$1(firstCheck);
        this._compView_4.detectHostChanges$1(firstCheck);
        this._event_template$_compView_0.detectChanges$0();
        this._event_template$_compView_2.detectChanges$0();
        this._compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._event_template$_compView_0.destroy$0();
        this._event_template$_compView_2.destroy$0();
        this._compView_4.destroy$0();
        this._MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_handle_trigger_2_0", 4, 0, 1],
      _handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [X.EventDetailComponent];
      }
    },
    _ViewEventDetailComponentHost0: {
      "^": "AppView;0_event_template$_compView_0,0_EventDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new G.ViewEventDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = X.EventDetailComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("event-detail");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewEventDetailComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$EventDetailComponent());
          $.ViewEventDetailComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._event_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new X.EventDetailComponent();
        this._EventDetailComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._EventDetailComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._EventDetailComponent_0_5.ngOnInit$0();
        this._event_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._event_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [X.EventDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_game_game.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/game/game.css.shim.dart",, Z, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/game/game.dart",, D, {
    "^": "",
    GameDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_game$_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isGame");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      get$buttonStream: function() {
        return C.JSNull_methods.get$stream(this._game$_buttonStreamer);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Game : " + J.toString$0$($async$self.item.id));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        C.JSNull_methods.add$1(this._game$_buttonStreamer, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/game/game.template.dart",, G, {
    "^": "",
    viewFactory_GameDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new G._ViewGameDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, D.GameDetailComponent));
      t1.componentType = $.ViewGameDetailComponent0__renderType;
      return t1;
    }, "call$2", "game_template__viewFactory_GameDetailComponent1$closure", 8, 0, 76],
    viewFactory_GameDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new G._ViewGameDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, D.GameDetailComponent));
      return t1;
    }, "call$2", "game_template__viewFactory_GameDetailComponentHost0$closure", 8, 0, 76],
    ViewGameDetailComponent0: {
      "^": "AppView;0_game_template$_compView_1,0_game_template$_MaterialExpansionPanel_1_5,0_game_template$_compView_5,0_game_template$_DeferredValidator_5_5,0_game_template$_NgValidators_5_6,0_game_template$_NgModel_5_7,0_game_template$_NgControl_5_8,0_game_template$_MaterialInputComponent_5_9,0_game_template$_BaseMaterialInput_5_10,0_game_template$_MaterialInputDefaultValueAccessor_5_11,0_game_template$_compView_9,0_game_template$_DeferredValidator_9_5,0_game_template$_MaterialNumberValidator_9_6,0_game_template$_NgValidators_9_7,0_game_template$_NgModel_9_8,0_game_template$_NgControl_9_9,0_game_template$_MaterialInputComponent_9_10,0_game_template$_BaseMaterialInput_9_11,0_game_template$_MaterialInputDefaultValueAccessor_9_12,0_game_template$_MaterialNumberValueAccessor_9_13,0_game_template$_compView_13,0_game_template$_DeferredValidator_13_5,0_game_template$_MaterialNumberValidator_13_6,0_game_template$_NgValidators_13_7,0_game_template$_NgModel_13_8,0_game_template$_NgControl_13_9,0_game_template$_MaterialInputComponent_13_10,0_game_template$_BaseMaterialInput_13_11,0_game_template$_MaterialInputDefaultValueAccessor_13_12,0_game_template$_MaterialNumberValueAccessor_13_13,0_game_template$_appEl_14,0_game_template$_NgIf_14_9,0_game_template$_expr_4,0_game_template$_expr_7,0_game_template$_expr_10,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _anchor_14, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._game_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._game_template$_compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._game_template$_MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._game_template$_compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._game_template$_DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._game_template$_NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._game_template$_NgModel_5_7 = t3;
        this._game_template$_NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._game_template$_compView_5.viewData.ref, this._game_template$_DeferredValidator_5_5);
        this._game_template$_MaterialInputComponent_5_9 = t3;
        this._game_template$_BaseMaterialInput_5_10 = t3;
        t4 = this._game_template$_NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._game_template$_MaterialInputDefaultValueAccessor_5_11 = t5;
        this._game_template$_compView_5.create$2(0, this._game_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Owner ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._game_template$_compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        t3 = J.getInterceptor$x(_el_9);
        t3.setAttribute$2(_el_9, "label", "Number");
        t3.setAttribute$2(_el_9, "type", "number");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._game_template$_DeferredValidator_9_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._game_template$_MaterialNumberValidator_9_6 = t4;
        t4 = [t3, t4];
        this._game_template$_NgValidators_9_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._game_template$_NgModel_9_8 = t4;
        this._game_template$_NgControl_9_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._game_template$_compView_9.viewData.ref, this._game_template$_DeferredValidator_9_5);
        this._game_template$_MaterialInputComponent_9_10 = t4;
        this._game_template$_BaseMaterialInput_9_11 = t4;
        t3 = this._game_template$_NgControl_9_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._game_template$_MaterialInputDefaultValueAccessor_9_12 = t5;
        t3 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._game_template$_BaseMaterialInput_9_11, this._game_template$_NgControl_9_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._game_template$_MaterialNumberValueAccessor_9_13 = t3;
        this._game_template$_compView_9.create$2(0, this._game_template$_MaterialInputComponent_9_10, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Match ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._game_template$_compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._game_template$_DeferredValidator_13_5 = t2;
        t3 = new F.MaterialNumberValidator();
        this._game_template$_MaterialNumberValidator_13_6 = t3;
        t3 = [t2, t3];
        this._game_template$_NgValidators_13_7 = t3;
        t3 = U.NgModel$(t3, null);
        this._game_template$_NgModel_13_8 = t3;
        this._game_template$_NgControl_13_9 = t3;
        t3 = L.MaterialInputComponent$("number", null, null, t3, this._game_template$_compView_13.viewData.ref, this._game_template$_DeferredValidator_13_5);
        this._game_template$_MaterialInputComponent_13_10 = t3;
        this._game_template$_BaseMaterialInput_13_11 = t3;
        t2 = this._game_template$_NgControl_13_9;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t2);
        t4.BaseMaterialInputValueAccessor$2(t3, t2);
        this._game_template$_MaterialInputDefaultValueAccessor_13_12 = t4;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._game_template$_BaseMaterialInput_13_11, this._game_template$_NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._game_template$_MaterialNumberValueAccessor_13_13 = t1;
        this._game_template$_compView_13.create$2(0, this._game_template$_MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        this._game_template$_compView_1.create$2(0, this._game_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10], [W.Element]), C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_14 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_14);
        t1 = new V.ViewContainer(14, 0, this, _anchor_14);
        this._game_template$_appEl_14 = t1;
        this._game_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t1, G.game_template__viewFactory_GameDetailComponent1$closure()), t1, false);
        t1 = this._game_template$_NgModel_9_8._update;
        t1.toString;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_game_template$_handle_ngModelChange_9_0(), null, null));
        t1 = this._game_template$_NgModel_13_8._update;
        t1.toString;
        this.init$2(C.List_empty, [subscription_0, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_game_template$_handle_ngModelChange_13_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._game_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._game_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._game_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._game_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._game_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._game_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._game_template$_DeferredValidator_9_5;
        t7 = token === C.Type_MaterialNumberValidator_86y;
        if (t7 && 9 === nodeIndex)
          return this._game_template$_MaterialNumberValidator_9_6;
        if (t2 && 9 === nodeIndex)
          return this._game_template$_NgModel_9_8;
        if (t3 && 9 === nodeIndex)
          return this._game_template$_NgControl_9_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._game_template$_MaterialInputComponent_9_10;
        if (t5 && 9 === nodeIndex)
          return this._game_template$_BaseMaterialInput_9_11;
        if (t6 && 9 === nodeIndex)
          return this._game_template$_MaterialInputDefaultValueAccessor_9_12;
        t8 = token === C.Type_MaterialNumberValueAccessor_mqh;
        if (t8 && 9 === nodeIndex)
          return this._game_template$_MaterialNumberValueAccessor_9_13;
        if (t1 && 13 === nodeIndex)
          return this._game_template$_DeferredValidator_13_5;
        if (t7 && 13 === nodeIndex)
          return this._game_template$_MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._game_template$_NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._game_template$_NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._game_template$_MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._game_template$_BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._game_template$_MaterialInputDefaultValueAccessor_13_12;
        if (t8 && 13 === nodeIndex)
          return this._game_template$_MaterialNumberValueAccessor_13_13;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 13)
          return this._game_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_7, currVal_10, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._game_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._game_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._game_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._game_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._game_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._game_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._game_template$_expr_4;
        if (t1 !== true) {
          t1 = this._game_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._game_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._game_template$_compView_5.viewData.set$cdMode(1);
        this._game_template$_NgModel_9_8.set$model(_ctx.item.ownerId);
        this._game_template$_NgModel_9_8.ngAfterChanges$0();
        if (firstCheck)
          this._game_template$_NgModel_9_8.ngOnInit$0();
        if (firstCheck) {
          this._game_template$_MaterialInputComponent_9_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_7 = t1 >= 1;
        t1 = this._game_template$_expr_7;
        if (t1 !== currVal_7) {
          t1 = this._game_template$_MaterialInputComponent_9_10;
          t1._disabled = currVal_7;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._game_template$_expr_7 = currVal_7;
          changed = true;
        }
        if (changed)
          this._game_template$_compView_9.viewData.set$cdMode(1);
        this._game_template$_NgModel_13_8.set$model(_ctx.item.matchId);
        this._game_template$_NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._game_template$_NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._game_template$_MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_10 = t1 >= 1;
        t1 = this._game_template$_expr_10;
        if (t1 !== currVal_10) {
          t1 = this._game_template$_MaterialInputComponent_13_10;
          t1._disabled = currVal_10;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._game_template$_expr_10 = currVal_10;
          changed = true;
        }
        if (changed)
          this._game_template$_compView_13.viewData.set$cdMode(1);
        t1 = this._game_template$_NgIf_14_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._game_template$_appEl_14.detectChangesInNestedViews$0();
        this._game_template$_compView_1.detectChanges$0();
        this._game_template$_compView_5.detectChanges$0();
        this._game_template$_compView_9.detectChanges$0();
        this._game_template$_compView_13.detectChanges$0();
        if (firstCheck) {
          this._game_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._game_template$_MaterialInputComponent_9_10.ngAfterViewInit$0();
          this._game_template$_MaterialInputComponent_13_10.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._game_template$_appEl_14.destroyNestedViews$0();
        this._game_template$_compView_1.destroy$0();
        this._game_template$_compView_5.destroy$0();
        this._game_template$_compView_9.destroy$0();
        this._game_template$_compView_13.destroy$0();
        var t1 = this._game_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._game_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._game_template$_MaterialInputComponent_9_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._game_template$_MaterialInputDefaultValueAccessor_9_12.disposer.dispose$0();
        this._game_template$_MaterialNumberValueAccessor_9_13.disposer.dispose$0();
        t1 = this._game_template$_MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._game_template$_MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._game_template$_MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        this._game_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _game_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$ownerId(H.intTypeCheck($$event));
      }, "call$1", "get$_game_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _game_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$matchId(H.intTypeCheck($$event));
      }, "call$1", "get$_game_template$_handle_ngModelChange_13_0", 4, 0, 1],
      $asAppView: function() {
        return [D.GameDetailComponent];
      }
    },
    _ViewGameDetailComponent1: {
      "^": "AppView;0_game_template$_compView_0,0_game_template$_MaterialExpansionPanel_0_5,0_game_template$_compView_2,0_game_template$_AcxDarkTheme_2_5,0_game_template$_MaterialButtonComponent_2_6,0_game_template$_compView_4,0_game_template$_AcxDarkTheme_4_5,0_game_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._game_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._game_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._game_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._game_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._game_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._game_template$_compView_2.viewData.ref, null);
        this._game_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._game_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._game_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._game_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._game_template$_compView_4.viewData.ref, null);
        this._game_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._game_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._game_template$_compView_0.create$2(0, this._game_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._game_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_game_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._game_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_game_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._game_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._game_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._game_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._game_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._game_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._game_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._game_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._game_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._game_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._game_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._game_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._game_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._game_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._game_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._game_template$_compView_2.detectHostChanges$1(firstCheck);
        this._game_template$_compView_4.detectHostChanges$1(firstCheck);
        this._game_template$_compView_0.detectChanges$0();
        this._game_template$_compView_2.detectChanges$0();
        this._game_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._game_template$_compView_0.destroy$0();
        this._game_template$_compView_2.destroy$0();
        this._game_template$_compView_4.destroy$0();
        this._game_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _game_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_game_template$_handle_trigger_2_0", 4, 0, 1],
      _game_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_game_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [D.GameDetailComponent];
      }
    },
    _ViewGameDetailComponentHost0: {
      "^": "AppView;0_game_template$_compView_0,0_GameDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new G.ViewGameDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = D.GameDetailComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("game-detail");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewGameDetailComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$GameDetailComponent());
          $.ViewGameDetailComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._game_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new D.GameDetailComponent();
        this._GameDetailComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._GameDetailComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._GameDetailComponent_0_5.ngOnInit$0();
        this._game_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._game_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [D.GameDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_match_match.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/match/match.css.shim.dart",, O, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/match/match.dart",, Y, {
    "^": "",
    MatchDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_match$_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isMatch0");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      get$buttonStream: function() {
        return C.JSNull_methods.get$stream(this._match$_buttonStreamer);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        C.JSNull_methods.add$1(this._match$_buttonStreamer, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/match/match.template.dart",, R, {
    "^": "",
    viewFactory_MatchDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new R._ViewMatchDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, Y.MatchDetailComponent));
      t1.componentType = $.ViewMatchDetailComponent0__renderType;
      return t1;
    }, "call$2", "match_template__viewFactory_MatchDetailComponent1$closure", 8, 0, 77],
    viewFactory_MatchDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new R._ViewMatchDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, Y.MatchDetailComponent));
      return t1;
    }, "call$2", "match_template__viewFactory_MatchDetailComponentHost0$closure", 8, 0, 77],
    ViewMatchDetailComponent0: {
      "^": "AppView;0_match_template$_compView_1,0_match_template$_MaterialExpansionPanel_1_5,0_match_template$_compView_5,0_match_template$_DeferredValidator_5_5,0_match_template$_NgValidators_5_6,0_match_template$_NgModel_5_7,0_match_template$_NgControl_5_8,0_match_template$_MaterialInputComponent_5_9,0_match_template$_BaseMaterialInput_5_10,0_match_template$_MaterialInputDefaultValueAccessor_5_11,0_match_template$_compView_9,0_match_template$_DeferredValidator_9_5,0_match_template$_NgValidators_9_6,0_match_template$_NgModel_9_7,0_match_template$_NgControl_9_8,0_match_template$_MaterialInputComponent_9_9,0_match_template$_BaseMaterialInput_9_10,0_match_template$_MaterialInputDefaultValueAccessor_9_11,0_match_template$_compView_13,0_match_template$_DeferredValidator_13_5,0_match_template$_MaterialNumberValidator_13_6,0_match_template$_NgValidators_13_7,0_match_template$_NgModel_13_8,0_match_template$_NgControl_13_9,0_match_template$_MaterialInputComponent_13_10,0_match_template$_BaseMaterialInput_13_11,0_match_template$_MaterialInputDefaultValueAccessor_13_12,0_match_template$_MaterialNumberValueAccessor_13_13,0_match_template$_appEl_14,0_match_template$_NgIf_14_9,0_match_template$_expr_4,0_match_template$_expr_6,0_match_template$_expr_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _anchor_14, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._match_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._match_template$_compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._match_template$_MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._match_template$_compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._match_template$_DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._match_template$_NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._match_template$_NgModel_5_7 = t3;
        this._match_template$_NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._match_template$_compView_5.viewData.ref, this._match_template$_DeferredValidator_5_5);
        this._match_template$_MaterialInputComponent_5_9 = t3;
        this._match_template$_BaseMaterialInput_5_10 = t3;
        t4 = this._match_template$_NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._match_template$_MaterialInputDefaultValueAccessor_5_11 = t5;
        this._match_template$_compView_5.create$2(0, this._match_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._match_template$_compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._match_template$_DeferredValidator_9_5 = t3;
        t3 = [t3];
        this._match_template$_NgValidators_9_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._match_template$_NgModel_9_7 = t3;
        this._match_template$_NgControl_9_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._match_template$_compView_9.viewData.ref, this._match_template$_DeferredValidator_9_5);
        this._match_template$_MaterialInputComponent_9_9 = t3;
        this._match_template$_BaseMaterialInput_9_10 = t3;
        t4 = this._match_template$_NgControl_9_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._match_template$_MaterialInputDefaultValueAccessor_9_11 = t5;
        this._match_template$_compView_9.create$2(0, this._match_template$_MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Round ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._match_template$_compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._match_template$_DeferredValidator_13_5 = t2;
        t3 = new F.MaterialNumberValidator();
        this._match_template$_MaterialNumberValidator_13_6 = t3;
        t3 = [t2, t3];
        this._match_template$_NgValidators_13_7 = t3;
        t3 = U.NgModel$(t3, null);
        this._match_template$_NgModel_13_8 = t3;
        this._match_template$_NgControl_13_9 = t3;
        t3 = L.MaterialInputComponent$("number", null, null, t3, this._match_template$_compView_13.viewData.ref, this._match_template$_DeferredValidator_13_5);
        this._match_template$_MaterialInputComponent_13_10 = t3;
        this._match_template$_BaseMaterialInput_13_11 = t3;
        t2 = this._match_template$_NgControl_13_9;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t2);
        t4.BaseMaterialInputValueAccessor$2(t3, t2);
        this._match_template$_MaterialInputDefaultValueAccessor_13_12 = t4;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._match_template$_BaseMaterialInput_13_11, this._match_template$_NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._match_template$_MaterialNumberValueAccessor_13_13 = t1;
        this._match_template$_compView_13.create$2(0, this._match_template$_MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        this._match_template$_compView_1.create$2(0, this._match_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10], [W.Element]), C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_14 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_14);
        t1 = new V.ViewContainer(14, 0, this, _anchor_14);
        this._match_template$_appEl_14 = t1;
        this._match_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t1, R.match_template__viewFactory_MatchDetailComponent1$closure()), t1, false);
        t1 = this._match_template$_NgModel_9_7._update;
        t1.toString;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_match_template$_handle_ngModelChange_9_0(), null, null));
        t1 = this._match_template$_NgModel_13_8._update;
        t1.toString;
        this.init$2(C.List_empty, [subscription_0, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_match_template$_handle_ngModelChange_13_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._match_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._match_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._match_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._match_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._match_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._match_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._match_template$_DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._match_template$_NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._match_template$_NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._match_template$_MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._match_template$_BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._match_template$_MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._match_template$_DeferredValidator_13_5;
        if (token === C.Type_MaterialNumberValidator_86y && 13 === nodeIndex)
          return this._match_template$_MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._match_template$_NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._match_template$_NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._match_template$_MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._match_template$_BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._match_template$_MaterialInputDefaultValueAccessor_13_12;
        if (token === C.Type_MaterialNumberValueAccessor_mqh && 13 === nodeIndex)
          return this._match_template$_MaterialNumberValueAccessor_13_13;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 13)
          return this._match_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_9, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._match_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._match_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._match_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._match_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._match_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._match_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._match_template$_expr_4;
        if (t1 !== true) {
          t1 = this._match_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._match_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._match_template$_compView_5.viewData.set$cdMode(1);
        this._match_template$_NgModel_9_7.set$model(_ctx.item.name);
        this._match_template$_NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._match_template$_NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._match_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._match_template$_MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._match_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._match_template$_compView_9.viewData.set$cdMode(1);
        this._match_template$_NgModel_13_8.set$model(_ctx.item.roundId);
        this._match_template$_NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._match_template$_NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._match_template$_MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_9 = t1 >= 1;
        t1 = this._match_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this._match_template$_MaterialInputComponent_13_10;
          t1._disabled = currVal_9;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._match_template$_expr_9 = currVal_9;
          changed = true;
        }
        if (changed)
          this._match_template$_compView_13.viewData.set$cdMode(1);
        t1 = this._match_template$_NgIf_14_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._match_template$_appEl_14.detectChangesInNestedViews$0();
        this._match_template$_compView_1.detectChanges$0();
        this._match_template$_compView_5.detectChanges$0();
        this._match_template$_compView_9.detectChanges$0();
        this._match_template$_compView_13.detectChanges$0();
        if (firstCheck) {
          this._match_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._match_template$_MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._match_template$_MaterialInputComponent_13_10.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._match_template$_appEl_14.destroyNestedViews$0();
        this._match_template$_compView_1.destroy$0();
        this._match_template$_compView_5.destroy$0();
        this._match_template$_compView_9.destroy$0();
        this._match_template$_compView_13.destroy$0();
        var t1 = this._match_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._match_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._match_template$_MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._match_template$_MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._match_template$_MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._match_template$_MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._match_template$_MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        this._match_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _match_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_match_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _match_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$roundId(H.intTypeCheck($$event));
      }, "call$1", "get$_match_template$_handle_ngModelChange_13_0", 4, 0, 1],
      $asAppView: function() {
        return [Y.MatchDetailComponent];
      }
    },
    _ViewMatchDetailComponent1: {
      "^": "AppView;0_match_template$_compView_0,0_match_template$_MaterialExpansionPanel_0_5,0_match_template$_compView_2,0_match_template$_AcxDarkTheme_2_5,0_match_template$_MaterialButtonComponent_2_6,0_match_template$_compView_4,0_match_template$_AcxDarkTheme_4_5,0_match_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._match_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._match_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._match_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._match_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._match_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._match_template$_compView_2.viewData.ref, null);
        this._match_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._match_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._match_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._match_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._match_template$_compView_4.viewData.ref, null);
        this._match_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._match_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._match_template$_compView_0.create$2(0, this._match_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._match_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_match_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._match_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_match_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._match_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._match_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._match_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._match_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._match_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._match_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._match_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._match_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._match_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._match_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._match_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._match_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._match_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._match_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._match_template$_compView_2.detectHostChanges$1(firstCheck);
        this._match_template$_compView_4.detectHostChanges$1(firstCheck);
        this._match_template$_compView_0.detectChanges$0();
        this._match_template$_compView_2.detectChanges$0();
        this._match_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._match_template$_compView_0.destroy$0();
        this._match_template$_compView_2.destroy$0();
        this._match_template$_compView_4.destroy$0();
        this._match_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _match_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_match_template$_handle_trigger_2_0", 4, 0, 1],
      _match_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_match_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [Y.MatchDetailComponent];
      }
    },
    _ViewMatchDetailComponentHost0: {
      "^": "AppView;0_match_template$_compView_0,0_MatchDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new R.ViewMatchDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = Y.MatchDetailComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("match-detail");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewMatchDetailComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MatchDetailComponent());
          $.ViewMatchDetailComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._match_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new Y.MatchDetailComponent();
        this._MatchDetailComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._MatchDetailComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._MatchDetailComponent_0_5.ngOnInit$0();
        this._match_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._match_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [Y.MatchDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_result_result.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/result/result.css.shim.dart",, Y, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/result/result.dart",, E, {
    "^": "",
    ResultDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_result$_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isResult");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      get$buttonStream: function() {
        return C.JSNull_methods.get$stream(this._result$_buttonStreamer);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + J.toString$0$($async$self.item.id));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        C.JSNull_methods.add$1(this._result$_buttonStreamer, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/result/result.template.dart",, S, {
    "^": "",
    viewFactory_ResultDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new S._ViewResultDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, E.ResultDetailComponent));
      t1.componentType = $.ViewResultDetailComponent0__renderType;
      return t1;
    }, "call$2", "result_template__viewFactory_ResultDetailComponent1$closure", 8, 0, 78],
    viewFactory_ResultDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new S._ViewResultDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, E.ResultDetailComponent));
      return t1;
    }, "call$2", "result_template__viewFactory_ResultDetailComponentHost0$closure", 8, 0, 78],
    ViewResultDetailComponent0: {
      "^": "AppView;0_result_template$_compView_1,0_result_template$_MaterialExpansionPanel_1_5,0_result_template$_compView_5,0_result_template$_DeferredValidator_5_5,0_result_template$_NgValidators_5_6,0_result_template$_NgModel_5_7,0_result_template$_NgControl_5_8,0_result_template$_MaterialInputComponent_5_9,0_result_template$_BaseMaterialInput_5_10,0_result_template$_MaterialInputDefaultValueAccessor_5_11,0_result_template$_compView_9,0_result_template$_DeferredValidator_9_5,0_MaterialNumberValidator_9_6,0_NgValidators_9_7,0_NgModel_9_8,0_NgControl_9_9,0_MaterialInputComponent_9_10,0_BaseMaterialInput_9_11,0_MaterialInputDefaultValueAccessor_9_12,0_MaterialNumberValueAccessor_9_13,0_result_template$_compView_13,0_result_template$_DeferredValidator_13_5,0_result_template$_MaterialNumberValidator_13_6,0_result_template$_NgValidators_13_7,0_result_template$_NgModel_13_8,0_result_template$_NgControl_13_9,0_result_template$_MaterialInputComponent_13_10,0_result_template$_BaseMaterialInput_13_11,0_result_template$_MaterialInputDefaultValueAccessor_13_12,0_result_template$_MaterialNumberValueAccessor_13_13,0_result_template$_compView_17,0_result_template$_DeferredValidator_17_5,0_NgValidators_17_6,0_NgModel_17_7,0_NgControl_17_8,0_MaterialInputComponent_17_9,0_BaseMaterialInput_17_10,0_MaterialInputDefaultValueAccessor_17_11,0_result_template$_appEl_18,0_result_template$_NgIf_18_9,0_result_template$_expr_4,0_result_template$_expr_7,0_result_template$_expr_10,0_result_template$_expr_12,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _el_14, _el_15, _el_17, _anchor_18, subscription_0, subscription_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._result_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._result_template$_compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._result_template$_MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._result_template$_compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._result_template$_DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._result_template$_NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._result_template$_NgModel_5_7 = t3;
        this._result_template$_NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._result_template$_compView_5.viewData.ref, this._result_template$_DeferredValidator_5_5);
        this._result_template$_MaterialInputComponent_5_9 = t3;
        this._result_template$_BaseMaterialInput_5_10 = t3;
        t4 = this._result_template$_NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._result_template$_MaterialInputDefaultValueAccessor_5_11 = t5;
        this._result_template$_compView_5.create$2(0, this._result_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Owner ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._result_template$_compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        t3 = J.getInterceptor$x(_el_9);
        t3.setAttribute$2(_el_9, "label", "Number");
        t3.setAttribute$2(_el_9, "type", "number");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._result_template$_DeferredValidator_9_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._MaterialNumberValidator_9_6 = t4;
        t4 = [t3, t4];
        this._NgValidators_9_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._NgModel_9_8 = t4;
        this._NgControl_9_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._result_template$_compView_9.viewData.ref, this._result_template$_DeferredValidator_9_5);
        this._MaterialInputComponent_9_10 = t4;
        this._BaseMaterialInput_9_11 = t4;
        t3 = this._NgControl_9_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._MaterialInputDefaultValueAccessor_9_12 = t5;
        t3 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._BaseMaterialInput_9_11, this._NgControl_9_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._MaterialNumberValueAccessor_9_13 = t3;
        this._result_template$_compView_9.create$2(0, this._MaterialInputComponent_9_10, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Match ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._result_template$_compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._result_template$_DeferredValidator_13_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._result_template$_MaterialNumberValidator_13_6 = t4;
        t4 = [t3, t4];
        this._result_template$_NgValidators_13_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._result_template$_NgModel_13_8 = t4;
        this._result_template$_NgControl_13_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._result_template$_compView_13.viewData.ref, this._result_template$_DeferredValidator_13_5);
        this._result_template$_MaterialInputComponent_13_10 = t4;
        this._result_template$_BaseMaterialInput_13_11 = t4;
        t3 = this._result_template$_NgControl_13_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._result_template$_MaterialInputDefaultValueAccessor_13_12 = t5;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._result_template$_BaseMaterialInput_13_11, this._result_template$_NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._result_template$_MaterialNumberValueAccessor_13_13 = t1;
        this._result_template$_compView_13.create$2(0, this._result_template$_MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        _el_14 = doc.createElement("div");
        _el_14.className = "inlinediv";
        H.interceptedTypeCheck(_el_14, "$isHtmlElement");
        this.addShimC$1(_el_14);
        _el_15 = S.createAndAppend(doc, "h4", _el_14);
        this.addShimE$1(_el_15);
        J.append$1$x(_el_15, doc.createTextNode("Notes:"));
        t1 = Q.ViewMaterialInputComponent0$(this, 17);
        this._result_template$_compView_17 = t1;
        _el_17 = t1.rootEl;
        J.append$1$x(_el_14, _el_17);
        this.addShimC$1(_el_17);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._result_template$_DeferredValidator_17_5 = t2;
        t2 = [t2];
        this._NgValidators_17_6 = t2;
        t2 = U.NgModel$(t2, null);
        this._NgModel_17_7 = t2;
        this._NgControl_17_8 = t2;
        t2 = L.MaterialInputComponent$(null, null, null, t2, this._result_template$_compView_17.viewData.ref, this._result_template$_DeferredValidator_17_5);
        this._MaterialInputComponent_17_9 = t2;
        this._BaseMaterialInput_17_10 = t2;
        t1 = this._NgControl_17_8;
        t3 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t2, t1);
        t3.BaseMaterialInputValueAccessor$2(t2, t1);
        this._MaterialInputDefaultValueAccessor_17_11 = t3;
        this._result_template$_compView_17.create$2(0, this._MaterialInputComponent_17_9, [C.List_empty, C.List_empty]);
        this._result_template$_compView_1.create$2(0, this._result_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10, _el_14], [W.Element]), C.List_empty]);
        t3 = $.$get$_viewContainerAnchor();
        _anchor_18 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_18);
        t3 = new V.ViewContainer(18, 0, this, _anchor_18);
        this._result_template$_appEl_18 = t3;
        this._result_template$_NgIf_18_9 = new K.NgIf(new D.TemplateRef(t3, S.result_template__viewFactory_ResultDetailComponent1$closure()), t3, false);
        t3 = this._NgModel_9_8._update;
        t3.toString;
        subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_result_template$_handle_ngModelChange_9_0(), null, null));
        t3 = this._result_template$_NgModel_13_8._update;
        t3.toString;
        subscription_1 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_result_template$_handle_ngModelChange_13_0(), null, null));
        t3 = this._NgModel_17_7._update;
        t3.toString;
        this.init$2(C.List_empty, [subscription_0, subscription_1, new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_result_template$_handle_ngModelChange_17_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._result_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._result_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._result_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._result_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._result_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._result_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._result_template$_DeferredValidator_9_5;
        t7 = token === C.Type_MaterialNumberValidator_86y;
        if (t7 && 9 === nodeIndex)
          return this._MaterialNumberValidator_9_6;
        if (t2 && 9 === nodeIndex)
          return this._NgModel_9_8;
        if (t3 && 9 === nodeIndex)
          return this._NgControl_9_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._MaterialInputComponent_9_10;
        if (t5 && 9 === nodeIndex)
          return this._BaseMaterialInput_9_11;
        if (t6 && 9 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_9_12;
        t8 = token === C.Type_MaterialNumberValueAccessor_mqh;
        if (t8 && 9 === nodeIndex)
          return this._MaterialNumberValueAccessor_9_13;
        if (t1 && 13 === nodeIndex)
          return this._result_template$_DeferredValidator_13_5;
        if (t7 && 13 === nodeIndex)
          return this._result_template$_MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._result_template$_NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._result_template$_NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._result_template$_MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._result_template$_BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._result_template$_MaterialInputDefaultValueAccessor_13_12;
        if (t8 && 13 === nodeIndex)
          return this._result_template$_MaterialNumberValueAccessor_13_13;
        if (t1 && 17 === nodeIndex)
          return this._result_template$_DeferredValidator_17_5;
        if (t2 && 17 === nodeIndex)
          return this._NgModel_17_7;
        if (t3 && 17 === nodeIndex)
          return this._NgControl_17_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 17 === nodeIndex)
          return this._MaterialInputComponent_17_9;
        if (t5 && 17 === nodeIndex)
          return this._BaseMaterialInput_17_10;
        if (t6 && 17 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_17_11;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 17)
          return this._result_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_7, currVal_10, currVal_12, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._result_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._result_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._result_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._result_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._result_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._result_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._result_template$_expr_4;
        if (t1 !== true) {
          t1 = this._result_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._result_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._result_template$_compView_5.viewData.set$cdMode(1);
        this._NgModel_9_8.set$model(_ctx.item.ownerId);
        this._NgModel_9_8.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_9_8.ngOnInit$0();
        if (firstCheck) {
          this._MaterialInputComponent_9_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_7 = t1 >= 1;
        t1 = this._result_template$_expr_7;
        if (t1 !== currVal_7) {
          t1 = this._MaterialInputComponent_9_10;
          t1._disabled = currVal_7;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._result_template$_expr_7 = currVal_7;
          changed = true;
        }
        if (changed)
          this._result_template$_compView_9.viewData.set$cdMode(1);
        this._result_template$_NgModel_13_8.set$model(_ctx.item.matchId);
        this._result_template$_NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._result_template$_NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._result_template$_MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_10 = t1 >= 1;
        t1 = this._result_template$_expr_10;
        if (t1 !== currVal_10) {
          t1 = this._result_template$_MaterialInputComponent_13_10;
          t1._disabled = currVal_10;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._result_template$_expr_10 = currVal_10;
          changed = true;
        }
        if (changed)
          this._result_template$_compView_13.viewData.set$cdMode(1);
        this._NgModel_17_7.set$model(_ctx.item.notes);
        this._NgModel_17_7.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_17_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_12 = t1 >= 2;
        t1 = this._result_template$_expr_12;
        if (t1 !== currVal_12) {
          t1 = this._MaterialInputComponent_17_9;
          t1._disabled = currVal_12;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._result_template$_expr_12 = currVal_12;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._result_template$_compView_17.viewData.set$cdMode(1);
        t1 = this._result_template$_NgIf_18_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._result_template$_appEl_18.detectChangesInNestedViews$0();
        this._result_template$_compView_1.detectChanges$0();
        this._result_template$_compView_5.detectChanges$0();
        this._result_template$_compView_9.detectChanges$0();
        this._result_template$_compView_13.detectChanges$0();
        this._result_template$_compView_17.detectChanges$0();
        if (firstCheck) {
          this._result_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._MaterialInputComponent_9_10.ngAfterViewInit$0();
          this._result_template$_MaterialInputComponent_13_10.ngAfterViewInit$0();
          this._MaterialInputComponent_17_9.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._result_template$_appEl_18.destroyNestedViews$0();
        this._result_template$_compView_1.destroy$0();
        this._result_template$_compView_5.destroy$0();
        this._result_template$_compView_9.destroy$0();
        this._result_template$_compView_13.destroy$0();
        this._result_template$_compView_17.destroy$0();
        var t1 = this._result_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._result_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._MaterialInputComponent_9_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_9_12.disposer.dispose$0();
        this._MaterialNumberValueAccessor_9_13.disposer.dispose$0();
        t1 = this._result_template$_MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._result_template$_MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._result_template$_MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        t1 = this._MaterialInputComponent_17_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_17_11.disposer.dispose$0();
        this._result_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _result_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$ownerId(H.intTypeCheck($$event));
      }, "call$1", "get$_result_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _result_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$matchId(H.intTypeCheck($$event));
      }, "call$1", "get$_result_template$_handle_ngModelChange_13_0", 4, 0, 1],
      _result_template$_handle_ngModelChange_17_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$notes(H.stringTypeCheck($$event));
      }, "call$1", "get$_result_template$_handle_ngModelChange_17_0", 4, 0, 1],
      $asAppView: function() {
        return [E.ResultDetailComponent];
      }
    },
    _ViewResultDetailComponent1: {
      "^": "AppView;0_result_template$_compView_0,0_result_template$_MaterialExpansionPanel_0_5,0_result_template$_compView_2,0_result_template$_AcxDarkTheme_2_5,0_result_template$_MaterialButtonComponent_2_6,0_result_template$_compView_4,0_result_template$_AcxDarkTheme_4_5,0_result_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._result_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._result_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._result_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._result_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._result_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._result_template$_compView_2.viewData.ref, null);
        this._result_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._result_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._result_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._result_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._result_template$_compView_4.viewData.ref, null);
        this._result_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._result_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._result_template$_compView_0.create$2(0, this._result_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._result_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_result_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._result_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_result_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._result_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._result_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._result_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._result_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._result_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._result_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._result_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._result_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._result_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._result_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._result_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._result_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._result_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._result_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._result_template$_compView_2.detectHostChanges$1(firstCheck);
        this._result_template$_compView_4.detectHostChanges$1(firstCheck);
        this._result_template$_compView_0.detectChanges$0();
        this._result_template$_compView_2.detectChanges$0();
        this._result_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._result_template$_compView_0.destroy$0();
        this._result_template$_compView_2.destroy$0();
        this._result_template$_compView_4.destroy$0();
        this._result_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _result_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_result_template$_handle_trigger_2_0", 4, 0, 1],
      _result_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_result_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [E.ResultDetailComponent];
      }
    },
    _ViewResultDetailComponentHost0: {
      "^": "AppView;0_result_template$_compView_0,0_ResultDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new S.ViewResultDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = E.ResultDetailComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("result-detail");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewResultDetailComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$ResultDetailComponent());
          $.ViewResultDetailComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._result_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new E.ResultDetailComponent();
        this._ResultDetailComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._ResultDetailComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._ResultDetailComponent_0_5.ngOnInit$0();
        this._result_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._result_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [E.ResultDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_round_round.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/round/round.css.shim.dart",, O, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/round/round.dart",, R, {
    "^": "",
    RoundDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_round$_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isRound");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      get$buttonStream: function() {
        return C.JSNull_methods.get$stream(this._round$_buttonStreamer);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        C.JSNull_methods.add$1(this._round$_buttonStreamer, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/round/round.template.dart",, Z, {
    "^": "",
    viewFactory_RoundDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new Z._ViewRoundDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, R.RoundDetailComponent));
      t1.componentType = $.ViewRoundDetailComponent0__renderType;
      return t1;
    }, "call$2", "round_template__viewFactory_RoundDetailComponent1$closure", 8, 0, 79],
    viewFactory_RoundDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new Z._ViewRoundDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, R.RoundDetailComponent));
      return t1;
    }, "call$2", "round_template__viewFactory_RoundDetailComponentHost0$closure", 8, 0, 79],
    ViewRoundDetailComponent0: {
      "^": "AppView;0_round_template$_compView_1,0_round_template$_MaterialExpansionPanel_1_5,0_round_template$_compView_5,0_round_template$_DeferredValidator_5_5,0_round_template$_NgValidators_5_6,0_round_template$_NgModel_5_7,0_round_template$_NgControl_5_8,0_round_template$_MaterialInputComponent_5_9,0_round_template$_BaseMaterialInput_5_10,0_round_template$_MaterialInputDefaultValueAccessor_5_11,0_round_template$_compView_9,0_round_template$_DeferredValidator_9_5,0_round_template$_NgValidators_9_6,0_round_template$_NgModel_9_7,0_round_template$_NgControl_9_8,0_round_template$_MaterialInputComponent_9_9,0_round_template$_BaseMaterialInput_9_10,0_round_template$_MaterialInputDefaultValueAccessor_9_11,0_round_template$_compView_13,0_round_template$_DeferredValidator_13_5,0_round_template$_MaterialNumberValidator_13_6,0_round_template$_NgValidators_13_7,0_round_template$_NgModel_13_8,0_round_template$_NgControl_13_9,0_round_template$_MaterialInputComponent_13_10,0_round_template$_BaseMaterialInput_13_11,0_round_template$_MaterialInputDefaultValueAccessor_13_12,0_round_template$_MaterialNumberValueAccessor_13_13,0_round_template$_appEl_14,0_round_template$_NgIf_14_9,0_round_template$_expr_4,0_round_template$_expr_6,0_round_template$_expr_9,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _anchor_14, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._round_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._round_template$_compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._round_template$_MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._round_template$_compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._round_template$_DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._round_template$_NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._round_template$_NgModel_5_7 = t3;
        this._round_template$_NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._round_template$_compView_5.viewData.ref, this._round_template$_DeferredValidator_5_5);
        this._round_template$_MaterialInputComponent_5_9 = t3;
        this._round_template$_BaseMaterialInput_5_10 = t3;
        t4 = this._round_template$_NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._round_template$_MaterialInputDefaultValueAccessor_5_11 = t5;
        this._round_template$_compView_5.create$2(0, this._round_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._round_template$_compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._round_template$_DeferredValidator_9_5 = t3;
        t3 = [t3];
        this._round_template$_NgValidators_9_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._round_template$_NgModel_9_7 = t3;
        this._round_template$_NgControl_9_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._round_template$_compView_9.viewData.ref, this._round_template$_DeferredValidator_9_5);
        this._round_template$_MaterialInputComponent_9_9 = t3;
        this._round_template$_BaseMaterialInput_9_10 = t3;
        t4 = this._round_template$_NgControl_9_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._round_template$_MaterialInputDefaultValueAccessor_9_11 = t5;
        this._round_template$_compView_9.create$2(0, this._round_template$_MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Stage ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._round_template$_compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._round_template$_DeferredValidator_13_5 = t2;
        t3 = new F.MaterialNumberValidator();
        this._round_template$_MaterialNumberValidator_13_6 = t3;
        t3 = [t2, t3];
        this._round_template$_NgValidators_13_7 = t3;
        t3 = U.NgModel$(t3, null);
        this._round_template$_NgModel_13_8 = t3;
        this._round_template$_NgControl_13_9 = t3;
        t3 = L.MaterialInputComponent$("number", null, null, t3, this._round_template$_compView_13.viewData.ref, this._round_template$_DeferredValidator_13_5);
        this._round_template$_MaterialInputComponent_13_10 = t3;
        this._round_template$_BaseMaterialInput_13_11 = t3;
        t2 = this._round_template$_NgControl_13_9;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t2);
        t4.BaseMaterialInputValueAccessor$2(t3, t2);
        this._round_template$_MaterialInputDefaultValueAccessor_13_12 = t4;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._round_template$_BaseMaterialInput_13_11, this._round_template$_NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._round_template$_MaterialNumberValueAccessor_13_13 = t1;
        this._round_template$_compView_13.create$2(0, this._round_template$_MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        this._round_template$_compView_1.create$2(0, this._round_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10], [W.Element]), C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_14 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_14);
        t1 = new V.ViewContainer(14, 0, this, _anchor_14);
        this._round_template$_appEl_14 = t1;
        this._round_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t1, Z.round_template__viewFactory_RoundDetailComponent1$closure()), t1, false);
        t1 = this._round_template$_NgModel_9_7._update;
        t1.toString;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_round_template$_handle_ngModelChange_9_0(), null, null));
        t1 = this._round_template$_NgModel_13_8._update;
        t1.toString;
        this.init$2(C.List_empty, [subscription_0, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_round_template$_handle_ngModelChange_13_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._round_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._round_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._round_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._round_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._round_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._round_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._round_template$_DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._round_template$_NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._round_template$_NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._round_template$_MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._round_template$_BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._round_template$_MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._round_template$_DeferredValidator_13_5;
        if (token === C.Type_MaterialNumberValidator_86y && 13 === nodeIndex)
          return this._round_template$_MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._round_template$_NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._round_template$_NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._round_template$_MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._round_template$_BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._round_template$_MaterialInputDefaultValueAccessor_13_12;
        if (token === C.Type_MaterialNumberValueAccessor_mqh && 13 === nodeIndex)
          return this._round_template$_MaterialNumberValueAccessor_13_13;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 13)
          return this._round_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_9, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._round_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._round_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._round_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._round_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._round_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._round_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._round_template$_expr_4;
        if (t1 !== true) {
          t1 = this._round_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._round_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._round_template$_compView_5.viewData.set$cdMode(1);
        this._round_template$_NgModel_9_7.set$model(_ctx.item.name);
        this._round_template$_NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._round_template$_NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._round_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._round_template$_MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._round_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._round_template$_compView_9.viewData.set$cdMode(1);
        this._round_template$_NgModel_13_8.set$model(_ctx.item.stageId);
        this._round_template$_NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._round_template$_NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._round_template$_MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_9 = t1 >= 1;
        t1 = this._round_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this._round_template$_MaterialInputComponent_13_10;
          t1._disabled = currVal_9;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._round_template$_expr_9 = currVal_9;
          changed = true;
        }
        if (changed)
          this._round_template$_compView_13.viewData.set$cdMode(1);
        t1 = this._round_template$_NgIf_14_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._round_template$_appEl_14.detectChangesInNestedViews$0();
        this._round_template$_compView_1.detectChanges$0();
        this._round_template$_compView_5.detectChanges$0();
        this._round_template$_compView_9.detectChanges$0();
        this._round_template$_compView_13.detectChanges$0();
        if (firstCheck) {
          this._round_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._round_template$_MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._round_template$_MaterialInputComponent_13_10.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._round_template$_appEl_14.destroyNestedViews$0();
        this._round_template$_compView_1.destroy$0();
        this._round_template$_compView_5.destroy$0();
        this._round_template$_compView_9.destroy$0();
        this._round_template$_compView_13.destroy$0();
        var t1 = this._round_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._round_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._round_template$_MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._round_template$_MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._round_template$_MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._round_template$_MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._round_template$_MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        this._round_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _round_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_round_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _round_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$stageId(H.intTypeCheck($$event));
      }, "call$1", "get$_round_template$_handle_ngModelChange_13_0", 4, 0, 1],
      $asAppView: function() {
        return [R.RoundDetailComponent];
      }
    },
    _ViewRoundDetailComponent1: {
      "^": "AppView;0_round_template$_compView_0,0_round_template$_MaterialExpansionPanel_0_5,0_round_template$_compView_2,0_round_template$_AcxDarkTheme_2_5,0_round_template$_MaterialButtonComponent_2_6,0_round_template$_compView_4,0_round_template$_AcxDarkTheme_4_5,0_round_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._round_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._round_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._round_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._round_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._round_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._round_template$_compView_2.viewData.ref, null);
        this._round_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._round_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._round_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._round_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._round_template$_compView_4.viewData.ref, null);
        this._round_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._round_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._round_template$_compView_0.create$2(0, this._round_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._round_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_round_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._round_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_round_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._round_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._round_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._round_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._round_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._round_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._round_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._round_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._round_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._round_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._round_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._round_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._round_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._round_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._round_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._round_template$_compView_2.detectHostChanges$1(firstCheck);
        this._round_template$_compView_4.detectHostChanges$1(firstCheck);
        this._round_template$_compView_0.detectChanges$0();
        this._round_template$_compView_2.detectChanges$0();
        this._round_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._round_template$_compView_0.destroy$0();
        this._round_template$_compView_2.destroy$0();
        this._round_template$_compView_4.destroy$0();
        this._round_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _round_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_round_template$_handle_trigger_2_0", 4, 0, 1],
      _round_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_round_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [R.RoundDetailComponent];
      }
    },
    _ViewRoundDetailComponentHost0: {
      "^": "AppView;0_round_template$_compView_0,0_RoundDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new Z.ViewRoundDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = R.RoundDetailComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("round-detail");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewRoundDetailComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$RoundDetailComponent());
          $.ViewRoundDetailComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._round_template$_compView_0 = t1;
        this.rootEl = t1.rootEl;
        t3 = new R.RoundDetailComponent();
        this._RoundDetailComponent_0_5 = t3;
        t1.create$2(0, t3, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._RoundDetailComponent_0_5, [t2]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._RoundDetailComponent_0_5.ngOnInit$0();
        this._round_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._round_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [R.RoundDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_stage_stage.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/stage/stage.css.shim.dart",, O, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/stage/stage.dart",, L, {
    "^": "",
    StageDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_stage$_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isStage");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      set$_stage$_buttonStreamer: function(_buttonStreamer) {
        this._stage$_buttonStreamer = H.assertSubtype(_buttonStreamer, "$isStreamController", [P.String], "$asStreamController");
      },
      get$buttonStream: function() {
        var t1 = this._stage$_buttonStreamer;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        this._stage$_buttonStreamer.add$1(0, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/stage/stage.template.dart",, R, {
    "^": "",
    viewFactory_StageDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new R._ViewStageDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.StageDetailComponent));
      t1.componentType = $.ViewStageDetailComponent0__renderType;
      return t1;
    }, "call$2", "stage_template__viewFactory_StageDetailComponent1$closure", 8, 0, 80],
    viewFactory_StageDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new R._ViewStageDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, L.StageDetailComponent));
      return t1;
    }, "call$2", "stage_template__viewFactory_StageDetailComponentHost0$closure", 8, 0, 80],
    ViewStageDetailComponent0: {
      "^": "AppView;0_stage_template$_compView_1,0_stage_template$_MaterialExpansionPanel_1_5,0_stage_template$_compView_5,0_stage_template$_DeferredValidator_5_5,0_stage_template$_NgValidators_5_6,0_stage_template$_NgModel_5_7,0_stage_template$_NgControl_5_8,0_stage_template$_MaterialInputComponent_5_9,0_stage_template$_BaseMaterialInput_5_10,0_stage_template$_MaterialInputDefaultValueAccessor_5_11,0_stage_template$_compView_9,0_stage_template$_DeferredValidator_9_5,0_stage_template$_NgValidators_9_6,0_stage_template$_NgModel_9_7,0_stage_template$_NgControl_9_8,0_stage_template$_MaterialInputComponent_9_9,0_stage_template$_BaseMaterialInput_9_10,0_stage_template$_MaterialInputDefaultValueAccessor_9_11,0_stage_template$_compView_13,0_stage_template$_DeferredValidator_13_5,0_stage_template$_MaterialNumberValidator_13_6,0_stage_template$_NgValidators_13_7,0_stage_template$_NgModel_13_8,0_stage_template$_NgControl_13_9,0_stage_template$_MaterialInputComponent_13_10,0_stage_template$_BaseMaterialInput_13_11,0_stage_template$_MaterialInputDefaultValueAccessor_13_12,0_stage_template$_MaterialNumberValueAccessor_13_13,0_stage_template$_compView_17,0_stage_template$_DeferredValidator_17_5,0_stage_template$_MaterialNumberValidator_17_6,0_stage_template$_NgValidators_17_7,0_stage_template$_NgModel_17_8,0_stage_template$_NgControl_17_9,0_stage_template$_MaterialInputComponent_17_10,0_stage_template$_BaseMaterialInput_17_11,0_stage_template$_MaterialInputDefaultValueAccessor_17_12,0_stage_template$_MaterialNumberValueAccessor_17_13,0_compView_21,0_DeferredValidator_21_5,0_MaterialNumberValidator_21_6,0_NgValidators_21_7,0_NgModel_21_8,0_NgControl_21_9,0_MaterialInputComponent_21_10,0_BaseMaterialInput_21_11,0_MaterialInputDefaultValueAccessor_21_12,0_MaterialNumberValueAccessor_21_13,0_compView_25,0_DeferredValidator_25_5,0_MaterialNumberValidator_25_6,0_NgValidators_25_7,0_NgModel_25_8,0_NgControl_25_9,0_MaterialInputComponent_25_10,0_BaseMaterialInput_25_11,0_MaterialInputDefaultValueAccessor_25_12,0_MaterialNumberValueAccessor_25_13,0_appEl_26,0_NgIf_26_9,0_stage_template$_expr_4,0_stage_template$_expr_6,0_stage_template$_expr_9,0_stage_template$_expr_12,0_stage_template$_expr_15,0_stage_template$_expr_18,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _el_14, _el_15, _el_17, _el_18, _el_19, _el_21, _el_22, _el_23, _el_25, _anchor_26, subscription_0, subscription_1, subscription_2, subscription_3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._stage_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._stage_template$_compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._stage_template$_MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._stage_template$_compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._stage_template$_DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._stage_template$_NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._stage_template$_NgModel_5_7 = t3;
        this._stage_template$_NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._stage_template$_compView_5.viewData.ref, this._stage_template$_DeferredValidator_5_5);
        this._stage_template$_MaterialInputComponent_5_9 = t3;
        this._stage_template$_BaseMaterialInput_5_10 = t3;
        t4 = this._stage_template$_NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._stage_template$_MaterialInputDefaultValueAccessor_5_11 = t5;
        this._stage_template$_compView_5.create$2(0, this._stage_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._stage_template$_compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._stage_template$_DeferredValidator_9_5 = t3;
        t3 = [t3];
        this._stage_template$_NgValidators_9_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._stage_template$_NgModel_9_7 = t3;
        this._stage_template$_NgControl_9_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._stage_template$_compView_9.viewData.ref, this._stage_template$_DeferredValidator_9_5);
        this._stage_template$_MaterialInputComponent_9_9 = t3;
        this._stage_template$_BaseMaterialInput_9_10 = t3;
        t4 = this._stage_template$_NgControl_9_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._stage_template$_MaterialInputDefaultValueAccessor_9_11 = t5;
        this._stage_template$_compView_9.create$2(0, this._stage_template$_MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Owner ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._stage_template$_compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._stage_template$_DeferredValidator_13_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._stage_template$_MaterialNumberValidator_13_6 = t4;
        t4 = [t3, t4];
        this._stage_template$_NgValidators_13_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._stage_template$_NgModel_13_8 = t4;
        this._stage_template$_NgControl_13_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._stage_template$_compView_13.viewData.ref, this._stage_template$_DeferredValidator_13_5);
        this._stage_template$_MaterialInputComponent_13_10 = t4;
        this._stage_template$_BaseMaterialInput_13_11 = t4;
        t3 = this._stage_template$_NgControl_13_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._stage_template$_MaterialInputDefaultValueAccessor_13_12 = t5;
        t3 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._stage_template$_BaseMaterialInput_13_11, this._stage_template$_NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._stage_template$_MaterialNumberValueAccessor_13_13 = t3;
        this._stage_template$_compView_13.create$2(0, this._stage_template$_MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        _el_14 = doc.createElement("div");
        _el_14.className = "inlinediv";
        H.interceptedTypeCheck(_el_14, "$isHtmlElement");
        this.addShimC$1(_el_14);
        _el_15 = S.createAndAppend(doc, "h4", _el_14);
        this.addShimE$1(_el_15);
        J.append$1$x(_el_15, doc.createTextNode("Tournament ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 17);
        this._stage_template$_compView_17 = t3;
        _el_17 = t3.rootEl;
        J.append$1$x(_el_14, _el_17);
        t3 = J.getInterceptor$x(_el_17);
        t3.setAttribute$2(_el_17, "label", "Number");
        t3.setAttribute$2(_el_17, "type", "number");
        this.addShimC$1(_el_17);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._stage_template$_DeferredValidator_17_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._stage_template$_MaterialNumberValidator_17_6 = t4;
        t4 = [t3, t4];
        this._stage_template$_NgValidators_17_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._stage_template$_NgModel_17_8 = t4;
        this._stage_template$_NgControl_17_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._stage_template$_compView_17.viewData.ref, this._stage_template$_DeferredValidator_17_5);
        this._stage_template$_MaterialInputComponent_17_10 = t4;
        this._stage_template$_BaseMaterialInput_17_11 = t4;
        t3 = this._stage_template$_NgControl_17_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._stage_template$_MaterialInputDefaultValueAccessor_17_12 = t5;
        t3 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._stage_template$_BaseMaterialInput_17_11, this._stage_template$_NgControl_17_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._stage_template$_MaterialNumberValueAccessor_17_13 = t3;
        this._stage_template$_compView_17.create$2(0, this._stage_template$_MaterialInputComponent_17_10, [C.List_empty, C.List_empty]);
        _el_18 = doc.createElement("div");
        _el_18.className = "inlinediv";
        H.interceptedTypeCheck(_el_18, "$isHtmlElement");
        this.addShimC$1(_el_18);
        _el_19 = S.createAndAppend(doc, "h4", _el_18);
        this.addShimE$1(_el_19);
        J.append$1$x(_el_19, doc.createTextNode("Max Entrants:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 21);
        this._compView_21 = t3;
        _el_21 = t3.rootEl;
        J.append$1$x(_el_18, _el_21);
        t3 = J.getInterceptor$x(_el_21);
        t3.setAttribute$2(_el_21, "label", "Number");
        t3.setAttribute$2(_el_21, "type", "number");
        this.addShimC$1(_el_21);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._DeferredValidator_21_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._MaterialNumberValidator_21_6 = t4;
        t4 = [t3, t4];
        this._NgValidators_21_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._NgModel_21_8 = t4;
        this._NgControl_21_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._compView_21.viewData.ref, this._DeferredValidator_21_5);
        this._MaterialInputComponent_21_10 = t4;
        this._BaseMaterialInput_21_11 = t4;
        t3 = this._NgControl_21_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._MaterialInputDefaultValueAccessor_21_12 = t5;
        t3 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._BaseMaterialInput_21_11, this._NgControl_21_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._MaterialNumberValueAccessor_21_13 = t3;
        this._compView_21.create$2(0, this._MaterialInputComponent_21_10, [C.List_empty, C.List_empty]);
        _el_22 = doc.createElement("div");
        _el_22.className = "inlinediv";
        H.interceptedTypeCheck(_el_22, "$isHtmlElement");
        this.addShimC$1(_el_22);
        _el_23 = S.createAndAppend(doc, "h4", _el_22);
        this.addShimE$1(_el_23);
        J.append$1$x(_el_23, doc.createTextNode("Max Rounds:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 25);
        this._compView_25 = t3;
        _el_25 = t3.rootEl;
        J.append$1$x(_el_22, _el_25);
        t3 = J.getInterceptor$x(_el_25);
        t3.setAttribute$2(_el_25, "label", "Number");
        t3.setAttribute$2(_el_25, "type", "number");
        this.addShimC$1(_el_25);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._DeferredValidator_25_5 = t2;
        t3 = new F.MaterialNumberValidator();
        this._MaterialNumberValidator_25_6 = t3;
        t3 = [t2, t3];
        this._NgValidators_25_7 = t3;
        t3 = U.NgModel$(t3, null);
        this._NgModel_25_8 = t3;
        this._NgControl_25_9 = t3;
        t3 = L.MaterialInputComponent$("number", null, null, t3, this._compView_25.viewData.ref, this._DeferredValidator_25_5);
        this._MaterialInputComponent_25_10 = t3;
        this._BaseMaterialInput_25_11 = t3;
        t2 = this._NgControl_25_9;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t2);
        t4.BaseMaterialInputValueAccessor$2(t3, t2);
        this._MaterialInputDefaultValueAccessor_25_12 = t4;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._BaseMaterialInput_25_11, this._NgControl_25_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._MaterialNumberValueAccessor_25_13 = t1;
        this._compView_25.create$2(0, this._MaterialInputComponent_25_10, [C.List_empty, C.List_empty]);
        this._stage_template$_compView_1.create$2(0, this._stage_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10, _el_14, _el_18, _el_22], [W.Element]), C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_26 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_26);
        t1 = new V.ViewContainer(26, 0, this, _anchor_26);
        this._appEl_26 = t1;
        this._NgIf_26_9 = new K.NgIf(new D.TemplateRef(t1, R.stage_template__viewFactory_StageDetailComponent1$closure()), t1, false);
        t1 = this._stage_template$_NgModel_9_7._update;
        t1.toString;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_stage_template$_handle_ngModelChange_9_0(), null, null));
        t1 = this._stage_template$_NgModel_13_8._update;
        t1.toString;
        subscription_1 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_stage_template$_handle_ngModelChange_13_0(), null, null));
        t1 = this._stage_template$_NgModel_17_8._update;
        t1.toString;
        subscription_2 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_stage_template$_handle_ngModelChange_17_0(), null, null));
        t1 = this._NgModel_21_8._update;
        t1.toString;
        subscription_3 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_ngModelChange_21_0(), null, null));
        t1 = this._NgModel_25_8._update;
        t1.toString;
        this.init$2(C.List_empty, [subscription_0, subscription_1, subscription_2, subscription_3, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_ngModelChange_25_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._stage_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._stage_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._stage_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._stage_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._stage_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._stage_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._stage_template$_DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._stage_template$_NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._stage_template$_NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._stage_template$_MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._stage_template$_BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._stage_template$_MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._stage_template$_DeferredValidator_13_5;
        t7 = token === C.Type_MaterialNumberValidator_86y;
        if (t7 && 13 === nodeIndex)
          return this._stage_template$_MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._stage_template$_NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._stage_template$_NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._stage_template$_MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._stage_template$_BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._stage_template$_MaterialInputDefaultValueAccessor_13_12;
        t8 = token === C.Type_MaterialNumberValueAccessor_mqh;
        if (t8 && 13 === nodeIndex)
          return this._stage_template$_MaterialNumberValueAccessor_13_13;
        if (t1 && 17 === nodeIndex)
          return this._stage_template$_DeferredValidator_17_5;
        if (t7 && 17 === nodeIndex)
          return this._stage_template$_MaterialNumberValidator_17_6;
        if (t2 && 17 === nodeIndex)
          return this._stage_template$_NgModel_17_8;
        if (t3 && 17 === nodeIndex)
          return this._stage_template$_NgControl_17_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 17 === nodeIndex)
          return this._stage_template$_MaterialInputComponent_17_10;
        if (t5 && 17 === nodeIndex)
          return this._stage_template$_BaseMaterialInput_17_11;
        if (t6 && 17 === nodeIndex)
          return this._stage_template$_MaterialInputDefaultValueAccessor_17_12;
        if (t8 && 17 === nodeIndex)
          return this._stage_template$_MaterialNumberValueAccessor_17_13;
        if (t1 && 21 === nodeIndex)
          return this._DeferredValidator_21_5;
        if (t7 && 21 === nodeIndex)
          return this._MaterialNumberValidator_21_6;
        if (t2 && 21 === nodeIndex)
          return this._NgModel_21_8;
        if (t3 && 21 === nodeIndex)
          return this._NgControl_21_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 21 === nodeIndex)
          return this._MaterialInputComponent_21_10;
        if (t5 && 21 === nodeIndex)
          return this._BaseMaterialInput_21_11;
        if (t6 && 21 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_21_12;
        if (t8 && 21 === nodeIndex)
          return this._MaterialNumberValueAccessor_21_13;
        if (t1 && 25 === nodeIndex)
          return this._DeferredValidator_25_5;
        if (t7 && 25 === nodeIndex)
          return this._MaterialNumberValidator_25_6;
        if (t2 && 25 === nodeIndex)
          return this._NgModel_25_8;
        if (t3 && 25 === nodeIndex)
          return this._NgControl_25_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 25 === nodeIndex)
          return this._MaterialInputComponent_25_10;
        if (t5 && 25 === nodeIndex)
          return this._BaseMaterialInput_25_11;
        if (t6 && 25 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_25_12;
        if (t8 && 25 === nodeIndex)
          return this._MaterialNumberValueAccessor_25_13;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 25)
          return this._stage_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_9, currVal_12, currVal_15, currVal_18, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._stage_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._stage_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._stage_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._stage_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._stage_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._stage_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._stage_template$_expr_4;
        if (t1 !== true) {
          t1 = this._stage_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._stage_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._stage_template$_compView_5.viewData.set$cdMode(1);
        this._stage_template$_NgModel_9_7.set$model(_ctx.item.name);
        this._stage_template$_NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._stage_template$_NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._stage_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._stage_template$_MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._stage_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._stage_template$_compView_9.viewData.set$cdMode(1);
        this._stage_template$_NgModel_13_8.set$model(_ctx.item.ownerId);
        this._stage_template$_NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._stage_template$_NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._stage_template$_MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_9 = t1 >= 1;
        t1 = this._stage_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this._stage_template$_MaterialInputComponent_13_10;
          t1._disabled = currVal_9;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._stage_template$_expr_9 = currVal_9;
          changed = true;
        }
        if (changed)
          this._stage_template$_compView_13.viewData.set$cdMode(1);
        this._stage_template$_NgModel_17_8.set$model(_ctx.item.tournamentId);
        this._stage_template$_NgModel_17_8.ngAfterChanges$0();
        if (firstCheck)
          this._stage_template$_NgModel_17_8.ngOnInit$0();
        if (firstCheck) {
          this._stage_template$_MaterialInputComponent_17_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_12 = t1 >= 1;
        t1 = this._stage_template$_expr_12;
        if (t1 !== currVal_12) {
          t1 = this._stage_template$_MaterialInputComponent_17_10;
          t1._disabled = currVal_12;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._stage_template$_expr_12 = currVal_12;
          changed = true;
        }
        if (changed)
          this._stage_template$_compView_17.viewData.set$cdMode(1);
        this._NgModel_21_8.set$model(_ctx.item.maxEntrants);
        this._NgModel_21_8.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_21_8.ngOnInit$0();
        if (firstCheck) {
          this._MaterialInputComponent_21_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_15 = t1 >= 1;
        t1 = this._stage_template$_expr_15;
        if (t1 !== currVal_15) {
          t1 = this._MaterialInputComponent_21_10;
          t1._disabled = currVal_15;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._stage_template$_expr_15 = currVal_15;
          changed = true;
        }
        if (changed)
          this._compView_21.viewData.set$cdMode(1);
        this._NgModel_25_8.set$model(_ctx.item.maxRounds);
        this._NgModel_25_8.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_25_8.ngOnInit$0();
        if (firstCheck) {
          this._MaterialInputComponent_25_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_18 = t1 >= 1;
        t1 = this._stage_template$_expr_18;
        if (t1 !== currVal_18) {
          t1 = this._MaterialInputComponent_25_10;
          t1._disabled = currVal_18;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._stage_template$_expr_18 = currVal_18;
          changed = true;
        }
        if (changed)
          this._compView_25.viewData.set$cdMode(1);
        t1 = this._NgIf_26_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._appEl_26.detectChangesInNestedViews$0();
        this._stage_template$_compView_1.detectChanges$0();
        this._stage_template$_compView_5.detectChanges$0();
        this._stage_template$_compView_9.detectChanges$0();
        this._stage_template$_compView_13.detectChanges$0();
        this._stage_template$_compView_17.detectChanges$0();
        this._compView_21.detectChanges$0();
        this._compView_25.detectChanges$0();
        if (firstCheck) {
          this._stage_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._stage_template$_MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._stage_template$_MaterialInputComponent_13_10.ngAfterViewInit$0();
          this._stage_template$_MaterialInputComponent_17_10.ngAfterViewInit$0();
          this._MaterialInputComponent_21_10.ngAfterViewInit$0();
          this._MaterialInputComponent_25_10.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._appEl_26.destroyNestedViews$0();
        this._stage_template$_compView_1.destroy$0();
        this._stage_template$_compView_5.destroy$0();
        this._stage_template$_compView_9.destroy$0();
        this._stage_template$_compView_13.destroy$0();
        this._stage_template$_compView_17.destroy$0();
        this._compView_21.destroy$0();
        this._compView_25.destroy$0();
        var t1 = this._stage_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._stage_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._stage_template$_MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._stage_template$_MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._stage_template$_MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._stage_template$_MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._stage_template$_MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        t1 = this._stage_template$_MaterialInputComponent_17_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._stage_template$_MaterialInputDefaultValueAccessor_17_12.disposer.dispose$0();
        this._stage_template$_MaterialNumberValueAccessor_17_13.disposer.dispose$0();
        t1 = this._MaterialInputComponent_21_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_21_12.disposer.dispose$0();
        this._MaterialNumberValueAccessor_21_13.disposer.dispose$0();
        t1 = this._MaterialInputComponent_25_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_25_12.disposer.dispose$0();
        this._MaterialNumberValueAccessor_25_13.disposer.dispose$0();
        this._stage_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _stage_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_stage_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _stage_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$ownerId(H.intTypeCheck($$event));
      }, "call$1", "get$_stage_template$_handle_ngModelChange_13_0", 4, 0, 1],
      _stage_template$_handle_ngModelChange_17_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$tournamentId(H.intTypeCheck($$event));
      }, "call$1", "get$_stage_template$_handle_ngModelChange_17_0", 4, 0, 1],
      _handle_ngModelChange_21_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$maxEntrants(H.intTypeCheck($$event));
      }, "call$1", "get$_handle_ngModelChange_21_0", 4, 0, 1],
      _handle_ngModelChange_25_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$maxRounds(H.intTypeCheck($$event));
      }, "call$1", "get$_handle_ngModelChange_25_0", 4, 0, 1],
      $asAppView: function() {
        return [L.StageDetailComponent];
      }
    },
    _ViewStageDetailComponent1: {
      "^": "AppView;0_stage_template$_compView_0,0_stage_template$_MaterialExpansionPanel_0_5,0_stage_template$_compView_2,0_stage_template$_AcxDarkTheme_2_5,0_stage_template$_MaterialButtonComponent_2_6,0_stage_template$_compView_4,0_stage_template$_AcxDarkTheme_4_5,0_stage_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._stage_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._stage_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._stage_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._stage_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._stage_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._stage_template$_compView_2.viewData.ref, null);
        this._stage_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._stage_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._stage_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._stage_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._stage_template$_compView_4.viewData.ref, null);
        this._stage_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._stage_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._stage_template$_compView_0.create$2(0, this._stage_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._stage_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_stage_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._stage_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_stage_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._stage_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._stage_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._stage_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._stage_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._stage_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._stage_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._stage_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._stage_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._stage_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._stage_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._stage_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._stage_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._stage_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._stage_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._stage_template$_compView_2.detectHostChanges$1(firstCheck);
        this._stage_template$_compView_4.detectHostChanges$1(firstCheck);
        this._stage_template$_compView_0.detectChanges$0();
        this._stage_template$_compView_2.detectChanges$0();
        this._stage_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._stage_template$_compView_0.destroy$0();
        this._stage_template$_compView_2.destroy$0();
        this._stage_template$_compView_4.destroy$0();
        this._stage_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _stage_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_stage_template$_handle_trigger_2_0", 4, 0, 1],
      _stage_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_stage_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [L.StageDetailComponent];
      }
    },
    _ViewStageDetailComponentHost0: {
      "^": "AppView;0_stage_template$_compView_0,0_StageDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3, t4;
        t1 = P.String;
        t2 = new R.ViewStageDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3 = L.StageDetailComponent;
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_1, 0, t3));
        t4 = document.createElement("stage-detail");
        t2.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewStageDetailComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$StageDetailComponent());
          $.ViewStageDetailComponent0__renderType = t4;
        }
        t2.setupComponentType$1(t4);
        this._stage_template$_compView_0 = t2;
        this.rootEl = t2.rootEl;
        t2 = new L.StageDetailComponent();
        t2.set$_stage$_buttonStreamer(new P._SyncBroadcastStreamController(null, null, 0, [t1]));
        this._StageDetailComponent_0_5 = t2;
        this._stage_template$_compView_0.create$2(0, t2, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._StageDetailComponent_0_5, [t3]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._StageDetailComponent_0_5.ngOnInit$0();
        this._stage_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._stage_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [L.StageDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_tournament_tournament.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/tournament/tournament.css.shim.dart",, S, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/tournament/tournament.dart",, E, {
    "^": "",
    TournamentDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_tournament$_buttonStreamer",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isTournament");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      set$_tournament$_buttonStreamer: function(_buttonStreamer) {
        this._tournament$_buttonStreamer = H.assertSubtype(_buttonStreamer, "$isStreamController", [P.String], "$asStreamController");
      },
      get$buttonStream: function() {
        var t1 = this._tournament$_buttonStreamer;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        this._tournament$_buttonStreamer.add$1(0, cmd);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/tournament/tournament.template.dart",, A, {
    "^": "",
    viewFactory_TournamentDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new A._ViewTournamentDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, E.TournamentDetailComponent));
      t1.componentType = $.ViewTournamentDetailComponent0__renderType;
      return t1;
    }, "call$2", "tournament_template__viewFactory_TournamentDetailComponent1$closure", 8, 0, 81],
    viewFactory_TournamentDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new A._ViewTournamentDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, E.TournamentDetailComponent));
      return t1;
    }, "call$2", "tournament_template__viewFactory_TournamentDetailComponentHost0$closure", 8, 0, 81],
    ViewTournamentDetailComponent0: {
      "^": "AppView;0_tournament_template$_compView_1,0_tournament_template$_MaterialExpansionPanel_1_5,0_tournament_template$_compView_5,0_tournament_template$_DeferredValidator_5_5,0_tournament_template$_NgValidators_5_6,0_tournament_template$_NgModel_5_7,0_tournament_template$_NgControl_5_8,0_tournament_template$_MaterialInputComponent_5_9,0_tournament_template$_BaseMaterialInput_5_10,0_tournament_template$_MaterialInputDefaultValueAccessor_5_11,0_tournament_template$_compView_9,0_tournament_template$_DeferredValidator_9_5,0_tournament_template$_NgValidators_9_6,0_tournament_template$_NgModel_9_7,0_tournament_template$_NgControl_9_8,0_tournament_template$_MaterialInputComponent_9_9,0_tournament_template$_BaseMaterialInput_9_10,0_tournament_template$_MaterialInputDefaultValueAccessor_9_11,0_tournament_template$_compView_13,0_tournament_template$_DeferredValidator_13_5,0_tournament_template$_MaterialNumberValidator_13_6,0_tournament_template$_NgValidators_13_7,0_tournament_template$_NgModel_13_8,0_tournament_template$_NgControl_13_9,0_tournament_template$_MaterialInputComponent_13_10,0_tournament_template$_BaseMaterialInput_13_11,0_tournament_template$_MaterialInputDefaultValueAccessor_13_12,0_tournament_template$_MaterialNumberValueAccessor_13_13,0_compView_17,0_DeferredValidator_17_5,0_MaterialNumberValidator_17_6,0_NgValidators_17_7,0_NgModel_17_8,0_NgControl_17_9,0_MaterialInputComponent_17_10,0_BaseMaterialInput_17_11,0_MaterialInputDefaultValueAccessor_17_12,0_MaterialNumberValueAccessor_17_13,0_appEl_18,0_NgIf_18_9,0_tournament_template$_expr_4,0_tournament_template$_expr_6,0_tournament_template$_expr_9,0_tournament_template$_expr_12,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, t8, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _el_13, _el_14, _el_15, _el_17, _anchor_18, subscription_0, subscription_1;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._tournament_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._tournament_template$_compView_1.viewData.ref;
        t4 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t5 = [P.bool];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t2 = new T.MaterialExpansionPanel(t2, t3, t4, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._tournament_template$_MaterialExpansionPanel_1_5 = t2;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 5);
        this._tournament_template$_compView_5 = t2;
        _el_5 = t2.rootEl;
        J.append$1$x(_el_2, _el_5);
        this.addShimC$1(_el_5);
        t2 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._tournament_template$_DeferredValidator_5_5 = t3;
        t3 = [t3];
        this._tournament_template$_NgValidators_5_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._tournament_template$_NgModel_5_7 = t3;
        this._tournament_template$_NgControl_5_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._tournament_template$_compView_5.viewData.ref, this._tournament_template$_DeferredValidator_5_5);
        this._tournament_template$_MaterialInputComponent_5_9 = t3;
        this._tournament_template$_BaseMaterialInput_5_10 = t3;
        t4 = this._tournament_template$_NgControl_5_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._tournament_template$_MaterialInputDefaultValueAccessor_5_11 = t5;
        this._tournament_template$_compView_5.create$2(0, this._tournament_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 9);
        this._tournament_template$_compView_9 = t3;
        _el_9 = t3.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._tournament_template$_DeferredValidator_9_5 = t3;
        t3 = [t3];
        this._tournament_template$_NgValidators_9_6 = t3;
        t3 = U.NgModel$(t3, null);
        this._tournament_template$_NgModel_9_7 = t3;
        this._tournament_template$_NgControl_9_8 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, t3, this._tournament_template$_compView_9.viewData.ref, this._tournament_template$_DeferredValidator_9_5);
        this._tournament_template$_MaterialInputComponent_9_9 = t3;
        this._tournament_template$_BaseMaterialInput_9_10 = t3;
        t4 = this._tournament_template$_NgControl_9_8;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t4);
        t5.BaseMaterialInputValueAccessor$2(t3, t4);
        this._tournament_template$_MaterialInputDefaultValueAccessor_9_11 = t5;
        this._tournament_template$_compView_9.create$2(0, this._tournament_template$_MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Owner ID:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 13);
        this._tournament_template$_compView_13 = t3;
        _el_13 = t3.rootEl;
        J.append$1$x(_el_10, _el_13);
        t3 = J.getInterceptor$x(_el_13);
        t3.setAttribute$2(_el_13, "label", "Number");
        t3.setAttribute$2(_el_13, "type", "number");
        this.addShimC$1(_el_13);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._tournament_template$_DeferredValidator_13_5 = t3;
        t4 = new F.MaterialNumberValidator();
        this._tournament_template$_MaterialNumberValidator_13_6 = t4;
        t4 = [t3, t4];
        this._tournament_template$_NgValidators_13_7 = t4;
        t4 = U.NgModel$(t4, null);
        this._tournament_template$_NgModel_13_8 = t4;
        this._tournament_template$_NgControl_13_9 = t4;
        t4 = L.MaterialInputComponent$("number", null, null, t4, this._tournament_template$_compView_13.viewData.ref, this._tournament_template$_DeferredValidator_13_5);
        this._tournament_template$_MaterialInputComponent_13_10 = t4;
        this._tournament_template$_BaseMaterialInput_13_11 = t4;
        t3 = this._tournament_template$_NgControl_13_9;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t4, t3);
        t5.BaseMaterialInputValueAccessor$2(t4, t3);
        this._tournament_template$_MaterialInputDefaultValueAccessor_13_12 = t5;
        t3 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._tournament_template$_BaseMaterialInput_13_11, this._tournament_template$_NgControl_13_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._tournament_template$_MaterialNumberValueAccessor_13_13 = t3;
        this._tournament_template$_compView_13.create$2(0, this._tournament_template$_MaterialInputComponent_13_10, [C.List_empty, C.List_empty]);
        _el_14 = doc.createElement("div");
        _el_14.className = "inlinediv";
        H.interceptedTypeCheck(_el_14, "$isHtmlElement");
        this.addShimC$1(_el_14);
        _el_15 = S.createAndAppend(doc, "h4", _el_14);
        this.addShimE$1(_el_15);
        J.append$1$x(_el_15, doc.createTextNode("Max Entrants:"));
        t3 = Q.ViewMaterialInputComponent0$(this, 17);
        this._compView_17 = t3;
        _el_17 = t3.rootEl;
        J.append$1$x(_el_14, _el_17);
        t3 = J.getInterceptor$x(_el_17);
        t3.setAttribute$2(_el_17, "label", "Number");
        t3.setAttribute$2(_el_17, "type", "number");
        this.addShimC$1(_el_17);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t2));
        this._DeferredValidator_17_5 = t2;
        t3 = new F.MaterialNumberValidator();
        this._MaterialNumberValidator_17_6 = t3;
        t3 = [t2, t3];
        this._NgValidators_17_7 = t3;
        t3 = U.NgModel$(t3, null);
        this._NgModel_17_8 = t3;
        this._NgControl_17_9 = t3;
        t3 = L.MaterialInputComponent$("number", null, null, t3, this._compView_17.viewData.ref, this._DeferredValidator_17_5);
        this._MaterialInputComponent_17_10 = t3;
        this._BaseMaterialInput_17_11 = t3;
        t2 = this._NgControl_17_9;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, t2);
        t4.BaseMaterialInputValueAccessor$2(t3, t2);
        this._MaterialInputDefaultValueAccessor_17_12 = t4;
        t1 = F.MaterialNumberValueAccessor_MaterialNumberValueAccessor(this._BaseMaterialInput_17_11, this._NgControl_17_9, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_NumberFormat_kZA, this.viewData.parentIndex, null), "$isNumberFormat"), null, null, null, null);
        this._MaterialNumberValueAccessor_17_13 = t1;
        this._compView_17.create$2(0, this._MaterialInputComponent_17_10, [C.List_empty, C.List_empty]);
        this._tournament_template$_compView_1.create$2(0, this._tournament_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10, _el_14], [W.Element]), C.List_empty]);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_18 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_18);
        t1 = new V.ViewContainer(18, 0, this, _anchor_18);
        this._appEl_18 = t1;
        this._NgIf_18_9 = new K.NgIf(new D.TemplateRef(t1, A.tournament_template__viewFactory_TournamentDetailComponent1$closure()), t1, false);
        t1 = this._tournament_template$_NgModel_9_7._update;
        t1.toString;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_tournament_template$_handle_ngModelChange_9_0(), null, null));
        t1 = this._tournament_template$_NgModel_13_8._update;
        t1.toString;
        subscription_1 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_tournament_template$_handle_ngModelChange_13_0(), null, null));
        t1 = this._NgModel_17_8._update;
        t1.toString;
        this.init$2(C.List_empty, [subscription_0, subscription_1, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_ngModelChange_17_0(), null, null))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6, t7, t8;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._tournament_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._tournament_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._tournament_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._tournament_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._tournament_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._tournament_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._tournament_template$_DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._tournament_template$_NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._tournament_template$_NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._tournament_template$_MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._tournament_template$_BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._tournament_template$_MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._tournament_template$_DeferredValidator_13_5;
        t7 = token === C.Type_MaterialNumberValidator_86y;
        if (t7 && 13 === nodeIndex)
          return this._tournament_template$_MaterialNumberValidator_13_6;
        if (t2 && 13 === nodeIndex)
          return this._tournament_template$_NgModel_13_8;
        if (t3 && 13 === nodeIndex)
          return this._tournament_template$_NgControl_13_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._tournament_template$_MaterialInputComponent_13_10;
        if (t5 && 13 === nodeIndex)
          return this._tournament_template$_BaseMaterialInput_13_11;
        if (t6 && 13 === nodeIndex)
          return this._tournament_template$_MaterialInputDefaultValueAccessor_13_12;
        t8 = token === C.Type_MaterialNumberValueAccessor_mqh;
        if (t8 && 13 === nodeIndex)
          return this._tournament_template$_MaterialNumberValueAccessor_13_13;
        if (t1 && 17 === nodeIndex)
          return this._DeferredValidator_17_5;
        if (t7 && 17 === nodeIndex)
          return this._MaterialNumberValidator_17_6;
        if (t2 && 17 === nodeIndex)
          return this._NgModel_17_8;
        if (t3 && 17 === nodeIndex)
          return this._NgControl_17_9;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 17 === nodeIndex)
          return this._MaterialInputComponent_17_10;
        if (t5 && 17 === nodeIndex)
          return this._BaseMaterialInput_17_11;
        if (t6 && 17 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_17_12;
        if (t8 && 17 === nodeIndex)
          return this._MaterialNumberValueAccessor_17_13;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 17)
          return this._tournament_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_9, currVal_12, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._tournament_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._tournament_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._tournament_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._tournament_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._tournament_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._tournament_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._tournament_template$_expr_4;
        if (t1 !== true) {
          t1 = this._tournament_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._tournament_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._tournament_template$_compView_5.viewData.set$cdMode(1);
        this._tournament_template$_NgModel_9_7.set$model(_ctx.item.name);
        this._tournament_template$_NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._tournament_template$_NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._tournament_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._tournament_template$_MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._tournament_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._tournament_template$_compView_9.viewData.set$cdMode(1);
        this._tournament_template$_NgModel_13_8.set$model(_ctx.item.ownerId);
        this._tournament_template$_NgModel_13_8.ngAfterChanges$0();
        if (firstCheck)
          this._tournament_template$_NgModel_13_8.ngOnInit$0();
        if (firstCheck) {
          this._tournament_template$_MaterialInputComponent_13_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_9 = t1 >= 1;
        t1 = this._tournament_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this._tournament_template$_MaterialInputComponent_13_10;
          t1._disabled = currVal_9;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._tournament_template$_expr_9 = currVal_9;
          changed = true;
        }
        if (changed)
          this._tournament_template$_compView_13.viewData.set$cdMode(1);
        this._NgModel_17_8.set$model(J.$index$asx(_ctx.item.settings, "maxEntrants"));
        this._NgModel_17_8.ngAfterChanges$0();
        if (firstCheck)
          this._NgModel_17_8.ngOnInit$0();
        if (firstCheck) {
          this._MaterialInputComponent_17_10.label = "Number";
          changed = true;
        } else
          changed = false;
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_12 = t1 >= 1;
        t1 = this._tournament_template$_expr_12;
        if (t1 !== currVal_12) {
          t1 = this._MaterialInputComponent_17_10;
          t1._disabled = currVal_12;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._tournament_template$_expr_12 = currVal_12;
          changed = true;
        }
        if (changed)
          this._compView_17.viewData.set$cdMode(1);
        t1 = this._NgIf_18_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._appEl_18.detectChangesInNestedViews$0();
        this._tournament_template$_compView_1.detectChanges$0();
        this._tournament_template$_compView_5.detectChanges$0();
        this._tournament_template$_compView_9.detectChanges$0();
        this._tournament_template$_compView_13.detectChanges$0();
        this._compView_17.detectChanges$0();
        if (firstCheck) {
          this._tournament_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._tournament_template$_MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._tournament_template$_MaterialInputComponent_13_10.ngAfterViewInit$0();
          this._MaterialInputComponent_17_10.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._appEl_18.destroyNestedViews$0();
        this._tournament_template$_compView_1.destroy$0();
        this._tournament_template$_compView_5.destroy$0();
        this._tournament_template$_compView_9.destroy$0();
        this._tournament_template$_compView_13.destroy$0();
        this._compView_17.destroy$0();
        var t1 = this._tournament_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._tournament_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._tournament_template$_MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._tournament_template$_MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._tournament_template$_MaterialInputComponent_13_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._tournament_template$_MaterialInputDefaultValueAccessor_13_12.disposer.dispose$0();
        this._tournament_template$_MaterialNumberValueAccessor_13_13.disposer.dispose$0();
        t1 = this._MaterialInputComponent_17_10;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_17_12.disposer.dispose$0();
        this._MaterialNumberValueAccessor_17_13.disposer.dispose$0();
        this._tournament_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _tournament_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_tournament_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _tournament_template$_handle_ngModelChange_13_0$1: [function($$event) {
        J.get$item$x(this.ctx).set$ownerId(H.intTypeCheck($$event));
      }, "call$1", "get$_tournament_template$_handle_ngModelChange_13_0", 4, 0, 1],
      _handle_ngModelChange_17_0$1: [function($$event) {
        J.$indexSet$ax(J.get$item$x(this.ctx).get$settings(), "maxEntrants", $$event);
      }, "call$1", "get$_handle_ngModelChange_17_0", 4, 0, 1],
      $asAppView: function() {
        return [E.TournamentDetailComponent];
      }
    },
    _ViewTournamentDetailComponent1: {
      "^": "AppView;0_tournament_template$_compView_0,0_tournament_template$_MaterialExpansionPanel_0_5,0_tournament_template$_compView_2,0_tournament_template$_AcxDarkTheme_2_5,0_tournament_template$_MaterialButtonComponent_2_6,0_tournament_template$_compView_4,0_tournament_template$_AcxDarkTheme_4_5,0_tournament_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._tournament_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._tournament_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._tournament_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._tournament_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._tournament_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._tournament_template$_compView_2.viewData.ref, null);
        this._tournament_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._tournament_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._tournament_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._tournament_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._tournament_template$_compView_4.viewData.ref, null);
        this._tournament_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._tournament_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._tournament_template$_compView_0.create$2(0, this._tournament_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._tournament_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_tournament_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._tournament_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_tournament_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._tournament_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._tournament_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._tournament_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._tournament_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._tournament_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._tournament_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._tournament_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._tournament_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._tournament_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._tournament_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._tournament_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._tournament_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._tournament_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._tournament_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._tournament_template$_compView_2.detectHostChanges$1(firstCheck);
        this._tournament_template$_compView_4.detectHostChanges$1(firstCheck);
        this._tournament_template$_compView_0.detectChanges$0();
        this._tournament_template$_compView_2.detectChanges$0();
        this._tournament_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._tournament_template$_compView_0.destroy$0();
        this._tournament_template$_compView_2.destroy$0();
        this._tournament_template$_compView_4.destroy$0();
        this._tournament_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _tournament_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_tournament_template$_handle_trigger_2_0", 4, 0, 1],
      _tournament_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_tournament_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [E.TournamentDetailComponent];
      }
    },
    _ViewTournamentDetailComponentHost0: {
      "^": "AppView;0_tournament_template$_compView_0,0_TournamentDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3, t4;
        t1 = P.String;
        t2 = new A.ViewTournamentDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3 = E.TournamentDetailComponent;
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_1, 0, t3));
        t4 = document.createElement("tournament-detail");
        t2.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewTournamentDetailComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$TournamentDetailComponent());
          $.ViewTournamentDetailComponent0__renderType = t4;
        }
        t2.setupComponentType$1(t4);
        this._tournament_template$_compView_0 = t2;
        this.rootEl = t2.rootEl;
        t2 = new E.TournamentDetailComponent();
        t2.set$_tournament$_buttonStreamer(new P._SyncBroadcastStreamController(null, null, 0, [t1]));
        this._TournamentDetailComponent_0_5 = t2;
        this._tournament_template$_compView_0.create$2(0, t2, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._TournamentDetailComponent_0_5, [t3]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._TournamentDetailComponent_0_5.ngOnInit$0();
        this._tournament_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._tournament_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [E.TournamentDetailComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_detailView_user_user.css.shim.dart", "package:angular_tour_of_heroes/src/component/detailView/user/user.css.shim.dart",, G, {}], ["", "package:angular_tour_of_heroes/src/component/detailView/user/user.dart",, N, {
    "^": "",
    UserDetailComponent: {
      "^": "Object;0item>,0lockLevel,0_user$_buttonStreamer,_interopService,0barcodeSlot",
      set$item: function(_, item) {
        this.item = H.interceptedTypeCheck(item, "$isUser");
      },
      set$lockLevel: function(lockLevel) {
        this.lockLevel = H.intTypeCheck(lockLevel);
      },
      set$_user$_buttonStreamer: function(_buttonStreamer) {
        this._user$_buttonStreamer = H.assertSubtype(_buttonStreamer, "$isStreamController", [P.String], "$asStreamController");
      },
      set$barcodeSlot: function(barcodeSlot) {
        this.barcodeSlot = H.interceptedTypeCheck(barcodeSlot, "$isMaterialInputComponent");
      },
      get$buttonStream: function() {
        var t1 = this._user$_buttonStreamer;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      ngOnInit$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this, t1;
        var $async$ngOnInit$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Current Item : " + H.S($async$self.item.name));
                t1 = $async$self._interopService._barcodeStreamer;
                t1.toString;
                new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1($async$self.get$_barcodeStreamHandler());
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$ngOnInit$0, $async$completer);
      },
      buttonCall$2: function($event, cmd) {
        $event.preventDefault();
        $event.stopPropagation();
        this._user$_buttonStreamer.add$1(0, cmd);
      },
      _barcodeStreamHandler$1: [function(barcode) {
        var t1;
        H.interceptedTypeCheck(barcode, "$isBarcode");
        t1 = this.barcodeSlot;
        if (t1.focused && !t1._disabled)
          this.item.key = barcode.value;
      }, "call$1", "get$_barcodeStreamHandler", 4, 0, 173, 86],
      startBarcodeReader$0: [function() {
        if (!this.barcodeSlot._disabled) {
          this._interopService.toString;
          $.$get$context().$index(0, "videoStreamer").callMethod$2("start", []);
        }
      }, "call$0", "get$startBarcodeReader", 0, 0, 2],
      stopBarcodeReader$0: [function() {
        this._interopService.toString;
        $.$get$context().$index(0, "videoStreamer").callMethod$2("stop", []);
      }, "call$0", "get$stopBarcodeReader", 0, 0, 2]
    }
  }], ["", "package:angular_tour_of_heroes/src/component/detailView/user/user.template.dart",, F, {
    "^": "",
    viewFactory_UserDetailComponent1: [function(parentView, parentIndex) {
      var t1 = new F._ViewUserDetailComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, N.UserDetailComponent));
      t1.componentType = $.ViewUserDetailComponent0__renderType;
      return t1;
    }, "call$2", "user_template__viewFactory_UserDetailComponent1$closure", 8, 0, 68],
    viewFactory_UserDetailComponentHost0: [function(parentView, parentIndex) {
      var t1 = new F._ViewUserDetailComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, N.UserDetailComponent));
      return t1;
    }, "call$2", "user_template__viewFactory_UserDetailComponentHost0$closure", 8, 0, 68],
    ViewUserDetailComponent0: {
      "^": "AppView;0_user_template$_compView_1,0_user_template$_MaterialExpansionPanel_1_5,0_user_template$_compView_5,0_user_template$_DeferredValidator_5_5,0_user_template$_NgValidators_5_6,0_user_template$_NgModel_5_7,0_user_template$_NgControl_5_8,0_user_template$_MaterialInputComponent_5_9,0_user_template$_BaseMaterialInput_5_10,0_user_template$_MaterialInputDefaultValueAccessor_5_11,0_user_template$_compView_9,0_user_template$_DeferredValidator_9_5,0_user_template$_NgValidators_9_6,0_user_template$_NgModel_9_7,0_user_template$_NgControl_9_8,0_user_template$_MaterialInputComponent_9_9,0_user_template$_BaseMaterialInput_9_10,0_user_template$_MaterialInputDefaultValueAccessor_9_11,0_user_template$_compView_13,0_user_template$_DeferredValidator_13_5,0_user_template$_NgValidators_13_6,0_user_template$_NgModel_13_7,0_user_template$_NgControl_13_8,0_user_template$_MaterialInputComponent_13_9,0_user_template$_BaseMaterialInput_13_10,0_user_template$_MaterialInputDefaultValueAccessor_13_11,0_user_template$_appEl_14,0_user_template$_NgIf_14_9,0_user_template$_expr_4,0_user_template$_expr_6,0_user_template$_expr_9,0_user_template$_el_13,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, t1, _el_1, t2, t3, t4, t5, t6, t7, _el_2, _el_3, _el_5, _el_6, _el_7, _el_9, _el_10, _el_11, _anchor_14, subscription_0, subscription_1, subscription_2, subscription_3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        _el_0.className = "full_pad";
        this.addShimC$1(_el_0);
        t1 = D.ViewMaterialExpansionPanel0$(this, 1);
        this._user_template$_compView_1 = t1;
        _el_1 = t1.rootEl;
        (_el_0 && C.DivElement_methods).append$1(_el_0, _el_1);
        J.setAttribute$2$x(_el_1, "name", "Basic Information");
        this.addShimC$1(_el_1);
        t1 = this.parentView;
        t2 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_NgZone_6ty, this.viewData.parentIndex), "$isNgZone");
        t3 = this._user_template$_compView_1.viewData.ref;
        t1 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService");
        t4 = [P.bool];
        t5 = $.$get$MaterialExpansionPanel__msgSave();
        t6 = $.$get$MaterialExpansionPanel__msgCancel();
        t7 = [[L.AsyncAction, P.bool]];
        t1 = new T.MaterialExpansionPanel(t2, t3, t1, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t4), new P._SyncBroadcastStreamController(null, null, 0, t4), false, false, false, false, false, false, false, false, true, true, false, t5, t6, new P._SyncBroadcastStreamController(null, null, 0, t7), new P._SyncBroadcastStreamController(null, null, 0, t7), new P._SyncBroadcastStreamController(null, null, 0, t7), new P._SyncBroadcastStreamController(null, null, 0, t7));
        this._user_template$_MaterialExpansionPanel_1_5 = t1;
        _el_2 = doc.createElement("div");
        _el_2.className = "inlinediv";
        H.interceptedTypeCheck(_el_2, "$isHtmlElement");
        this.addShimC$1(_el_2);
        _el_3 = S.createAndAppend(doc, "h4", _el_2);
        this.addShimE$1(_el_3);
        J.append$1$x(_el_3, doc.createTextNode("ID:"));
        t1 = Q.ViewMaterialInputComponent0$(this, 5);
        this._user_template$_compView_5 = t1;
        _el_5 = t1.rootEl;
        J.append$1$x(_el_2, _el_5);
        J.setAttribute$2$x(_el_5, "placeholder", "-");
        this.addShimC$1(_el_5);
        t1 = [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}];
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t1));
        this._user_template$_DeferredValidator_5_5 = t2;
        t2 = [t2];
        this._user_template$_NgValidators_5_6 = t2;
        t2 = U.NgModel$(t2, null);
        this._user_template$_NgModel_5_7 = t2;
        this._user_template$_NgControl_5_8 = t2;
        t2 = L.MaterialInputComponent$(null, null, null, t2, this._user_template$_compView_5.viewData.ref, this._user_template$_DeferredValidator_5_5);
        this._user_template$_MaterialInputComponent_5_9 = t2;
        this._user_template$_BaseMaterialInput_5_10 = t2;
        t3 = this._user_template$_NgControl_5_8;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t2, t3);
        t4.BaseMaterialInputValueAccessor$2(t2, t3);
        this._user_template$_MaterialInputDefaultValueAccessor_5_11 = t4;
        this._user_template$_compView_5.create$2(0, this._user_template$_MaterialInputComponent_5_9, [C.List_empty, C.List_empty]);
        _el_6 = doc.createElement("div");
        _el_6.className = "inlinediv";
        H.interceptedTypeCheck(_el_6, "$isHtmlElement");
        this.addShimC$1(_el_6);
        _el_7 = S.createAndAppend(doc, "h4", _el_6);
        this.addShimE$1(_el_7);
        J.append$1$x(_el_7, doc.createTextNode("Name:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 9);
        this._user_template$_compView_9 = t2;
        _el_9 = t2.rootEl;
        J.append$1$x(_el_6, _el_9);
        J.setAttribute$2$x(_el_9, "placeholder", "Name");
        this.addShimC$1(_el_9);
        t2 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t1));
        this._user_template$_DeferredValidator_9_5 = t2;
        t2 = [t2];
        this._user_template$_NgValidators_9_6 = t2;
        t2 = U.NgModel$(t2, null);
        this._user_template$_NgModel_9_7 = t2;
        this._user_template$_NgControl_9_8 = t2;
        t2 = L.MaterialInputComponent$(null, null, null, t2, this._user_template$_compView_9.viewData.ref, this._user_template$_DeferredValidator_9_5);
        this._user_template$_MaterialInputComponent_9_9 = t2;
        this._user_template$_BaseMaterialInput_9_10 = t2;
        t3 = this._user_template$_NgControl_9_8;
        t4 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t2, t3);
        t4.BaseMaterialInputValueAccessor$2(t2, t3);
        this._user_template$_MaterialInputDefaultValueAccessor_9_11 = t4;
        this._user_template$_compView_9.create$2(0, this._user_template$_MaterialInputComponent_9_9, [C.List_empty, C.List_empty]);
        _el_10 = doc.createElement("div");
        _el_10.className = "inlinediv";
        H.interceptedTypeCheck(_el_10, "$isHtmlElement");
        this.addShimC$1(_el_10);
        _el_11 = S.createAndAppend(doc, "h4", _el_10);
        this.addShimE$1(_el_11);
        J.append$1$x(_el_11, doc.createTextNode("Key:"));
        t2 = Q.ViewMaterialInputComponent0$(this, 13);
        this._user_template$_compView_13 = t2;
        t2 = t2.rootEl;
        this._user_template$_el_13 = t2;
        J.append$1$x(_el_10, t2);
        this._user_template$_el_13.className = Q.interpolate2("", "interop_fillable", " ", "themeable", "");
        J.setAttribute$2$x(this._user_template$_el_13, "placeholder", "64-Bit Key");
        this.addShimC$1(this._user_template$_el_13);
        t1 = new L.DeferredValidator(H.setRuntimeTypeInfo([], t1));
        this._user_template$_DeferredValidator_13_5 = t1;
        t1 = [t1];
        this._user_template$_NgValidators_13_6 = t1;
        t1 = U.NgModel$(t1, null);
        this._user_template$_NgModel_13_7 = t1;
        this._user_template$_NgControl_13_8 = t1;
        t1 = L.MaterialInputComponent$(null, null, null, t1, this._user_template$_compView_13.viewData.ref, this._user_template$_DeferredValidator_13_5);
        this._user_template$_MaterialInputComponent_13_9 = t1;
        this._user_template$_BaseMaterialInput_13_10 = t1;
        t2 = this._user_template$_NgControl_13_8;
        t3 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t1, t2);
        t3.BaseMaterialInputValueAccessor$2(t1, t2);
        this._user_template$_MaterialInputDefaultValueAccessor_13_11 = t3;
        this._user_template$_compView_13.create$2(0, this._user_template$_MaterialInputComponent_13_9, [C.List_empty, C.List_empty]);
        this._user_template$_compView_1.create$2(0, this._user_template$_MaterialExpansionPanel_1_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_2, _el_6, _el_10], [W.Element]), C.List_empty]);
        t3 = $.$get$_viewContainerAnchor();
        _anchor_14 = H.interceptedTypeCheck((t3 && C.Comment_methods).clone$1(t3, false), "$isComment");
        C.DivElement_methods.append$1(_el_0, _anchor_14);
        t3 = new V.ViewContainer(14, 0, this, _anchor_14);
        this._user_template$_appEl_14 = t3;
        this._user_template$_NgIf_14_9 = new K.NgIf(new D.TemplateRef(t3, F.user_template__viewFactory_UserDetailComponent1$closure()), t3, false);
        t3 = this._user_template$_NgModel_9_7._update;
        t3.toString;
        subscription_0 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_user_template$_handle_ngModelChange_9_0(), null, null));
        t3 = this._user_template$_NgModel_13_7._update;
        t3.toString;
        subscription_1 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_ngModelChange_13_2(), null, null));
        t3 = this._user_template$_MaterialInputComponent_13_9.FocusableMixin__onFocus;
        t2 = W.FocusEvent;
        subscription_2 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$startBarcodeReader(), t2));
        t3 = this._user_template$_MaterialInputComponent_13_9._blurController;
        subscription_3 = new P._BroadcastStream(t3, [H.getTypeArgumentByIndex(t3, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$stopBarcodeReader(), t2));
        this.ctx.set$barcodeSlot(this._user_template$_MaterialInputComponent_13_9);
        this.init$2(C.List_empty, [subscription_0, subscription_1, subscription_2, subscription_3]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3, t4, t5, t6;
        t1 = token === C.Type_DeferredValidator_k2a;
        if (t1 && 5 === nodeIndex)
          return this._user_template$_DeferredValidator_5_5;
        t2 = token === C.Type_NgModel_qx4;
        if (t2 && 5 === nodeIndex)
          return this._user_template$_NgModel_5_7;
        t3 = token === C.Type_NgControl_GNi;
        if (t3 && 5 === nodeIndex)
          return this._user_template$_NgControl_5_8;
        t4 = token !== C.Type_MaterialInputComponent_Arc;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 5 === nodeIndex)
          return this._user_template$_MaterialInputComponent_5_9;
        t5 = token === C.Type_BaseMaterialInput_ljM;
        if (t5 && 5 === nodeIndex)
          return this._user_template$_BaseMaterialInput_5_10;
        t6 = token === C.Type_YIv;
        if (t6 && 5 === nodeIndex)
          return this._user_template$_MaterialInputDefaultValueAccessor_5_11;
        if (t1 && 9 === nodeIndex)
          return this._user_template$_DeferredValidator_9_5;
        if (t2 && 9 === nodeIndex)
          return this._user_template$_NgModel_9_7;
        if (t3 && 9 === nodeIndex)
          return this._user_template$_NgControl_9_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 9 === nodeIndex)
          return this._user_template$_MaterialInputComponent_9_9;
        if (t5 && 9 === nodeIndex)
          return this._user_template$_BaseMaterialInput_9_10;
        if (t6 && 9 === nodeIndex)
          return this._user_template$_MaterialInputDefaultValueAccessor_9_11;
        if (t1 && 13 === nodeIndex)
          return this._user_template$_DeferredValidator_13_5;
        if (t2 && 13 === nodeIndex)
          return this._user_template$_NgModel_13_7;
        if (t3 && 13 === nodeIndex)
          return this._user_template$_NgControl_13_8;
        if ((!t4 || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 13 === nodeIndex)
          return this._user_template$_MaterialInputComponent_13_9;
        if (t5 && 13 === nodeIndex)
          return this._user_template$_BaseMaterialInput_13_10;
        if (t6 && 13 === nodeIndex)
          return this._user_template$_MaterialInputDefaultValueAccessor_13_11;
        if ((token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc) && 1 <= nodeIndex && nodeIndex <= 13)
          return this._user_template$_MaterialExpansionPanel_1_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_6, currVal_9, t2;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._user_template$_MaterialExpansionPanel_1_5;
          t1.name = "Basic Information";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_1.viewData.set$cdMode(1);
        if (firstCheck)
          this._user_template$_MaterialExpansionPanel_1_5.ngOnInit$0();
        this._user_template$_NgModel_5_7.set$model(J.toString$0$(_ctx.item.id));
        this._user_template$_NgModel_5_7.ngAfterChanges$0();
        if (firstCheck)
          this._user_template$_NgModel_5_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        t1 = this._user_template$_expr_4;
        if (t1 !== true) {
          t1 = this._user_template$_MaterialInputComponent_5_9;
          t1._disabled = true;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._user_template$_expr_4 = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_5.viewData.set$cdMode(1);
        this._user_template$_NgModel_9_7.set$model(_ctx.item.name);
        this._user_template$_NgModel_9_7.ngAfterChanges$0();
        if (firstCheck)
          this._user_template$_NgModel_9_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_6 = t1 >= 2;
        t1 = this._user_template$_expr_6;
        if (t1 !== currVal_6) {
          t1 = this._user_template$_MaterialInputComponent_9_9;
          t1._disabled = currVal_6;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._user_template$_expr_6 = currVal_6;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_9.viewData.set$cdMode(1);
        this._user_template$_NgModel_13_7.set$model(_ctx.item.key);
        this._user_template$_NgModel_13_7.ngAfterChanges$0();
        if (firstCheck)
          this._user_template$_NgModel_13_7.ngOnInit$0();
        t1 = _ctx.lockLevel;
        if (typeof t1 !== "number")
          return t1.$ge();
        currVal_9 = t1 >= 1;
        t1 = this._user_template$_expr_9;
        if (t1 !== currVal_9) {
          t1 = this._user_template$_MaterialInputComponent_13_9;
          t1._disabled = currVal_9;
          t1.get$_changeDetector().appView.markPathToRootAsCheckOnce$0();
          this._user_template$_expr_9 = currVal_9;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_13.viewData.set$cdMode(1);
        t1 = this._user_template$_NgIf_14_9;
        t2 = _ctx.lockLevel;
        if (typeof t2 !== "number")
          return t2.$ge();
        t1.set$ngIf(t2 >= 1);
        this._user_template$_appEl_14.detectChangesInNestedViews$0();
        if (firstCheck)
          this.setAttr$3(this._user_template$_el_13, "maxlength", C.JSInt_methods.toString$0(40));
        this._user_template$_compView_1.detectChanges$0();
        this._user_template$_compView_5.detectChanges$0();
        this._user_template$_compView_9.detectChanges$0();
        this._user_template$_compView_13.detectChanges$0();
        if (firstCheck) {
          this._user_template$_MaterialInputComponent_5_9.ngAfterViewInit$0();
          this._user_template$_MaterialInputComponent_9_9.ngAfterViewInit$0();
          this._user_template$_MaterialInputComponent_13_9.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._user_template$_appEl_14.destroyNestedViews$0();
        this._user_template$_compView_1.destroy$0();
        this._user_template$_compView_5.destroy$0();
        this._user_template$_compView_9.destroy$0();
        this._user_template$_compView_13.destroy$0();
        var t1 = this._user_template$_MaterialInputComponent_5_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._user_template$_MaterialInputDefaultValueAccessor_5_11.disposer.dispose$0();
        t1 = this._user_template$_MaterialInputComponent_9_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._user_template$_MaterialInputDefaultValueAccessor_9_11.disposer.dispose$0();
        t1 = this._user_template$_MaterialInputComponent_13_9;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._user_template$_MaterialInputDefaultValueAccessor_13_11.disposer.dispose$0();
        this._user_template$_MaterialExpansionPanel_1_5._material_expansionpanel$_disposer.dispose$0();
      },
      _user_template$_handle_ngModelChange_9_0$1: [function($$event) {
        J.set$name$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_user_template$_handle_ngModelChange_9_0", 4, 0, 1],
      _handle_ngModelChange_13_2$1: [function($$event) {
        J.set$key$x(J.get$item$x(this.ctx), H.stringTypeCheck($$event));
      }, "call$1", "get$_handle_ngModelChange_13_2", 4, 0, 1],
      $asAppView: function() {
        return [N.UserDetailComponent];
      }
    },
    _ViewUserDetailComponent1: {
      "^": "AppView;0_user_template$_compView_0,0_user_template$_MaterialExpansionPanel_0_5,0_user_template$_compView_2,0_user_template$_AcxDarkTheme_2_5,0_user_template$_MaterialButtonComponent_2_6,0_user_template$_compView_4,0_user_template$_AcxDarkTheme_4_5,0_user_template$_MaterialButtonComponent_4_6,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, t9, doc, _el_1, _el_2, _text_3, _el_4, _text_5, subscription_0;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._user_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "name", "Administration");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._user_template$_compView_0.viewData.ref;
        t5 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t6 = [P.bool];
        t7 = $.$get$MaterialExpansionPanel__msgSave();
        t8 = $.$get$MaterialExpansionPanel__msgCancel();
        t9 = [[L.AsyncAction, P.bool]];
        t3 = new T.MaterialExpansionPanel(t3, t4, t5, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t6), new P._SyncBroadcastStreamController(null, null, 0, t6), false, false, false, false, false, false, false, false, true, true, false, t7, t8, new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9), new P._SyncBroadcastStreamController(null, null, 0, t9));
        this._user_template$_MaterialExpansionPanel_0_5 = t3;
        doc = document;
        _el_1 = doc.createElement("div");
        _el_1.className = "vert_pad";
        H.interceptedTypeCheck(_el_1, "$isHtmlElement");
        this.addShimC$1(_el_1);
        t3 = U.ViewMaterialButtonComponent0$(this, 2);
        this._user_template$_compView_2 = t3;
        _el_2 = t3.rootEl;
        t3 = J.getInterceptor$x(_el_1);
        t3.append$1(_el_1, _el_2);
        _el_2.className = "danger_button";
        J.setAttribute$2$x(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t4 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._user_template$_AcxDarkTheme_2_5 = t4;
        t4 = B.MaterialButtonComponent$(_el_2, t4, this._user_template$_compView_2.viewData.ref, null);
        this._user_template$_MaterialButtonComponent_2_6 = t4;
        _text_3 = doc.createTextNode("DELETE");
        t5 = [W.Text];
        this._user_template$_compView_2.create$2(0, t4, [H.setRuntimeTypeInfo([_text_3], t5)]);
        t4 = U.ViewMaterialButtonComponent0$(this, 4);
        this._user_template$_compView_4 = t4;
        _el_4 = t4.rootEl;
        t3.append$1(_el_1, _el_4);
        _el_4.className = "blue";
        J.setAttribute$2$x(_el_4, "raised", "");
        this.addShimC$1(_el_4);
        t1 = F.AcxDarkTheme$(H.boolTypeCheck(t2.injectorGet$3(C.OpaqueToken_acxDarkTheme, t1.viewData.parentIndex, null)));
        this._user_template$_AcxDarkTheme_4_5 = t1;
        t1 = B.MaterialButtonComponent$(_el_4, t1, this._user_template$_compView_4.viewData.ref, null);
        this._user_template$_MaterialButtonComponent_4_6 = t1;
        _text_5 = doc.createTextNode("Clone");
        this._user_template$_compView_4.create$2(0, t1, [H.setRuntimeTypeInfo([_text_5], t5)]);
        this._user_template$_compView_0.create$2(0, this._user_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([_el_1], [W.Element]), C.List_empty]);
        t5 = this._user_template$_MaterialButtonComponent_2_6._trigger;
        t1 = W.UIEvent;
        subscription_0 = new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_user_template$_handle_trigger_2_0(), t1, t1));
        t5 = this._user_template$_MaterialButtonComponent_4_6._trigger;
        this.init$2([_el_0], [subscription_0, new P._BroadcastStream(t5, [H.getTypeArgumentByIndex(t5, 0)]).listen$1(this.eventHandler1$2$1(this.get$_user_template$_handle_trigger_4_0(), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 2 <= nodeIndex && nodeIndex <= 3)
          return this._user_template$_AcxDarkTheme_2_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 2 <= nodeIndex && nodeIndex <= 3)
          return this._user_template$_MaterialButtonComponent_2_6;
        if (t1 && 4 <= nodeIndex && nodeIndex <= 5)
          return this._user_template$_AcxDarkTheme_4_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 4 <= nodeIndex && nodeIndex <= 5)
          return this._user_template$_MaterialButtonComponent_4_6;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 5;
        else
          t1 = false;
        if (t1)
          return this._user_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._user_template$_MaterialExpansionPanel_0_5;
          t1.name = "Administration";
          t1.showSaveCancel = false;
          t1.set$isExpanded(false);
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._user_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        if (firstCheck) {
          this._user_template$_MaterialButtonComponent_2_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._user_template$_MaterialButtonComponent_2_6.ngOnInit$0();
        if (firstCheck) {
          this._user_template$_MaterialButtonComponent_4_6.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._user_template$_compView_4.viewData.set$cdMode(1);
        if (firstCheck)
          this._user_template$_MaterialButtonComponent_4_6.ngOnInit$0();
        this._user_template$_compView_2.detectHostChanges$1(firstCheck);
        this._user_template$_compView_4.detectHostChanges$1(firstCheck);
        this._user_template$_compView_0.detectChanges$0();
        this._user_template$_compView_2.detectChanges$0();
        this._user_template$_compView_4.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._user_template$_compView_0.destroy$0();
        this._user_template$_compView_2.destroy$0();
        this._user_template$_compView_4.destroy$0();
        this._user_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _user_template$_handle_trigger_2_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "delete");
      }, "call$1", "get$_user_template$_handle_trigger_2_0", 4, 0, 1],
      _user_template$_handle_trigger_4_0$1: [function($$event) {
        this.ctx.buttonCall$2(H.interceptedTypeCheck($$event, "$isUIEvent"), "clone");
      }, "call$1", "get$_user_template$_handle_trigger_4_0", 4, 0, 1],
      $asAppView: function() {
        return [N.UserDetailComponent];
      }
    },
    _ViewUserDetailComponentHost0: {
      "^": "AppView;0_user_template$_compView_0,0_UserDetailComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3, t4;
        t1 = P.String;
        t2 = new F.ViewUserDetailComponent0(P.LinkedHashMap_LinkedHashMap$_empty(t1, null), this);
        t3 = N.UserDetailComponent;
        t2.set$viewData(S.AppViewData_AppViewData(t2, 3, C.ViewType_1, 0, t3));
        t4 = document.createElement("user-detail");
        t2.rootEl = H.interceptedTypeCheck(t4, "$isHtmlElement");
        t4 = $.ViewUserDetailComponent0__renderType;
        if (t4 == null) {
          t4 = $.appViewUtils;
          t4 = t4.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$UserDetailComponent());
          $.ViewUserDetailComponent0__renderType = t4;
        }
        t2.setupComponentType$1(t4);
        this._user_template$_compView_0 = t2;
        this.rootEl = t2.rootEl;
        t2 = new N.UserDetailComponent(H.interceptedTypeCheck(this.injectorGet$2(C.Type_InteropBarcodeService_P5u, this.viewData.parentIndex), "$isInteropBarcodeService"));
        t2.set$_user$_buttonStreamer(new P._SyncBroadcastStreamController(null, null, 0, [t1]));
        this._UserDetailComponent_0_5 = t2;
        this._user_template$_compView_0.create$2(0, t2, this.viewData.projectableNodes);
        this.init0$1(this.rootEl);
        return new D.ComponentRef(this, 0, this.rootEl, this._UserDetailComponent_0_5, [t3]);
      },
      detectChangesInternal$0: function() {
        var t1 = this.viewData._cdState;
        if (t1 === 0)
          this._UserDetailComponent_0_5.ngOnInit$0();
        this._user_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._user_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [N.UserDetailComponent];
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/component/raisableMenu/raisable_menu_component.dart",, F, {
    "^": "",
    RaisableMenuComponent: {
      "^": "_RaisableMenuComponent_Object_FocusableMixin_MenuPopupWrapper;_raisable_menu_component$_root,_onTrigger,_raisable_menu_component$_disposer,0_popupClass,0buttonText,closeMenuOnClick,disabled>,tabbable,0ariaLabel,raised,0_button,0_menuPopup,MenuPopupWrapper_menu,MenuPopupWrapper__expanded,MenuPopupWrapper__width,MenuPopupWrapper_preferredPositions,FocusableMixin__onFocus,0FocusableMixin__focusable,FocusableMixin__focusPending",
      get$hasIcon: function() {
        return;
      },
      handleButtonClick$0: [function() {
        this.set$isExpanded(true);
        this._onTrigger.add$1(0, null);
      }, "call$0", "get$handleButtonClick", 0, 0, 2],
      set$button: function(_, b) {
        this._button = b;
      },
      set$menuPopup: function(m) {
        this._menuPopup = H.interceptedTypeCheck(m, "$isMenuPopupComponent");
      },
      get$_focusTarget: function() {
        var t1 = this.MenuPopupWrapper__expanded._observable$_value ? this._menuPopup : this._button;
        return t1;
      },
      ngAfterViewInit$0: function() {
        this.set$focusable(this.get$_focusTarget());
        var t1 = this.MenuPopupWrapper__expanded;
        this._raisable_menu_component$_disposer.addStreamSubscription$1$1(t1.get$stream(t1).listen$1(new F.RaisableMenuComponent_ngAfterViewInit_closure(this)), P.bool);
      },
      $isFocusable: 1
    },
    RaisableMenuComponent_ngAfterViewInit_closure: {
      "^": "Closure:29;$this",
      call$1: [function(_) {
        var t1;
        H.boolTypeCheck(_);
        t1 = this.$this;
        t1.set$focusable(t1.get$_focusTarget());
      }, null, null, 4, 0, null, 0, "call"]
    },
    _RaisableMenuComponent_Object_FocusableMixin: {
      "^": "Object+FocusableMixin;"
    },
    _RaisableMenuComponent_Object_FocusableMixin_MenuPopupWrapper: {
      "^": "_RaisableMenuComponent_Object_FocusableMixin+MenuPopupWrapper;"
    }
  }], ["", "package:angular_tour_of_heroes/src/component/raisableMenu/raisable_menu_component.template.dart",, G, {
    "^": "",
    viewFactory_RaisableMenuComponent1: [function(parentView, parentIndex) {
      var t1 = new G._ViewRaisableMenuComponent1(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, F.RaisableMenuComponent));
      t1.componentType = $.ViewRaisableMenuComponent0__renderType;
      return t1;
    }, "call$2", "raisable_menu_component_template__viewFactory_RaisableMenuComponent1$closure", 8, 0, 42],
    viewFactory_RaisableMenuComponent2: [function(parentView, parentIndex) {
      var t1 = new G._ViewRaisableMenuComponent2(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, F.RaisableMenuComponent));
      t1.componentType = $.ViewRaisableMenuComponent0__renderType;
      return t1;
    }, "call$2", "raisable_menu_component_template__viewFactory_RaisableMenuComponent2$closure", 8, 0, 42],
    viewFactory_RaisableMenuComponent3: [function(parentView, parentIndex) {
      var t1 = new G._ViewRaisableMenuComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, F.RaisableMenuComponent));
      t1.componentType = $.ViewRaisableMenuComponent0__renderType;
      return t1;
    }, "call$2", "raisable_menu_component_template__viewFactory_RaisableMenuComponent3$closure", 8, 0, 42],
    ViewRaisableMenuComponent0: {
      "^": "AppView;0_raisable_menu_component_template$_compView_0,0_raisable_menu_component_template$_appEl_0,0_AcxDarkTheme_0_8,0_MaterialButtonComponent_0_9,0_MaterialTooltipDirective_0_10,0_PopupSourceDirective_0_11,0__TooltipController_0_14,0_raisable_menu_component_template$_appEl_1,0_raisable_menu_component_template$_NgIf_1_9,0_raisable_menu_component_template$_appEl_2,0_raisable_menu_component_template$_NgIf_2_9,0_raisable_menu_component_template$_appEl_4,_query_MenuPopupComponent_1_1_isDirty,0_raisable_menu_component_template$_NgIf_4_9,0_raisable_menu_component_template$_expr_0,0_raisable_menu_component_template$_expr_1,0_raisable_menu_component_template$_expr_2,0_raisable_menu_component_template$_expr_3,0_raisable_menu_component_template$_expr_4,0_raisable_menu_component_template$_expr_5,0_raisable_menu_component_template$_expr_6,0_raisable_menu_component_template$_el_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      get$_TooltipController_0_14: function() {
        var t1 = this.__TooltipController_0_14;
        if (t1 == null) {
          t1 = this.parentView;
          t1 = G.createTooltipController(H.interceptedTypeCheck(t1.injectorGet$3(C.Type_TooltipController_H6X, this.viewData.parentIndex, null), "$isTooltipController"), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_Disposer_k0p, this.viewData.parentIndex, null), "$isDisposer"));
          this.__TooltipController_0_14 = t1;
        }
        return t1;
      },
      build$0: function() {
        var parentRenderNode, t1, t2, t3, t4, _text_3, t5, t6, _anchor_4, subscription_0;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        t1 = U.ViewMaterialButtonComponent0$(this, 0);
        this._raisable_menu_component_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this._raisable_menu_component_template$_el_0 = t1;
        t2 = J.getInterceptor$x(parentRenderNode);
        t2.append$1(parentRenderNode, t1);
        t1 = this._raisable_menu_component_template$_el_0;
        t1.className = "trigger-button";
        J.setAttribute$2$x(t1, "popupSource", "");
        this._raisable_menu_component_template$_appEl_0 = new V.ViewContainer(0, null, this, this._raisable_menu_component_template$_el_0);
        t1 = this.parentView;
        t3 = F.AcxDarkTheme$(H.boolTypeCheck(t1.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_0_8 = t3;
        this._MaterialButtonComponent_0_9 = B.MaterialButtonComponent$(this._raisable_menu_component_template$_el_0, t3, this._raisable_menu_component_template$_compView_0.viewData.ref, null);
        t3 = H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, this.viewData.parentIndex), "$isDomPopupSourceFactory");
        t4 = this._raisable_menu_component_template$_appEl_0;
        t4 = S.MaterialTooltipDirective$(t3, t4, this._raisable_menu_component_template$_el_0, t4, this._raisable_menu_component_template$_compView_0.viewData.ref, H.interceptedTypeCheck(t1.injectorGet$2(C.Type_Window_0H0, this.viewData.parentIndex), "$isWindow"));
        this._MaterialTooltipDirective_0_10 = t4;
        t1 = L.PopupSourceDirective$(H.interceptedTypeCheck(t1.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, this.viewData.parentIndex), "$isDomPopupSourceFactory"), this._raisable_menu_component_template$_el_0, H.interceptedTypeCheck(t1.injectorGet$3(C.Type_ReferenceDirective_i58, this.viewData.parentIndex, null), "$isReferenceDirective"), H.interceptedTypeCheck(t1.injectorGet$3(C.Type_Focusable_adc, this.viewData.parentIndex, null), "$isFocusable"), null);
        this._PopupSourceDirective_0_11 = t1;
        t1 = $.$get$_viewContainerAnchor();
        t3 = new V.ViewContainer(1, 0, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._raisable_menu_component_template$_appEl_1 = t3;
        this._raisable_menu_component_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t3, G.raisable_menu_component_template__viewFactory_RaisableMenuComponent1$closure()), t3, false);
        t3 = new V.ViewContainer(2, 0, this, H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment"));
        this._raisable_menu_component_template$_appEl_2 = t3;
        this._raisable_menu_component_template$_NgIf_2_9 = new K.NgIf(new D.TemplateRef(t3, G.raisable_menu_component_template__viewFactory_RaisableMenuComponent2$closure()), t3, false);
        _text_3 = document.createTextNode(" ");
        t4 = this._raisable_menu_component_template$_compView_0;
        t5 = this._MaterialButtonComponent_0_9;
        t3 = [this._raisable_menu_component_template$_appEl_1, t3, _text_3];
        t6 = this.viewData.projectableNodes;
        if (0 >= t6.length)
          return H.ioore(t6, 0);
        C.JSArray_methods.addAll$1(t3, t6[0]);
        t4.create$2(0, t5, [t3]);
        _anchor_4 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t1, false), "$isComment");
        t2.append$1(parentRenderNode, _anchor_4);
        t2 = new V.ViewContainer(4, null, this, _anchor_4);
        this._raisable_menu_component_template$_appEl_4 = t2;
        this._raisable_menu_component_template$_NgIf_4_9 = new K.NgIf(new D.TemplateRef(t2, G.raisable_menu_component_template__viewFactory_RaisableMenuComponent3$closure()), t2, false);
        t2 = this._MaterialButtonComponent_0_9._trigger;
        subscription_0 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$handleButtonClick(), W.UIEvent));
        J.set$button$z(this.ctx, this._MaterialButtonComponent_0_9);
        this.init$2(C.List_empty, [subscription_0]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_AcxDarkTheme_Tng)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this._AcxDarkTheme_0_8;
        if (token === C.Type_MaterialButtonComponent_xw8 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this._MaterialButtonComponent_0_9;
        if (token === C.Type_TooltipController_H6X)
          t1 = nodeIndex <= 3;
        else
          t1 = false;
        if (t1)
          return this.get$_TooltipController_0_14();
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, t1, changed, currVal_4, t2, currVal_6, currVal_1;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        _ctx.disabled;
        t1 = this._raisable_menu_component_template$_expr_2;
        if (t1 !== false) {
          this._MaterialButtonComponent_0_9.disabled = false;
          this._raisable_menu_component_template$_expr_2 = false;
          changed = true;
        } else
          changed = false;
        _ctx.tabbable;
        t1 = this._raisable_menu_component_template$_expr_3;
        if (t1 !== true) {
          this._MaterialButtonComponent_0_9.tabbable = true;
          this._raisable_menu_component_template$_expr_3 = true;
          changed = true;
        }
        currVal_4 = _ctx.raised;
        t1 = this._raisable_menu_component_template$_expr_4;
        if (t1 !== currVal_4) {
          this._MaterialButtonComponent_0_9.raised = currVal_4;
          this._raisable_menu_component_template$_expr_4 = currVal_4;
          changed = true;
        }
        if (changed)
          this._raisable_menu_component_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialButtonComponent_0_9.ngOnInit$0();
        t1 = _ctx.MenuPopupWrapper_menu;
        t2 = t1 == null;
        t2;
        if (t2)
          currVal_6 = null;
        else
          currVal_6 = false;
        if (currVal_6 == null)
          currVal_6 = false;
        t1 = this._raisable_menu_component_template$_expr_6;
        if (t1 !== currVal_6) {
          this._MaterialTooltipDirective_0_10.set$canShow(currVal_6);
          this._raisable_menu_component_template$_expr_6 = currVal_6;
        }
        if (firstCheck) {
          t1 = this._MaterialTooltipDirective_0_10;
          if (t1._canShow)
            t1._attachHostListeners$0();
        }
        t1 = this._raisable_menu_component_template$_NgIf_1_9;
        _ctx.MenuPopupWrapper_menu.icon;
        t1.set$ngIf(false);
        t1 = this._raisable_menu_component_template$_NgIf_2_9;
        _ctx.buttonText;
        t1.set$ngIf(false);
        t1 = this._raisable_menu_component_template$_NgIf_4_9;
        t2 = _ctx.MenuPopupWrapper_menu;
        t2 = t2 == null ? null : t2.itemGroups;
        t2 = t2 == null ? null : t2.length !== 0;
        t1.set$ngIf(t2 == null ? false : t2);
        this._raisable_menu_component_template$_appEl_0.detectChangesInNestedViews$0();
        this._raisable_menu_component_template$_appEl_1.detectChangesInNestedViews$0();
        this._raisable_menu_component_template$_appEl_2.detectChangesInNestedViews$0();
        this._raisable_menu_component_template$_appEl_4.detectChangesInNestedViews$0();
        if (this._query_MenuPopupComponent_1_1_isDirty) {
          t1 = this.ctx;
          t2 = this._raisable_menu_component_template$_appEl_4.mapNestedViews$2$1(new G.ViewRaisableMenuComponent0_detectChangesInternal_closure(), G.MenuPopupComponent, G._ViewRaisableMenuComponent3);
          t1.set$menuPopup(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_MenuPopupComponent_1_1_isDirty = false;
        }
        currVal_1 = _ctx.get$hasIcon();
        t1 = this._raisable_menu_component_template$_expr_1;
        if (t1 != currVal_1) {
          this.setAttr$3(this._raisable_menu_component_template$_el_0, "icon", currVal_1);
          this._raisable_menu_component_template$_expr_1 = currVal_1;
        }
        this._raisable_menu_component_template$_compView_0.detectHostChanges$1(firstCheck);
        this._raisable_menu_component_template$_compView_0.detectChanges$0();
        if (firstCheck) {
          this._MaterialTooltipDirective_0_10.ngAfterViewInit$0();
          this._PopupSourceDirective_0_11.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._raisable_menu_component_template$_appEl_0.destroyNestedViews$0();
        this._raisable_menu_component_template$_appEl_1.destroyNestedViews$0();
        this._raisable_menu_component_template$_appEl_2.destroyNestedViews$0();
        this._raisable_menu_component_template$_appEl_4.destroyNestedViews$0();
        this._raisable_menu_component_template$_compView_0.destroy$0();
        this._MaterialTooltipDirective_0_10.ngOnDestroy$0();
        this._PopupSourceDirective_0_11.ngOnDestroy$0();
      },
      $asAppView: function() {
        return [F.RaisableMenuComponent];
      },
      static: {
        ViewRaisableMenuComponent0$: function(parentView, parentIndex) {
          var t1, t2;
          t1 = new G.ViewRaisableMenuComponent0(true, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
          t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, parentIndex, F.RaisableMenuComponent));
          t2 = document.createElement("raisable-menu");
          t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
          t2 = $.ViewRaisableMenuComponent0__renderType;
          if (t2 == null) {
            t2 = $.appViewUtils;
            t2 = t2.createRenderType$3(null, C.ViewEncapsulation_1, C.List_empty);
            $.ViewRaisableMenuComponent0__renderType = t2;
          }
          t1.setupComponentType$1(t2);
          return t1;
        }
      }
    },
    ViewRaisableMenuComponent0_detectChangesInternal_closure: {
      "^": "Closure:174;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewRaisableMenuComponent3")._MenuPopupComponent_0_5], [G.MenuPopupComponent]);
      }
    },
    _ViewRaisableMenuComponent1: {
      "^": "AppView;0_raisable_menu_component_template$_compView_0,0_raisable_menu_component_template$_MaterialIconComponent_0_5,0_raisable_menu_component_template$_expr_0,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2;
        t1 = M.ViewMaterialIconComponent0$(this, 0);
        this._raisable_menu_component_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t2 = new Y.MaterialIconComponent(_el_0);
        this._raisable_menu_component_template$_MaterialIconComponent_0_5 = t2;
        t1.create$2(0, t2, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        this.ctx.MenuPopupWrapper_menu.icon;
        this._raisable_menu_component_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._raisable_menu_component_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [F.RaisableMenuComponent];
      }
    },
    _ViewRaisableMenuComponent2: {
      "^": "AppView;0_raisable_menu_component_template$_expr_0,0_raisable_menu_component_template$_text_1,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var doc, _el_0, t1;
        doc = document;
        _el_0 = doc.createElement("span");
        t1 = doc.createTextNode("");
        this._raisable_menu_component_template$_text_1 = t1;
        J.append$1$x(_el_0, t1);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        this.ctx.buttonText;
        var t1 = this._raisable_menu_component_template$_expr_0;
        if (t1 !== "") {
          this._raisable_menu_component_template$_text_1.textContent = "";
          this._raisable_menu_component_template$_expr_0 = "";
        }
      },
      $asAppView: function() {
        return [F.RaisableMenuComponent];
      }
    },
    _ViewRaisableMenuComponent3: {
      "^": "AppView;0_raisable_menu_component_template$_compView_0,0_MenuPopupComponent_0_5,0_PopupSourceDirective_0_6,0_raisable_menu_component_template$_expr_0,0_raisable_menu_component_template$_expr_1,0_raisable_menu_component_template$_expr_2,0_raisable_menu_component_template$_expr_3,0_raisable_menu_component_template$_expr_4,0_raisable_menu_component_template$_expr_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, _el_0, t3, t4;
        t1 = new M.ViewMenuPopupComponent0(true, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, G.MenuPopupComponent));
        t2 = document.createElement("menu-popup");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewMenuPopupComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MenuPopupComponent());
          $.ViewMenuPopupComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._raisable_menu_component_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        t1 = P.bool;
        this._MenuPopupComponent_0_5 = new G.MenuPopupComponent(null, new Q.ObservableReference(Q.observable_ObservableReference__defaultEq$closure(), false, false, false, [t1]), 0, null, new P._SyncBroadcastStreamController(null, null, 0, [W.FocusEvent]), false);
        t2 = this.parentView;
        t2 = L.PopupSourceDirective$(H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomPopupSourceFactory_gmZ, this.viewData.parentIndex), "$isDomPopupSourceFactory"), _el_0, H.interceptedTypeCheck(t2.injectorGet$3(C.Type_ReferenceDirective_i58, this.viewData.parentIndex, null), "$isReferenceDirective"), H.interceptedTypeCheck(t2.injectorGet$3(C.Type_Focusable_adc, this.viewData.parentIndex, null), "$isFocusable"), null);
        this._PopupSourceDirective_0_6 = t2;
        t2 = this._raisable_menu_component_template$_compView_0;
        t3 = this._MenuPopupComponent_0_5;
        t4 = this.viewData.projectableNodes;
        if (1 >= t4.length)
          return H.ioore(t4, 1);
        t2.create$2(0, t3, [t4[1]]);
        t4 = this._MenuPopupComponent_0_5.MenuPopupWrapper__expanded;
        this.init$2([_el_0], [t4.get$stream(t4).listen$1(this.eventHandler1$2$1(this.get$_handle_isExpandedChange_0_0(), t1, t1))]);
      },
      detectChangesInternal$0: function() {
        var _ctx, t1, local_toggle, currVal_0, t2, changed, currVal_2, currVal_3;
        _ctx = this.ctx;
        t1 = this.viewData._cdState;
        local_toggle = H.interceptedTypeCheck(this.parentView, "$isViewRaisableMenuComponent0")._PopupSourceDirective_0_11;
        currVal_0 = _ctx.MenuPopupWrapper_menu;
        t2 = this._raisable_menu_component_template$_expr_0;
        if (t2 == null ? currVal_0 != null : t2 !== currVal_0) {
          this._MenuPopupComponent_0_5.MenuPopupWrapper_menu = currVal_0;
          this._raisable_menu_component_template$_expr_0 = currVal_0;
          changed = true;
        } else
          changed = false;
        currVal_2 = _ctx.MenuPopupWrapper__expanded._observable$_value;
        t2 = this._raisable_menu_component_template$_expr_2;
        if (t2 != currVal_2) {
          this._MenuPopupComponent_0_5.set$isExpanded(currVal_2);
          this._raisable_menu_component_template$_expr_2 = currVal_2;
          changed = true;
        }
        currVal_3 = _ctx.get$width(_ctx);
        t2 = this._raisable_menu_component_template$_expr_3;
        if (t2 != currVal_3) {
          t2 = this._MenuPopupComponent_0_5;
          t2.toString;
          t2.MenuPopupWrapper__width = E.getInt(currVal_3, 0);
          this._raisable_menu_component_template$_expr_3 = currVal_3;
          changed = true;
        }
        t2 = this._raisable_menu_component_template$_expr_4;
        if (t2 == null ? local_toggle != null : t2 !== local_toggle) {
          this._MenuPopupComponent_0_5.popupSource = local_toggle;
          this._raisable_menu_component_template$_expr_4 = local_toggle;
          changed = true;
        }
        _ctx._popupClass;
        if (changed)
          this._raisable_menu_component_template$_compView_0.viewData.set$cdMode(1);
        this._raisable_menu_component_template$_compView_0.detectChanges$0();
        if (t1 === 0)
          this._PopupSourceDirective_0_6.ngAfterViewInit$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewRaisableMenuComponent0")._query_MenuPopupComponent_1_1_isDirty = true;
      },
      destroyInternal$0: function() {
        this._raisable_menu_component_template$_compView_0.destroy$0();
        this._PopupSourceDirective_0_6.ngOnDestroy$0();
      },
      _handle_isExpandedChange_0_0$1: [function($$event) {
        this.ctx.set$isExpanded($$event);
      }, "call$1", "get$_handle_isExpandedChange_0_0", 4, 0, 1],
      $asAppView: function() {
        return [F.RaisableMenuComponent];
      }
    }
  }], ["asset_angular_tour_of_heroes_lib_src_component_typeList_type_list_component.css.shim.dart", "package:angular_tour_of_heroes/src/component/typeList/type_list_component.css.shim.dart",, K, {}], ["", "package:angular_tour_of_heroes/src/component/typeList/type_list_component.dart",, L, {
    "^": "",
    TypeListComponent: {
      "^": "Object;_router,_loader,0_currentFactory,0loadedComponent,0_currentService,0_serviceName,loading,listItems,0selected,_searchText,mode,cancelModalVisible,deleteModalVisible,0modalCompleter,0domContainer",
      set$deleteModalVisible: function(deleteModalVisible) {
        this.deleteModalVisible = H.boolTypeCheck(deleteModalVisible);
      },
      set$modalCompleter: function(modalCompleter) {
        this.modalCompleter = H.assertSubtype(modalCompleter, "$isCompleter", [P.bool], "$asCompleter");
      },
      set$domContainer: function(domContainer) {
        this.domContainer = H.interceptedTypeCheck(domContainer, "$isViewContainerRef");
      },
      updateSearchText$1: function(text) {
        this._searchText = text;
        return text;
      },
      _getServiceItems$0: function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(-1),
          $async$self = this, t1;
        var $async$_getServiceItems$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$self.loading = true;
                $async$goto = 2;
                return P._asyncAwait($async$self._currentService.getAll$0(0), $async$_getServiceItems$0);
              case 2:
                // returning from await.
                t1 = $async$result;
                $async$self.listItems = H.listTypeCheck(t1 == null ? $async$self.listItems : t1);
                $async$self.loading = false;
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$_getServiceItems$0, $async$completer);
      },
      onActivate$2: function(_, _0, current) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this, t1, _serviceLoaded;
        var $async$onActivate$2 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = current.parameters;
                t1 = t1.$index(0, "type") == null ? null : J.trim$0$s(J.toString$0$(t1.$index(0, "type")));
                $async$self._serviceName = t1;
                switch (t1) {
                  case "events":
                    P.print("Loading event service...");
                    $async$self._currentService = new Z.EventService();
                    $async$self._currentFactory = C.ComponentFactory_ftt;
                    _serviceLoaded = true;
                    break;
                  case "tournaments":
                    P.print("Loading tournament service...");
                    $async$self._currentService = new G.TournamentService();
                    $async$self._currentFactory = C.ComponentFactory_OSt;
                    _serviceLoaded = true;
                    break;
                  case "stages":
                    P.print("Loading stage service...");
                    $async$self._currentService = new L.StageService();
                    $async$self._currentFactory = C.ComponentFactory_gOH;
                    _serviceLoaded = true;
                    break;
                  case "matches":
                    P.print("Loading match service...");
                    $async$self._currentService = new Y.MatchService();
                    $async$self._currentFactory = C.ComponentFactory_mJb;
                    _serviceLoaded = true;
                    break;
                  case "results":
                    P.print("Loading result service...");
                    $async$self._currentService = new S.ResultService();
                    $async$self._currentFactory = C.ComponentFactory_qbf;
                    _serviceLoaded = true;
                    break;
                  case "rounds":
                    P.print("Loading round service...");
                    $async$self._currentService = new U.RoundService();
                    $async$self._currentFactory = C.ComponentFactory_MLc;
                    _serviceLoaded = true;
                    break;
                  case "games":
                    P.print("Loading game service...");
                    $async$self._currentService = new L.GameService();
                    $async$self._currentFactory = C.ComponentFactory_EyN;
                    _serviceLoaded = true;
                    break;
                  case "entrants":
                    P.print("Loading entrant service...");
                    $async$self._currentService = new L.EntrantService();
                    $async$self._currentFactory = C.ComponentFactory_UKi;
                    _serviceLoaded = true;
                    break;
                  case "users":
                    P.print("Loading user service...");
                    $async$self._currentService = new D.UserService();
                    $async$self._currentFactory = C.ComponentFactory_L97;
                    _serviceLoaded = true;
                    break;
                  default:
                    C.Window_methods.alert$1(window, "Oops, that service doesn't seem to exist!");
                    P.print("Failed to find service... bad load!");
                    $async$self._router.navigate$1(0, $.$get$RoutePaths_dash().toUrl$0(0));
                    _serviceLoaded = false;
                }
                if (_serviceLoaded)
                  $async$self._getServiceItems$0();
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$onActivate$2, $async$completer);
      },
      getSectionTitle$1: function(capital) {
        var t1, t2;
        t1 = this._serviceName;
        if (t1 == null)
          return "";
        t2 = t1.length;
        if (0 >= t2)
          return H.ioore(t1, 0);
        return t1[0].toUpperCase() + C.JSString_methods.substring$1(t1, 1);
      },
      onSearch$1: [function(_, $event) {
        return this.onSearch$body$TypeListComponent(_, H.interceptedTypeCheck($event, "$isEvent"));
      }, "call$1", "get$onSearch", 5, 0, 33],
      onSearch$body$TypeListComponent: function(_, $event) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this, $async$temp1;
        var $async$onSearch$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Search initiated...");
                P.print("Current value is: " + H.S($async$self._searchText));
                $event.stopPropagation();
                $event.preventDefault();
                $async$self.loading = true;
                $async$temp1 = H;
                $async$goto = 2;
                return P._asyncAwait($async$self._currentService.searchFor$1($async$self._searchText), $async$onSearch$1);
              case 2:
                // returning from await.
                $async$self.listItems = $async$temp1.listTypeCheck($async$result);
                $async$self.loading = false;
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$onSearch$1, $async$completer);
      },
      onAddButton$1: [function($event) {
        return this.onAddButton$body$TypeListComponent(H.interceptedTypeCheck($event, "$isUIEvent"));
      }, "call$1", "get$onAddButton", 4, 0, 25],
      onAddButton$body$TypeListComponent: function($event) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$returnValue, $async$self = this, t1;
        var $async$onAddButton$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $event.stopPropagation();
                $event.preventDefault();
                if ($async$self.mode === "add") {
                  // goto return
                  $async$goto = 1;
                  break;
                }
                t1 = $async$self._currentService.getNew$0();
                $async$self.selected = t1;
                J.insert$2$ax($async$self.listItems, 0, t1);
                $async$self.mode = "add";
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$onAddButton$1, $async$completer);
      },
      onCancel$1: [function(_, $event) {
        return this.onCancel$body$TypeListComponent(_, H.interceptedTypeCheck($event, "$isAsyncAction"));
      }, "call$1", "get$onCancel", 5, 0, 60],
      onCancel$body$TypeListComponent: function(_, $event) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this, t1;
        var $async$onCancel$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.bool;
                $async$self.set$modalCompleter(new P._AsyncCompleter(new P._Future(0, $.Zone__current, [t1]), [t1]));
                $event.cancelIf$1($async$self.modalCompleter.future);
                P.print("Cancel requested...");
                $async$self.cancelModalVisible = true;
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$onCancel$1, $async$completer);
      },
      onConfirmCancel$1: function(cancel) {
        P.print("Cancel confirmed: " + String(cancel));
        this.modalCompleter.complete$1(0, !cancel);
        if (cancel) {
          if (this.mode === "add") {
            this.mode = "edit";
            P.print("Removed blank item at root index...");
            J.removeAt$1$ax(this.listItems, 0);
          }
          this.selected = null;
          P.print("Reset selected item...");
        }
        this.cancelModalVisible = false;
      },
      onConfirmDelete$0: [function() {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$onConfirmDelete$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Delete confirmed...");
                $async$self.deleteModalVisible = false;
                $async$goto = 2;
                return P._asyncAwait($async$self._currentService.deleteById$1(H.intTypeCheck(J.get$id$x($async$self.selected))), $async$onConfirmDelete$0);
              case 2:
                // returning from await.
                if ($async$result) {
                  J.removeWhere$1$ax($async$self.listItems, new L.TypeListComponent_onConfirmDelete_closure($async$self));
                  $async$self.selected = null;
                } else
                  C.Window_methods.alert$1(window, "Couldn't finish deleting current item!");
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$onConfirmDelete$0, $async$completer);
      }, "call$0", "get$onConfirmDelete", 0, 0, 2],
      onSave$1: [function($event) {
        return this.onSave$body$TypeListComponent(H.interceptedTypeCheck($event, "$isAsyncAction"));
      }, "call$1", "get$onSave", 4, 0, 60],
      onSave$body$TypeListComponent: function($event) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this, loadedItem, t1, t2, newItem, indexPosition;
        var $async$onSave$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Save requested...");
                loadedItem = J.get$item$x($async$self.loadedComponent._component);
                t1 = $async$self.mode;
                t2 = $async$self._currentService;
                $async$goto = t1 === "add" ? 2 : 4;
                break;
              case 2:
                // then
                $async$goto = 5;
                return P._asyncAwait(t2.addByObject$1(loadedItem), $async$onSave$1);
              case 5:
                // returning from await.
                // goto join
                $async$goto = 3;
                break;
              case 4:
                // else
                $async$goto = 6;
                return P._asyncAwait(t2.updateByObject$1(loadedItem), $async$onSave$1);
              case 6:
                // returning from await.
              case 3:
                // join
                newItem = $async$result;
                if (newItem == null)
                  C.Window_methods.alert$1(window, "Couldn't finish current item save!");
                else {
                  $async$self.mode = "edit";
                  indexPosition = J.indexWhere$1$ax($async$self.listItems, new L.TypeListComponent_onSave_closure(loadedItem));
                  J.removeAt$1$ax($async$self.listItems, indexPosition);
                  J.insert$2$ax($async$self.listItems, indexPosition, newItem);
                }
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$onSave$1, $async$completer);
      },
      _childButtonListener$1: [function(cmd) {
        return this._childButtonListener$body$TypeListComponent(H.stringTypeCheck(cmd));
      }, "call$1", "get$_childButtonListener", 4, 0, 61, 87],
      _childButtonListener$body$TypeListComponent: function(cmd) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(null),
          $async$self = this;
        var $async$_childButtonListener$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Child button clicked with method " + H.S(cmd));
                switch (cmd) {
                  case "clone":
                    P.print("Running clone flow...");
                    break;
                  case "delete":
                    P.print("Running delete flow...");
                    P.print("Delete requested...");
                    $async$self.deleteModalVisible = true;
                    break;
                  default:
                    P.print("ERROR IN FLOW - BAD CMD: " + H.S(cmd));
                }
                // implicit return
                return P._asyncReturn(null, $async$completer);
            }
        });
        return P._asyncStartSync($async$_childButtonListener$1, $async$completer);
      },
      changeHandler$2: function(loading, thing) {
        if (loading)
          P.Timer_Timer(P.Duration$(0, 0, 0, 10, 0, 0), new L.TypeListComponent_changeHandler_closure(this, thing));
      },
      $isOnActivate: 1
    },
    TypeListComponent_onConfirmDelete_closure: {
      "^": "Closure:20;$this",
      call$1: function(item) {
        return J.$eq$(J.get$id$x(item), J.get$id$x(this.$this.selected));
      }
    },
    TypeListComponent_onSave_closure: {
      "^": "Closure:20;loadedItem",
      call$1: function(element) {
        return J.$eq$(J.get$id$x(element), J.get$id$x(this.loadedItem));
      }
    },
    TypeListComponent_changeHandler_closure: {
      "^": "Closure:0;$this,thing",
      call$0: [function() {
        var t1, t2;
        t1 = this.$this;
        t1.selected = this.thing;
        t2 = t1._loader.loadNextToLocation$1$2(t1._currentFactory, t1.domContainer, null);
        t1.loadedComponent = t2;
        J.set$item$x(t2._component, t1.selected);
        t2 = t1.loadedComponent._component;
        t2.set$lockLevel(t1.mode === "add" ? 0 : 1);
        t1.loadedComponent._component.get$buttonStream().listen$1(t1.get$_childButtonListener());
      }, null, null, 0, 0, null, "call"]
    }
  }], ["", "package:angular_tour_of_heroes/src/component/typeList/type_list_component.template.dart",, Z, {
    "^": "",
    viewFactory_TypeListComponent3: [function(parentView, parentIndex) {
      var t1 = new Z._ViewTypeListComponent3(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.TypeListComponent));
      t1.componentType = $.ViewTypeListComponent0__renderType;
      return t1;
    }, "call$2", "type_list_component_template__viewFactory_TypeListComponent3$closure", 8, 0, 28],
    viewFactory_TypeListComponent4: [function(parentView, parentIndex) {
      var t1 = new Z._ViewTypeListComponent4(P.LinkedHashMap_LinkedHashMap$_literal(["$implicit", null], P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.TypeListComponent));
      t1.componentType = $.ViewTypeListComponent0__renderType;
      return t1;
    }, "call$2", "type_list_component_template__viewFactory_TypeListComponent4$closure", 8, 0, 28],
    viewFactory_TypeListComponent5: [function(parentView, parentIndex) {
      var t1 = new Z._ViewTypeListComponent5(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.TypeListComponent));
      t1.componentType = $.ViewTypeListComponent0__renderType;
      return t1;
    }, "call$2", "type_list_component_template__viewFactory_TypeListComponent5$closure", 8, 0, 28],
    viewFactory_TypeListComponent6: [function(parentView, parentIndex) {
      var t1 = new Z._ViewTypeListComponent6(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_2, parentIndex, L.TypeListComponent));
      t1.componentType = $.ViewTypeListComponent0__renderType;
      return t1;
    }, "call$2", "type_list_component_template__viewFactory_TypeListComponent6$closure", 8, 0, 28],
    viewFactory_TypeListComponentHost0: [function(parentView, parentIndex) {
      var t1 = new Z._ViewTypeListComponentHost0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), parentView);
      t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_0, parentIndex, L.TypeListComponent));
      return t1;
    }, "call$2", "type_list_component_template__viewFactory_TypeListComponentHost0$closure", 8, 0, 28],
    ViewTypeListComponent0: {
      "^": "AppView;0_type_list_component_template$_compView_2,0_MaterialFabComponent_2_5,0_compView_3,0_MaterialIconComponent_3_5,0_type_list_component_template$_compView_7,0_DeferredValidator_7_5,0_MaterialInputComponent_7_6,0_BaseMaterialInput_7_7,0_MaterialInputDefaultValueAccessor_7_8,0__NgValidators_7_9,0_type_list_component_template$_compView_8,0_type_list_component_template$_AcxDarkTheme_8_5,0_type_list_component_template$_MaterialButtonComponent_8_6,0_type_list_component_template$_appEl_13,0_type_list_component_template$_NgIf_13_9,0_MaterialExpansionPanelSet_14_5,0_type_list_component_template$_appEl_15,_query_MaterialExpansionPanel_14_0_isDirty,_query_itemContainer_1_0_isDirty,0_NgFor_15_9,0_compView_16,0_ModalComponent_16_5,0_type_list_component_template$_compView_17,0_MaterialDialogComponent_17_5,0_type_list_component_template$_compView_25,0_AcxDarkTheme_25_5,0_MaterialButtonComponent_25_6,0_compView_27,0_AcxDarkTheme_27_5,0_MaterialButtonComponent_27_6,0_compView_29,0_ModalComponent_29_5,0_compView_30,0_MaterialDialogComponent_30_5,0_compView_38,0_AcxDarkTheme_38_5,0_MaterialButtonComponent_38_6,0_compView_40,0_AcxDarkTheme_40_5,0_MaterialButtonComponent_40_6,0_type_list_component_template$_expr_2,_type_list_component_template$_expr_3,_type_list_component_template$_expr_4,0_type_list_component_template$_expr_6,0_type_list_component_template$_expr_7,0_type_list_component_template$_expr_8,0_type_list_component_template$_expr_9,0_type_list_component_template$_expr_10,0_anchor_11,0_el_11_0,0_anchor_12,0_el_12_0,0_text_5,0_text_22,0_text_35,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var parentRenderNode, doc, _el_0, _el_1, t1, t2, _el_2, _el_3, _el_4, t3, t4, _el_6, _el_7, t5, _el_8, t6, _text_9, t7, t8, t9, _anchor_13, _el_14, _anchor_15, _el_16, _el_17, _el_18, _el_20, _el_24, _el_25, _text_26, _el_27, _text_28, _el_29, _el_30, _el_31, _el_33, _el_37, _el_38, _text_39, _el_40, _text_41, subscription_0, subscription_1, subscription_2, subscription_3;
        parentRenderNode = this.initViewRoot$1(this.rootEl);
        doc = document;
        _el_0 = S.createDivAndAppend(doc, parentRenderNode);
        this.addShimC$1(_el_0);
        _el_1 = S.createDivAndAppend(doc, _el_0);
        _el_1.className = "col-1-2 inlinediv";
        this.addShimC$1(_el_1);
        t1 = new L.ViewMaterialFabComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 2, M.MaterialFabComponent));
        t2 = doc.createElement("material-fab");
        H.interceptedTypeCheck(t2, "$isHtmlElement");
        t1.rootEl = t2;
        J.setAttribute$2$x(t2, "animated", "true");
        t2 = $.ViewMaterialFabComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialFabComponent());
          $.ViewMaterialFabComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._type_list_component_template$_compView_2 = t1;
        _el_2 = t1.rootEl;
        (_el_1 && C.DivElement_methods).append$1(_el_1, _el_2);
        t1 = J.getInterceptor$x(_el_2);
        t1.setAttribute$2(_el_2, "id", "heavyfab");
        t1.setAttribute$2(_el_2, "mini", "");
        t1.setAttribute$2(_el_2, "raised", "");
        this.addShimC$1(_el_2);
        t1 = this._type_list_component_template$_compView_2.viewData.ref;
        t2 = W.UIEvent;
        this._MaterialFabComponent_2_5 = new M.MaterialFabComponent(t1, false, false, false, false, new P._SyncBroadcastStreamController(null, null, 0, [t2]), null, false, true, null, _el_2);
        t1 = M.ViewMaterialIconComponent0$(this, 3);
        this._compView_3 = t1;
        _el_3 = t1.rootEl;
        J.setAttribute$2$x(_el_3, "icon", "add");
        this.addShimC$1(_el_3);
        t1 = new Y.MaterialIconComponent(_el_3);
        this._MaterialIconComponent_3_5 = t1;
        this._compView_3.create$2(0, t1, []);
        t1 = [W.HtmlElement];
        this._type_list_component_template$_compView_2.create$2(0, this._MaterialFabComponent_2_5, [H.setRuntimeTypeInfo([_el_3], t1)]);
        _el_4 = S.createAndAppend(doc, "h2", _el_1);
        t3 = J.getInterceptor$x(_el_4);
        t3.setAttribute$2(_el_4, "style", "display: inherit; margin:8px;");
        this.addShimE$1(_el_4);
        t4 = doc.createTextNode("");
        this._text_5 = t4;
        t3.append$1(_el_4, t4);
        _el_6 = S.createDivAndAppend(doc, _el_0);
        _el_6.className = "col-1-2 inlinediv floatright";
        this.addShimC$1(_el_6);
        t4 = Q.ViewMaterialInputComponent0$(this, 7);
        this._type_list_component_template$_compView_7 = t4;
        _el_7 = t4.rootEl;
        (_el_6 && C.DivElement_methods).append$1(_el_6, _el_7);
        t4 = J.getInterceptor$x(_el_7);
        t4.setAttribute$2(_el_7, "placeholder", "Search");
        this.addShimC$1(_el_7);
        t3 = new L.DeferredValidator(H.setRuntimeTypeInfo([], [{func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}]));
        this._DeferredValidator_7_5 = t3;
        t3 = L.MaterialInputComponent$(null, null, null, null, this._type_list_component_template$_compView_7.viewData.ref, t3);
        this._MaterialInputComponent_7_6 = t3;
        this._BaseMaterialInput_7_7 = t3;
        t5 = new Z.MaterialInputDefaultValueAccessor(new R.Disposer(true, false), t3, null);
        t5.BaseMaterialInputValueAccessor$2(t3, null);
        this._MaterialInputDefaultValueAccessor_7_8 = t5;
        this._type_list_component_template$_compView_7.create$2(0, this._MaterialInputComponent_7_6, [C.List_empty, C.List_empty]);
        t5 = U.ViewMaterialButtonComponent0$(this, 8);
        this._type_list_component_template$_compView_8 = t5;
        _el_8 = t5.rootEl;
        C.DivElement_methods.append$1(_el_6, _el_8);
        t5 = J.getInterceptor$x(_el_8);
        t5.setAttribute$2(_el_8, "aria-label", "Search");
        t5.setAttribute$2(_el_8, "id", "search");
        this.addShimC$1(_el_8);
        t3 = this.parentView;
        t6 = F.AcxDarkTheme$(H.boolTypeCheck(t3.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._type_list_component_template$_AcxDarkTheme_8_5 = t6;
        t6 = B.MaterialButtonComponent$(_el_8, t6, this._type_list_component_template$_compView_8.viewData.ref, null);
        this._type_list_component_template$_MaterialButtonComponent_8_6 = t6;
        _text_9 = doc.createTextNode("Search");
        t7 = [W.Text];
        this._type_list_component_template$_compView_8.create$2(0, t6, [H.setRuntimeTypeInfo([_text_9], t7)]);
        t6 = J.getInterceptor$x(parentRenderNode);
        t6.append$1(parentRenderNode, doc.createTextNode("\n"));
        t8 = $.$get$_viewContainerAnchor();
        t9 = H.interceptedTypeCheck((t8 && C.Comment_methods).clone$1(t8, false), "$isComment");
        this._anchor_11 = t9;
        t6.append$1(parentRenderNode, t9);
        t9 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t8, false), "$isComment");
        this._anchor_12 = t9;
        t6.append$1(parentRenderNode, t9);
        _anchor_13 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t8, false), "$isComment");
        t6.append$1(parentRenderNode, _anchor_13);
        t9 = new V.ViewContainer(13, null, this, _anchor_13);
        this._type_list_component_template$_appEl_13 = t9;
        this._type_list_component_template$_NgIf_13_9 = new K.NgIf(new D.TemplateRef(t9, Z.type_list_component_template__viewFactory_TypeListComponent3$closure()), t9, false);
        _el_14 = S.createAndAppend(doc, "material-expansionpanel-set", parentRenderNode);
        t9 = J.getInterceptor$x(_el_14);
        t9.setAttribute$2(_el_14, "focusList", "");
        this.addShimE$1(_el_14);
        this._MaterialExpansionPanelSet_14_5 = new X.MaterialExpansionPanelSet(new R.Disposer(false, false));
        _anchor_15 = H.interceptedTypeCheck(C.Comment_methods.clone$1(t8, false), "$isComment");
        t9.append$1(_el_14, _anchor_15);
        t9 = new V.ViewContainer(15, 14, this, _anchor_15);
        this._type_list_component_template$_appEl_15 = t9;
        this._NgFor_15_9 = new R.NgFor(t9, new D.TemplateRef(t9, Z.type_list_component_template__viewFactory_TypeListComponent4$closure()));
        t9 = O.ViewModalComponent0$(this, 16);
        this._compView_16 = t9;
        _el_16 = t9.rootEl;
        t6.append$1(parentRenderNode, _el_16);
        this.addShimC$1(_el_16);
        t8 = D.ModalComponent$(H.interceptedTypeCheck(t3.injectorGet$2(C.Type_OverlayService_4iH, this.viewData.parentIndex), "$isOverlayService"), _el_16, H.interceptedTypeCheck(t3.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), H.interceptedTypeCheck(t3.injectorGet$3(C.Type_Modal_OjC, this.viewData.parentIndex, null), "$isModal"), H.interceptedTypeCheck(t3.injectorGet$3(C.Type_GlobalModalStack_QCS, this.viewData.parentIndex, null), "$isGlobalModalStack"));
        this._ModalComponent_16_5 = t8;
        t8 = Z.ViewMaterialDialogComponent0$(this, 17);
        this._type_list_component_template$_compView_17 = t8;
        _el_17 = t8.rootEl;
        J.setAttribute$2$x(_el_17, "autofocus", "");
        _el_17.className = "max-height-dialog";
        this.addShimC$1(_el_17);
        t8 = D.MaterialDialogComponent$(_el_17, H.interceptedTypeCheck(t3.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), this._type_list_component_template$_compView_17.viewData.ref, this._ModalComponent_16_5);
        this._MaterialDialogComponent_17_5 = t8;
        _el_18 = doc.createElement("h1");
        t8 = J.getInterceptor$x(_el_18);
        t8.setAttribute$2(_el_18, "header", "");
        this.addShimE$1(_el_18);
        t8.append$1(_el_18, doc.createTextNode("Cancel?"));
        _el_20 = doc.createElement("p");
        this.addShimE$1(_el_20);
        t8 = J.getInterceptor$x(_el_20);
        t8.append$1(_el_20, doc.createTextNode("Are you sure you want to cancel "));
        t9 = doc.createTextNode("");
        this._text_22 = t9;
        t8.append$1(_el_20, t9);
        t8.append$1(_el_20, doc.createTextNode("?"));
        _el_24 = doc.createElement("div");
        t8 = J.getInterceptor$x(_el_24);
        t8.setAttribute$2(_el_24, "footer", "");
        H.interceptedTypeCheck(_el_24, "$isHtmlElement");
        this.addShimC$1(_el_24);
        t9 = U.ViewMaterialButtonComponent0$(this, 25);
        this._type_list_component_template$_compView_25 = t9;
        _el_25 = t9.rootEl;
        t8.append$1(_el_24, _el_25);
        this.addShimC$1(_el_25);
        t9 = F.AcxDarkTheme$(H.boolTypeCheck(t3.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_25_5 = t9;
        t9 = B.MaterialButtonComponent$(_el_25, t9, this._type_list_component_template$_compView_25.viewData.ref, null);
        this._MaterialButtonComponent_25_6 = t9;
        _text_26 = doc.createTextNode("Yes, Cancel");
        this._type_list_component_template$_compView_25.create$2(0, t9, [H.setRuntimeTypeInfo([_text_26], t7)]);
        t9 = U.ViewMaterialButtonComponent0$(this, 27);
        this._compView_27 = t9;
        _el_27 = t9.rootEl;
        t8.append$1(_el_24, _el_27);
        J.setAttribute$2$x(_el_27, "autoFocus", "");
        this.addShimC$1(_el_27);
        t8 = F.AcxDarkTheme$(H.boolTypeCheck(t3.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_27_5 = t8;
        t8 = B.MaterialButtonComponent$(_el_27, t8, this._compView_27.viewData.ref, null);
        this._MaterialButtonComponent_27_6 = t8;
        _text_28 = doc.createTextNode("Go Back");
        this._compView_27.create$2(0, t8, [H.setRuntimeTypeInfo([_text_28], t7)]);
        t8 = [W.Element];
        this._type_list_component_template$_compView_17.create$2(0, this._MaterialDialogComponent_17_5, [H.setRuntimeTypeInfo([_el_18], t8), H.setRuntimeTypeInfo([_el_20], t8), H.setRuntimeTypeInfo([_el_24], t8)]);
        this._compView_16.create$2(0, this._ModalComponent_16_5, [H.setRuntimeTypeInfo([_el_17], t1)]);
        t9 = O.ViewModalComponent0$(this, 29);
        this._compView_29 = t9;
        _el_29 = t9.rootEl;
        t6.append$1(parentRenderNode, _el_29);
        this.addShimC$1(_el_29);
        t6 = D.ModalComponent$(H.interceptedTypeCheck(t3.injectorGet$2(C.Type_OverlayService_4iH, this.viewData.parentIndex), "$isOverlayService"), _el_29, H.interceptedTypeCheck(t3.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), H.interceptedTypeCheck(t3.injectorGet$3(C.Type_Modal_OjC, this.viewData.parentIndex, null), "$isModal"), H.interceptedTypeCheck(t3.injectorGet$3(C.Type_GlobalModalStack_QCS, this.viewData.parentIndex, null), "$isGlobalModalStack"));
        this._ModalComponent_29_5 = t6;
        t6 = Z.ViewMaterialDialogComponent0$(this, 30);
        this._compView_30 = t6;
        _el_30 = t6.rootEl;
        J.setAttribute$2$x(_el_30, "autofocus", "");
        _el_30.className = "max-height-dialog";
        this.addShimC$1(_el_30);
        t6 = D.MaterialDialogComponent$(_el_30, H.interceptedTypeCheck(t3.injectorGet$2(C.Type_DomService_2jN, this.viewData.parentIndex), "$isDomService"), this._compView_30.viewData.ref, this._ModalComponent_29_5);
        this._MaterialDialogComponent_30_5 = t6;
        _el_31 = doc.createElement("h1");
        t6 = J.getInterceptor$x(_el_31);
        t6.setAttribute$2(_el_31, "header", "");
        this.addShimE$1(_el_31);
        t6.append$1(_el_31, doc.createTextNode("Confirm DELETE?"));
        _el_33 = doc.createElement("p");
        this.addShimE$1(_el_33);
        t6 = J.getInterceptor$x(_el_33);
        t6.append$1(_el_33, doc.createTextNode("Are you sure you want to delete "));
        t9 = doc.createTextNode("");
        this._text_35 = t9;
        t6.append$1(_el_33, t9);
        t6.append$1(_el_33, doc.createTextNode("?"));
        _el_37 = doc.createElement("div");
        t6 = J.getInterceptor$x(_el_37);
        t6.setAttribute$2(_el_37, "footer", "");
        H.interceptedTypeCheck(_el_37, "$isHtmlElement");
        this.addShimC$1(_el_37);
        t9 = U.ViewMaterialButtonComponent0$(this, 38);
        this._compView_38 = t9;
        _el_38 = t9.rootEl;
        t6.append$1(_el_37, _el_38);
        _el_38.className = "delete_confirm";
        this.addShimC$1(_el_38);
        t9 = F.AcxDarkTheme$(H.boolTypeCheck(t3.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_38_5 = t9;
        t9 = B.MaterialButtonComponent$(_el_38, t9, this._compView_38.viewData.ref, null);
        this._MaterialButtonComponent_38_6 = t9;
        _text_39 = doc.createTextNode("Yes, DELETE");
        this._compView_38.create$2(0, t9, [H.setRuntimeTypeInfo([_text_39], t7)]);
        t9 = U.ViewMaterialButtonComponent0$(this, 40);
        this._compView_40 = t9;
        _el_40 = t9.rootEl;
        t6.append$1(_el_37, _el_40);
        J.setAttribute$2$x(_el_40, "autoFocus", "");
        this.addShimC$1(_el_40);
        t3 = F.AcxDarkTheme$(H.boolTypeCheck(t3.injectorGet$3(C.OpaqueToken_acxDarkTheme, this.viewData.parentIndex, null)));
        this._AcxDarkTheme_40_5 = t3;
        t3 = B.MaterialButtonComponent$(_el_40, t3, this._compView_40.viewData.ref, null);
        this._MaterialButtonComponent_40_6 = t3;
        _text_41 = doc.createTextNode("Go Back");
        this._compView_40.create$2(0, t3, [H.setRuntimeTypeInfo([_text_41], t7)]);
        this._compView_30.create$2(0, this._MaterialDialogComponent_30_5, [H.setRuntimeTypeInfo([_el_31], t8), H.setRuntimeTypeInfo([_el_33], t8), H.setRuntimeTypeInfo([_el_37], t8)]);
        this._compView_29.create$2(0, this._ModalComponent_29_5, [H.setRuntimeTypeInfo([_el_30], t1)]);
        t1 = this._MaterialFabComponent_2_5._trigger;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onAddButton(), t2, t2));
        t1 = W.Event;
        t4.addEventListener$2(_el_7, "input", this.eventHandler1$2$1(this.get$_handle_input_7_0(), t1, t1));
        t4 = $.appViewUtils.eventManager;
        t8 = this.eventHandler1$2$1(J.get$onSearch$z(this.ctx), null, t1);
        t4.toString;
        H.functionTypeCheck(t8, {func: 1, ret: -1, args: [,]});
        t4._findPluginFor$1("keyup.enter").addEventListener$3(0, _el_7, "keyup.enter", t8);
        t5.addEventListener$2(_el_8, "click", this.eventHandler1$2$1(J.get$onSearch$z(this.ctx), t1, t1));
        t1 = this._MaterialButtonComponent_25_6._trigger;
        subscription_1 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_25_0(), t2, t2));
        t1 = this._MaterialButtonComponent_27_6._trigger;
        subscription_2 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_27_0(), t2, t2));
        t1 = this._MaterialButtonComponent_38_6._trigger;
        subscription_3 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler0$1$1(this.ctx.get$onConfirmDelete(), t2));
        t1 = this._MaterialButtonComponent_40_6._trigger;
        this.init$2([], [subscription_0, subscription_1, subscription_2, subscription_3, new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_trigger_40_0(), t2, t2))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1, t2, t3;
        if (token === C.Type_DeferredValidator_k2a && 7 === nodeIndex)
          return this._DeferredValidator_7_5;
        if ((token === C.Type_MaterialInputComponent_Arc || token === C.Type_ReferenceDirective_i58 || token === C.Type_Focusable_adc || token === C.Type_HasDisabled_qzc) && 7 === nodeIndex)
          return this._MaterialInputComponent_7_6;
        if (token === C.Type_BaseMaterialInput_ljM && 7 === nodeIndex)
          return this._BaseMaterialInput_7_7;
        if (token === C.Type_YIv && 7 === nodeIndex)
          return this._MaterialInputDefaultValueAccessor_7_8;
        t1 = token === C.Type_AcxDarkTheme_Tng;
        if (t1 && 8 <= nodeIndex && nodeIndex <= 9)
          return this._type_list_component_template$_AcxDarkTheme_8_5;
        t2 = token !== C.Type_MaterialButtonComponent_xw8;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 8 <= nodeIndex && nodeIndex <= 9)
          return this._type_list_component_template$_MaterialButtonComponent_8_6;
        if (t1 && 25 <= nodeIndex && nodeIndex <= 26)
          return this._AcxDarkTheme_25_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 25 <= nodeIndex && nodeIndex <= 26)
          return this._MaterialButtonComponent_25_6;
        if (t1 && 27 <= nodeIndex && nodeIndex <= 28)
          return this._AcxDarkTheme_27_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 27 <= nodeIndex && nodeIndex <= 28)
          return this._MaterialButtonComponent_27_6;
        t3 = token !== C.Type_ModalComponent_Npb;
        if ((!t3 || token === C.Type_DeferredContentAware_BCk || token === C.Type_Modal_OjC) && 16 <= nodeIndex && nodeIndex <= 28)
          return this._ModalComponent_16_5;
        if (t1 && 38 <= nodeIndex && nodeIndex <= 39)
          return this._AcxDarkTheme_38_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 38 <= nodeIndex && nodeIndex <= 39)
          return this._MaterialButtonComponent_38_6;
        if (t1 && 40 <= nodeIndex && nodeIndex <= 41)
          return this._AcxDarkTheme_40_5;
        if ((!t2 || token === C.Type_ButtonDirective_hH0 || token === C.Type_HasDisabled_qzc) && 40 <= nodeIndex && nodeIndex <= 41)
          return this._MaterialButtonComponent_40_6;
        if ((!t3 || token === C.Type_DeferredContentAware_BCk || token === C.Type_Modal_OjC) && 29 <= nodeIndex && nodeIndex <= 41)
          return this._ModalComponent_29_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, changed, currVal_3, t1, doc, _el_11_1, currVal_4, _text_12_1, currVal_6, currVal_7, currVal_9, t2, t3, currVal_0, currVal_1, currVal_2, currVal_5, currVal_8, currVal_10;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          this._MaterialFabComponent_2_5.raised = true;
          changed = true;
        } else
          changed = false;
        if (changed)
          this._type_list_component_template$_compView_2.viewData.set$cdMode(1);
        if (firstCheck)
          this._MaterialFabComponent_2_5.ngOnInit$0();
        if (firstCheck) {
          this._MaterialIconComponent_3_5.set$icon(0, "add");
          changed = true;
        } else
          changed = false;
        if (changed)
          this._compView_3.viewData.set$cdMode(1);
        if (firstCheck)
          this._type_list_component_template$_MaterialButtonComponent_8_6.ngOnInit$0();
        currVal_3 = J.get$length$asx(_ctx.listItems) === 0 && !_ctx.loading;
        t1 = this._type_list_component_template$_expr_3;
        if (t1 !== currVal_3) {
          if (currVal_3) {
            doc = document;
            t1 = doc.createElement("i");
            this._el_11_0 = t1;
            this.addShimE$1(t1);
            _el_11_1 = S.createAndAppend(doc, "h2", this._el_11_0);
            t1 = J.getInterceptor$x(_el_11_1);
            t1.setAttribute$2(_el_11_1, "style", "text-align:center;");
            this.addShimE$1(_el_11_1);
            t1.append$1(_el_11_1, doc.createTextNode("EMPTY LIST"));
            this.addInlinedNodes$3(this._anchor_11, H.setRuntimeTypeInfo([this._el_11_0], [W.Node]), true);
          } else
            this.removeInlinedNodes$2(H.setRuntimeTypeInfo([this._el_11_0], [W.Node]), true);
          this._type_list_component_template$_expr_3 = currVal_3;
        }
        currVal_4 = _ctx.loading;
        t1 = this._type_list_component_template$_expr_4;
        if (t1 !== currVal_4) {
          if (currVal_4) {
            doc = document;
            t1 = doc.createElement("h2");
            this._el_12_0 = t1;
            this.addShimE$1(t1);
            _text_12_1 = doc.createTextNode("Loading entries...");
            J.append$1$x(this._el_12_0, _text_12_1);
            this.addInlinedNodes$3(this._anchor_12, H.setRuntimeTypeInfo([this._el_12_0], [W.Node]), true);
          } else
            this.removeInlinedNodes$2(H.setRuntimeTypeInfo([this._el_12_0], [W.Node]), true);
          this._type_list_component_template$_expr_4 = currVal_4;
        }
        this._type_list_component_template$_NgIf_13_9.set$ngIf(_ctx.loading);
        currVal_6 = _ctx.listItems;
        t1 = this._type_list_component_template$_expr_6;
        if (t1 == null ? currVal_6 != null : t1 !== currVal_6) {
          this._NgFor_15_9.set$ngForOf(currVal_6);
          this._type_list_component_template$_expr_6 = currVal_6;
        }
        this._NgFor_15_9.ngDoCheck$0();
        currVal_7 = _ctx.cancelModalVisible;
        t1 = this._type_list_component_template$_expr_7;
        if (t1 !== currVal_7) {
          this._ModalComponent_16_5.set$visible(0, currVal_7);
          this._type_list_component_template$_expr_7 = currVal_7;
        }
        if (firstCheck)
          this._MaterialButtonComponent_25_6.ngOnInit$0();
        if (firstCheck)
          this._MaterialButtonComponent_27_6.ngOnInit$0();
        currVal_9 = _ctx.deleteModalVisible;
        t1 = this._type_list_component_template$_expr_9;
        if (t1 !== currVal_9) {
          this._ModalComponent_29_5.set$visible(0, currVal_9);
          this._type_list_component_template$_expr_9 = currVal_9;
        }
        if (firstCheck)
          this._MaterialButtonComponent_38_6.ngOnInit$0();
        if (firstCheck)
          this._MaterialButtonComponent_40_6.ngOnInit$0();
        this._type_list_component_template$_appEl_13.detectChangesInNestedViews$0();
        this._type_list_component_template$_appEl_15.detectChangesInNestedViews$0();
        if (this._query_MaterialExpansionPanel_14_0_isDirty) {
          t1 = this._MaterialExpansionPanelSet_14_5;
          t2 = T.MaterialExpansionPanel;
          t3 = this._type_list_component_template$_appEl_15.mapNestedViews$2$1(new Z.ViewTypeListComponent0_detectChangesInternal_closure(), t2, Z._ViewTypeListComponent4);
          t1.toString;
          t1.set$_panels(H.assertSubtype(t3, "$isList", [t2], "$asList"));
          t1._onPanelsChange$0();
          this._query_MaterialExpansionPanel_14_0_isDirty = false;
        }
        if (this._query_itemContainer_1_0_isDirty) {
          t1 = this.ctx;
          t2 = this._type_list_component_template$_appEl_15.mapNestedViews$2$1(new Z.ViewTypeListComponent0_detectChangesInternal_closure0(), R.ViewContainerRef, Z._ViewTypeListComponent4);
          t1.set$domContainer(t2.length !== 0 ? C.JSArray_methods.get$first(t2) : null);
          this._query_itemContainer_1_0_isDirty = false;
        }
        this._MaterialDialogComponent_17_5.ngAfterContentChecked$0();
        this._MaterialDialogComponent_30_5.ngAfterContentChecked$0();
        t1 = this._type_list_component_template$_compView_2;
        currVal_0 = J.get$tabIndex$x(t1.ctx);
        t2 = t1._material_fab_template$_expr_0;
        if (t2 != currVal_0) {
          t1.rootEl.tabIndex = currVal_0;
          t1._material_fab_template$_expr_0 = currVal_0;
        }
        currVal_1 = t1.ctx.get$ariaRole();
        t2 = t1._material_fab_template$_expr_1;
        if (t2 != currVal_1) {
          t1.setAttr$3(t1.rootEl, "role", currVal_1);
          t1._material_fab_template$_expr_1 = currVal_1;
        }
        currVal_2 = t1.ctx.get$disabledStr();
        t2 = t1._material_fab_template$_expr_2;
        if (t2 !== currVal_2) {
          t1.setAttr$3(t1.rootEl, "aria-disabled", currVal_2);
          t1._material_fab_template$_expr_2 = currVal_2;
        }
        currVal_3 = J.get$disabled$z(t1.ctx);
        t2 = t1._material_fab_template$_expr_3;
        if (t2 != currVal_3) {
          t1.updateElemClass$3(t1.rootEl, "is-disabled", currVal_3);
          t1._material_fab_template$_expr_3 = currVal_3;
        }
        currVal_4 = t1.ctx.get$hostDisabled();
        t2 = t1._material_fab_template$_expr_4;
        if (t2 != currVal_4) {
          t1.setAttr$3(t1.rootEl, "disabled", currVal_4);
          t1._material_fab_template$_expr_4 = currVal_4;
        }
        currVal_5 = t1.ctx.get$hostRaised();
        t2 = t1._material_fab_template$_expr_5;
        if (t2 != currVal_5) {
          t1.setAttr$3(t1.rootEl, "raised", currVal_5);
          t1._material_fab_template$_expr_5 = currVal_5;
        }
        currVal_6 = t1.ctx.get$hostClassIsFocused();
        t2 = t1._material_fab_template$_expr_6;
        if (t2 !== currVal_6) {
          t1.updateElemClass$3(t1.rootEl, "is-focused", currVal_6);
          t1._material_fab_template$_expr_6 = currVal_6;
        }
        currVal_7 = t1.ctx.get$hostClassIsPressed();
        t2 = t1._material_fab_template$_expr_7;
        if (t2 !== currVal_7) {
          t1.updateElemClass$3(t1.rootEl, "is-pressed", currVal_7);
          t1._material_fab_template$_expr_7 = currVal_7;
        }
        currVal_2 = Q.interpolate0(_ctx.getSectionTitle$1(true));
        t1 = this._type_list_component_template$_expr_2;
        if (t1 !== currVal_2) {
          this._text_5.textContent = currVal_2;
          this._type_list_component_template$_expr_2 = currVal_2;
        }
        this._type_list_component_template$_compView_8.detectHostChanges$1(firstCheck);
        this._compView_16.detectHostChanges$1(firstCheck);
        t1 = _ctx.selected;
        currVal_8 = Q.interpolate0(t1 == null ? null : J.get$name$x(t1));
        t1 = this._type_list_component_template$_expr_8;
        if (t1 !== currVal_8) {
          this._text_22.textContent = currVal_8;
          this._type_list_component_template$_expr_8 = currVal_8;
        }
        this._type_list_component_template$_compView_25.detectHostChanges$1(firstCheck);
        this._compView_27.detectHostChanges$1(firstCheck);
        this._compView_29.detectHostChanges$1(firstCheck);
        t1 = _ctx.selected;
        currVal_10 = Q.interpolate0(t1 == null ? null : J.get$name$x(t1));
        t1 = this._type_list_component_template$_expr_10;
        if (t1 !== currVal_10) {
          this._text_35.textContent = currVal_10;
          this._type_list_component_template$_expr_10 = currVal_10;
        }
        this._compView_38.detectHostChanges$1(firstCheck);
        this._compView_40.detectHostChanges$1(firstCheck);
        this._type_list_component_template$_compView_2.detectChanges$0();
        this._compView_3.detectChanges$0();
        this._type_list_component_template$_compView_7.detectChanges$0();
        this._type_list_component_template$_compView_8.detectChanges$0();
        this._compView_16.detectChanges$0();
        this._type_list_component_template$_compView_17.detectChanges$0();
        this._type_list_component_template$_compView_25.detectChanges$0();
        this._compView_27.detectChanges$0();
        this._compView_29.detectChanges$0();
        this._compView_30.detectChanges$0();
        this._compView_38.detectChanges$0();
        this._compView_40.detectChanges$0();
        if (firstCheck) {
          this._MaterialInputComponent_7_6.ngAfterViewInit$0();
          this._ModalComponent_16_5.ngAfterViewInit$0();
          this._ModalComponent_29_5.ngAfterViewInit$0();
        }
      },
      destroyInternal$0: function() {
        this._type_list_component_template$_appEl_13.destroyNestedViews$0();
        this._type_list_component_template$_appEl_15.destroyNestedViews$0();
        this._type_list_component_template$_compView_2.destroy$0();
        this._compView_3.destroy$0();
        this._type_list_component_template$_compView_7.destroy$0();
        this._type_list_component_template$_compView_8.destroy$0();
        this._compView_16.destroy$0();
        this._type_list_component_template$_compView_17.destroy$0();
        this._type_list_component_template$_compView_25.destroy$0();
        this._compView_27.destroy$0();
        this._compView_29.destroy$0();
        this._compView_30.destroy$0();
        this._compView_38.destroy$0();
        this._compView_40.destroy$0();
        var t1 = this._MaterialInputComponent_7_6;
        t1.super$BaseMaterialInput$ngOnDestroy();
        t1.inputEl = null;
        t1.popupSourceEl = null;
        this._MaterialInputDefaultValueAccessor_7_8.disposer.dispose$0();
        this._MaterialExpansionPanelSet_14_5._panelDisposer.dispose$0();
        this._MaterialDialogComponent_17_5._material_dialog$_disposer.dispose$0();
        this._ModalComponent_16_5.ngOnDestroy$0();
        this._MaterialDialogComponent_30_5._material_dialog$_disposer.dispose$0();
        this._ModalComponent_29_5.ngOnDestroy$0();
      },
      _handle_input_7_0$1: [function($$event) {
        this.ctx.updateSearchText$1(H.stringTypeCheck(J.get$value$x(J.get$target$x($$event))));
      }, "call$1", "get$_handle_input_7_0", 4, 0, 1],
      _handle_trigger_25_0$1: [function($$event) {
        this.ctx.onConfirmCancel$1(true);
      }, "call$1", "get$_handle_trigger_25_0", 4, 0, 1],
      _handle_trigger_27_0$1: [function($$event) {
        this.ctx.onConfirmCancel$1(false);
      }, "call$1", "get$_handle_trigger_27_0", 4, 0, 1],
      _handle_trigger_40_0$1: [function($$event) {
        this.ctx.set$deleteModalVisible(false);
      }, "call$1", "get$_handle_trigger_40_0", 4, 0, 1],
      $asAppView: function() {
        return [L.TypeListComponent];
      }
    },
    ViewTypeListComponent0_detectChangesInternal_closure: {
      "^": "Closure:177;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewTypeListComponent4")._type_list_component_template$_MaterialExpansionPanel_0_5], [T.MaterialExpansionPanel]);
      }
    },
    ViewTypeListComponent0_detectChangesInternal_closure0: {
      "^": "Closure:178;",
      call$1: function(nestedView) {
        return H.interceptedTypeCheck(nestedView, "$is_ViewTypeListComponent4")._type_list_component_template$_appEl_1.mapNestedViews$2$1(new Z.ViewTypeListComponent0_detectChangesInternal__closure(), R.ViewContainerRef, Z._ViewTypeListComponent5);
      }
    },
    ViewTypeListComponent0_detectChangesInternal__closure: {
      "^": "Closure:179;",
      call$1: function(nestedView) {
        return H.setRuntimeTypeInfo([H.interceptedTypeCheck(nestedView, "$is_ViewTypeListComponent5")._type_list_component_template$_appEl_1], [R.ViewContainerRef]);
      }
    },
    _ViewTypeListComponent3: {
      "^": "AppView;0_type_list_component_template$_compView_0,0_MaterialProgressComponent_0_5,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, _el_0;
        t1 = new S.ViewMaterialProgressComponent0(P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t1.set$viewData(S.AppViewData_AppViewData(t1, 1, C.ViewType_1, 0, X.MaterialProgressComponent));
        t2 = document.createElement("material-progress");
        t1.rootEl = H.interceptedTypeCheck(t2, "$isHtmlElement");
        t2 = $.ViewMaterialProgressComponent0__renderType;
        if (t2 == null) {
          t2 = $.appViewUtils;
          t2 = t2.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$MaterialProgressComponent());
          $.ViewMaterialProgressComponent0__renderType = t2;
        }
        t1.setupComponentType$1(t2);
        this._type_list_component_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        this.addShimC$1(_el_0);
        t1 = this._type_list_component_template$_compView_0;
        t2 = new X.MaterialProgressComponent(t1.viewData.ref, _el_0, true, 0, 0, 0, 100, false, false);
        this._MaterialProgressComponent_0_5 = t2;
        t1.create$2(0, t2, []);
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        var firstCheck, t1, changed;
        firstCheck = this.viewData._cdState === 0;
        if (firstCheck) {
          t1 = this._MaterialProgressComponent_0_5;
          t1._material_progress$_indeterminate = true;
          t1._tryFancyAnimation$0();
          changed = true;
        } else
          changed = false;
        if (changed)
          this._type_list_component_template$_compView_0.viewData.set$cdMode(1);
        this._type_list_component_template$_compView_0.detectChanges$0();
        if (firstCheck) {
          t1 = this._MaterialProgressComponent_0_5;
          t1._material_progress$_isInitialized = true;
          if (t1._material_progress$_indeterminate)
            t1._tryFancyAnimation$0();
        }
      },
      destroyInternal$0: function() {
        var t1, t2;
        this._type_list_component_template$_compView_0.destroy$0();
        t1 = this._MaterialProgressComponent_0_5;
        t2 = t1._primaryAnimation;
        if (!(t2 == null))
          t2.cancel();
        t2 = t1._secondaryAnimation;
        if (!(t2 == null))
          t2.cancel();
        t1._primaryAnimation = null;
        t1._secondaryAnimation = null;
        t1._primaryIndicator = null;
        t1._secondaryIndicator = null;
      },
      $asAppView: function() {
        return [L.TypeListComponent];
      }
    },
    _ViewTypeListComponent4: {
      "^": "AppView;0_type_list_component_template$_compView_0,0_type_list_component_template$_MaterialExpansionPanel_0_5,0_type_list_component_template$_appEl_1,0_type_list_component_template$_NgIf_1_9,0_type_list_component_template$_expr_1,0_type_list_component_template$_expr_2,0_type_list_component_template$_expr_3,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, _el_0, t2, t3, t4, t5, t6, t7, t8, subscription_0, subscription_1;
        t1 = D.ViewMaterialExpansionPanel0$(this, 0);
        this._type_list_component_template$_compView_0 = t1;
        _el_0 = t1.rootEl;
        J.setAttribute$2$x(_el_0, "wide", "");
        this.addShimC$1(_el_0);
        t1 = this.parentView;
        t2 = t1.parentView;
        t3 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_NgZone_6ty, t1.viewData.parentIndex), "$isNgZone");
        t4 = this._type_list_component_template$_compView_0.viewData.ref;
        t1 = H.interceptedTypeCheck(t2.injectorGet$2(C.Type_DomService_2jN, t1.viewData.parentIndex), "$isDomService");
        t2 = P.bool;
        t5 = [t2];
        t6 = $.$get$MaterialExpansionPanel__msgSave();
        t7 = $.$get$MaterialExpansionPanel__msgCancel();
        t8 = [[L.AsyncAction, P.bool]];
        t1 = new T.MaterialExpansionPanel(t3, t4, t1, new R.Disposer(true, false), "expand_less", false, false, true, false, new P._SyncBroadcastStreamController(null, null, 0, t5), new P._SyncBroadcastStreamController(null, null, 0, t5), false, false, false, false, false, false, false, false, true, true, false, t6, t7, new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8), new P._SyncBroadcastStreamController(null, null, 0, t8));
        this._type_list_component_template$_MaterialExpansionPanel_0_5 = t1;
        t1 = $.$get$_viewContainerAnchor();
        t1 = new V.ViewContainer(1, 0, this, H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment"));
        this._type_list_component_template$_appEl_1 = t1;
        this._type_list_component_template$_NgIf_1_9 = new K.NgIf(new D.TemplateRef(t1, Z.type_list_component_template__viewFactory_TypeListComponent5$closure()), t1, false);
        this._type_list_component_template$_compView_0.create$2(0, this._type_list_component_template$_MaterialExpansionPanel_0_5, [C.List_empty, C.List_empty, C.List_empty, H.setRuntimeTypeInfo([t1], [V.ViewContainer]), C.List_empty]);
        t1 = this._type_list_component_template$_MaterialExpansionPanel_0_5._isExpandedChange;
        subscription_0 = new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]).listen$1(this.eventHandler1$2$1(this.get$_handle_expandedChange_0_0(), t2, t2));
        t2 = this._type_list_component_template$_MaterialExpansionPanel_0_5._saveController;
        t1 = [L.AsyncAction, P.bool];
        subscription_1 = new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(this.ctx.get$onSave(), t1, t1));
        t2 = this._type_list_component_template$_MaterialExpansionPanel_0_5._cancelController;
        this.init$2([_el_0], [subscription_0, subscription_1, new P._BroadcastStream(t2, [H.getTypeArgumentByIndex(t2, 0)]).listen$1(this.eventHandler1$2$1(J.get$onCancel$z(this.ctx), t1, t1))]);
      },
      injectorGetInternal$3: function(token, nodeIndex, notFoundResult) {
        var t1;
        if (token === C.Type_MaterialExpansionPanel_WrR || token === C.Type_DeferredContentAware_BCk || token === C.Type_HasDisabled_qzc)
          t1 = nodeIndex <= 1;
        else
          t1 = false;
        if (t1)
          return this._type_list_component_template$_MaterialExpansionPanel_0_5;
        return notFoundResult;
      },
      detectChangesInternal$0: function() {
        var _ctx, firstCheck, local_item, local_itemPanel, changed, t1, currVal_1, t2, currVal_2, currVal_3;
        _ctx = this.ctx;
        firstCheck = this.viewData._cdState === 0;
        local_item = this.locals.$index(0, "$implicit");
        local_itemPanel = this._type_list_component_template$_MaterialExpansionPanel_0_5;
        if (firstCheck) {
          local_itemPanel.closeOnSave = false;
          changed = true;
        } else
          changed = false;
        t1 = J.getInterceptor$x(local_item);
        currVal_1 = Q.interpolate2("", t1.get$name(local_item), ": ", t1.get$id(local_item), "");
        t2 = this._type_list_component_template$_expr_1;
        if (t2 !== currVal_1) {
          this._type_list_component_template$_MaterialExpansionPanel_0_5.name = currVal_1;
          this._type_list_component_template$_expr_1 = currVal_1;
          changed = true;
        }
        t2 = _ctx.selected;
        t2 = t2 == null ? null : J.get$id$x(t2);
        currVal_2 = J.$eq$(t2, t1.get$id(local_item));
        t1 = this._type_list_component_template$_expr_2;
        if (t1 !== currVal_2) {
          this._type_list_component_template$_MaterialExpansionPanel_0_5.set$isExpanded(currVal_2);
          this._type_list_component_template$_expr_2 = currVal_2;
          changed = true;
        }
        currVal_3 = _ctx.mode === "add";
        t1 = this._type_list_component_template$_expr_3;
        if (t1 !== currVal_3) {
          t1 = this._type_list_component_template$_MaterialExpansionPanel_0_5;
          t1._material_expansionpanel$_disabled = currVal_3;
          t1._material_expansionpanel$_changeDetector.appView.markPathToRootAsCheckOnce$0();
          this._type_list_component_template$_expr_3 = currVal_3;
          changed = true;
        }
        if (changed)
          this._type_list_component_template$_compView_0.viewData.set$cdMode(1);
        if (firstCheck)
          this._type_list_component_template$_MaterialExpansionPanel_0_5.ngOnInit$0();
        this._type_list_component_template$_NgIf_1_9.set$ngIf(local_itemPanel._isExpanded);
        this._type_list_component_template$_appEl_1.detectChangesInNestedViews$0();
        this._type_list_component_template$_compView_0.detectChanges$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView, "$isViewTypeListComponent0")._query_MaterialExpansionPanel_14_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._type_list_component_template$_appEl_1.destroyNestedViews$0();
        this._type_list_component_template$_compView_0.destroy$0();
        this._type_list_component_template$_MaterialExpansionPanel_0_5._material_expansionpanel$_disposer.dispose$0();
      },
      _handle_expandedChange_0_0$1: [function($$event) {
        var local_item = this.locals.$index(0, "$implicit");
        this.ctx.changeHandler$2(H.boolTypeCheck($$event), local_item);
      }, "call$1", "get$_handle_expandedChange_0_0", 4, 0, 1],
      $asAppView: function() {
        return [L.TypeListComponent];
      }
    },
    _ViewTypeListComponent5: {
      "^": "AppView;0_type_list_component_template$_appEl_1,0_TemplateRef_1_8,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var _el_0, t1, _anchor_1;
        _el_0 = document.createElement("div");
        _el_0.className = "padder";
        H.interceptedTypeCheck(_el_0, "$isHtmlElement");
        this.addShimC$1(_el_0);
        t1 = $.$get$_viewContainerAnchor();
        _anchor_1 = H.interceptedTypeCheck((t1 && C.Comment_methods).clone$1(t1, false), "$isComment");
        J.append$1$x(_el_0, _anchor_1);
        t1 = new V.ViewContainer(1, 0, this, _anchor_1);
        this._type_list_component_template$_appEl_1 = t1;
        this._TemplateRef_1_8 = new D.TemplateRef(t1, Z.type_list_component_template__viewFactory_TypeListComponent6$closure());
        this.init0$1(_el_0);
      },
      detectChangesInternal$0: function() {
        this._type_list_component_template$_appEl_1.detectChangesInNestedViews$0();
      },
      dirtyParentQueriesInternal$0: function() {
        H.interceptedTypeCheck(this.parentView.parentView, "$isViewTypeListComponent0")._query_itemContainer_1_0_isDirty = true;
      },
      destroyInternal$0: function() {
        this._type_list_component_template$_appEl_1.destroyNestedViews$0();
      },
      $asAppView: function() {
        return [L.TypeListComponent];
      }
    },
    _ViewTypeListComponent6: {
      "^": "AppView;0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        this.init$2(C.List_empty, null);
      },
      $asAppView: function() {
        return [L.TypeListComponent];
      }
    },
    _ViewTypeListComponentHost0: {
      "^": "AppView;0_type_list_component_template$_compView_0,0_type_list_component_template$_appEl_0,0_TypeListComponent_0_8,0viewData,locals,parentView,0componentType,0rootEl,0ctx",
      build$0: function() {
        var t1, t2, t3;
        t1 = new Z.ViewTypeListComponent0(true, true, false, false, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null), this);
        t2 = L.TypeListComponent;
        t1.set$viewData(S.AppViewData_AppViewData(t1, 3, C.ViewType_1, 0, t2));
        t3 = document.createElement("my-itemlist");
        t1.rootEl = H.interceptedTypeCheck(t3, "$isHtmlElement");
        t3 = $.ViewTypeListComponent0__renderType;
        if (t3 == null) {
          t3 = $.appViewUtils;
          t3 = t3.createRenderType$3(null, C.ViewEncapsulation_0, $.$get$styles$TypeListComponent());
          $.ViewTypeListComponent0__renderType = t3;
        }
        t1.setupComponentType$1(t3);
        this._type_list_component_template$_compView_0 = t1;
        t1 = t1.rootEl;
        this.rootEl = t1;
        this._type_list_component_template$_appEl_0 = new V.ViewContainer(0, null, this, t1);
        t1 = new L.TypeListComponent(H.interceptedTypeCheck(this.injectorGet$2(C.Type_Router_yx3, this.viewData.parentIndex), "$isRouter"), this._type_list_component_template$_appEl_0, false, [], "", "edit", false, false);
        this._TypeListComponent_0_8 = t1;
        this._type_list_component_template$_compView_0.create$2(0, t1, this.viewData.projectableNodes);
        this.init0$1(this._type_list_component_template$_appEl_0);
        return new D.ComponentRef(this, 0, this.rootEl, this._TypeListComponent_0_8, [t2]);
      },
      detectChangesInternal$0: function() {
        this._type_list_component_template$_appEl_0.detectChangesInNestedViews$0();
        this._type_list_component_template$_compView_0.detectChanges$0();
      },
      destroyInternal$0: function() {
        this._type_list_component_template$_appEl_0.destroyNestedViews$0();
        this._type_list_component_template$_compView_0.destroy$0();
      },
      $asAppView: function() {
        return [L.TypeListComponent];
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/routing/route_paths.dart",, N, {}], ["", "package:angular_tour_of_heroes/src/routing/routes.dart",, T, {}], ["", "package:angular_tour_of_heroes/src/service/entrant_service.dart",, L, {
    "^": "",
    EntrantService: {
      "^": "Object;",
      getNew$0: function() {
        return new D.Entrant(0, 0, 0, "New");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, D.Entrant]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.EntrantService_baseUrl + $.EntrantService_apiUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = D.Entrant;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new L.EntrantService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isEntrant");
        return this.addByObject$body$EntrantService(object);
      },
      addByObject$body$EntrantService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(D.Entrant),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "EventId", object.get$eventId(), "OwnerId", object.get$ownerId()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.EntrantService_baseUrl + $.EntrantService_apiUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new D.Entrant(0, 0, 0, "New");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.eventId = object.get$eventId();
                  t1.ownerId = object.get$ownerId();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isEntrant");
        return;
      },
      searchFor$1: function(string) {
        return this.searchFor$body$EntrantService(string);
      },
      searchFor$body$EntrantService: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, D.Entrant]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, e, exception, $async$exception, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$handler = 4;
                $async$temp1 = J;
                $async$goto = 7;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 7:
                // returning from await.
                t1 = $async$temp1.where$1$ax($async$result, new L.EntrantService_searchFor_closure(t1, string)).toList$0(0);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto return
                $async$goto = 1;
                break;
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$EntrantService(id);
      },
      deleteById$body$EntrantService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.EntrantService_baseUrl + $.EntrantService_apiUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [D.Entrant];
      }
    },
    EntrantService_getAll_closure: {
      "^": "Closure:180;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new D.Entrant(0, 0, 0, "New");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.eventId = H.intTypeCheck(t2.$index(item, "EventId"));
        t1.ownerId = H.intTypeCheck(t2.$index(item, "OwnerId"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    EntrantService_searchFor_closure: {
      "^": "Closure:181;_box_0,string",
      call$1: function(player) {
        var t1, testInt, t2, t3;
        H.interceptedTypeCheck(player, "$isEntrant");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        t2 = this._box_0;
        t2.testInt = testInt;
        if (testInt != null) {
          t3 = J.get$id$x(player);
          t2 = t2.testInt;
          if (t3 == null ? t2 == null : t3 === t2)
            return true;
        }
        return C.JSString_methods.contains$1(J.get$name$x(player).toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/event_service.dart",, Z, {
    "^": "",
    EventService: {
      "^": "Object;",
      getNew$0: function() {
        return new X.Event0(0, 0, "New");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, X.Event0]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, tournamentList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.EventService_baseUrl + $.EventService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = X.Event0;
                  tournamentList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    tournamentList = J.map$1$1$ax(jsonList, new Z.EventService_getAll_closure(), t1).toList$0(0);
                  t1 = tournamentList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isEvent0");
        return this.addByObject$body$EventService(object);
      },
      addByObject$body$EventService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(X.Event0),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "OwnerId", object.get$ownerId()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.EventService_baseUrl + $.EventService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new X.Event0(0, 0, "New");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.ownerId = object.get$ownerId();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isEvent0");
        return;
      },
      searchFor$1: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, X.Event0]),
          $async$returnValue, $async$self = this, t1, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$temp1 = J;
                $async$goto = 3;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 3:
                // returning from await.
                $async$returnValue = $async$temp1.where$1$ax($async$result, new Z.EventService_searchFor_closure(t1, string)).toList$0(0);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$EventService(id);
      },
      deleteById$body$EventService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.EventService_baseUrl + $.EventService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [X.Event0];
      }
    },
    EventService_getAll_closure: {
      "^": "Closure:182;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new X.Event0(0, 0, "New");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.ownerId = H.intTypeCheck(t2.$index(item, "OwnerId"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    EventService_searchFor_closure: {
      "^": "Closure:183;_box_0,string",
      call$1: function(tournament) {
        var t1, testInt;
        H.interceptedTypeCheck(tournament, "$isEvent0");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        this._box_0.testInt = testInt;
        if (testInt != null)
          if (tournament.id === testInt)
            return true;
        return C.JSString_methods.contains$1(tournament.name.toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/game_service.dart",, L, {
    "^": "",
    GameService: {
      "^": "Object;",
      getNew$0: function() {
        return new D.Game(0, 0, 0);
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, D.Game]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.GameService_baseUrl + $.GameService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = D.Game;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new L.GameService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isGame");
        return this.addByObject$body$GameService(object);
      },
      addByObject$body$GameService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(D.Game),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["OwnerId", object.get$ownerId(), "MatchId", object.get$matchId()], t1, P.int));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.GameService_baseUrl + $.GameService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new D.Game(0, 0, 0);
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.ownerId = object.get$ownerId();
                  t1.matchId = object.get$matchId();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isGame");
        return;
      },
      searchFor$1: function(string) {
        return this.searchFor$body$GameService(string);
      },
      searchFor$body$GameService: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, D.Game]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, e, exception, $async$exception, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$handler = 4;
                $async$temp1 = J;
                $async$goto = 7;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 7:
                // returning from await.
                t1 = $async$temp1.where$1$ax($async$result, new L.GameService_searchFor_closure(t1, string)).toList$0(0);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto return
                $async$goto = 1;
                break;
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$GameService(id);
      },
      deleteById$body$GameService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.GameService_baseUrl + $.GameService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [D.Game];
      }
    },
    GameService_getAll_closure: {
      "^": "Closure:184;",
      call$1: [function(object) {
        var t1, t2;
        t1 = new D.Game(0, 0, 0);
        t2 = J.getInterceptor$asx(object);
        t1.id = H.intTypeCheck(t2.$index(object, "Id"));
        t1.ownerId = H.intTypeCheck(t2.$index(object, "OwnerId"));
        t1.matchId = H.intTypeCheck(t2.$index(object, "MatchId"));
        return t1;
      }, null, null, 4, 0, null, 16, "call"]
    },
    GameService_searchFor_closure: {
      "^": "Closure:185;_box_0,string",
      call$1: function(game) {
        var testInt, t1, t2;
        H.interceptedTypeCheck(game, "$isGame");
        testInt = H.Primitives_parseInt(this.string, null);
        t1 = this._box_0;
        t1.testInt = testInt;
        if (testInt != null) {
          t2 = J.get$id$x(game);
          t1 = t1.testInt;
          if (t2 == null ? t1 == null : t2 === t1)
            return true;
        }
        return false;
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/interop_barcode_service.dart",, Y, {
    "^": "",
    InteropBarcodeService: {
      "^": "Object;0_barcodeStreamer",
      set$_barcodeStreamer: function(_barcodeStreamer) {
        this._barcodeStreamer = H.assertSubtype(_barcodeStreamer, "$isStreamController", [L.Barcode], "$asStreamController");
      },
      _acceptJsObject$1: [function(object) {
        var barcode = new L.Barcode();
        barcode.value = J.substring$1$s(J.toString$0$(H.interceptedTypeCheck(object, "$isJsObject").$index(0, "BarcodeText")), 2);
        this._barcodeStreamer.add$1(0, barcode);
      }, "call$1", "get$_acceptJsObject", 4, 0, 186, 16]
    }
  }], ["", "package:angular_tour_of_heroes/src/service/match_service.dart",, Y, {
    "^": "",
    MatchService: {
      "^": "Object;",
      getNew$0: function() {
        return new Y.Match0(0, 0, "New");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, Y.Match0]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.MatchService_baseUrl + $.MatchService_apiUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = Y.Match0;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new Y.MatchService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isMatch0");
        return this.addByObject$body$MatchService(object);
      },
      addByObject$body$MatchService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(Y.Match0),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "RoundId", object.get$roundId()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.MatchService_baseUrl + $.MatchService_apiUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new Y.Match0(0, 0, "New");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.roundId = object.get$roundId();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isMatch0");
        return;
      },
      searchFor$1: function(string) {
        return this.searchFor$body$MatchService(string);
      },
      searchFor$body$MatchService: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, Y.Match0]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, e, exception, $async$exception, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$handler = 4;
                $async$temp1 = J;
                $async$goto = 7;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 7:
                // returning from await.
                t1 = $async$temp1.where$1$ax($async$result, new Y.MatchService_searchFor_closure(t1, string)).toList$0(0);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto return
                $async$goto = 1;
                break;
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$MatchService(id);
      },
      deleteById$body$MatchService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.MatchService_baseUrl + $.MatchService_apiUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [Y.Match0];
      }
    },
    MatchService_getAll_closure: {
      "^": "Closure:187;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new Y.Match0(0, 0, "New");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.roundId = H.intTypeCheck(t2.$index(item, "RoundId"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    MatchService_searchFor_closure: {
      "^": "Closure:188;_box_0,string",
      call$1: function(player) {
        var t1, testInt, t2, t3;
        H.interceptedTypeCheck(player, "$isMatch0");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        t2 = this._box_0;
        t2.testInt = testInt;
        if (testInt != null) {
          t3 = J.get$id$x(player);
          t2 = t2.testInt;
          if (t3 == null ? t2 == null : t3 === t2)
            return true;
        }
        return C.JSString_methods.contains$1(J.get$name$x(player).toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/result_service.dart",, S, {
    "^": "",
    ResultService: {
      "^": "Object;",
      getNew$0: function() {
        return new E.Result(0, 0, 0, "none");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, E.Result]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.ResultService_baseUrl + $.ResultService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = E.Result;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new S.ResultService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isResult");
        return this.addByObject$body$ResultService(object);
      },
      addByObject$body$ResultService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(E.Result),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["OwnerId", object.get$ownerId(), "MatchId", object.get$matchId(), "Notes", object.get$notes()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.ResultService_baseUrl + $.ResultService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new E.Result(0, 0, 0, "none");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.ownerId = object.get$ownerId();
                  t1.matchId = object.get$matchId();
                  t1.notes = object.get$notes();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isResult");
        return;
      },
      searchFor$1: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, E.Result]),
          $async$returnValue;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$ResultService(id);
      },
      deleteById$body$ResultService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.ResultService_baseUrl + $.ResultService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [E.Result];
      }
    },
    ResultService_getAll_closure: {
      "^": "Closure:189;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new E.Result(0, 0, 0, "none");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.ownerId = H.intTypeCheck(t2.$index(item, "OwnerId"));
        t1.matchId = H.intTypeCheck(t2.$index(item, "MatchId"));
        t1.notes = H.stringTypeCheck(t2.$index(item, "Notes"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    }
  }], ["", "package:angular_tour_of_heroes/src/service/round_service.dart",, U, {
    "^": "",
    RoundService: {
      "^": "Object;",
      getNew$0: function() {
        return new R.Round(0, 0, "New");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, R.Round]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.RoundService_baseUrl + $.RoundService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = R.Round;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new U.RoundService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isRound");
        return this.addByObject$body$RoundService(object);
      },
      addByObject$body$RoundService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(R.Round),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "StageId", object.get$stageId()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.RoundService_baseUrl + $.RoundService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new R.Round(0, 0, "New");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.stageId = object.get$stageId();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isRound");
        return;
      },
      searchFor$1: function(string) {
        return this.searchFor$body$RoundService(string);
      },
      searchFor$body$RoundService: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, R.Round]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, e, exception, $async$exception, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$handler = 4;
                $async$temp1 = J;
                $async$goto = 7;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 7:
                // returning from await.
                t1 = $async$temp1.where$1$ax($async$result, new U.RoundService_searchFor_closure(t1, string)).toList$0(0);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto return
                $async$goto = 1;
                break;
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$RoundService(id);
      },
      deleteById$body$RoundService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.RoundService_baseUrl + $.RoundService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [R.Round];
      }
    },
    RoundService_getAll_closure: {
      "^": "Closure:190;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new R.Round(0, 0, "New");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.stageId = H.intTypeCheck(t2.$index(item, "StageId"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    RoundService_searchFor_closure: {
      "^": "Closure:191;_box_0,string",
      call$1: function(player) {
        var t1, testInt, t2, t3;
        H.interceptedTypeCheck(player, "$isRound");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        t2 = this._box_0;
        t2.testInt = testInt;
        if (testInt != null) {
          t3 = J.get$id$x(player);
          t2 = t2.testInt;
          if (t3 == null ? t2 == null : t3 === t2)
            return true;
        }
        return C.JSString_methods.contains$1(J.get$name$x(player).toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/stage_service.dart",, L, {
    "^": "",
    StageService: {
      "^": "Object;",
      getNew$0: function() {
        return new L.Stage(0, 0, 0, 100, 10, "New");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, L.Stage]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.StageService_baseUrl + $.StageService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = L.Stage;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new L.StageService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isStage");
        return this.addByObject$body$StageService(object);
      },
      addByObject$body$StageService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(L.Stage),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "OwnerId", object.get$ownerId(), "TournamentId", object.get$tournamentId(), "MaxEntrants", object.get$maxEntrants(), "MaxRounds", object.get$maxRounds()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.StageService_baseUrl + $.StageService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new L.Stage(0, 0, 0, 100, 10, "New");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.ownerId = object.get$ownerId();
                  t1.tournamentId = object.get$tournamentId();
                  t1.maxEntrants = object.get$maxEntrants();
                  t1.maxRounds = object.get$maxRounds();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isStage");
        return;
      },
      searchFor$1: function(string) {
        return this.searchFor$body$StageService(string);
      },
      searchFor$body$StageService: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, L.Stage]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, e, exception, $async$exception, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$handler = 4;
                $async$temp1 = J;
                $async$goto = 7;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 7:
                // returning from await.
                t1 = $async$temp1.where$1$ax($async$result, new L.StageService_searchFor_closure(t1, string)).toList$0(0);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto return
                $async$goto = 1;
                break;
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$StageService(id);
      },
      deleteById$body$StageService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.StageService_baseUrl + $.StageService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [L.Stage];
      }
    },
    StageService_getAll_closure: {
      "^": "Closure:192;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new L.Stage(0, 0, 0, 100, 10, "New");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.ownerId = H.intTypeCheck(t2.$index(item, "StageId"));
        t1.tournamentId = H.intTypeCheck(t2.$index(item, "TournamentId"));
        t1.maxEntrants = H.intTypeCheck(t2.$index(item, "MaxEntrants"));
        t1.maxRounds = H.intTypeCheck(t2.$index(item, "MaxRounds"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    StageService_searchFor_closure: {
      "^": "Closure:193;_box_0,string",
      call$1: function(player) {
        var t1, testInt, t2, t3;
        H.interceptedTypeCheck(player, "$isStage");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        t2 = this._box_0;
        t2.testInt = testInt;
        if (testInt != null) {
          t3 = J.get$id$x(player);
          t2 = t2.testInt;
          if (t3 == null ? t2 == null : t3 === t2)
            return true;
        }
        return C.JSString_methods.contains$1(J.get$name$x(player).toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/tournament_service.dart",, G, {
    "^": "",
    TournamentService: {
      "^": "Object;",
      getNew$0: function() {
        return new E.Tournament(0, 0, "New", P.LinkedHashMap__makeLiteral(["maxEntrants", 100]));
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, E.Tournament]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, tournamentList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.TournamentService_baseUrl + $.TournamentService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = E.Tournament;
                  tournamentList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    tournamentList = J.map$1$1$ax(jsonList, new G.TournamentService_getAll_closure(), t1).toList$0(0);
                  t1 = tournamentList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isTournament");
        return this.addByObject$body$TournamentService(object);
      },
      addByObject$body$TournamentService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(E.Tournament),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "OwnerId", object.get$ownerId()], t1, P.Object));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.TournamentService_baseUrl + $.TournamentService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new E.Tournament(0, 0, "New", P.LinkedHashMap__makeLiteral(["maxEntrants", 100]));
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.ownerId = object.get$ownerId();
                  t1.settings = object.get$settings();
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isTournament");
        return;
      },
      searchFor$1: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, E.Tournament]),
          $async$returnValue, $async$self = this, t1, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$temp1 = J;
                $async$goto = 3;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 3:
                // returning from await.
                $async$returnValue = $async$temp1.where$1$ax($async$result, new G.TournamentService_searchFor_closure(t1, string)).toList$0(0);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$TournamentService(id);
      },
      deleteById$body$TournamentService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.TournamentService_baseUrl + $.TournamentService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [E.Tournament];
      }
    },
    TournamentService_getAll_closure: {
      "^": "Closure:194;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new E.Tournament(0, 0, "New", P.LinkedHashMap__makeLiteral(["maxEntrants", 100]));
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.ownerId = H.intTypeCheck(t2.$index(item, "OwnerId"));
        t1.settings = H.interceptedTypeCheck(C.JsonCodec_null_null.decode$1(0, H.stringTypeCheck(t2.$index(item, "Settings"))), "$isMap");
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    TournamentService_searchFor_closure: {
      "^": "Closure:195;_box_0,string",
      call$1: function(tournament) {
        var t1, testInt;
        H.interceptedTypeCheck(tournament, "$isTournament");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        this._box_0.testInt = testInt;
        if (testInt != null)
          if (tournament.id === testInt)
            return true;
        return C.JSString_methods.contains$1(tournament.name.toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/service/user_service.dart",, D, {
    "^": "",
    UserService: {
      "^": "Object;",
      getNew$0: function() {
        return new N.User(0, "New");
      },
      getAll$0: function(_) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, N.User]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, jsonList, playerList, e, t1, exception, $async$exception;
        var $async$getAll$0 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Getting: all");
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$3("GET", $.UserService_baseUrl + $.UserService_coreUrl + "find", null), $async$getAll$0);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonList = H.listTypeCheck(J.$index$asx(H.interceptedTypeCast(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "$isMap"), "Data"));
                  t1 = N.User;
                  playerList = H.setRuntimeTypeInfo([], [t1]);
                  if (jsonList != null)
                    playerList = J.map$1$1$ax(jsonList, new D.UserService_getAll_closure(), t1).toList$0(0);
                  t1 = playerList;
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$getAll$0, $async$completer);
      },
      addByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isUser");
        return this.addByObject$body$UserService(object);
      },
      addByObject$body$UserService: function(object) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(N.User),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], jsonBody, response, jsonData, e, t1, exception, $async$exception;
        var $async$addByObject$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = P.String;
                jsonBody = C.JsonCodec_null_null.encode$1(P.LinkedHashMap_LinkedHashMap$_literal(["Name", J.get$name$x(object), "Key", J.get$key$x(object)], t1, t1));
                P.print(jsonBody);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false)._sendUnstreamed$5("POST", $.UserService_baseUrl + $.UserService_coreUrl + "add", H.assertSubtype(P.LinkedHashMap_LinkedHashMap$_literal(["Content-Type", "application/json"], t1, t1), "$isMap", [t1, t1], "$asMap"), jsonBody, null), $async$addByObject$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  t1 = response;
                  jsonData = J.$index$asx(C.JsonCodec_null_null.decode$1(0, B.encodingForCharset(J.$index$asx(U._contentTypeForHeaders(J.get$headers$z(t1)).parameters._collection$_map, "charset"), C.Latin1Codec_false).decode$1(0, t1.get$bodyBytes())), "Data");
                  P.print("Returning ID: " + H.S(J.$index$asx(jsonData, "id")));
                  t1 = new N.User(0, "New");
                  t1.id = H.intTypeCheck(J.$index$asx(jsonData, "id"));
                  t1.name = H.stringTypeCheck(J.get$name$x(object));
                  t1.key = H.stringTypeCheck(J.get$key$x(object));
                  $async$returnValue = t1;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$addByObject$1, $async$completer);
      },
      updateByObject$1: function(object) {
        H.interceptedTypeCheck(object, "$isUser");
        return;
      },
      searchFor$1: function(string) {
        return this.searchFor$body$UserService(string);
      },
      searchFor$body$UserService: function(string) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter([P.List, N.User]),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, t1, e, exception, $async$exception, $async$temp1;
        var $async$searchFor$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = {};
                t1.testInt = null;
                $async$handler = 4;
                $async$temp1 = J;
                $async$goto = 7;
                return P._asyncAwait($async$self.getAll$0(0), $async$searchFor$1);
              case 7:
                // returning from await.
                t1 = $async$temp1.where$1$ax($async$result, new D.UserService_searchFor_closure(t1, string)).toList$0(0);
                $async$returnValue = t1;
                // goto return
                $async$goto = 1;
                break;
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto return
                $async$goto = 1;
                break;
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$searchFor$1, $async$completer);
      },
      deleteById$1: function(id) {
        return this.deleteById$body$UserService(id);
      },
      deleteById$body$UserService: function(id) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(P.bool),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], response, e, t1, t2, exception, $async$exception;
        var $async$deleteById$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                P.print("Deleting: " + H.S(id));
                $async$handler = 4;
                t1 = P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest);
                t2 = J.toString$0$(id);
                $async$goto = 7;
                return P._asyncAwait(new O.BrowserClient(t1, false)._sendUnstreamed$3("DELETE", $.UserService_baseUrl + $.UserService_coreUrl + t2, null), $async$deleteById$1);
              case 7:
                // returning from await.
                response = $async$result;
                P.print("Response status: " + H.S(J.get$statusCode$z(response)));
                if (J.get$statusCode$z(response) === 200) {
                  $async$returnValue = true;
                  // goto return
                  $async$goto = 1;
                  break;
                } else {
                  t1 = P.Exception_Exception("Bad status code - " + H.S(J.get$statusCode$z(response)));
                  throw H.wrapException(t1);
                }
                $async$handler = 2;
                // goto after finally
                $async$goto = 6;
                break;
              case 4:
                // catch
                $async$handler = 3;
                $async$exception = $async$currentError;
                e = H.unwrapException($async$exception);
                P.print("Error: " + H.S(J.toString$0$(e)));
                // goto after finally
                $async$goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $async$goto = 2;
                break;
              case 6:
                // after finally
                $async$returnValue = false;
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$deleteById$1, $async$completer);
      },
      $isDetailListService: 1,
      $asDetailListService: function() {
        return [N.User];
      }
    },
    UserService_getAll_closure: {
      "^": "Closure:196;",
      call$1: [function(item) {
        var t1, t2;
        t1 = new N.User(0, "New");
        t2 = J.getInterceptor$asx(item);
        t1.id = H.intTypeCheck(t2.$index(item, "Id"));
        t1.name = H.stringTypeCheck(t2.$index(item, "Name"));
        t1.key = H.stringTypeCheck(t2.$index(item, "Key"));
        return t1;
      }, null, null, 4, 0, null, 5, "call"]
    },
    UserService_searchFor_closure: {
      "^": "Closure:197;_box_0,string",
      call$1: function(player) {
        var t1, testInt, t2, t3;
        H.interceptedTypeCheck(player, "$isUser");
        t1 = this.string;
        testInt = H.Primitives_parseInt(t1, null);
        t2 = this._box_0;
        t2.testInt = testInt;
        if (testInt != null) {
          t3 = J.get$id$x(player);
          t2 = t2.testInt;
          if (t3 == null ? t2 == null : t3 === t2)
            return true;
        }
        return C.JSString_methods.contains$1(J.get$name$x(player).toLowerCase(), t1.toLowerCase());
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/barcode.dart",, L, {
    "^": "",
    Barcode: {
      "^": "Object;0value"
    }
  }], ["", "package:angular_tour_of_heroes/src/type/dash_section.dart",, N, {
    "^": "",
    DashSection: {
      "^": "Object;name>,enabled>",
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      },
      static: {
        DashSection$: function($name, enabled) {
          return new N.DashSection($name, enabled);
        }
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/entrant.dart",, D, {
    "^": "",
    Entrant: {
      "^": "Object;id>,eventId<,ownerId<,name>",
      set$eventId: function(eventId) {
        this.eventId = H.intTypeCheck(eventId);
      },
      set$ownerId: function(ownerId) {
        this.ownerId = H.intTypeCheck(ownerId);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/event.dart",, X, {
    "^": "",
    Event0: {
      "^": "Object;id>,ownerId<,name>",
      set$ownerId: function(ownerId) {
        this.ownerId = H.intTypeCheck(ownerId);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/game.dart",, D, {
    "^": "",
    Game: {
      "^": "Object;id>,matchId<,ownerId<",
      set$matchId: function(matchId) {
        this.matchId = H.intTypeCheck(matchId);
      },
      set$ownerId: function(ownerId) {
        this.ownerId = H.intTypeCheck(ownerId);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/match.dart",, Y, {
    "^": "",
    Match0: {
      "^": "Object;id>,roundId<,name>",
      set$roundId: function(roundId) {
        this.roundId = H.intTypeCheck(roundId);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/result.dart",, E, {
    "^": "",
    Result: {
      "^": "Object;id>,ownerId<,matchId<,notes<",
      set$ownerId: function(ownerId) {
        this.ownerId = H.intTypeCheck(ownerId);
      },
      set$matchId: function(matchId) {
        this.matchId = H.intTypeCheck(matchId);
      },
      set$notes: function(notes) {
        this.notes = H.stringTypeCheck(notes);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/round.dart",, R, {
    "^": "",
    Round: {
      "^": "Object;id>,stageId<,name>",
      set$stageId: function(stageId) {
        this.stageId = H.intTypeCheck(stageId);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/stage.dart",, L, {
    "^": "",
    Stage: {
      "^": "Object;id>,ownerId<,tournamentId<,maxEntrants<,maxRounds<,name>",
      set$ownerId: function(ownerId) {
        this.ownerId = H.intTypeCheck(ownerId);
      },
      set$tournamentId: function(tournamentId) {
        this.tournamentId = H.intTypeCheck(tournamentId);
      },
      set$maxEntrants: function(maxEntrants) {
        this.maxEntrants = H.intTypeCheck(maxEntrants);
      },
      set$maxRounds: function(maxRounds) {
        this.maxRounds = H.intTypeCheck(maxRounds);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/tournament.dart",, E, {
    "^": "",
    Tournament: {
      "^": "Object;id>,ownerId<,name>,settings<",
      set$ownerId: function(ownerId) {
        this.ownerId = H.intTypeCheck(ownerId);
      },
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      }
    }
  }], ["", "package:angular_tour_of_heroes/src/type/user.dart",, N, {
    "^": "",
    User: {
      "^": "Object;id>,name>,0key>",
      set$name: function(_, $name) {
        this.name = H.stringTypeCheck($name);
      },
      set$key: function(_, key) {
        this.key = H.stringTypeCheck(key);
      }
    }
  }], ["built_collection.list", "package:built_collection/src/list.dart",, S, {
    "^": "",
    BuiltList_BuiltList$from: function(iterable, $E) {
      var t1 = S._BuiltList$copyAndCheckTypes(iterable, $E);
      return t1;
    },
    BuiltList: {
      "^": "Object;$ti",
      get$hashCode: function(_) {
        var t1 = this._list$_hashCode;
        if (t1 == null) {
          t1 = X.hashObjects(this._list);
          this._list$_hashCode = t1;
        }
        return t1;
      },
      $eq: function(_, other) {
        var t1, t2, i, t3, t4;
        if (other == null)
          return false;
        if (other === this)
          return true;
        if (!(other instanceof S.BuiltList))
          return false;
        t1 = other._list;
        t2 = this._list;
        if (t1.length !== t2.length)
          return false;
        if (other.get$hashCode(other) != this.get$hashCode(this))
          return false;
        for (i = 0; t3 = t2.length, i !== t3; ++i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          t4 = t1[i];
          if (i >= t3)
            return H.ioore(t2, i);
          if (!J.$eq$(t4, t2[i]))
            return false;
        }
        return true;
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this._list, "[", "]");
      },
      $index: function(_, index) {
        var t1;
        H.intTypeCheck(index);
        t1 = this._list;
        if (index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $add: function(_, other) {
        var t1, t2;
        t1 = this.$ti;
        t2 = C.JSArray_methods.$add(this._list, H.assertSubtype(other, "$isBuiltList", t1, "$asBuiltList")._list);
        t1 = new S._BuiltList(t2, t1);
        t1.BuiltList$_$1(t2, H.getTypeArgumentByIndex(this, 0));
        return t1;
      },
      get$length: function(_) {
        return this._list.length;
      },
      get$iterator: function(_) {
        var t1 = this._list;
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      map$1$1: function(_, f, $T) {
        var t1, t2;
        t1 = this._list;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new H.MappedListIterable(t1, H.functionTypeCheck(H.functionTypeCheck(f, {func: 1, ret: $T, args: [H.getTypeArgumentByIndex(this, 0)]}), {func: 1, ret: $T, args: [t2]}), [t2, $T]);
      },
      where$1: function(_, test) {
        var t1, t2;
        t1 = this._list;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new H.WhereIterable(t1, H.functionTypeCheck(H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]}), {func: 1, ret: P.bool, args: [t2]}), [t2]);
      },
      contains$1: function(_, element) {
        return C.JSArray_methods.contains$1(this._list, element);
      },
      forEach$1: function(_, f) {
        return C.JSArray_methods.forEach$1(this._list, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}));
      },
      join$1: function(_, separator) {
        return C.JSArray_methods.join$1(this._list, separator);
      },
      get$isEmpty: function(_) {
        return this._list.length === 0;
      },
      skip$1: function(_, n) {
        var t1 = this._list;
        return H.SubListIterable$(t1, n, null, H.getTypeArgumentByIndex(t1, 0));
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1 = H.getTypeArgumentByIndex(this, 0);
        return C.JSArray_methods.firstWhere$2$orElse(this._list, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), H.functionTypeCheck(orElse, {func: 1, ret: t1}));
      },
      elementAt$1: function(_, index) {
        return C.JSArray_methods.$index(this._list, index);
      },
      BuiltList$_$1: function(_list, $E) {
        var t1, t2;
        t1 = new H.TypeImpl($E).get$_typeName();
        t2 = C.Type_dynamic_0Rz.get$_typeName();
        if (t1 === t2)
          throw H.wrapException(P.UnsupportedError$('explicit element type required, for example "new BuiltList<int>"'));
      },
      $isIterable: 1
    },
    _BuiltList: {
      "^": "BuiltList;_list,0_list$_hashCode,$ti",
      _BuiltList$copyAndCheckTypes$1: function(iterable, $E) {
        var t1, t2, _i, element;
        for (t1 = this._list, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          element = t1[_i];
          if (!H.checkSubtypeOfRuntimeType(element, $E))
            throw H.wrapException(P.ArgumentError$("iterable contained invalid element: " + H.S(element)));
        }
      },
      static: {
        _BuiltList$copyAndCheckTypes: function(iterable, $E) {
          var t1, t2;
          t1 = P.List_List$from(iterable, false, $E);
          t2 = new S._BuiltList(t1, [$E]);
          t2.BuiltList$_$1(t1, $E);
          t2._BuiltList$copyAndCheckTypes$1(iterable, $E);
          return t2;
        }
      }
    }
  }], ["", "package:collection/src/canonicalized_map.dart",, M, {
    "^": "",
    _isToStringVisiting0: function(o) {
      return C.JSArray_methods.any$1($.$get$_toStringVisiting0(), new M._isToStringVisiting_closure(o));
    },
    CanonicalizedMap: {
      "^": "Object;$ti",
      $index: function(_, key) {
        var pair;
        if (!this._isValidKey$1(key))
          return;
        pair = this._base.$index(0, this._canonicalize.call$1(H.subtypeOfRuntimeTypeCast(key, H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1))));
        return pair == null ? null : pair.last;
      },
      $indexSet: function(_, key, value) {
        var t1, t2;
        t1 = H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1);
        H.assertSubtypeOfRuntimeType(key, t1);
        t2 = H.getRuntimeTypeArgument(this, "CanonicalizedMap", 2);
        H.assertSubtypeOfRuntimeType(value, t2);
        if (!this._isValidKey$1(key))
          return;
        this._base.$indexSet(0, this._canonicalize.call$1(key), new B.Pair(key, value, [t1, t2]));
      },
      addAll$1: function(_, other) {
        H.assertSubtype(other, "$isMap", [H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(this, "CanonicalizedMap", 2)], "$asMap").forEach$1(0, new M.CanonicalizedMap_addAll_closure(this));
      },
      containsKey$1: function(_, key) {
        if (!this._isValidKey$1(key))
          return false;
        return this._base.containsKey$1(0, this._canonicalize.call$1(H.subtypeOfRuntimeTypeCast(key, H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1))));
      },
      forEach$1: function(_, f) {
        this._base.forEach$1(0, new M.CanonicalizedMap_forEach_closure(this, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(this, "CanonicalizedMap", 2)]})));
      },
      get$isEmpty: function(_) {
        var t1 = this._base;
        return t1.get$isEmpty(t1);
      },
      get$isNotEmpty: function(_) {
        var t1 = this._base;
        return t1.get$isNotEmpty(t1);
      },
      get$keys: function(_) {
        var t1, t2, t3;
        t1 = this._base;
        t1 = t1.get$values(t1);
        t2 = H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1);
        t3 = H.getRuntimeTypeArgument(t1, "Iterable", 0);
        return H.MappedIterable_MappedIterable(t1, H.functionTypeCheck(new M.CanonicalizedMap_keys_closure(this), {func: 1, ret: t2, args: [t3]}), t3, t2);
      },
      get$length: function(_) {
        var t1 = this._base;
        return t1.get$length(t1);
      },
      get$values: function(_) {
        var t1, t2, t3;
        t1 = this._base;
        t1 = t1.get$values(t1);
        t2 = H.getRuntimeTypeArgument(this, "CanonicalizedMap", 2);
        t3 = H.getRuntimeTypeArgument(t1, "Iterable", 0);
        return H.MappedIterable_MappedIterable(t1, H.functionTypeCheck(new M.CanonicalizedMap_values_closure(this), {func: 1, ret: t2, args: [t3]}), t3, t2);
      },
      toString$0: function(_) {
        var t1, result, t2;
        t1 = {};
        if (M._isToStringVisiting0(this))
          return "{...}";
        result = new P.StringBuffer("");
        try {
          C.JSArray_methods.add$1($.$get$_toStringVisiting0(), this);
          t2 = result;
          t2.set$_contents(t2.get$_contents() + "{");
          t1.first = true;
          this.forEach$1(0, new M.CanonicalizedMap_toString_closure(t1, this, result));
          t1 = result;
          t1.set$_contents(t1.get$_contents() + "}");
        } finally {
          t1 = $.$get$_toStringVisiting0();
          if (0 >= t1.length)
            return H.ioore(t1, -1);
          t1.pop();
        }
        t1 = result.get$_contents();
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      _isValidKey$1: function(key) {
        var t1;
        if (key == null || H.checkSubtypeOfRuntimeType(key, H.getRuntimeTypeArgument(this, "CanonicalizedMap", 1))) {
          t1 = this._isValidKeyFn.call$1(key);
          t1 = t1;
        } else
          t1 = false;
        return t1;
      },
      $isMap: 1,
      $asMap: function($C, $K, $V) {
        return [$K, $V];
      }
    },
    CanonicalizedMap_addAll_closure: {
      "^": "Closure;$this",
      call$2: function(key, value) {
        var t1 = this.$this;
        H.assertSubtypeOfRuntimeType(key, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1));
        H.assertSubtypeOfRuntimeType(value, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2));
        t1.$indexSet(0, key, value);
        return value;
      },
      $signature: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2);
        return {func: 1, ret: t2, args: [H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), t2]};
      }
    },
    CanonicalizedMap_forEach_closure: {
      "^": "Closure;$this,f",
      call$2: function(key, pair) {
        var t1 = this.$this;
        H.assertSubtypeOfRuntimeType(key, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 0));
        H.assertSubtype(pair, "$isPair", [H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2)], "$asPair");
        return this.f.call$2(pair.first, pair.last);
      },
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: -1, args: [H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 0), [B.Pair, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2)]]};
      }
    },
    CanonicalizedMap_keys_closure: {
      "^": "Closure;$this",
      call$1: [function(pair) {
        var t1 = this.$this;
        return H.assertSubtype(pair, "$isPair", [H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2)], "$asPair").first;
      }, null, null, 4, 0, null, 26, "call"],
      $signature: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1);
        return {func: 1, ret: t2, args: [[B.Pair, t2, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2)]]};
      }
    },
    CanonicalizedMap_values_closure: {
      "^": "Closure;$this",
      call$1: [function(pair) {
        var t1 = this.$this;
        return H.assertSubtype(pair, "$isPair", [H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2)], "$asPair").last;
      }, null, null, 4, 0, null, 26, "call"],
      $signature: function() {
        var t1, t2;
        t1 = this.$this;
        t2 = H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2);
        return {func: 1, ret: t2, args: [[B.Pair, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), t2]]};
      }
    },
    CanonicalizedMap_toString_closure: {
      "^": "Closure;_box_0,$this,result",
      call$2: function(k, v) {
        var t1 = this.$this;
        H.assertSubtypeOfRuntimeType(k, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1));
        H.assertSubtypeOfRuntimeType(v, H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2));
        t1 = this._box_0;
        if (!t1.first)
          this.result._contents += ", ";
        t1.first = false;
        this.result._contents += H.S(k) + ": " + H.S(v);
      },
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: P.Null, args: [H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 1), H.getRuntimeTypeArgument(t1, "CanonicalizedMap", 2)]};
      }
    },
    _isToStringVisiting_closure: {
      "^": "Closure:20;o",
      call$1: function(e) {
        return this.o === e;
      }
    }
  }], ["", "package:collection/src/equality.dart",, U, {
    "^": "",
    DefaultEquality: {
      "^": "Object;$ti",
      $isEquality: 1
    },
    ListEquality: {
      "^": "Object;_elementEquality,$ti",
      equals$2: function(list1, list2) {
        var t1, $length, t2, i;
        t1 = this.$ti;
        H.assertSubtype(list1, "$isList", t1, "$asList");
        H.assertSubtype(list2, "$isList", t1, "$asList");
        if (list1 == null ? list2 == null : list1 === list2)
          return true;
        if (list1 == null || list2 == null)
          return false;
        t1 = J.getInterceptor$asx(list1);
        $length = t1.get$length(list1);
        t2 = J.getInterceptor$asx(list2);
        if ($length != t2.get$length(list2))
          return false;
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i)
          if (!J.$eq$(t1.$index(list1, i), t2.$index(list2, i)))
            return false;
        return true;
      },
      hash$1: function(_, list) {
        var t1, hash, i, t2, c;
        H.assertSubtype(list, "$isList", this.$ti, "$asList");
        if (list == null)
          return C.JSNull_methods.get$hashCode(null);
        t1 = J.getInterceptor$asx(list);
        hash = 0;
        i = 0;
        while (true) {
          t2 = t1.get$length(list);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          c = J.get$hashCode$(t1.$index(list, i));
          if (typeof c !== "number")
            return H.iae(c);
          hash = hash + c & 2147483647;
          hash = hash + (hash << 10 >>> 0) & 2147483647;
          hash ^= hash >>> 6;
          ++i;
        }
        hash = hash + (hash << 3 >>> 0) & 2147483647;
        hash ^= hash >>> 11;
        return hash + (hash << 15 >>> 0) & 2147483647;
      },
      $isEquality: 1,
      $asEquality: function($E) {
        return [[P.List, $E]];
      }
    },
    _MapEntry: {
      "^": "Object;equality,key>,value",
      get$hashCode: function(_) {
        var t1, t2;
        t1 = J.get$hashCode$(this.key);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t2 = J.get$hashCode$(this.value);
        if (typeof t2 !== "number")
          return H.iae(t2);
        return 3 * t1 + 7 * t2 & 2147483647;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof U._MapEntry && J.$eq$(this.key, other.key) && J.$eq$(this.value, other.value);
      }
    },
    MapEquality: {
      "^": "Object;_keyEquality,_valueEquality,$ti",
      equals$2: function(map1, map2) {
        var t1, equalElementCounts, key, entry, count;
        t1 = this.$ti;
        H.assertSubtype(map1, "$isMap", t1, "$asMap");
        H.assertSubtype(map2, "$isMap", t1, "$asMap");
        if (map1 === map2)
          return true;
        if (map1.get$length(map1) != map2.get$length(map2))
          return false;
        equalElementCounts = P.HashMap_HashMap(null, null, null, U._MapEntry, P.int);
        for (t1 = J.get$iterator$ax(map1.get$keys(map1)); t1.moveNext$0();) {
          key = t1.get$current(t1);
          entry = new U._MapEntry(this, key, map1.$index(0, key));
          count = equalElementCounts.$index(0, entry);
          equalElementCounts.$indexSet(0, entry, (count == null ? 0 : count) + 1);
        }
        for (t1 = J.get$iterator$ax(map2.get$keys(map2)); t1.moveNext$0();) {
          key = t1.get$current(t1);
          entry = new U._MapEntry(this, key, map2.$index(0, key));
          count = equalElementCounts.$index(0, entry);
          if (count == null || count === 0)
            return false;
          if (typeof count !== "number")
            return count.$sub();
          equalElementCounts.$indexSet(0, entry, count - 1);
        }
        return true;
      },
      $isEquality: 1,
      $asEquality: function($K, $V) {
        return [[P.Map, $K, $V]];
      }
    }
  }], ["", "package:collection/src/utils.dart",, B, {
    "^": "",
    Pair: {
      "^": "Object;first,last,$ti"
    }
  }], ["", "package:collection/src/wrappers.dart",, M, {
    "^": "",
    _DelegatingIterableBase: {
      "^": "Object;$ti",
      any$1: function(_, test) {
        var t1 = this._wrappers$_base;
        return (t1 && C.JSArray_methods).any$1(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]}));
      },
      contains$1: function(_, element) {
        var t1 = this._wrappers$_base;
        return (t1 && C.JSArray_methods).contains$1(t1, element);
      },
      elementAt$1: function(_, index) {
        var t1 = this._wrappers$_base;
        return (t1 && C.JSArray_methods).$index(t1, index);
      },
      every$1: function(_, test) {
        var t1 = this._wrappers$_base;
        return (t1 && C.JSArray_methods).every$1(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]}));
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1, t2;
        t1 = H.getTypeArgumentByIndex(this, 0);
        t2 = this._wrappers$_base;
        return (t2 && C.JSArray_methods).firstWhere$2$orElse(t2, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t1]}), H.functionTypeCheck(orElse, {func: 1, ret: t1}));
      },
      forEach$1: function(_, f) {
        var t1 = this._wrappers$_base;
        return (t1 && C.JSArray_methods).forEach$1(t1, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0)]}));
      },
      get$isEmpty: function(_) {
        return this._wrappers$_base.length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._wrappers$_base.length !== 0;
      },
      get$iterator: function(_) {
        var t1 = this._wrappers$_base;
        return new J.ArrayIterator(t1, t1.length, 0, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      join$1: function(_, separator) {
        var t1 = this._wrappers$_base;
        return (t1 && C.JSArray_methods).join$1(t1, separator);
      },
      get$length: function(_) {
        return this._wrappers$_base.length;
      },
      map$1$1: function(_, f, $T) {
        var t1, t2;
        H.functionTypeCheck(f, {func: 1, ret: $T, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._wrappers$_base;
        t1.toString;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new H.MappedListIterable(t1, H.functionTypeCheck(f, {func: 1, ret: $T, args: [t2]}), [t2, $T]);
      },
      skip$1: function(_, n) {
        var t1 = this._wrappers$_base;
        t1.toString;
        return H.SubListIterable$(t1, n, null, H.getTypeArgumentByIndex(t1, 0));
      },
      where$1: function(_, test) {
        var t1, t2;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = this._wrappers$_base;
        t1.toString;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        return new H.WhereIterable(t1, H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [t2]}), [t2]);
      },
      toString$0: function(_) {
        return J.toString$0$(this._wrappers$_base);
      },
      $isIterable: 1
    },
    DelegatingIterable: {
      "^": "_DelegatingIterableBase;_wrappers$_base<,$ti"
    },
    DelegatingList: {
      "^": "DelegatingIterable;$ti",
      $index: function(_, index) {
        var t1;
        H.intTypeCheck(index);
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        return (t1 && C.JSArray_methods).$index(t1, index);
      },
      $indexSet: function(_, index, value) {
        var t1;
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        (t1 && C.JSArray_methods).$indexSet(t1, index, value);
      },
      $add: function(_, other) {
        var t1 = this.$ti;
        H.assertSubtype(other, "$isList", t1, "$asList");
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", t1, "$asList");
        return (t1 && C.JSArray_methods).$add(t1, other);
      },
      add$1: function(_, value) {
        var t1;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        (t1 && C.JSArray_methods).add$1(t1, value);
      },
      indexOf$2: function(_, element, start) {
        var t1;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        return (t1 && C.JSArray_methods).indexOf$2(t1, element, start);
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      indexWhere$2: function(_, test, start) {
        var t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        return (t1 && C.JSArray_methods).indexWhere$2(t1, test, start);
      },
      indexWhere$1: function($receiver, test) {
        return this.indexWhere$2($receiver, test, 0);
      },
      insert$2: function(_, index, element) {
        var t1;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        (t1 && C.JSArray_methods).insert$2(t1, index, element);
      },
      remove$1: function(_, value) {
        var t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        return (t1 && C.JSArray_methods).remove$1(t1, value);
      },
      removeAt$1: function(_, index) {
        var t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        return (t1 && C.JSArray_methods).removeAt$1(t1, index);
      },
      removeWhere$1: function(_, test) {
        var t1;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(this, 0)]});
        t1 = H.assertSubtype(this._wrappers$_base, "$isList", this.$ti, "$asList");
        t1.toString;
        H.functionTypeCheck(test, {func: 1, ret: P.bool, args: [H.getTypeArgumentByIndex(t1, 0)]});
        if (typeof t1 !== "object" || t1 === null || !!t1.fixed$length)
          H.throwExpression(P.UnsupportedError$("removeWhere"));
        (t1 && C.JSArray_methods)._removeWhere$2(t1, test, true);
      },
      $isEfficientLengthIterable: 1,
      $isList: 1
    }
  }], ["", "package:http/http.dart",, G, {
    "^": "",
    get: function(url, headers) {
      return G._withClient(new G.get_closure(url, headers), U.Response);
    },
    _withClient: function(fn, $T) {
      H.functionTypeCheck(fn, {func: 1, ret: [P.Future, $T], args: [U.Client]});
      return G._withClient$body(fn, $T, $T);
    },
    _withClient$body: function(fn, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = P._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], client, t1;
      var $async$_withClient = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              client = new O.BrowserClient(P.LinkedHashSet_LinkedHashSet(null, null, null, W.HttpRequest), false);
              $async$handler = 3;
              $async$goto = 6;
              return P._asyncAwait(fn.call$1(client), $async$_withClient);
            case 6:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              $async$next = [1];
              // goto finally
              $async$goto = 4;
              break;
              $async$next.push(5);
              // goto finally
              $async$goto = 4;
              break;
            case 3:
              // uncaught
              $async$next = [2];
            case 4:
              // finally
              $async$handler = 2;
              J.close$0$z(client);
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 5:
              // after finally
            case 1:
              // return
              return P._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return P._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return P._asyncStartSync($async$_withClient, $async$completer);
    },
    get_closure: {
      "^": "Closure:198;url,headers",
      call$1: function(client) {
        return client._sendUnstreamed$3("GET", this.url, this.headers);
      }
    }
  }], ["", "package:http/src/base_client.dart",, E, {
    "^": "",
    BaseClient: {
      "^": "Object;",
      _sendUnstreamed$5: function(method, url, headers, body, encoding) {
        var t1 = P.String;
        return this._sendUnstreamed$body$BaseClient(method, url, H.assertSubtype(headers, "$isMap", [t1, t1], "$asMap"), body, encoding);
      },
      _sendUnstreamed$3: function(method, url, headers) {
        return this._sendUnstreamed$5(method, url, headers, null, null);
      },
      _sendUnstreamed$body$BaseClient: function(method, url, headers, body, encoding) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(U.Response),
          $async$returnValue, $async$self = this, t1, t2, request, $async$temp1;
        var $async$_sendUnstreamed$5 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1)
            return P._asyncRethrow($async$result, $async$completer);
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                url = P.Uri_parse(url, 0, null);
                t1 = new Uint8Array(0);
                t2 = P.String;
                t2 = P.LinkedHashMap_LinkedHashMap(new G.BaseRequest_closure(), new G.BaseRequest_closure0(), null, t2, t2);
                request = new O.Request(C.Utf8Codec_false, t1, method, url, true, true, 5, t2, false);
                if (headers != null)
                  t2.addAll$1(0, headers);
                if (body != null)
                  request.set$body(0, body);
                $async$temp1 = U;
                $async$goto = 3;
                return P._asyncAwait($async$self.send$1(0, request), $async$_sendUnstreamed$5);
              case 3:
                // returning from await.
                $async$returnValue = $async$temp1.Response_fromStream($async$result);
                // goto return
                $async$goto = 1;
                break;
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
            }
        });
        return P._asyncStartSync($async$_sendUnstreamed$5, $async$completer);
      },
      close$0: function(_) {
      },
      $isClient: 1
    }
  }], ["", "package:http/src/base_request.dart",, G, {
    "^": "",
    BaseRequest: {
      "^": "Object;headers>",
      finalize$0: ["super$BaseRequest$finalize", function() {
        if (this._finalized)
          throw H.wrapException(P.StateError$("Can't finalize a finalized Request."));
        this._finalized = true;
        return;
      }],
      toString$0: function(_) {
        return this.method + " " + H.S(this.url);
      }
    },
    BaseRequest_closure: {
      "^": "Closure:199;",
      call$2: [function(key1, key2) {
        H.stringTypeCheck(key1);
        H.stringTypeCheck(key2);
        return key1.toLowerCase() === key2.toLowerCase();
      }, null, null, 8, 0, null, 89, 68, "call"]
    },
    BaseRequest_closure0: {
      "^": "Closure:200;",
      call$1: [function(key) {
        return C.JSString_methods.get$hashCode(H.stringTypeCheck(key).toLowerCase());
      }, null, null, 4, 0, null, 19, "call"]
    }
  }], ["", "package:http/src/base_response.dart",, T, {
    "^": "",
    BaseResponse: {
      "^": "Object;statusCode>,headers>",
      BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request: function(statusCode, contentLength, headers, isRedirect, persistentConnection, reasonPhrase, request) {
        var t1 = this.statusCode;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < 100)
          throw H.wrapException(P.ArgumentError$("Invalid status code " + t1 + "."));
      }
    }
  }], ["", "package:http/src/browser_client.dart",, O, {
    "^": "",
    BrowserClient: {
      "^": "BaseClient;_xhrs,withCredentials",
      set$withCredentials: function(_, withCredentials) {
        this.withCredentials = H.boolTypeCheck(withCredentials);
      },
      send$1: function(_, request) {
        var $async$goto = 0,
          $async$completer = P._makeAsyncAwaitCompleter(X.StreamedResponse),
          $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, xhr, completer, t1, bytes, t2, t3;
        var $async$send$1 = P._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                request.super$BaseRequest$finalize();
                t1 = [P.List, P.int];
                $async$goto = 3;
                return P._asyncAwait(new Z.ByteStream(P.Stream_Stream$fromIterable(H.setRuntimeTypeInfo([request._bodyBytes], [t1]), t1)).toBytes$0(), $async$send$1);
              case 3:
                // returning from await.
                bytes = $async$result;
                xhr = new XMLHttpRequest();
                t1 = $async$self._xhrs;
                t1.add$1(0, xhr);
                t2 = J.toString$0$(request.url);
                t3 = H.interceptedTypeCheck(xhr, "$isHttpRequest");
                (t3 && C.HttpRequest_methods).open$5$async$password$user(t3, request.method, t2, true, null, null);
                J.set$responseType$x(xhr, "blob");
                J.set$withCredentials$x(xhr, false);
                request.headers.forEach$1(0, J.get$setRequestHeader$x(xhr));
                t2 = X.StreamedResponse;
                completer = new P._AsyncCompleter(new P._Future(0, $.Zone__current, [t2]), [t2]);
                t2 = [W.ProgressEvent];
                t3 = new W._EventStream(H.interceptedTypeCheck(xhr, "$isEventTarget"), "load", false, t2);
                t3.get$first(t3).then$1$1(new O.BrowserClient_send_closure(xhr, completer, request), null);
                t2 = new W._EventStream(H.interceptedTypeCheck(xhr, "$isEventTarget"), "error", false, t2);
                t2.get$first(t2).then$1$1(new O.BrowserClient_send_closure0(completer, request), null);
                J.send$1$x(xhr, bytes);
                $async$handler = 4;
                $async$goto = 7;
                return P._asyncAwait(completer.get$future(), $async$send$1);
              case 7:
                // returning from await.
                t2 = $async$result;
                $async$returnValue = t2;
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
                $async$next.push(6);
                // goto finally
                $async$goto = 5;
                break;
              case 4:
                // uncaught
                $async$next = [2];
              case 5:
                // finally
                $async$handler = 2;
                t1.remove$1(0, xhr);
                // goto the next finally handler
                $async$goto = $async$next.pop();
                break;
              case 6:
                // after finally
              case 1:
                // return
                return P._asyncReturn($async$returnValue, $async$completer);
              case 2:
                // rethrow
                return P._asyncRethrow($async$currentError, $async$completer);
            }
        });
        return P._asyncStartSync($async$send$1, $async$completer);
      },
      close$0: function(_) {
        var t1;
        for (t1 = this._xhrs, t1 = P._LinkedHashSetIterator$(t1, t1._collection$_modifications, H.getTypeArgumentByIndex(t1, 0)); t1.moveNext$0();)
          t1._collection$_current.abort();
      }
    },
    BrowserClient_send_closure: {
      "^": "Closure:37;xhr,completer,request",
      call$1: [function(_) {
        var t1, blob, reader, t2, t3, t4, t5;
        H.interceptedTypeCheck(_, "$isProgressEvent");
        t1 = this.xhr;
        blob = W._convertNativeToDart_XHR_Response(t1.response) == null ? W.Blob_Blob([], null, null) : W._convertNativeToDart_XHR_Response(t1.response);
        reader = new FileReader();
        t2 = [W.ProgressEvent];
        t3 = new W._EventStream(reader, "load", false, t2);
        t4 = this.completer;
        t5 = this.request;
        t3.get$first(t3).then$1$1(new O.BrowserClient_send__closure(reader, t4, t1, t5), null);
        t2 = new W._EventStream(reader, "error", false, t2);
        t2.get$first(t2).then$1$1(new O.BrowserClient_send__closure0(t4, t5), null);
        C.FileReader_methods.readAsArrayBuffer$1(reader, H.interceptedTypeCheck(blob, "$isBlob"));
      }, null, null, 4, 0, null, 0, "call"]
    },
    BrowserClient_send__closure: {
      "^": "Closure:37;reader,completer,xhr,request",
      call$1: [function(_) {
        var body, t1, t2, t3, t4, t5, t6;
        H.interceptedTypeCheck(_, "$isProgressEvent");
        body = H.interceptedTypeCast(C.FileReader_methods.get$result(this.reader), "$isUint8List");
        t1 = [P.List, P.int];
        t1 = P.Stream_Stream$fromIterable(H.setRuntimeTypeInfo([body], [t1]), t1);
        t2 = this.xhr;
        t3 = t2.status;
        t4 = body.length;
        t5 = this.request;
        t6 = C.HttpRequest_methods.get$responseHeaders(t2);
        t2 = t2.statusText;
        t1 = new X.StreamedResponse(B.toByteStream(new Z.ByteStream(t1)), t5, t3, t2, t4, t6, false, true);
        t1.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(t3, t4, t6, false, true, t2, t5);
        this.completer.complete$1(0, t1);
      }, null, null, 4, 0, null, 0, "call"]
    },
    BrowserClient_send__closure0: {
      "^": "Closure:37;completer,request",
      call$1: [function(error) {
        this.completer.completeError$2(new E.ClientException(J.toString$0$(H.interceptedTypeCheck(error, "$isProgressEvent")), this.request.url), P.StackTrace_current());
      }, null, null, 4, 0, null, 2, "call"]
    },
    BrowserClient_send_closure0: {
      "^": "Closure:37;completer,request",
      call$1: [function(_) {
        H.interceptedTypeCheck(_, "$isProgressEvent");
        this.completer.completeError$2(new E.ClientException("XMLHttpRequest error.", this.request.url), P.StackTrace_current());
      }, null, null, 4, 0, null, 0, "call"]
    }
  }], ["", "package:http/src/byte_stream.dart",, Z, {
    "^": "",
    ByteStream: {
      "^": "StreamView;_stream",
      toBytes$0: function() {
        var t1, t2, completer, sink;
        t1 = P.Uint8List;
        t2 = new P._Future(0, $.Zone__current, [t1]);
        completer = new P._AsyncCompleter(t2, [t1]);
        sink = new P._ByteCallbackSink(new Z.ByteStream_toBytes_closure(completer), new Uint8Array(1024), 0);
        this.listen$4$cancelOnError$onDone$onError(sink.get$add(sink), true, sink.get$close(sink), completer.get$completeError());
        return t2;
      },
      $asStream: function() {
        return [[P.List, P.int]];
      },
      $asStreamView: function() {
        return [[P.List, P.int]];
      }
    },
    ByteStream_toBytes_closure: {
      "^": "Closure:202;completer",
      call$1: function(bytes) {
        return this.completer.complete$1(0, new Uint8Array(H._ensureNativeList(H.assertSubtype(bytes, "$isList", [P.int], "$asList"))));
      }
    }
  }], ["", "package:http/src/client.dart",, U, {
    "^": "",
    Client: {
      "^": "Object;"
    }
  }], ["", "package:http/src/exception.dart",, E, {
    "^": "",
    ClientException: {
      "^": "Object;message>,uri",
      toString$0: function(_) {
        return this.message;
      }
    }
  }], ["", "package:http/src/request.dart",, O, {
    "^": "",
    Request: {
      "^": "BaseRequest;_defaultEncoding,_bodyBytes,method,url,0_contentLength,_persistentConnection,_followRedirects,_maxRedirects,headers,_finalized",
      get$encoding: function(_) {
        if (this.get$_contentType() == null || !J.containsKey$1$x(this.get$_contentType().parameters._collection$_map, "charset"))
          return this._defaultEncoding;
        return B.requiredEncodingForCharset(J.$index$asx(this.get$_contentType().parameters._collection$_map, "charset"));
      },
      get$bodyBytes: function() {
        return this._bodyBytes;
      },
      set$body: function(_, value) {
        var t1, contentType, t2;
        t1 = H.assertSubtype(this.get$encoding(this).encode$1(value), "$isList", [P.int], "$asList");
        this._checkFinalized$0();
        this._bodyBytes = B.toUint8List(t1);
        contentType = this.get$_contentType();
        if (contentType == null) {
          t1 = this.get$encoding(this);
          t2 = P.String;
          this.headers.$indexSet(0, "content-type", R.MediaType$("text", "plain", P.LinkedHashMap_LinkedHashMap$_literal(["charset", t1.get$name(t1)], t2, t2)).toString$0(0));
        } else if (!J.containsKey$1$x(contentType.parameters._collection$_map, "charset")) {
          t1 = this.get$encoding(this);
          t2 = P.String;
          this.headers.$indexSet(0, "content-type", contentType.change$1$parameters(P.LinkedHashMap_LinkedHashMap$_literal(["charset", t1.get$name(t1)], t2, t2)).toString$0(0));
        }
      },
      get$_contentType: function() {
        var contentType = this.headers.$index(0, "content-type");
        if (contentType == null)
          return;
        return R.MediaType_MediaType$parse(contentType);
      },
      _checkFinalized$0: function() {
        if (!this._finalized)
          return;
        throw H.wrapException(P.StateError$("Can't modify a finalized Request."));
      }
    }
  }], ["", "package:http/src/response.dart",, U, {
    "^": "",
    _contentTypeForHeaders: function(headers) {
      var t1, contentType;
      t1 = P.String;
      contentType = H.assertSubtype(headers, "$isMap", [t1, t1], "$asMap").$index(0, "content-type");
      if (contentType != null)
        return R.MediaType_MediaType$parse(contentType);
      return R.MediaType$("application", "octet-stream", null);
    },
    Response: {
      "^": "BaseResponse;bodyBytes<,request,statusCode,reasonPhrase,contentLength,headers,isRedirect,persistentConnection",
      static: {
        Response_fromStream: function(response) {
          H.interceptedTypeCheck(response, "$isStreamedResponse");
          return response.stream.toBytes$0().then$1$1(new U.Response_fromStream_closure(response), U.Response);
        }
      }
    },
    Response_fromStream_closure: {
      "^": "Closure:203;response",
      call$1: [function(body) {
        var t1, t2, t3, t4, t5, t6;
        H.interceptedTypeCheck(body, "$isUint8List");
        t1 = this.response;
        t2 = t1.statusCode;
        t3 = t1.request;
        t4 = t1.headers;
        t1 = t1.reasonPhrase;
        t5 = B.toUint8List(body);
        t6 = body.length;
        t5 = new U.Response(t5, t3, t2, t1, t6, t4, false, true);
        t5.BaseResponse$7$contentLength$headers$isRedirect$persistentConnection$reasonPhrase$request(t2, t6, t4, false, true, t1, t3);
        return t5;
      }, null, null, 4, 0, null, 60, "call"]
    }
  }], ["", "package:http/src/streamed_response.dart",, X, {
    "^": "",
    StreamedResponse: {
      "^": "BaseResponse;stream,request,statusCode,reasonPhrase,contentLength,headers,isRedirect,persistentConnection"
    }
  }], ["", "package:http/src/utils.dart",, B, {
    "^": "",
    encodingForCharset: function(charset, fallback) {
      var encoding;
      H.stringTypeCheck(charset);
      if (charset == null)
        return fallback;
      encoding = P.Encoding_getByName(charset);
      return encoding == null ? fallback : encoding;
    },
    requiredEncodingForCharset: function(charset) {
      var encoding;
      H.stringTypeCheck(charset);
      encoding = P.Encoding_getByName(charset);
      if (encoding != null)
        return encoding;
      throw H.wrapException(P.FormatException$('Unsupported encoding "' + H.S(charset) + '".', null, null));
    },
    toUint8List: function(input) {
      var t1;
      H.assertSubtype(input, "$isList", [P.int], "$asList");
      t1 = J.getInterceptor$(input);
      if (!!t1.$isUint8List)
        return input;
      if (!!t1.$isTypedData) {
        t1 = input.buffer;
        t1.toString;
        return H.NativeUint8List_NativeUint8List$view(t1, 0, null);
      }
      return new Uint8Array(H._ensureNativeList(input));
    },
    toByteStream: function(stream) {
      H.assertSubtype(stream, "$isStream", [[P.List, P.int]], "$asStream");
      return stream;
    }
  }], ["", "package:http_parser/src/case_insensitive_map.dart",, Z, {
    "^": "",
    CaseInsensitiveMap: {
      "^": "CanonicalizedMap;_canonicalize,_isValidKeyFn,_base,$ti",
      $asMap: function($V) {
        return [P.String, $V];
      },
      $asCanonicalizedMap: function($V) {
        return [P.String, P.String, $V];
      },
      static: {
        CaseInsensitiveMap$from: function(other, $V) {
          var t1 = P.String;
          t1 = new Z.CaseInsensitiveMap(new Z.CaseInsensitiveMap$from_closure(), new Z.CaseInsensitiveMap$from_closure0(), new H.JsLinkedHashMap(0, 0, [t1, [B.Pair, t1, $V]]), [$V]);
          t1.addAll$1(0, other);
          return t1;
        }
      }
    },
    CaseInsensitiveMap$from_closure: {
      "^": "Closure:10;",
      call$1: [function(key) {
        return H.stringTypeCheck(key).toLowerCase();
      }, null, null, 4, 0, null, 19, "call"]
    },
    CaseInsensitiveMap$from_closure0: {
      "^": "Closure:204;",
      call$1: function(key) {
        return key != null;
      }
    }
  }], ["", "package:http_parser/src/media_type.dart",, R, {
    "^": "",
    MediaType: {
      "^": "Object;type,subtype,parameters>",
      change$5$clearParameters$mimeType$parameters$subtype$type: function(clearParameters, mimeType, parameters, subtype, type) {
        var t1, parameters0;
        t1 = P.String;
        H.assertSubtype(parameters, "$isMap", [t1, t1], "$asMap");
        parameters0 = P.LinkedHashMap_LinkedHashMap$from(this.parameters, t1, t1);
        parameters0.addAll$1(0, parameters);
        return R.MediaType$(this.type, this.subtype, parameters0);
      },
      change$1$parameters: function(parameters) {
        return this.change$5$clearParameters$mimeType$parameters$subtype$type(false, null, parameters, null, null);
      },
      toString$0: function(_) {
        var buffer, t1;
        buffer = new P.StringBuffer("");
        t1 = this.type;
        buffer._contents = t1;
        t1 += "/";
        buffer._contents = t1;
        buffer._contents = t1 + this.subtype;
        t1 = this.parameters;
        J.forEach$1$ax(t1._collection$_map, H.functionTypeCheck(new R.MediaType_toString_closure(buffer), {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]}));
        t1 = buffer._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      static: {
        MediaType_MediaType$parse: function(mediaType) {
          return B.wrapFormatException("media type", mediaType, new R.MediaType_MediaType$parse_closure(mediaType), R.MediaType);
        },
        MediaType$: function(type, subtype, parameters) {
          var t1, t2, t3, t4;
          t1 = type.toLowerCase();
          t2 = subtype.toLowerCase();
          t3 = P.String;
          t4 = parameters == null ? P.LinkedHashMap_LinkedHashMap$_empty(t3, t3) : Z.CaseInsensitiveMap$from(parameters, t3);
          return new R.MediaType(t1, t2, new P.UnmodifiableMapView(t4, [t3, t3]));
        }
      }
    },
    MediaType_MediaType$parse_closure: {
      "^": "Closure:205;mediaType",
      call$0: function() {
        var t1, scanner, t2, t3, type, subtype, t4, parameters, t5, success, attribute, value;
        t1 = this.mediaType;
        scanner = new X.StringScanner(null, t1, 0);
        t2 = $.$get$whitespace();
        scanner.scan$1(t2);
        t3 = $.$get$token();
        scanner.expect$1(t3);
        type = scanner.get$lastMatch().$index(0, 0);
        scanner.expect$1("/");
        scanner.expect$1(t3);
        subtype = scanner.get$lastMatch().$index(0, 0);
        scanner.scan$1(t2);
        t4 = P.String;
        parameters = P.LinkedHashMap_LinkedHashMap$_empty(t4, t4);
        while (true) {
          t4 = C.JSString_methods.matchAsPrefix$2(";", t1, scanner._string_scanner$_position);
          scanner._lastMatch = t4;
          t5 = scanner._string_scanner$_position;
          scanner._lastMatchPosition = t5;
          success = t4 != null;
          if (success) {
            t4 = t4.get$end(t4);
            scanner._string_scanner$_position = t4;
            scanner._lastMatchPosition = t4;
          } else
            t4 = t5;
          if (!success)
            break;
          t4 = t2.matchAsPrefix$2(0, t1, t4);
          scanner._lastMatch = t4;
          scanner._lastMatchPosition = scanner._string_scanner$_position;
          if (t4 != null) {
            t4 = t4.get$end(t4);
            scanner._string_scanner$_position = t4;
            scanner._lastMatchPosition = t4;
          }
          scanner.expect$1(t3);
          if (scanner._string_scanner$_position !== scanner._lastMatchPosition)
            scanner._lastMatch = null;
          attribute = scanner._lastMatch.$index(0, 0);
          scanner.expect$1("=");
          t4 = t3.matchAsPrefix$2(0, t1, scanner._string_scanner$_position);
          scanner._lastMatch = t4;
          t5 = scanner._string_scanner$_position;
          scanner._lastMatchPosition = t5;
          success = t4 != null;
          if (success) {
            t4 = t4.get$end(t4);
            scanner._string_scanner$_position = t4;
            scanner._lastMatchPosition = t4;
            t5 = t4;
          } else
            t4 = t5;
          if (success) {
            if (t4 !== t5)
              scanner._lastMatch = null;
            value = scanner._lastMatch.$index(0, 0);
          } else
            value = N.expectQuotedString(scanner, null);
          t4 = t2.matchAsPrefix$2(0, t1, scanner._string_scanner$_position);
          scanner._lastMatch = t4;
          scanner._lastMatchPosition = scanner._string_scanner$_position;
          if (t4 != null) {
            t4 = t4.get$end(t4);
            scanner._string_scanner$_position = t4;
            scanner._lastMatchPosition = t4;
          }
          parameters.$indexSet(0, attribute, value);
        }
        scanner.expectDone$0();
        return R.MediaType$(type, subtype, parameters);
      }
    },
    MediaType_toString_closure: {
      "^": "Closure:206;buffer",
      call$2: function(attribute, value) {
        var t1, t2;
        H.stringTypeCheck(attribute);
        H.stringTypeCheck(value);
        t1 = this.buffer;
        t1._contents += "; " + H.S(attribute) + "=";
        t2 = $.$get$nonToken()._nativeRegExp;
        if (typeof value !== "string")
          H.throwExpression(H.argumentErrorValue(value));
        if (t2.test(value)) {
          t1._contents += '"';
          t2 = $.$get$_escapedChar();
          value.toString;
          t2 = t1._contents += H.stringReplaceAllFuncUnchecked(value, t2, H.functionTypeCheck(new R.MediaType_toString__closure(), {func: 1, ret: P.String, args: [P.Match]}), null);
          t1._contents = t2 + '"';
        } else
          t1._contents += H.S(value);
      }
    },
    MediaType_toString__closure: {
      "^": "Closure:36;",
      call$1: function(match) {
        return C.JSString_methods.$add("\\", match.$index(0, 0));
      }
    }
  }], ["", "package:http_parser/src/scan.dart",, N, {
    "^": "",
    expectQuotedString: function(scanner, $name) {
      var string;
      scanner.expect$2$name($.$get$_quotedString(), "quoted string");
      string = scanner.get$lastMatch().$index(0, 0);
      return H.stringReplaceAllFuncUnchecked(J.substring$2$s(string, 1, string.length - 1), $.$get$_quotedPair(), H.functionTypeCheck(new N.expectQuotedString_closure(), {func: 1, ret: P.String, args: [P.Match]}), null);
    },
    expectQuotedString_closure: {
      "^": "Closure:36;",
      call$1: function(match) {
        return match.$index(0, 1);
      }
    }
  }], ["", "package:http_parser/src/utils.dart",, B, {
    "^": "",
    wrapFormatException: function($name, value, body, $T) {
      var error, error0, t1, exception, t2;
      H.functionTypeCheck(body, {func: 1, ret: $T});
      try {
        t1 = body.call$0();
        return t1;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        t2 = J.getInterceptor$(t1);
        if (!!t2.$isSourceSpanFormatException) {
          error = t1;
          throw H.wrapException(G.SourceSpanFormatException$("Invalid " + $name + ": " + error.get$_span_exception$_message(), error.get$_span(), J.get$source$z(error)));
        } else if (!!t2.$isFormatException) {
          error0 = t1;
          throw H.wrapException(P.FormatException$("Invalid " + $name + ' "' + value + '": ' + H.S(J.get$message$z(error0)), J.get$source$z(error0), J.get$offset$x(error0)));
        } else
          throw exception;
      }
    }
  }], ["intl", "package:intl/intl.dart",, T, {
    "^": "",
    Intl_defaultLocale: function() {
      var zoneLocale = $.Zone__current.$index(0, C.Symbol_89P);
      return H.stringTypeCheck(zoneLocale == null ? $.Intl__defaultLocale : zoneLocale);
    },
    Intl_message: function(message_str, args, desc, examples, locale, meaning, $name, skip) {
      H.assertSubtype(examples, "$isMap", [P.String, null], "$asMap");
      $.$get$messageLookup().toString;
      return message_str;
    },
    Intl_verifiedLocale: function(newLocale, localeExists, onFailure) {
      var t1, _i, each;
      if (newLocale == null) {
        if (T.Intl_defaultLocale() == null)
          $.Intl__defaultLocale = $.Intl_systemLocale;
        return T.Intl_verifiedLocale(T.Intl_defaultLocale(), localeExists, onFailure);
      }
      if (H.boolTypeCheck(localeExists.call$1(newLocale)))
        return newLocale;
      for (t1 = [T.Intl_canonicalizedLocale(newLocale), T.Intl_shortLocale(newLocale), "fallback"], _i = 0; _i < 3; ++_i) {
        each = t1[_i];
        if (H.boolTypeCheck(localeExists.call$1(each)))
          return each;
      }
      return H.stringTypeCheck(onFailure.call$1(newLocale));
    },
    Intl__throwLocaleError: [function(localeName) {
      throw H.wrapException(P.ArgumentError$("Invalid locale '" + localeName + "'"));
    }, "call$1", "intl_Intl__throwLocaleError$closure", 4, 0, 10],
    Intl_shortLocale: function(aLocale) {
      if (aLocale.length < 2)
        return aLocale;
      return C.JSString_methods.substring$2(aLocale, 0, 2).toLowerCase();
    },
    Intl_canonicalizedLocale: function(aLocale) {
      var t1, region;
      if (aLocale === "C")
        return "en_ISO";
      if (aLocale.length < 5)
        return aLocale;
      t1 = aLocale[2];
      if (t1 !== "-" && t1 !== "_")
        return aLocale;
      region = C.JSString_methods.substring$1(aLocale, 3);
      if (region.length <= 3)
        region = region.toUpperCase();
      return aLocale[0] + aLocale[1] + "_" + region;
    },
    _Stream: {
      "^": "Object;contents,index>",
      read$1: function(_, howMany) {
        var result = this.peek$1(howMany);
        this.index += howMany;
        return result;
      },
      startsWith$1: function(_, pattern) {
        var t1 = this.contents;
        if (typeof t1 === "string")
          return C.JSString_methods.startsWith$2(t1, pattern, this.index);
        return pattern === this.peek$1(pattern.length);
      },
      peek$1: function(howMany) {
        var t1, t2, t3;
        t1 = this.contents;
        t2 = this.index;
        t3 = t2 + howMany;
        return typeof t1 === "string" ? C.JSString_methods.substring$2(t1, t2, Math.min(t3, t1.length)) : J.sublist$2$ax(t1, t2, t3);
      },
      peek$0: function() {
        return this.peek$1(1);
      }
    },
    NumberFormat: {
      "^": "Object;_negativePrefix,_positivePrefix,_negativeSuffix,_positiveSuffix,_groupingSize,_finalGroupingSize,_groupingSizeSetExplicitly,_decimalSeparatorAlwaysShown,_useSignForPositiveExponent,_useExponentialNotation,_isForCurrency,maximumIntegerDigits,minimumIntegerDigits,maximumFractionDigits,minimumFractionDigits,minimumExponentDigits,_significantDigits,significantDigitsInUse,_internalMultiplier,_multiplierDigits,0_intl$_pattern,_locale,0_symbols,0currencyName,0_currencySymbol,0_decimalDigits,_intl$_buffer,_localeZero,_zeroOffset",
      set$_multiplier: function(x) {
        var t1, t2;
        this._internalMultiplier = x;
        t1 = Math.log(x);
        t2 = $.$get$NumberFormat__ln10();
        if (typeof t2 !== "number")
          return H.iae(t2);
        this._multiplierDigits = C.JSDouble_methods.round$0(t1 / t2);
      },
      format$1: function(number) {
        var t1, t2, t3;
        t1 = typeof number === "number";
        if (t1 && isNaN(number))
          return this._symbols.NAN;
        if (t1)
          t1 = number == 1 / 0 || number == -1 / 0;
        else
          t1 = false;
        if (t1) {
          t1 = J.get$isNegative$n(number) ? this._negativePrefix : this._positivePrefix;
          return t1 + this._symbols.INFINITY;
        }
        t1 = J.getInterceptor$in(number);
        t2 = t1.get$isNegative(number) ? this._negativePrefix : this._positivePrefix;
        t3 = this._intl$_buffer;
        t3._contents += t2;
        t2 = t1.abs$0(number);
        if (this._useExponentialNotation)
          this._formatExponential$1(H.numTypeCheck(t2));
        else
          this._formatFixed$1(t2);
        t2 = t3._contents += t1.get$isNegative(number) ? this._negativeSuffix : this._positiveSuffix;
        t3._contents = "";
        return t2.charCodeAt(0) == 0 ? t2 : t2;
      },
      _formatExponential$1: function(number) {
        var t1, t2, exponent, mantissa;
        if (number === 0) {
          this._formatFixed$1(number);
          this._formatExponent$1(0);
          return;
        }
        t1 = Math.log(number);
        t2 = $.$get$NumberFormat__ln10();
        if (typeof t2 !== "number")
          return H.iae(t2);
        exponent = C.JSDouble_methods.floor$0(t1 / t2);
        mantissa = number / Math.pow(10, exponent);
        t1 = this.maximumIntegerDigits;
        if (t1 > 1 && t1 > this.minimumIntegerDigits)
          for (; C.JSInt_methods.$mod(exponent, t1) !== 0;) {
            mantissa *= 10;
            --exponent;
          }
        else {
          t1 = this.minimumIntegerDigits;
          if (t1 < 1) {
            ++exponent;
            mantissa /= 10;
          } else {
            --t1;
            exponent -= t1;
            mantissa *= Math.pow(10, t1);
          }
        }
        this._formatFixed$1(mantissa);
        this._formatExponent$1(exponent);
      },
      _formatExponent$1: function(exponent) {
        var t1, t2, t3;
        t1 = this._symbols;
        t2 = this._intl$_buffer;
        t3 = t2._contents += t1.EXP_SYMBOL;
        if (exponent < 0) {
          exponent = -exponent;
          t2._contents = t3 + t1.MINUS_SIGN;
        } else if (this._useSignForPositiveExponent)
          t2._contents = t3 + t1.PLUS_SIGN;
        t1 = this.minimumExponentDigits;
        t3 = C.JSInt_methods.toString$0(exponent);
        if (this._zeroOffset === 0)
          t2._contents += C.JSString_methods.padLeft$2(t3, t1, "0");
        else
          this._slowPad$2(t1, t3);
      },
      _floor$1: function(number) {
        var t1 = J.getInterceptor$in(number);
        if (t1.get$isNegative(number) && !J.get$isNegative$n(t1.abs$0(number)))
          throw H.wrapException(P.ArgumentError$("Internal error: expected positive number, got " + H.S(number)));
        return typeof number === "number" ? t1.floor$0(number) : t1.$tdiv(number, 1);
      },
      _round$1: function(number) {
        var t1, fraction;
        if (typeof number === "number")
          if (number == 1 / 0 || number == -1 / 0)
            return $.$get$NumberFormat__maxInt();
          else
            return C.JSNumber_methods.round$0(number);
        else {
          t1 = J.getInterceptor$n(number);
          if (t1.remainder$1(number, 1) === 0)
            return number;
          else {
            fraction = C.JSNumber_methods.round$0(J.toDouble$0$n(t1.$sub(number, this._floor$1(number))));
            return fraction === 0 ? number : t1.$add(number, fraction);
          }
        }
      },
      _formatFixed$1: function(number) {
        var fractionDigits, t1, t2, integerPart, fractionPart, extraIntegerDigits, power, fraction, digitMultiplier, remainingDigits, howManyDigitsTooBig, divisor, paddingDigits, extra, intDigits, integerDigits, digitLength, fractionPresent, i;
        fractionDigits = this.maximumFractionDigits;
        if (typeof number === "number")
          t1 = number == 1 / 0 || number == -1 / 0;
        else
          t1 = false;
        t2 = J.getInterceptor$n(number);
        if (t1) {
          integerPart = t2.toInt$0(number);
          fractionPart = 0;
          extraIntegerDigits = 0;
          power = 0;
        } else {
          integerPart = this._floor$1(number);
          fraction = t2.$sub(number, integerPart);
          if (J.toInt$0$n(fraction) !== 0) {
            integerPart = number;
            fraction = 0;
          }
          H.checkNum(fractionDigits);
          power = H.intTypeCheck(Math.pow(10, fractionDigits));
          digitMultiplier = power * this._internalMultiplier;
          remainingDigits = J.toInt$0$n(this._round$1(J.$mul$ns(fraction, digitMultiplier)));
          if (remainingDigits >= digitMultiplier) {
            integerPart = J.$add$ansx(integerPart, 1);
            remainingDigits -= digitMultiplier;
          }
          extraIntegerDigits = C.JSInt_methods.$tdiv(remainingDigits, power);
          fractionPart = C.JSInt_methods.$mod(remainingDigits, power);
        }
        if (typeof integerPart === "number" && integerPart > $.$get$NumberFormat__maxInt()) {
          H.numTypeCheck(integerPart);
          t1 = Math.log(integerPart);
          t2 = $.$get$NumberFormat__ln10();
          if (typeof t2 !== "number")
            return H.iae(t2);
          t2 = C.JSDouble_methods.ceil$0(t1 / t2);
          t1 = $.$get$NumberFormat__maxDigits();
          if (typeof t1 !== "number")
            return H.iae(t1);
          howManyDigitsTooBig = t2 - t1;
          divisor = C.JSNumber_methods.round$0(Math.pow(10, howManyDigitsTooBig));
          if (divisor === 0)
            divisor = Math.pow(10, howManyDigitsTooBig);
          paddingDigits = C.JSString_methods.$mul("0", C.JSInt_methods.toInt$0(howManyDigitsTooBig));
          integerPart = C.JSDouble_methods.toInt$0(integerPart / divisor);
        } else
          paddingDigits = "";
        extra = extraIntegerDigits === 0 ? "" : C.JSInt_methods.toString$0(extraIntegerDigits);
        intDigits = this._mainIntegerDigits$1(integerPart);
        integerDigits = intDigits + (intDigits.length === 0 ? extra : C.JSString_methods.padLeft$2(extra, this._multiplierDigits, "0")) + paddingDigits;
        digitLength = integerDigits.length;
        if (typeof fractionDigits !== "number")
          return fractionDigits.$gt();
        if (fractionDigits > 0) {
          t1 = this.minimumFractionDigits;
          if (typeof t1 !== "number")
            return t1.$gt();
          fractionPresent = t1 > 0 || fractionPart > 0;
        } else
          fractionPresent = false;
        if (digitLength !== 0 || this.minimumIntegerDigits > 0) {
          integerDigits = C.JSString_methods.$mul("0", this.minimumIntegerDigits - digitLength) + integerDigits;
          digitLength = integerDigits.length;
          for (t1 = this._intl$_buffer, i = 0; i < digitLength; ++i) {
            t1._contents += H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(integerDigits, i) + this._zeroOffset);
            this._group$2(digitLength, i);
          }
        } else if (!fractionPresent)
          this._intl$_buffer._contents += this._symbols.ZERO_DIGIT;
        if (this._decimalSeparatorAlwaysShown || fractionPresent)
          this._intl$_buffer._contents += this._symbols.DECIMAL_SEP;
        this._formatFractionPart$1(C.JSInt_methods.toString$0(fractionPart + power));
      },
      _mainIntegerDigits$1: function(integer) {
        var t1, digits;
        t1 = J.getInterceptor$(integer);
        if (t1.$eq(integer, 0))
          return "";
        digits = t1.toString$0(integer);
        return C.JSString_methods.startsWith$1(digits, "-") ? C.JSString_methods.substring$1(digits, 1) : digits;
      },
      _formatFractionPart$1: function(fractionPart) {
        var fractionLength, t1, fractionLength0, t2, i;
        fractionLength = fractionPart.length;
        t1 = this.minimumFractionDigits;
        while (true) {
          fractionLength0 = fractionLength - 1;
          if (C.JSString_methods.codeUnitAt$1(fractionPart, fractionLength0) === 48) {
            if (typeof t1 !== "number")
              return t1.$add();
            t2 = fractionLength > t1 + 1;
          } else
            t2 = false;
          if (!t2)
            break;
          fractionLength = fractionLength0;
        }
        for (t1 = this._intl$_buffer, i = 1; i < fractionLength; ++i)
          t1._contents += H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(fractionPart, i) + this._zeroOffset);
      },
      _slowPad$2: function(numberOfDigits, basic) {
        var t1, t2, t3, i;
        for (t1 = basic.length, t2 = numberOfDigits - t1, t3 = this._intl$_buffer, i = 0; i < t2; ++i)
          t3._contents += this._symbols.ZERO_DIGIT;
        for (i = 0; i < t1; ++i)
          t3._contents += H.Primitives_stringFromCharCode(C.JSString_methods._codeUnitAt$1(basic, i) + this._zeroOffset);
      },
      _group$2: function(totalLength, position) {
        var distanceFromEnd, t1;
        distanceFromEnd = totalLength - position;
        if (distanceFromEnd <= 1 || this._groupingSize <= 0)
          return;
        t1 = this._finalGroupingSize;
        if (distanceFromEnd === t1 + 1)
          this._intl$_buffer._contents += this._symbols.GROUP_SEP;
        else if (distanceFromEnd > t1 && C.JSInt_methods.$mod(distanceFromEnd - t1, this._groupingSize) === 1)
          this._intl$_buffer._contents += this._symbols.GROUP_SEP;
      },
      _setPattern$1: function(newPattern) {
        var t1, t2, t3;
        H.stringTypeCheck(newPattern);
        if (newPattern == null)
          return;
        this._intl$_pattern = H.stringReplaceAllUnchecked(newPattern, " ", "\xa0");
        t1 = this._currencySymbol;
        if (t1 == null)
          t1 = this.currencyName;
        t2 = this._decimalDigits;
        t3 = new T._StringIterator(newPattern, 0);
        t3.moveNext$0();
        new T._NumberFormatParser(this, t3, t1, t2, false, -1, 0, 0, 0, -1).parse$0(0);
        t1 = this._decimalDigits;
        t2 = t1 == null;
        if (!t2 || false) {
          if (t2) {
            t1 = $.$get$currencyFractionDigits();
            t2 = t1.$index(0, this.currencyName.toUpperCase());
            t1 = t2 == null ? t1.$index(0, "DEFAULT") : t2;
            this._decimalDigits = t1;
          }
          this.minimumFractionDigits = t1;
          this.maximumFractionDigits = t1;
        }
      },
      toString$0: function(_) {
        return "NumberFormat(" + H.S(this._locale) + ", " + H.S(this._intl$_pattern) + ")";
      },
      static: {
        NumberFormat$decimalPattern: function(locale) {
          var t1, t2, t3;
          t1 = T.Intl_verifiedLocale(locale, T.intl_NumberFormat_localeExists$closure(), T.intl_Intl__throwLocaleError$closure());
          t2 = new T.NumberFormat("-", "", "", "", 3, 3, false, false, false, false, false, 40, 1, 3, 0, 0, 0, false, 1, 0, t1, new P.StringBuffer(""), 0, 0);
          t1 = $.$get$numberFormatSymbols().$index(0, t1);
          t2._symbols = t1;
          t3 = C.JSString_methods._codeUnitAt$1(t1.ZERO_DIGIT, 0);
          t2._localeZero = t3;
          t2._zeroOffset = t3 - 48;
          t2._negativePrefix = t1.MINUS_SIGN;
          t3 = t1.DEF_CURRENCY_CODE;
          t2.currencyName = t3;
          t2._setPattern$1(new T.NumberFormat$decimalPattern_closure().call$1(t1));
          return t2;
        },
        NumberFormat_localeExists: [function(localeName) {
          if (localeName == null)
            return false;
          return $.$get$numberFormatSymbols().containsKey$1(0, localeName);
        }, "call$1", "intl_NumberFormat_localeExists$closure", 4, 0, 20]
      }
    },
    NumberFormat$decimalPattern_closure: {
      "^": "Closure:207;",
      call$1: function(x) {
        return x.DECIMAL_PATTERN;
      }
    },
    _NumberParser: {
      "^": "Object;format,text,input,0value,_normalized,gotPositive,gotNegative,gotPositiveSuffix,gotNegativeSuffix,done,prefixesSkipped,scale,0_replacements",
      set$_replacements: function(_replacements) {
        this._replacements = H.assertSubtype(_replacements, "$isMap", [P.String, P.Function], "$asMap");
      },
      get$replacements: function() {
        var t1 = this._replacements;
        if (t1 == null) {
          t1 = this._initializeReplacements$0();
          this.set$_replacements(t1);
        }
        return t1;
      },
      _initializeReplacements$0: function() {
        var t1, t2;
        t1 = this.format._symbols;
        t2 = this.get$handleSpace();
        return P.LinkedHashMap_LinkedHashMap$_literal([t1.DECIMAL_SEP, new T._NumberParser__initializeReplacements_closure(), t1.EXP_SYMBOL, new T._NumberParser__initializeReplacements_closure0(), t1.GROUP_SEP, t2, t1.PERCENT, new T._NumberParser__initializeReplacements_closure1(this), t1.PERMILL, new T._NumberParser__initializeReplacements_closure2(this), " ", t2, "\xa0", t2, "+", new T._NumberParser__initializeReplacements_closure3(), "-", new T._NumberParser__initializeReplacements_closure4()], P.String, P.Function);
      },
      invalidFormat$0: function() {
        return H.throwExpression(P.FormatException$("Invalid number: " + H.S(this.input.contents), null, null));
      },
      handleSpace$0: [function() {
        return this.get$groupingIsNotASpaceOrElseItIsSpaceFollowedByADigit() ? "" : this.invalidFormat$0();
      }, "call$0", "get$handleSpace", 0, 0, 46],
      get$groupingIsNotASpaceOrElseItIsSpaceFollowedByADigit: function() {
        var t1, peeked, t2;
        t1 = this.format._symbols.GROUP_SEP;
        if (t1 !== "\xa0" || t1 !== " ")
          return true;
        peeked = this.input.peek$1(t1.length + 1);
        t1 = peeked.length;
        t2 = t1 - 1;
        if (t2 < 0)
          return H.ioore(peeked, t2);
        return this.asDigit$1(peeked[t2]) != null;
      },
      asDigit$1: function(char) {
        var digitValue = C.JSString_methods._codeUnitAt$1(char, 0) - this.format._localeZero;
        if (digitValue >= 0 && digitValue < 10)
          return digitValue;
        else
          return;
      },
      checkPrefixes$1$skip: function(skip) {
        var t1, t2, t3, t4;
        t1 = new T._NumberParser_checkPrefixes_checkPrefix(this);
        t2 = this.format;
        if (t1.call$1(t2._positivePrefix))
          this.gotPositive = true;
        if (t1.call$1(t2._negativePrefix))
          this.gotNegative = true;
        t1 = this.gotPositive;
        if (t1 && this.gotNegative) {
          t3 = t2._positivePrefix.length;
          t4 = t2._negativePrefix.length;
          if (t3 > t4)
            this.gotNegative = false;
          else if (t4 > t3) {
            this.gotPositive = false;
            t1 = false;
          }
        }
        if (skip) {
          if (t1)
            this.input.read$1(0, t2._positivePrefix.length);
          if (this.gotNegative)
            this.input.read$1(0, t2._negativePrefix.length);
        }
      },
      checkPrefixes$0: function() {
        return this.checkPrefixes$1$skip(false);
      },
      processNonDigit$0: function() {
        var t1, foundAnInterpretation, t2, t3;
        t1 = this.input;
        if (t1.index === 0 && !this.prefixesSkipped) {
          this.prefixesSkipped = true;
          this.checkPrefixes$1$skip(true);
          foundAnInterpretation = true;
        } else
          foundAnInterpretation = false;
        for (t2 = this.get$replacements(), t2 = t2.get$keys(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();) {
          t3 = t2.get$current(t2);
          if (t1.startsWith$1(0, t3)) {
            t2 = this._replacements;
            if (t2 == null) {
              t2 = this._initializeReplacements$0();
              this.set$_replacements(t2);
            }
            this._normalized._contents += H.S(t2.$index(0, t3).call$0());
            t3 = t3.length;
            t1.peek$1(t3);
            t1.index += t3;
            return;
          }
        }
        if (!foundAnInterpretation)
          this.done = true;
      },
      parse$0: function(_) {
        var t1, t2, t3, t4, parsed;
        t1 = this.text;
        t2 = this.format;
        t3 = t2._symbols;
        if (t1 === t3.NAN)
          return 0 / 0;
        t4 = t2._positivePrefix;
        t3 = t3.INFINITY;
        if (t1 === t4 + t3 + t2._positiveSuffix)
          return 1 / 0;
        if (t1 === t2._negativePrefix + t3 + t2._negativeSuffix)
          return -1 / 0;
        this.checkPrefixes$0();
        t1 = this.input;
        parsed = this.parseNumber$1(t1);
        if (this.gotPositive && !this.gotPositiveSuffix)
          this.invalidNumber$0();
        if (this.gotNegative && !this.gotNegativeSuffix)
          this.invalidNumber$0();
        if (t1.index < t1.contents.length)
          this.invalidNumber$0();
        return parsed;
      },
      invalidNumber$0: function() {
        return H.throwExpression(P.FormatException$("Invalid Number: " + H.S(this.input.contents), null, null));
      },
      parseNumber$1: function(input) {
        var t1, t2, t3, t4, t5, digit, t6, remainder, normalizedText, parsed;
        if (this.gotNegative)
          this._normalized._contents += "-";
        t1 = this.format;
        t2 = this.input;
        t3 = t2.contents;
        t4 = input.contents;
        t5 = this._normalized;
        while (true) {
          if (!(!this.done && input.index < t4.length))
            break;
          digit = this.asDigit$1(input.peek$0());
          if (digit != null) {
            t5._contents += H.Primitives_stringFromCharCode(48 + digit);
            t6 = input.index++;
            if (t6 < 0 || t6 >= t4.length)
              return H.ioore(t4, t6);
            t4[t6];
          } else
            this.processNonDigit$0();
          remainder = t2.peek$1(t3.length - t2.index);
          if (remainder === t1._positiveSuffix)
            this.gotPositiveSuffix = true;
          if (remainder === t1._negativeSuffix)
            this.gotNegativeSuffix = true;
        }
        t1 = t5._contents;
        normalizedText = t1.charCodeAt(0) == 0 ? t1 : t1;
        parsed = H.Primitives_parseInt(normalizedText, null);
        if (parsed == null)
          parsed = P.double_parse(normalizedText, null);
        t1 = this.scale;
        if (typeof parsed !== "number")
          return parsed.$div();
        return parsed / t1;
      }
    },
    _NumberParser__initializeReplacements_closure: {
      "^": "Closure:7;",
      call$0: function() {
        return ".";
      }
    },
    _NumberParser__initializeReplacements_closure0: {
      "^": "Closure:7;",
      call$0: function() {
        return "E";
      }
    },
    _NumberParser__initializeReplacements_closure1: {
      "^": "Closure:7;$this",
      call$0: function() {
        this.$this.scale = 100;
        return "";
      }
    },
    _NumberParser__initializeReplacements_closure2: {
      "^": "Closure:7;$this",
      call$0: function() {
        this.$this.scale = 1000;
        return "";
      }
    },
    _NumberParser__initializeReplacements_closure3: {
      "^": "Closure:7;",
      call$0: function() {
        return "+";
      }
    },
    _NumberParser__initializeReplacements_closure4: {
      "^": "Closure:7;",
      call$0: function() {
        return "-";
      }
    },
    _NumberParser_checkPrefixes_checkPrefix: {
      "^": "Closure:17;$this",
      call$1: function(prefix) {
        return prefix.length !== 0 && this.$this.input.startsWith$1(0, prefix);
      }
    },
    _NumberFormatParser: {
      "^": "Object;format,pattern,currencySymbol,decimalDigits,inQuote,decimalPos,digitLeftCount,zeroDigitCount,digitRightCount,groupingCount",
      parse$0: function(_) {
        var t1, trunk, t2, t3, each, t4;
        t1 = this.format;
        t1._positivePrefix = this._parseAffix$0();
        trunk = this._parseTrunk$0();
        t2 = this._parseAffix$0();
        t1._positiveSuffix = t2;
        t3 = this.pattern;
        if (t3._intl$_current === ";") {
          t3.moveNext$0();
          t1._negativePrefix = this._parseAffix$0();
          t2 = new T._StringIterator(trunk, 0);
          for (; t2.moveNext$0();) {
            each = t2._intl$_current;
            t4 = t3._intl$_current;
            if (t4 != each && t4 != null)
              throw H.wrapException(P.FormatException$("Positive and negative trunks must be the same", null, null));
            t3.moveNext$0();
          }
          t1._negativeSuffix = this._parseAffix$0();
        } else {
          t1._negativePrefix = t1._negativePrefix + t1._positivePrefix;
          t1._negativeSuffix = t2 + t1._negativeSuffix;
        }
      },
      _parseAffix$0: function() {
        var affix, t1;
        affix = new P.StringBuffer("");
        this.inQuote = false;
        t1 = this.pattern;
        while (true)
          if (!(this.parseCharacterAffix$1(affix) && t1.moveNext$0()))
            break;
        t1 = affix._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      parseCharacterAffix$1: function(affix) {
        var t1, ch, t2, t3;
        t1 = this.pattern;
        ch = t1._intl$_current;
        if (ch == null)
          return false;
        if (ch === "'") {
          t2 = t1.nextIndex;
          t3 = t1.input;
          if ((t2 >= t3.length ? null : t3[t2]) === "'") {
            t1.moveNext$0();
            affix._contents += "'";
          } else
            this.inQuote = !this.inQuote;
          return true;
        }
        if (this.inQuote)
          affix._contents += ch;
        else
          switch (ch) {
            case "#":
            case "0":
            case ",":
            case ".":
            case ";":
              return false;
            case "\xa4":
              affix._contents += this.currencySymbol;
              break;
            case "%":
              t1 = this.format;
              t2 = t1._internalMultiplier;
              if (t2 !== 1 && t2 !== 100)
                throw H.wrapException(P.FormatException$("Too many percent/permill", null, null));
              t1.set$_multiplier(100);
              affix._contents += t1._symbols.PERCENT;
              break;
            case "\u2030":
              t1 = this.format;
              t2 = t1._internalMultiplier;
              if (t2 !== 1 && t2 !== 1000)
                throw H.wrapException(P.FormatException$("Too many percent/permill", null, null));
              t1.set$_multiplier(1000);
              affix._contents += t1._symbols.PERMILL;
              break;
            default:
              affix._contents += ch;
          }
        return true;
      },
      _parseTrunk$0: function() {
        var trunk, t1, loop, t2, n, effectiveDecimalPos, t3, totalDigits, t4, t5;
        trunk = new P.StringBuffer("");
        t1 = this.pattern;
        loop = true;
        while (true) {
          if (!(t1._intl$_current != null && loop))
            break;
          loop = this.parseTrunkCharacter$1(trunk);
        }
        t2 = this.zeroDigitCount;
        if (t2 === 0 && this.digitLeftCount > 0 && this.decimalPos >= 0) {
          n = this.decimalPos;
          if (n === 0)
            n = 1;
          this.digitRightCount = this.digitLeftCount - n;
          this.digitLeftCount = n - 1;
          this.zeroDigitCount = 1;
          t2 = 1;
        }
        effectiveDecimalPos = this.decimalPos;
        if (!(effectiveDecimalPos < 0 && this.digitRightCount > 0)) {
          if (effectiveDecimalPos >= 0) {
            t3 = this.digitLeftCount;
            t3 = effectiveDecimalPos < t3 || effectiveDecimalPos > t3 + t2;
          } else
            t3 = false;
          t3 = t3 || this.groupingCount === 0;
        } else
          t3 = true;
        if (t3)
          throw H.wrapException(P.FormatException$('Malformed pattern "' + t1.input + '"', null, null));
        t1 = this.digitLeftCount;
        t2 = t1 + t2;
        totalDigits = t2 + this.digitRightCount;
        t3 = this.format;
        t4 = effectiveDecimalPos >= 0;
        t5 = t4 ? totalDigits - effectiveDecimalPos : 0;
        t3.maximumFractionDigits = t5;
        if (t4) {
          t2 -= effectiveDecimalPos;
          t3.minimumFractionDigits = t2;
          if (t2 < 0)
            t3.minimumFractionDigits = 0;
        }
        t2 = (t4 ? effectiveDecimalPos : totalDigits) - t1;
        t3.minimumIntegerDigits = t2;
        if (t3._useExponentialNotation) {
          t3.maximumIntegerDigits = t1 + t2;
          if (t5 === 0 && t2 === 0)
            t3.minimumIntegerDigits = 1;
        }
        t1 = H.intTypeCheck(Math.max(0, this.groupingCount));
        t3._finalGroupingSize = t1;
        if (!t3._groupingSizeSetExplicitly)
          t3._groupingSize = t1;
        t3._decimalSeparatorAlwaysShown = effectiveDecimalPos === 0 || effectiveDecimalPos === totalDigits;
        t1 = trunk._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      parseTrunkCharacter$1: function(trunk) {
        var t1, ch, t2, t3, nextChar;
        t1 = this.pattern;
        ch = t1._intl$_current;
        switch (ch) {
          case "#":
            if (this.zeroDigitCount > 0)
              ++this.digitRightCount;
            else
              ++this.digitLeftCount;
            t2 = this.groupingCount;
            if (t2 >= 0 && this.decimalPos < 0)
              this.groupingCount = t2 + 1;
            break;
          case "0":
            if (this.digitRightCount > 0)
              throw H.wrapException(P.FormatException$('Unexpected "0" in pattern "' + t1.input + '"', null, null));
            ++this.zeroDigitCount;
            t2 = this.groupingCount;
            if (t2 >= 0 && this.decimalPos < 0)
              this.groupingCount = t2 + 1;
            break;
          case ",":
            t2 = this.groupingCount;
            if (t2 > 0) {
              t3 = this.format;
              t3._groupingSizeSetExplicitly = true;
              t3._groupingSize = t2;
            }
            this.groupingCount = 0;
            break;
          case ".":
            if (this.decimalPos >= 0)
              throw H.wrapException(P.FormatException$('Multiple decimal separators in pattern "' + t1.toString$0(0) + '"', null, null));
            this.decimalPos = this.digitLeftCount + this.zeroDigitCount + this.digitRightCount;
            break;
          case "E":
            trunk._contents += H.S(ch);
            t2 = this.format;
            if (t2._useExponentialNotation)
              throw H.wrapException(P.FormatException$('Multiple exponential symbols in pattern "' + t1.toString$0(0) + '"', null, null));
            t2._useExponentialNotation = true;
            t2.minimumExponentDigits = 0;
            t1.moveNext$0();
            nextChar = t1._intl$_current;
            if (nextChar === "+") {
              trunk._contents += H.S(nextChar);
              t1.moveNext$0();
              t2._useSignForPositiveExponent = true;
            }
            for (; t3 = t1._intl$_current, t3 === "0";) {
              trunk._contents += H.S(t3);
              t1.moveNext$0();
              ++t2.minimumExponentDigits;
            }
            if (this.digitLeftCount + this.zeroDigitCount < 1 || t2.minimumExponentDigits < 1)
              throw H.wrapException(P.FormatException$('Malformed exponential pattern "' + t1.toString$0(0) + '"', null, null));
            return false;
          default:
            return false;
        }
        trunk._contents += H.S(ch);
        t1.moveNext$0();
        return true;
      }
    },
    _StringIterable: {
      "^": "IterableBase;iterator>",
      $asIterable: function() {
        return [P.String];
      }
    },
    _StringIterator: {
      "^": "Object;input,nextIndex,0_intl$_current",
      get$current: function(_) {
        return this._intl$_current;
      },
      moveNext$0: function() {
        var t1, t2;
        t1 = this.nextIndex;
        t2 = this.input;
        if (t1 >= t2.length) {
          this._intl$_current = null;
          return false;
        }
        this.nextIndex = t1 + 1;
        this._intl$_current = t2[t1];
        return true;
      },
      get$iterator: function(_) {
        return this;
      },
      $isIterator: 1,
      $asIterator: function() {
        return [P.String];
      }
    }
  }], ["number_symbols", "package:intl/number_symbols.dart",, B, {
    "^": "",
    NumberSymbols: {
      "^": "Object;NAME,DECIMAL_SEP,GROUP_SEP,PERCENT,ZERO_DIGIT,PLUS_SIGN,MINUS_SIGN,EXP_SYMBOL,PERMILL,INFINITY,NAN,DECIMAL_PATTERN,SCIENTIFIC_PATTERN,PERCENT_PATTERN,CURRENCY_PATTERN,DEF_CURRENCY_CODE",
      toString$0: function(_) {
        return this.NAME;
      },
      static: {
        NumberSymbols$: function(CURRENCY_PATTERN, DECIMAL_PATTERN, DECIMAL_SEP, DEF_CURRENCY_CODE, EXP_SYMBOL, GROUP_SEP, INFINITY, MINUS_SIGN, NAME, NAN, PERCENT, PERCENT_PATTERN, PERMILL, PLUS_SIGN, SCIENTIFIC_PATTERN, ZERO_DIGIT) {
          return new B.NumberSymbols(NAME, DECIMAL_SEP, GROUP_SEP, PERCENT, ZERO_DIGIT, PLUS_SIGN, MINUS_SIGN, EXP_SYMBOL, PERMILL, INFINITY, NAN, DECIMAL_PATTERN, SCIENTIFIC_PATTERN, PERCENT_PATTERN, CURRENCY_PATTERN, DEF_CURRENCY_CODE);
        }
      }
    }
  }], ["number_symbol_data", "package:intl/number_symbols_data.dart",, F, {}], ["intl_helpers", "package:intl/src/intl_helpers.dart",, X, {
    "^": "",
    UninitializedLocaleData: {
      "^": "Object;message>,fallbackData,_badMessages,$ti",
      $index: function(_, key) {
        return H.stringTypeCheck(key) === "en_US" ? this.fallbackData : this._throwException$0();
      },
      lookupMessage$6$ifAbsent: function(message_str, locale, $name, args, meaning, ifAbsent) {
        return message_str;
      },
      lookupMessage$5: function(message_str, locale, $name, args, meaning) {
        return this.lookupMessage$6$ifAbsent(message_str, locale, $name, args, meaning, null);
      },
      _throwException$0: function() {
        throw H.wrapException(new X.LocaleDataException("Locale data has not been initialized, call " + this.message + "."));
      }
    },
    LocaleDataException: {
      "^": "Object;message>",
      toString$0: function(_) {
        return "LocaleDataException: " + this.message;
      }
    }
  }], ["", "package:observable/src/change_notifier.dart",, B, {
    "^": "",
    ChangeNotifier: {
      "^": "Object;0_changes,_scheduled,0_queue,$ti",
      set$_queue: function(_queue) {
        this._queue = H.assertSubtype(_queue, "$isList", this.$ti, "$asList");
      },
      deliverChanges$0: [function() {
        var t1, t2, changes;
        if (this._scheduled && this.get$hasObservers()) {
          t1 = this._queue;
          t2 = this.$ti;
          if (t1 == null)
            changes = new Y.ChangeRecords(true, C.List_empty1, C.List_empty1, t2);
          else {
            t1 = G.freezeInDevMode(t1, H.getTypeArgumentByIndex(this, 0));
            changes = new Y.ChangeRecords(false, t1, t1, t2);
          }
          this.set$_queue(null);
          this._scheduled = false;
          C.JSNull_methods.add$1(this._changes, changes);
          return true;
        }
        return false;
      }, "call$0", "get$deliverChanges", 0, 0, 6],
      get$hasObservers: function() {
        return false;
      },
      notifyChange$1: function(change) {
        var t1;
        H.assertSubtypeOfRuntimeType(change, H.getTypeArgumentByIndex(this, 0));
        if (!this.get$hasObservers())
          return;
        t1 = this._queue;
        if (t1 == null) {
          t1 = H.setRuntimeTypeInfo([], this.$ti);
          this.set$_queue(t1);
        }
        C.JSArray_methods.add$1(t1, change);
        if (!this._scheduled) {
          P.scheduleMicrotask(this.get$deliverChanges());
          this._scheduled = true;
        }
      }
    }
  }], ["observable.src.differs", "package:observable/src/differs.dart",, O, {
    "^": "",
    _calcEditDistance: function(current, currentStart, currentEnd, old, oldStart, oldEnd, $E) {
      var t1, rowCount, columnCount, distances, t2, i, t3, j, t4, t5, t6, t7, t8, t9;
      t1 = [$E];
      H.assertSubtype(current, "$isList", t1, "$asList");
      H.assertSubtype(old, "$isList", t1, "$asList");
      rowCount = oldEnd - oldStart + 1;
      columnCount = currentEnd - currentStart + 1;
      t1 = new Array(rowCount);
      t1.fixed$length = Array;
      distances = H.setRuntimeTypeInfo(t1, [[P.List, P.int]]);
      for (t1 = [P.int], t2 = distances.length, i = 0; i < rowCount; ++i) {
        t3 = new Array(columnCount);
        t3.fixed$length = Array;
        C.JSArray_methods.$indexSet(distances, i, H.setRuntimeTypeInfo(t3, t1));
        if (i >= t2)
          return H.ioore(distances, i);
        t3 = distances[i];
        (t3 && C.JSArray_methods).$indexSet(t3, 0, i);
      }
      for (j = 0; j < columnCount; ++j) {
        if (0 >= t2)
          return H.ioore(distances, 0);
        t1 = distances[0];
        (t1 && C.JSArray_methods).$indexSet(t1, j, j);
      }
      for (t1 = J.getInterceptor$asx(old), t3 = current._observable_list$_list, t4 = J.getInterceptor$asx(t3), i = 1; i < rowCount; ++i)
        for (t5 = i - 1, t6 = oldStart + i - 1, j = 1; j < columnCount; ++j) {
          t7 = j - 1;
          if (J.$eq$(t1.$index(old, t6), t4.$index(t3, currentStart + j - 1))) {
            if (i >= t2)
              return H.ioore(distances, i);
            t8 = distances[i];
            if (t5 >= t2)
              return H.ioore(distances, t5);
            t9 = distances[t5];
            if (t7 >= t9.length)
              return H.ioore(t9, t7);
            (t8 && C.JSArray_methods).$indexSet(t8, j, t9[t7]);
          } else {
            if (t5 >= t2)
              return H.ioore(distances, t5);
            t8 = distances[t5];
            if (j >= t8.length)
              return H.ioore(t8, j);
            t8 = t8[j];
            if (typeof t8 !== "number")
              return t8.$add();
            if (i >= t2)
              return H.ioore(distances, i);
            t9 = distances[i];
            if (t7 >= t9.length)
              return H.ioore(t9, t7);
            t7 = t9[t7];
            if (typeof t7 !== "number")
              return t7.$add();
            (t9 && C.JSArray_methods).$indexSet(t9, j, Math.min(t8 + 1, t7 + 1));
          }
        }
      return distances;
    },
    _spliceOperationsFromEditDistances: function(distances) {
      var t1, i, j, t2, current, edits, t3, t4, t5, northWest, west, north, min;
      H.assertSubtype(distances, "$isList", [[P.List, P.int]], "$asList");
      t1 = distances.length;
      i = t1 - 1;
      if (0 >= t1)
        return H.ioore(distances, 0);
      j = distances[0].length - 1;
      if (i < 0)
        return H.ioore(distances, i);
      t2 = distances[i];
      if (j < 0 || j >= t2.length)
        return H.ioore(t2, j);
      current = t2[j];
      edits = H.setRuntimeTypeInfo([], [O._Edit]);
      while (true) {
        if (!(i > 0 || j > 0))
          break;
        c$0: {
          if (i === 0) {
            C.JSArray_methods.add$1(edits, C._Edit_2);
            --j;
            break c$0;
          }
          if (j === 0) {
            C.JSArray_methods.add$1(edits, C._Edit_3);
            --i;
            break c$0;
          }
          t2 = i - 1;
          if (t2 < 0)
            return H.ioore(distances, t2);
          t3 = distances[t2];
          t4 = j - 1;
          t5 = t3.length;
          if (t4 < 0 || t4 >= t5)
            return H.ioore(t3, t4);
          northWest = t3[t4];
          if (j < 0 || j >= t5)
            return H.ioore(t3, j);
          west = t3[j];
          if (i < 0)
            return H.ioore(distances, i);
          t3 = distances[i];
          if (t4 >= t3.length)
            return H.ioore(t3, t4);
          north = t3[t4];
          min = Math.min(Math.min(H.checkNum(west), H.checkNum(north)), H.checkNum(northWest));
          if (min === northWest) {
            if (northWest == current)
              C.JSArray_methods.add$1(edits, C._Edit_0);
            else {
              C.JSArray_methods.add$1(edits, C._Edit_1);
              current = northWest;
            }
            j = t4;
            i = t2;
          } else if (min === west) {
            C.JSArray_methods.add$1(edits, C._Edit_3);
            current = west;
            i = t2;
          } else {
            C.JSArray_methods.add$1(edits, C._Edit_2);
            current = north;
            j = t4;
          }
        }
      }
      return new H.ReversedListIterable(edits, [H.getTypeArgumentByIndex(edits, 0)]);
    },
    _sharedPrefix: function(equality, e1, e2, searchLength, $E) {
      var t1, t2, t3, i;
      H.assertSubtype(equality, "$isEquality", [$E], "$asEquality");
      t1 = [$E];
      H.assertSubtype(e1, "$isList", t1, "$asList");
      H.assertSubtype(e2, "$isList", t1, "$asList");
      for (t1 = e1._observable_list$_list, t2 = J.getInterceptor$asx(t1), t3 = J.getInterceptor$asx(e2), i = 0; i < searchLength; ++i)
        if (!J.$eq$(t2.$index(t1, i), t3.$index(e2, i)))
          return i;
      return searchLength;
    },
    _sharedSuffix: function(equality, e1, e2, searchLength, $E) {
      var t1, t2, index1, t3, index2, count, t4;
      H.assertSubtype(equality, "$isEquality", [$E], "$asEquality");
      t1 = [$E];
      H.assertSubtype(e1, "$isList", t1, "$asList");
      H.assertSubtype(e2, "$isList", t1, "$asList");
      t1 = e1._observable_list$_list;
      t2 = J.getInterceptor$asx(t1);
      index1 = t2.get$length(t1);
      t3 = J.getInterceptor$asx(e2);
      index2 = t3.get$length(e2);
      count = 0;
      while (true) {
        if (count < searchLength) {
          if (typeof index1 !== "number")
            return index1.$sub();
          --index1;
          t4 = t2.$index(t1, index1);
          if (typeof index2 !== "number")
            return index2.$sub();
          --index2;
          t4 = J.$eq$(t4, t3.$index(e2, index2));
        } else
          t4 = false;
        if (!t4)
          break;
        ++count;
      }
      return count;
    },
    _calcSplices: function(current, equality, currentStart, currentEnd, old, oldStart, oldEnd, $E) {
      var _box_0, t1, minLength, prefixCount, suffixCount, t2, ops, hasSplice, resetSplice, t3, oldIndex, index, t4, t5, t6, t7;
      _box_0 = {};
      t1 = [$E];
      H.assertSubtype(current, "$isList", t1, "$asList");
      H.assertSubtype(equality, "$isEquality", [$E], "$asEquality");
      H.assertSubtype(old, "$isList", t1, "$asList");
      if (typeof currentStart !== "number")
        return H.iae(currentStart);
      if (typeof oldEnd !== "number")
        return oldEnd.$sub();
      minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);
      prefixCount = currentStart === 0 && oldStart === 0 ? O._sharedPrefix(equality, current, old, minLength, $E) : 0;
      suffixCount = currentEnd === J.get$length$asx(current._observable_list$_list) && oldEnd === J.get$length$asx(old) ? O._sharedSuffix(equality, current, old, minLength - prefixCount, $E) : 0;
      currentStart += prefixCount;
      oldStart += prefixCount;
      currentEnd -= suffixCount;
      oldEnd -= suffixCount;
      t2 = currentEnd - currentStart;
      if (t2 === 0 && oldEnd - oldStart === 0)
        return C.List_empty3;
      if (currentStart === currentEnd)
        return H.setRuntimeTypeInfo([new Y.ListChangeRecord(0, currentStart, current, G.freezeInDevMode(J.sublist$2$ax(old, oldStart, oldEnd), $E), [$E])], [[Y.ListChangeRecord, $E]]);
      if (oldStart === oldEnd)
        return H.setRuntimeTypeInfo([new Y.ListChangeRecord(t2, currentStart, current, new P.UnmodifiableListView(H.setRuntimeTypeInfo([], t1), [$E]), [$E])], [[Y.ListChangeRecord, $E]]);
      ops = O._spliceOperationsFromEditDistances(O._calcEditDistance(current, currentStart, currentEnd, old, oldStart, oldEnd, $E));
      _box_0.spliceIndex = -1;
      _box_0.spliceRemovals = H.setRuntimeTypeInfo([], t1);
      _box_0.spliceAddedCount = 0;
      hasSplice = new O._calcSplices_hasSplice(_box_0);
      resetSplice = new O._calcSplices_resetSplice(_box_0, $E);
      _box_0.splices = H.setRuntimeTypeInfo([], [[Y.ListChangeRecord, $E]]);
      for (t1 = new H.ListIterator(ops, ops.get$length(ops), 0, [H.getTypeArgumentByIndex(ops, 0)]), t2 = J.getInterceptor$asx(old), t3 = [$E], oldIndex = oldStart, index = currentStart; t1.moveNext$0();)
        switch (t1.__internal$_current) {
          case C._Edit_0:
            if (hasSplice.call$0()) {
              t4 = _box_0.splices;
              t5 = _box_0.spliceIndex;
              t6 = _box_0.spliceRemovals;
              t7 = _box_0.spliceAddedCount;
              C.JSArray_methods.add$1(t4, new Y.ListChangeRecord(t7, t5, current, t6, t3));
              resetSplice.call$0();
            }
            ++index;
            ++oldIndex;
            break;
          case C._Edit_1:
            if (!hasSplice.call$0())
              _box_0.spliceIndex = index;
            ++_box_0.spliceAddedCount;
            ++index;
            C.JSArray_methods.add$1(_box_0.spliceRemovals, t2.$index(old, oldIndex));
            ++oldIndex;
            break;
          case C._Edit_2:
            if (!hasSplice.call$0())
              _box_0.spliceIndex = index;
            ++_box_0.spliceAddedCount;
            ++index;
            break;
          case C._Edit_3:
            if (!hasSplice.call$0())
              _box_0.spliceIndex = index;
            C.JSArray_methods.add$1(_box_0.spliceRemovals, t2.$index(old, oldIndex));
            ++oldIndex;
            break;
        }
      if (hasSplice.call$0()) {
        t1 = _box_0.splices;
        t2 = _box_0.spliceIndex;
        t3 = _box_0.spliceRemovals;
        C.JSArray_methods.add$1(t1, Y.ListChangeRecord_ListChangeRecord(current, t2, _box_0.spliceAddedCount, t3, $E));
      }
      return _box_0.splices;
    },
    _mergeSplices: function(splices, record, $E) {
      var t1, spliceIndex, spliceRemoved, spliceAdded, t2, t3, inserted, insertionOffset, i, t4, current, t5, spliceIndex0, t6, t7, t8, t9, intersectCount, removed, offset;
      H.assertSubtype(splices, "$isList", [[Y.ListChangeRecord, $E]], "$asList");
      t1 = [$E];
      H.assertSubtype(record, "$isListChangeRecord", t1, "$asListChangeRecord");
      spliceIndex = record.index;
      spliceRemoved = record.removed;
      spliceAdded = record.addedCount;
      for (t2 = [$E], t3 = [$E], inserted = false, insertionOffset = 0, i = 0; t4 = splices.length, i < t4; ++i) {
        if (i < 0)
          return H.ioore(splices, i);
        current = splices[i];
        t4 = current.object;
        t5 = current.index;
        if (typeof t5 !== "number")
          return t5.$add();
        spliceIndex0 = t5 + insertionOffset;
        t5 = current.removed;
        t6 = current.addedCount;
        if (t5 == null)
          t5 = new P.UnmodifiableListView(H.setRuntimeTypeInfo([], t2), t3);
        C.JSArray_methods.$indexSet(splices, i, new Y.ListChangeRecord(t6, spliceIndex0, t4, t5, t1));
        if (inserted)
          continue;
        t7 = J.getInterceptor$asx(spliceRemoved);
        t8 = t7.get$length(spliceRemoved);
        if (typeof spliceIndex !== "number")
          return spliceIndex.$add();
        if (typeof t8 !== "number")
          return H.iae(t8);
        if (typeof t6 !== "number")
          return H.iae(t6);
        t9 = spliceIndex0 + t6;
        intersectCount = H.intTypeCheck(Math.min(spliceIndex + t8, t9) - Math.max(spliceIndex, spliceIndex0));
        if (intersectCount >= 0) {
          C.JSArray_methods.removeAt$1(splices, i);
          --i;
          t4 = J.getInterceptor$asx(t5);
          t8 = t4.get$length(t5);
          if (typeof t8 !== "number")
            return H.iae(t8);
          insertionOffset -= t6 - t8;
          if (typeof spliceAdded !== "number")
            return spliceAdded.$add();
          spliceAdded += t6 - intersectCount;
          t6 = t7.get$length(spliceRemoved);
          t8 = t4.get$length(t5);
          if (typeof t6 !== "number")
            return t6.$add();
          if (typeof t8 !== "number")
            return H.iae(t8);
          if (spliceAdded === 0 && t6 + t8 - intersectCount === 0)
            inserted = true;
          else {
            removed = t4.toList$0(t5);
            if (spliceIndex < spliceIndex0)
              C.JSArray_methods.insertAll$2(removed, 0, t7.getRange$2(spliceRemoved, 0, spliceIndex0 - spliceIndex));
            t4 = t7.get$length(spliceRemoved);
            if (typeof t4 !== "number")
              return H.iae(t4);
            if (spliceIndex + t4 > t9)
              C.JSArray_methods.addAll$1(removed, t7.getRange$2(spliceRemoved, t9 - spliceIndex, t7.get$length(spliceRemoved)));
            if (spliceIndex0 < spliceIndex)
              spliceIndex = spliceIndex0;
            spliceRemoved = removed;
            inserted = false;
          }
        } else if (spliceIndex < spliceIndex0) {
          t8 = record.object;
          C.JSArray_methods.insert$2(splices, i, new Y.ListChangeRecord(spliceAdded, spliceIndex, t8, spliceRemoved, t1));
          ++i;
          t7 = t7.get$length(spliceRemoved);
          if (typeof spliceAdded !== "number")
            return spliceAdded.$sub();
          if (typeof t7 !== "number")
            return H.iae(t7);
          offset = spliceAdded - t7;
          C.JSArray_methods.$indexSet(splices, i, new Y.ListChangeRecord(t6, spliceIndex0 + offset, t4, t5, t1));
          insertionOffset += offset;
          inserted = true;
        } else
          inserted = false;
      }
      if (!inserted)
        C.JSArray_methods.add$1(splices, Y.ListChangeRecord_ListChangeRecord(record.object, spliceIndex, spliceAdded, spliceRemoved, $E));
    },
    _createInitialSplices: function(list, records, $E) {
      var t1, splices, i;
      H.assertSubtype(list, "$isList", [$E], "$asList");
      t1 = [[Y.ListChangeRecord, $E]];
      H.assertSubtype(records, "$isList", t1, "$asList");
      splices = H.setRuntimeTypeInfo([], t1);
      for (i = 0; i < records.length; ++i)
        O._mergeSplices(splices, records[i], $E);
      return splices;
    },
    projectListSplices: function(list, records, equality, $E) {
      var t1, splices, initialSplices, t2, t3, _i, splice, t4, t5, t6;
      H.assertSubtype(list, "$isList", [$E], "$asList");
      t1 = [[Y.ListChangeRecord, $E]];
      H.assertSubtype(records, "$isList", t1, "$asList");
      equality = new U.DefaultEquality([$E]);
      if (records.length <= 1)
        return records;
      splices = H.setRuntimeTypeInfo([], t1);
      initialSplices = O._createInitialSplices(list, records, $E);
      for (t1 = initialSplices.length, t2 = list._observable_list$_list, t3 = J.getInterceptor$asx(t2), _i = 0; _i < initialSplices.length; initialSplices.length === t1 || (0, H.throwConcurrentModificationError)(initialSplices), ++_i) {
        splice = initialSplices[_i];
        t4 = splice.addedCount;
        if (t4 === 1 && J.get$length$asx(splice.removed) === 1) {
          if (!J.$eq$(J.$index$asx(splice.removed, 0), t3.$index(t2, splice.index)))
            C.JSArray_methods.add$1(splices, splice);
          continue;
        }
        t5 = splice.index;
        if (typeof t5 !== "number")
          return t5.$add();
        if (typeof t4 !== "number")
          return H.iae(t4);
        t6 = splice.removed;
        C.JSArray_methods.addAll$1(splices, O._calcSplices(list, equality, t5, t5 + t4, t6, 0, J.get$length$asx(t6), $E));
      }
      return splices;
    },
    _Edit: {
      "^": "Object;index>,_differs$_name",
      toString$0: function(_) {
        return this._differs$_name;
      }
    },
    _calcSplices_hasSplice: {
      "^": "Closure:6;_box_0",
      call$0: function() {
        return this._box_0.spliceIndex !== -1;
      }
    },
    _calcSplices_resetSplice: {
      "^": "Closure:2;_box_0,E",
      call$0: function() {
        var t1 = this._box_0;
        t1.spliceIndex = -1;
        t1.spliceRemovals = H.setRuntimeTypeInfo([], [this.E]);
        t1.spliceAddedCount = 0;
      }
    }
  }], ["", "package:observable/src/internal.dart",, G, {
    "^": "",
    freezeInDevMode: function(list, $E) {
      H.assertSubtype(list, "$isList", [$E], "$asList");
      if (list == null)
        return C.List_empty1;
      return list;
    }
  }], ["observable.src.observable", "package:observable/src/observable.dart",, E, {
    "^": "",
    Observable: {
      "^": "Object;_observable0$_delegate:Observable__delegate<,_isNotGeneric:Observable__isNotGeneric<,$ti",
      get$hasObservers: function() {
        return this.get$_observable0$_delegate().get$hasObservers();
      },
      notifyPropertyChange$1$3: function(field, oldValue, newValue, $T) {
        H.assertSubtypeOfRuntimeType(oldValue, $T);
        H.assertSubtypeOfRuntimeType(newValue, $T);
        if (this.get$hasObservers() && (oldValue == null ? newValue != null : oldValue !== newValue))
          if (this.get$_isNotGeneric())
            this.notifyChange$1(H.subtypeOfRuntimeTypeCast(new Y.PropertyChangeRecord(this, field, oldValue, newValue, [$T]), H.getRuntimeTypeArgument(this, "Observable", 0)));
        return newValue;
      },
      notifyChange$1: function(change) {
        H.assertSubtypeOfRuntimeType(change, H.getRuntimeTypeArgument(this, "Observable", 0));
        return this.get$_observable0$_delegate().notifyChange$1(change);
      }
    }
  }], ["observable.src.observable_list", "package:observable/src/observable_list.dart",, R, {
    "^": "",
    ObservableList: {
      "^": "_ObservableList_ListBase_Observable;0_listRecords,0_listChanges,_observable_list$_list,Observable__delegate,Observable__isNotGeneric,$ti",
      set$_listRecords: function(_listRecords) {
        this._listRecords = H.assertSubtype(_listRecords, "$isList", [[Y.ListChangeRecord, H.getTypeArgumentByIndex(this, 0)]], "$asList");
      },
      set$_listChanges: function(_listChanges) {
        this._listChanges = H.assertSubtype(_listChanges, "$isStreamController", [[P.List, [Y.ListChangeRecord, H.getTypeArgumentByIndex(this, 0)]]], "$asStreamController");
      },
      get$listChanges: function() {
        if (this._listChanges == null)
          this.set$_listChanges(new P._SyncBroadcastStreamController(null, new R.ObservableList_listChanges_closure(this), 0, [[P.List, [Y.ListChangeRecord, H.getTypeArgumentByIndex(this, 0)]]]));
        var t1 = this._listChanges;
        t1.toString;
        return new P._BroadcastStream(t1, [H.getTypeArgumentByIndex(t1, 0)]);
      },
      get$length: function(_) {
        return J.get$length$asx(this._observable_list$_list);
      },
      set$length: function(_, value) {
        var t1, t2, len, t3;
        t1 = this._observable_list$_list;
        t2 = J.getInterceptor$asx(t1);
        len = t2.get$length(t1);
        if (len === value)
          return;
        this._notifyChangeLength$2(len, value);
        t3 = this._listChanges;
        if (t3 != null && t3._firstSubscription != null) {
          if (typeof len !== "number")
            return H.iae(len);
          if (value < len)
            this._notifyListChange$2$removed(value, t2.getRange$2(t1, value, len).toList$0(0));
          else
            this._notifyListChange$2$addedCount(len, value - len);
        }
        t2.set$length(t1, value);
      },
      $index: function(_, index) {
        return J.$index$asx(this._observable_list$_list, H.intTypeCheck(index));
      },
      $indexSet: function(_, index, value) {
        var t1, t2, oldValue, t3;
        H.intTypeCheck(index);
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._observable_list$_list;
        t2 = J.getInterceptor$asx(t1);
        oldValue = t2.$index(t1, index);
        t3 = this._listChanges;
        if (t3 != null && t3._firstSubscription != null && !J.$eq$(oldValue, value))
          this._notifyListChange$3$addedCount$removed(index, 1, H.setRuntimeTypeInfo([oldValue], this.$ti));
        t2.$indexSet(t1, index, value);
      },
      get$isEmpty: function(_) {
        return P.ListMixin.prototype.get$isEmpty.call(this, this);
      },
      get$isNotEmpty: function(_) {
        return P.ListMixin.prototype.get$isNotEmpty.call(this, this);
      },
      add$1: function(_, value) {
        var t1, t2, len, t3;
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 0));
        t1 = this._observable_list$_list;
        t2 = J.getInterceptor$asx(t1);
        len = t2.get$length(t1);
        if (typeof len !== "number")
          return len.$add();
        this._notifyChangeLength$2(len, len + 1);
        t3 = this._listChanges;
        if (t3 != null && t3._firstSubscription != null)
          this._notifyListChange$2$addedCount(len, 1);
        t2.add$1(t1, value);
      },
      remove$1: function(_, element) {
        var t1, t2, i, t3;
        t1 = this._observable_list$_list;
        t2 = J.getInterceptor$asx(t1);
        i = 0;
        while (true) {
          t3 = t2.get$length(t1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          if (J.$eq$(t2.$index(t1, i), element)) {
            this.removeRange$2(0, i, i + 1);
            return true;
          }
          ++i;
        }
        return false;
      },
      removeRange$2: function(_, start, end) {
        var t1, rangeLength, t2, len, t3;
        if (start >= 0) {
          t1 = J.get$length$asx(this._observable_list$_list);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = start > t1;
        } else
          t1 = true;
        if (t1)
          H.throwExpression(P.RangeError$range(start, 0, this.get$length(this), null, null));
        if (end >= start) {
          t1 = J.get$length$asx(this._observable_list$_list);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = end > t1;
        } else
          t1 = true;
        if (t1)
          H.throwExpression(P.RangeError$range(end, start, this.get$length(this), null, null));
        rangeLength = end - start;
        t1 = this._observable_list$_list;
        t2 = J.getInterceptor$asx(t1);
        len = t2.get$length(t1);
        if (typeof len !== "number")
          return len.$sub();
        this._notifyChangeLength$2(len, len - rangeLength);
        t3 = this._listChanges;
        if (t3 != null && t3._firstSubscription != null && rangeLength > 0)
          this._notifyListChange$2$removed(start, t2.getRange$2(t1, start, end).toList$0(0));
        t2.removeRange$2(t1, start, end);
      },
      insert$2: function(_, index, element) {
        var t1, t2, t3;
        H.assertSubtypeOfRuntimeType(element, H.getTypeArgumentByIndex(this, 0));
        if (index >= 0) {
          t1 = J.get$length$asx(this._observable_list$_list);
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = index > t1;
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this), null, null));
        t1 = this._observable_list$_list;
        t2 = J.getInterceptor$asx(t1);
        if (index === t2.get$length(t1)) {
          this.add$1(0, element);
          return;
        }
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$add();
        t2.set$length(t1, t3 + 1);
        t2.setRange$4(t1, index + 1, t2.get$length(t1), this, index);
        t3 = t2.get$length(t1);
        if (typeof t3 !== "number")
          return t3.$sub();
        this._notifyChangeLength$2(t3 - 1, t2.get$length(t1));
        t3 = this._listChanges;
        if (t3 != null && t3._firstSubscription != null)
          this._notifyListChange$2$addedCount(index, 1);
        t2.$indexSet(t1, index, element);
      },
      removeAt$1: function(_, index) {
        var result = J.$index$asx(this._observable_list$_list, index);
        this.removeRange$2(0, index, index + 1);
        return result;
      },
      _notifyListChange$3$addedCount$removed: function(index, addedCount, removed) {
        var t1;
        H.assertSubtype(removed, "$isList", this.$ti, "$asList");
        t1 = this._listChanges;
        if (!(t1 != null && t1._firstSubscription != null))
          return;
        if (this._listRecords == null) {
          this.set$_listRecords(H.setRuntimeTypeInfo([], [[Y.ListChangeRecord, H.getTypeArgumentByIndex(this, 0)]]));
          P.scheduleMicrotask(this.get$deliverListChanges());
        }
        t1 = this._listRecords;
        (t1 && C.JSArray_methods).add$1(t1, Y.ListChangeRecord_ListChangeRecord(this, index, addedCount, removed, H.getTypeArgumentByIndex(this, 0)));
      },
      _notifyListChange$2$addedCount: function(index, addedCount) {
        return this._notifyListChange$3$addedCount$removed(index, addedCount, null);
      },
      _notifyListChange$2$removed: function(index, removed) {
        return this._notifyListChange$3$addedCount$removed(index, 0, removed);
      },
      _notifyChangeLength$2: function(oldValue, newValue) {
        var t1, t2, t3;
        this.notifyPropertyChange$1$3(C.Symbol_length, oldValue, newValue, P.int);
        t1 = oldValue === 0;
        t2 = newValue === 0;
        t3 = P.bool;
        this.notifyPropertyChange$1$3(C.Symbol_isEmpty, t1, t2, t3);
        this.notifyPropertyChange$1$3(C.Symbol_isNotEmpty, !t1, !t2, t3);
      },
      deliverListChanges$0: [function() {
        var t1, t2, records;
        t1 = this._listRecords;
        if (t1 == null)
          return false;
        t2 = H.getTypeArgumentByIndex(this, 0);
        records = O.projectListSplices(this, t1, null, t2);
        this.set$_listRecords(null);
        t1 = this._listChanges;
        if (t1 != null && t1._firstSubscription != null && records.length !== 0) {
          t1.add$1(0, new P.UnmodifiableListView(records, [[Y.ListChangeRecord, t2]]));
          return true;
        }
        return false;
      }, "call$0", "get$deliverListChanges", 0, 0, 6],
      $asObservable: function($E) {
        return [Y.ChangeRecord];
      }
    },
    ObservableList_listChanges_closure: {
      "^": "Closure:0;$this",
      call$0: function() {
        this.$this.set$_listChanges(null);
      }
    },
    _ObservableList_ListBase_Observable: {
      "^": "ListBase+Observable;_observable0$_delegate:Observable__delegate<,_isNotGeneric:Observable__isNotGeneric<"
    }
  }], ["observable.src.observable_map", "package:observable/src/observable_map.dart",, Y, {
    "^": "",
    ObservableMap: {
      "^": "Observable;_observable_map$_map,Observable__delegate,Observable__isNotGeneric,$ti",
      get$keys: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$keys(t1);
      },
      get$values: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$values(t1);
      },
      get$length: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$length(t1);
      },
      get$isEmpty: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$length(t1) === 0;
      },
      get$isNotEmpty: function(_) {
        var t1 = this._observable_map$_map;
        return t1.get$length(t1) !== 0;
      },
      containsKey$1: function(_, key) {
        return this._observable_map$_map.containsKey$1(0, key);
      },
      $index: function(_, key) {
        return this._observable_map$_map.$index(0, key);
      },
      $indexSet: function(_, key, value) {
        var t1, t2, len, oldValue;
        H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(this, 0));
        H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(this, 1));
        t1 = this.Observable__delegate;
        if (!t1.get$hasObservers()) {
          this._observable_map$_map.$indexSet(0, key, value);
          return;
        }
        t2 = this._observable_map$_map;
        len = t2.get$length(t2);
        oldValue = t2.$index(0, key);
        t2.$indexSet(0, key, value);
        if (len != t2.get$length(t2)) {
          this.notifyPropertyChange$1$3(C.Symbol_length, len, t2.get$length(t2), P.int);
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.MapChangeRecord(key, null, value, true, false, this.$ti), H.getRuntimeTypeArgument(this, "Observable", 0)));
          this._notifyKeysValuesChanged$0();
        } else if (!J.$eq$(oldValue, value)) {
          t2 = H.getRuntimeTypeArgument(this, "Observable", 0);
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.MapChangeRecord(key, oldValue, value, false, false, this.$ti), t2));
          t1.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(this, C.Symbol_values, null, null, [P.Null]), t2));
        }
      },
      addAll$1: function(_, other) {
        H.assertSubtype(other, "$isMap", this.$ti, "$asMap").forEach$1(0, new Y.ObservableMap_addAll_closure(this));
      },
      forEach$1: function(_, f) {
        return this._observable_map$_map.forEach$1(0, H.functionTypeCheck(f, {func: 1, ret: -1, args: [H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1)]}));
      },
      toString$0: function(_) {
        return P.MapBase_mapToString(this);
      },
      _notifyKeysValuesChanged$0: function() {
        var t1, t2, t3;
        t1 = [P.Null];
        t2 = H.getRuntimeTypeArgument(this, "Observable", 0);
        t3 = this.Observable__delegate;
        t3.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(this, C.Symbol_keys, null, null, t1), t2));
        t3.notifyChange$1(H.assertSubtypeOfRuntimeType(new Y.PropertyChangeRecord(this, C.Symbol_values, null, null, t1), t2));
      },
      $isMap: 1,
      $asObservable: function($K, $V) {
        return [Y.ChangeRecord];
      }
    },
    ObservableMap_addAll_closure: {
      "^": "Closure;$this",
      call$2: function(key, value) {
        var t1 = this.$this;
        t1.$indexSet(0, H.assertSubtypeOfRuntimeType(key, H.getTypeArgumentByIndex(t1, 0)), H.assertSubtypeOfRuntimeType(value, H.getTypeArgumentByIndex(t1, 1)));
      },
      $signature: function() {
        var t1 = this.$this;
        return {func: 1, ret: P.Null, args: [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)]};
      }
    }
  }], ["observable.src.records", "package:observable/src/records.dart",, Y, {
    "^": "",
    ChangeRecord: {
      "^": "Object;"
    },
    ChangeRecords: {
      "^": "DelegatingList;_isAny<,_records$_delegate<,_wrappers$_base,$ti",
      get$hashCode: function(_) {
        return X._finish(X._combine(X._combine(0, J.get$hashCode$(this._records$_delegate)), C.JSBool_methods.get$hashCode(this._isAny)));
      },
      $eq: function(_, other) {
        var t1;
        if (other == null)
          return false;
        if (this !== other)
          if (H.checkSubtype(other, "$isChangeRecords", [Y.ChangeRecord], null))
            if (new H.TypeImpl(H.getRti(this)).$eq(0, new H.TypeImpl(H.getRti(other)))) {
              t1 = this._isAny;
              if (!(t1 && other.get$_isAny()))
                t1 = !t1 && !other.get$_isAny() && C.ListEquality_DefaultEquality.equals$2(this._records$_delegate, other.get$_records$_delegate());
              else
                t1 = true;
            } else
              t1 = false;
          else
            t1 = false;
        else
          t1 = true;
        return t1;
      },
      toString$0: function(_) {
        return this._isAny ? "ChangeRecords.any" : "ChangeRecords(" + H.S(this._records$_delegate) + ")";
      }
    },
    ListChangeRecord: {
      "^": "Object;addedCount<,index>,object<,removed<,$ti",
      $eq: function(_, o) {
        if (o == null)
          return false;
        if (H.checkSubtype(o, "$isListChangeRecord", this.$ti, null))
          return this.object === o.get$object() && this.index == J.get$index$z(o) && this.addedCount == o.get$addedCount() && C.ListEquality_DefaultEquality0.equals$2(this.removed, o.get$removed());
        return false;
      },
      get$hashCode: function(_) {
        var t1 = C.ListEquality_DefaultEquality0.hash$1(0, this.removed);
        return X._finish(X._combine(X._combine(X._combine(X._combine(0, H.Primitives_objectHashCode(this.object)), J.get$hashCode$(this.index)), J.get$hashCode$(this.addedCount)), t1 & 0x1FFFFFFF));
      },
      toString$0: function(_) {
        return "#<" + C.Type_ListChangeRecord_WB4.toString$0(0) + " index: " + H.S(this.index) + ", removed: " + H.S(this.removed) + ", addedCount: " + H.S(this.addedCount) + ">";
      },
      $isChangeRecord: 1,
      static: {
        ListChangeRecord_ListChangeRecord: function(object, index, addedCount, removed, $E) {
          var t1 = [$E];
          H.assertSubtype(object, "$isList", t1, "$asList");
          H.assertSubtype(removed, "$isList", t1, "$asList");
          t1 = removed == null ? new P.UnmodifiableListView(H.setRuntimeTypeInfo([], t1), [$E]) : removed;
          return new Y.ListChangeRecord(addedCount, index, object, t1, [$E]);
        }
      }
    },
    MapChangeRecord: {
      "^": "Object;key>,oldValue>,newValue>,isInsert<,isRemove<,$ti",
      $eq: function(_, o) {
        var t1;
        if (o == null)
          return false;
        if (H.checkSubtype(o, "$isMapChangeRecord", this.$ti, null)) {
          t1 = J.getInterceptor$x(o);
          return J.$eq$(this.key, t1.get$key(o)) && J.$eq$(this.oldValue, t1.get$oldValue(o)) && J.$eq$(this.newValue, t1.get$newValue(o)) && this.isInsert === o.get$isInsert() && this.isRemove === o.get$isRemove();
        }
        return false;
      },
      get$hashCode: function(_) {
        return X.hashObjects([this.key, this.oldValue, this.newValue, this.isInsert, this.isRemove]);
      },
      toString$0: function(_) {
        var kind;
        if (this.isInsert)
          kind = "insert";
        else
          kind = this.isRemove ? "remove" : "set";
        return "#<MapChangeRecord " + kind + " " + H.S(this.key) + " from " + H.S(this.oldValue) + " to " + H.S(this.newValue);
      },
      $isChangeRecord: 1
    },
    PropertyChangeRecord: {
      "^": "Object;object<,name>,oldValue>,newValue>,$ti",
      toString$0: function(_) {
        return "#<" + C.Type_PropertyChangeRecord_8EM.toString$0(0) + " " + this.name.toString$0(0) + " from " + H.S(this.oldValue) + " to: " + H.S(this.newValue);
      },
      $isChangeRecord: 1
    }
  }], ["", "package:path/path.dart",, D, {
    "^": "",
    current: function() {
      var uri, t1, t2, path, lastIndex;
      uri = P.Uri_base();
      if (J.$eq$(uri, $._currentUriBase))
        return $._current;
      $._currentUriBase = uri;
      t1 = $.$get$Style_platform();
      t2 = $.$get$Style_url();
      if (t1 == null ? t2 == null : t1 === t2) {
        t1 = uri.resolve$1(".").toString$0(0);
        $._current = t1;
        return t1;
      } else {
        path = uri.toFilePath$0();
        lastIndex = path.length - 1;
        t1 = lastIndex === 0 ? path : C.JSString_methods.substring$2(path, 0, lastIndex);
        $._current = t1;
        return t1;
      }
    }
  }], ["", "package:path/src/context.dart",, M, {
    "^": "",
    _parseUri: function(uri) {
      if (!!J.getInterceptor$(uri).$isUri)
        return uri;
      throw H.wrapException(P.ArgumentError$value(uri, "uri", "Value must be a String or a Uri"));
    },
    _validateArgList: function(method, args) {
      var t1, numArgs, i, numArgs0, message, t2, t3, t4;
      t1 = P.String;
      H.assertSubtype(args, "$isList", [t1], "$asList");
      for (numArgs = args.length, i = 1; i < numArgs; ++i) {
        if (args[i] == null || args[i - 1] != null)
          continue;
        for (; numArgs >= 1; numArgs = numArgs0) {
          numArgs0 = numArgs - 1;
          if (args[numArgs0] != null)
            break;
        }
        message = new P.StringBuffer("");
        t2 = method + "(";
        message._contents = t2;
        t3 = H.SubListIterable$(args, 0, numArgs, H.getTypeArgumentByIndex(args, 0));
        t4 = H.getTypeArgumentByIndex(t3, 0);
        t1 = t2 + new H.MappedListIterable(t3, H.functionTypeCheck(new M._validateArgList_closure(), {func: 1, ret: t1, args: [t4]}), [t4, t1]).join$1(0, ", ");
        message._contents = t1;
        message._contents = t1 + ("): part " + (i - 1) + " was null, but part " + i + " was not.");
        throw H.wrapException(P.ArgumentError$(message.toString$0(0)));
      }
    },
    Context: {
      "^": "Object;style,_context$_current",
      absolute$7: function(_, part1, part2, part3, part4, part5, part6, part7) {
        var t1;
        M._validateArgList("absolute", H.setRuntimeTypeInfo([part1, part2, part3, part4, part5, part6, part7], [P.String]));
        t1 = this.style;
        t1 = t1.rootLength$1(part1) > 0 && !t1.isRootRelative$1(part1);
        if (t1)
          return part1;
        t1 = this._context$_current;
        return this.join$8(0, t1 != null ? t1 : D.current(), part1, part2, part3, part4, part5, part6, part7);
      },
      absolute$1: function($receiver, part1) {
        return this.absolute$7($receiver, part1, null, null, null, null, null, null);
      },
      join$8: function(_, part1, part2, part3, part4, part5, part6, part7, part8) {
        var parts, t1;
        parts = H.setRuntimeTypeInfo([part1, part2, part3, part4, part5, part6, part7, part8], [P.String]);
        M._validateArgList("join", parts);
        t1 = H.getTypeArgumentByIndex(parts, 0);
        return this.joinAll$1(new H.WhereIterable(parts, H.functionTypeCheck(new M.Context_join_closure(), {func: 1, ret: P.bool, args: [t1]}), [t1]));
      },
      joinAll$1: function(parts) {
        var t1, t2, t3, needsSeparator, isAbsoluteAndNotRootRelative, t4, t5, parsed, path;
        H.assertSubtype(parts, "$isIterable", [P.String], "$asIterable");
        for (t1 = H.getTypeArgumentByIndex(parts, 0), t2 = H.functionTypeCheck(new M.Context_joinAll_closure(), {func: 1, ret: P.bool, args: [t1]}), t3 = parts.get$iterator(parts), t1 = new H.WhereIterator(t3, t2, [t1]), t2 = this.style, needsSeparator = false, isAbsoluteAndNotRootRelative = false, t4 = ""; t1.moveNext$0();) {
          t5 = t3.get$current(t3);
          if (t2.isRootRelative$1(t5) && isAbsoluteAndNotRootRelative) {
            parsed = X.ParsedPath_ParsedPath$parse(t5, t2);
            path = t4.charCodeAt(0) == 0 ? t4 : t4;
            t4 = C.JSString_methods.substring$2(path, 0, t2.rootLength$2$withDrive(path, true));
            parsed.root = t4;
            if (t2.needsSeparator$1(t4))
              C.JSArray_methods.$indexSet(parsed.separators, 0, t2.get$separator());
            t4 = parsed.toString$0(0);
          } else if (t2.rootLength$1(t5) > 0) {
            isAbsoluteAndNotRootRelative = !t2.isRootRelative$1(t5);
            t4 = H.S(t5);
          } else {
            if (!(t5.length > 0 && t2.containsSeparator$1(t5[0])))
              if (needsSeparator)
                t4 += t2.get$separator();
            t4 += H.S(t5);
          }
          needsSeparator = t2.needsSeparator$1(t5);
        }
        return t4.charCodeAt(0) == 0 ? t4 : t4;
      },
      split$1: function(_, path) {
        var parsed, t1, t2;
        parsed = X.ParsedPath_ParsedPath$parse(path, this.style);
        t1 = parsed.parts;
        t2 = H.getTypeArgumentByIndex(t1, 0);
        parsed.set$parts(P.List_List$from(new H.WhereIterable(t1, H.functionTypeCheck(new M.Context_split_closure(), {func: 1, ret: P.bool, args: [t2]}), [t2]), true, t2));
        t1 = parsed.root;
        if (t1 != null)
          C.JSArray_methods.insert$2(parsed.parts, 0, t1);
        return parsed.parts;
      },
      normalize$1: function(_, path) {
        var parsed;
        if (!this._needsNormalization$1(path))
          return path;
        parsed = X.ParsedPath_ParsedPath$parse(path, this.style);
        parsed.normalize$0(0);
        return parsed.toString$0(0);
      },
      _needsNormalization$1: function(path) {
        var t1, root, t2, i, start, previous, t3, previousPrevious, codeUnit, t4;
        path.toString;
        t1 = this.style;
        root = t1.rootLength$1(path);
        if (root !== 0) {
          if (t1 === $.$get$Style_windows())
            for (t2 = J.getInterceptor$s(path), i = 0; i < root; ++i)
              if (t2._codeUnitAt$1(path, i) === 47)
                return true;
          start = root;
          previous = 47;
        } else {
          start = 0;
          previous = null;
        }
        for (t2 = new H.CodeUnits(path).__internal$_string, t3 = t2.length, i = start, previousPrevious = null; i < t3; ++i, previousPrevious = previous, previous = codeUnit) {
          codeUnit = C.JSString_methods.codeUnitAt$1(t2, i);
          if (t1.isSeparator$1(codeUnit)) {
            if (t1 === $.$get$Style_windows() && codeUnit === 47)
              return true;
            if (previous != null && t1.isSeparator$1(previous))
              return true;
            if (previous === 46)
              t4 = previousPrevious == null || previousPrevious === 46 || t1.isSeparator$1(previousPrevious);
            else
              t4 = false;
            if (t4)
              return true;
          }
        }
        if (previous == null)
          return true;
        if (t1.isSeparator$1(previous))
          return true;
        if (previous === 46)
          t1 = previousPrevious == null || t1.isSeparator$1(previousPrevious) || previousPrevious === 46;
        else
          t1 = false;
        if (t1)
          return true;
        return false;
      },
      relative$2$from: function(path, from) {
        var t1, t2, fromParsed, pathParsed, t3;
        t1 = this.style;
        t2 = t1.rootLength$1(path);
        if (t2 <= 0)
          return this.normalize$1(0, path);
        t2 = this._context$_current;
        from = t2 != null ? t2 : D.current();
        if (t1.rootLength$1(from) <= 0 && t1.rootLength$1(path) > 0)
          return this.normalize$1(0, path);
        if (t1.rootLength$1(path) <= 0 || t1.isRootRelative$1(path))
          path = this.absolute$1(0, path);
        if (t1.rootLength$1(path) <= 0 && t1.rootLength$1(from) > 0)
          throw H.wrapException(X.PathException$('Unable to find a path to "' + H.S(path) + '" from "' + H.S(from) + '".'));
        fromParsed = X.ParsedPath_ParsedPath$parse(from, t1);
        fromParsed.normalize$0(0);
        pathParsed = X.ParsedPath_ParsedPath$parse(path, t1);
        pathParsed.normalize$0(0);
        t2 = fromParsed.parts;
        if (t2.length > 0 && J.$eq$(t2[0], "."))
          return pathParsed.toString$0(0);
        t2 = fromParsed.root;
        t3 = pathParsed.root;
        if (t2 != t3)
          t2 = t2 == null || t3 == null || !t1.pathsEqual$2(t2, t3);
        else
          t2 = false;
        if (t2)
          return pathParsed.toString$0(0);
        while (true) {
          t2 = fromParsed.parts;
          if (t2.length > 0) {
            t3 = pathParsed.parts;
            t2 = t3.length > 0 && t1.pathsEqual$2(t2[0], t3[0]);
          } else
            t2 = false;
          if (!t2)
            break;
          C.JSArray_methods.removeAt$1(fromParsed.parts, 0);
          C.JSArray_methods.removeAt$1(fromParsed.separators, 1);
          C.JSArray_methods.removeAt$1(pathParsed.parts, 0);
          C.JSArray_methods.removeAt$1(pathParsed.separators, 1);
        }
        t2 = fromParsed.parts;
        if (t2.length > 0 && J.$eq$(t2[0], ".."))
          throw H.wrapException(X.PathException$('Unable to find a path to "' + H.S(path) + '" from "' + H.S(from) + '".'));
        t2 = P.String;
        C.JSArray_methods.insertAll$2(pathParsed.parts, 0, P.List_List$filled(fromParsed.parts.length, "..", false, t2));
        C.JSArray_methods.$indexSet(pathParsed.separators, 0, "");
        C.JSArray_methods.insertAll$2(pathParsed.separators, 1, P.List_List$filled(fromParsed.parts.length, t1.get$separator(), false, t2));
        t1 = pathParsed.parts;
        t2 = t1.length;
        if (t2 === 0)
          return ".";
        if (t2 > 1 && J.$eq$(C.JSArray_methods.get$last(t1), ".")) {
          C.JSArray_methods.removeLast$0(pathParsed.parts);
          t1 = pathParsed.separators;
          C.JSArray_methods.removeLast$0(t1);
          C.JSArray_methods.removeLast$0(t1);
          C.JSArray_methods.add$1(t1, "");
        }
        pathParsed.root = "";
        pathParsed.removeTrailingSeparators$0();
        return pathParsed.toString$0(0);
      },
      relative$1: function(path) {
        return this.relative$2$from(path, null);
      },
      prettyUri$1: function(uri) {
        var typedUri, t1, t2, path, rel;
        typedUri = M._parseUri(uri);
        if (typedUri.get$scheme() === "file") {
          t1 = this.style;
          t2 = $.$get$Style_url();
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        if (t1)
          return typedUri.toString$0(0);
        else {
          if (typedUri.get$scheme() !== "file")
            if (typedUri.get$scheme() !== "") {
              t1 = this.style;
              t2 = $.$get$Style_url();
              t2 = t1 == null ? t2 != null : t1 !== t2;
              t1 = t2;
            } else
              t1 = false;
          else
            t1 = false;
          if (t1)
            return typedUri.toString$0(0);
        }
        path = this.normalize$1(0, this.style.pathFromUri$1(M._parseUri(typedUri)));
        rel = this.relative$1(path);
        return this.split$1(0, rel).length > this.split$1(0, path).length ? path : rel;
      }
    },
    Context_join_closure: {
      "^": "Closure:17;",
      call$1: function(part) {
        return H.stringTypeCheck(part) != null;
      }
    },
    Context_joinAll_closure: {
      "^": "Closure:17;",
      call$1: function(part) {
        return H.stringTypeCheck(part) !== "";
      }
    },
    Context_split_closure: {
      "^": "Closure:17;",
      call$1: function(part) {
        return H.stringTypeCheck(part).length !== 0;
      }
    },
    _validateArgList_closure: {
      "^": "Closure:10;",
      call$1: [function(arg) {
        H.stringTypeCheck(arg);
        return arg == null ? "null" : '"' + arg + '"';
      }, null, null, 4, 0, null, 11, "call"]
    }
  }], ["", "package:path/src/internal_style.dart",, B, {
    "^": "",
    InternalStyle: {
      "^": "Style;",
      getRoot$1: function(path) {
        var $length, t1;
        $length = this.rootLength$1(path);
        if ($length > 0)
          return J.substring$2$s(path, 0, $length);
        if (this.isRootRelative$1(path)) {
          if (0 >= path.length)
            return H.ioore(path, 0);
          t1 = path[0];
        } else
          t1 = null;
        return t1;
      },
      pathsEqual$2: function(path1, path2) {
        return H.stringTypeCheck(path1) == H.stringTypeCheck(path2);
      }
    }
  }], ["", "package:path/src/parsed_path.dart",, X, {
    "^": "",
    ParsedPath: {
      "^": "Object;style,root,isRootRelative,parts,separators",
      set$parts: function(parts) {
        this.parts = H.assertSubtype(parts, "$isList", [P.String], "$asList");
      },
      set$separators: function(separators) {
        this.separators = H.assertSubtype(separators, "$isList", [P.String], "$asList");
      },
      removeTrailingSeparators$0: function() {
        var t1, t2;
        while (true) {
          t1 = this.parts;
          if (!(t1.length !== 0 && J.$eq$(C.JSArray_methods.get$last(t1), "")))
            break;
          C.JSArray_methods.removeLast$0(this.parts);
          C.JSArray_methods.removeLast$0(this.separators);
        }
        t1 = this.separators;
        t2 = t1.length;
        if (t2 > 0)
          C.JSArray_methods.$indexSet(t1, t2 - 1, "");
      },
      normalize$1$canonicalize: function(_, canonicalize) {
        var t1, newParts, t2, t3, leadingDoubles, _i, part, t4, newSeparators;
        t1 = P.String;
        newParts = H.setRuntimeTypeInfo([], [t1]);
        for (t2 = this.parts, t3 = t2.length, leadingDoubles = 0, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i) {
          part = t2[_i];
          t4 = J.getInterceptor$(part);
          if (!(t4.$eq(part, ".") || t4.$eq(part, "")))
            if (t4.$eq(part, ".."))
              if (newParts.length > 0)
                newParts.pop();
              else
                ++leadingDoubles;
            else
              C.JSArray_methods.add$1(newParts, part);
        }
        if (this.root == null)
          C.JSArray_methods.insertAll$2(newParts, 0, P.List_List$filled(leadingDoubles, "..", false, t1));
        if (newParts.length === 0 && this.root == null)
          C.JSArray_methods.add$1(newParts, ".");
        newSeparators = P.List_List$generate(newParts.length, new X.ParsedPath_normalize_closure(this), true, t1);
        t1 = this.root;
        C.JSArray_methods.insert$2(newSeparators, 0, t1 != null && newParts.length > 0 && this.style.needsSeparator$1(t1) ? this.style.get$separator() : "");
        this.set$parts(newParts);
        this.set$separators(newSeparators);
        t1 = this.root;
        if (t1 != null) {
          t2 = this.style;
          t3 = $.$get$Style_windows();
          t3 = t2 == null ? t3 == null : t2 === t3;
          t2 = t3;
        } else
          t2 = false;
        if (t2) {
          t1.toString;
          this.root = H.stringReplaceAllUnchecked(t1, "/", "\\");
        }
        this.removeTrailingSeparators$0();
      },
      normalize$0: function($receiver) {
        return this.normalize$1$canonicalize($receiver, false);
      },
      toString$0: function(_) {
        var t1, i, t2;
        t1 = this.root;
        t1 = t1 != null ? t1 : "";
        for (i = 0; i < this.parts.length; ++i) {
          t2 = this.separators;
          if (i >= t2.length)
            return H.ioore(t2, i);
          t2 = t1 + H.S(t2[i]);
          t1 = this.parts;
          if (i >= t1.length)
            return H.ioore(t1, i);
          t1 = t2 + H.S(t1[i]);
        }
        t1 += H.S(C.JSArray_methods.get$last(this.separators));
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      static: {
        ParsedPath_ParsedPath$parse: function(path, style) {
          var root, isRootRelative, t1, parts, separators, start, i;
          root = style.getRoot$1(path);
          isRootRelative = style.isRootRelative$1(path);
          if (root != null)
            path = J.substring$1$s(path, root.length);
          t1 = [P.String];
          parts = H.setRuntimeTypeInfo([], t1);
          separators = H.setRuntimeTypeInfo([], t1);
          t1 = path.length;
          if (t1 !== 0 && style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, 0))) {
            if (0 >= t1)
              return H.ioore(path, 0);
            C.JSArray_methods.add$1(separators, path[0]);
            start = 1;
          } else {
            C.JSArray_methods.add$1(separators, "");
            start = 0;
          }
          for (i = start; i < t1; ++i)
            if (style.isSeparator$1(C.JSString_methods._codeUnitAt$1(path, i))) {
              C.JSArray_methods.add$1(parts, C.JSString_methods.substring$2(path, start, i));
              C.JSArray_methods.add$1(separators, path[i]);
              start = i + 1;
            }
          if (start < t1) {
            C.JSArray_methods.add$1(parts, C.JSString_methods.substring$1(path, start));
            C.JSArray_methods.add$1(separators, "");
          }
          return new X.ParsedPath(style, root, isRootRelative, parts, separators);
        }
      }
    },
    ParsedPath_normalize_closure: {
      "^": "Closure:15;$this",
      call$1: function(_) {
        return this.$this.style.get$separator();
      }
    }
  }], ["", "package:path/src/path_exception.dart",, X, {
    "^": "",
    PathException: {
      "^": "Object;message>",
      toString$0: function(_) {
        return "PathException: " + this.message;
      },
      static: {
        PathException$: function(message) {
          return new X.PathException(message);
        }
      }
    }
  }], ["", "package:path/src/style.dart",, O, {
    "^": "",
    Style__getPlatformStyle: function() {
      if (P.Uri_base().get$scheme() !== "file")
        return $.$get$Style_url();
      var t1 = P.Uri_base();
      if (!J.endsWith$1$s(t1.get$path(t1), "/"))
        return $.$get$Style_url();
      if (P._Uri__Uri(null, null, "a/b", null, null, null, null, null, null).toFilePath$0() === "a\\b")
        return $.$get$Style_windows();
      return $.$get$Style_posix();
    },
    Style: {
      "^": "Object;",
      toString$0: function(_) {
        return this.get$name(this);
      }
    }
  }], ["", "package:path/src/style/posix.dart",, E, {
    "^": "",
    PosixStyle: {
      "^": "InternalStyle;name>,separator<,separators,separatorPattern,needsSeparatorPattern,rootPattern,0relativeRootPattern",
      containsSeparator$1: function(path) {
        return C.JSString_methods.contains$1(path, "/");
      },
      isSeparator$1: function(codeUnit) {
        return codeUnit === 47;
      },
      needsSeparator$1: function(path) {
        var t1 = path.length;
        return t1 !== 0 && J.codeUnitAt$1$s(path, t1 - 1) !== 47;
      },
      rootLength$2$withDrive: function(path, withDrive) {
        if (path.length !== 0 && J._codeUnitAt$1$s(path, 0) === 47)
          return 1;
        return 0;
      },
      rootLength$1: function(path) {
        return this.rootLength$2$withDrive(path, false);
      },
      isRootRelative$1: function(path) {
        return false;
      },
      pathFromUri$1: function(uri) {
        var t1;
        if (uri.get$scheme() === "" || uri.get$scheme() === "file") {
          t1 = uri.get$path(uri);
          return P._Uri__uriDecode(t1, 0, t1.length, C.Utf8Codec_false, false);
        }
        throw H.wrapException(P.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'."));
      }
    }
  }], ["", "package:path/src/style/url.dart",, F, {
    "^": "",
    UrlStyle: {
      "^": "InternalStyle;name>,separator<,separators,separatorPattern,needsSeparatorPattern,rootPattern,relativeRootPattern",
      containsSeparator$1: function(path) {
        return C.JSString_methods.contains$1(path, "/");
      },
      isSeparator$1: function(codeUnit) {
        return codeUnit === 47;
      },
      needsSeparator$1: function(path) {
        var t1 = path.length;
        if (t1 === 0)
          return false;
        if (J.getInterceptor$s(path).codeUnitAt$1(path, t1 - 1) !== 47)
          return true;
        return C.JSString_methods.endsWith$1(path, "://") && this.rootLength$1(path) === t1;
      },
      rootLength$2$withDrive: function(path, withDrive) {
        var t1, i, codeUnit, index, t2;
        t1 = path.length;
        if (t1 === 0)
          return 0;
        if (J.getInterceptor$s(path)._codeUnitAt$1(path, 0) === 47)
          return 1;
        for (i = 0; i < t1; ++i) {
          codeUnit = C.JSString_methods._codeUnitAt$1(path, i);
          if (codeUnit === 47)
            return 0;
          if (codeUnit === 58) {
            if (i === 0)
              return 0;
            index = C.JSString_methods.indexOf$2(path, "/", C.JSString_methods.startsWith$2(path, "//", i + 1) ? i + 3 : i);
            if (index <= 0)
              return t1;
            if (!withDrive || t1 < index + 3)
              return index;
            if (!C.JSString_methods.startsWith$1(path, "file://"))
              return index;
            if (!B.isDriveLetter(path, index + 1))
              return index;
            t2 = index + 3;
            return t1 === t2 ? t2 : index + 4;
          }
        }
        return 0;
      },
      rootLength$1: function(path) {
        return this.rootLength$2$withDrive(path, false);
      },
      isRootRelative$1: function(path) {
        return path.length !== 0 && J._codeUnitAt$1$s(path, 0) === 47;
      },
      pathFromUri$1: function(uri) {
        return J.toString$0$(uri);
      }
    }
  }], ["", "package:path/src/style/windows.dart",, L, {
    "^": "",
    WindowsStyle: {
      "^": "InternalStyle;name>,separator<,separators,separatorPattern,needsSeparatorPattern,rootPattern,relativeRootPattern",
      containsSeparator$1: function(path) {
        return C.JSString_methods.contains$1(path, "/");
      },
      isSeparator$1: function(codeUnit) {
        return codeUnit === 47 || codeUnit === 92;
      },
      needsSeparator$1: function(path) {
        var t1 = path.length;
        if (t1 === 0)
          return false;
        t1 = J.codeUnitAt$1$s(path, t1 - 1);
        return !(t1 === 47 || t1 === 92);
      },
      rootLength$2$withDrive: function(path, withDrive) {
        var t1, t2, index;
        t1 = path.length;
        if (t1 === 0)
          return 0;
        t2 = J.getInterceptor$s(path)._codeUnitAt$1(path, 0);
        if (t2 === 47)
          return 1;
        if (t2 === 92) {
          if (t1 < 2 || C.JSString_methods._codeUnitAt$1(path, 1) !== 92)
            return 1;
          index = C.JSString_methods.indexOf$2(path, "\\", 2);
          if (index > 0) {
            index = C.JSString_methods.indexOf$2(path, "\\", index + 1);
            if (index > 0)
              return index;
          }
          return t1;
        }
        if (t1 < 3)
          return 0;
        if (!B.isAlphabetic(t2))
          return 0;
        if (C.JSString_methods._codeUnitAt$1(path, 1) !== 58)
          return 0;
        t1 = C.JSString_methods._codeUnitAt$1(path, 2);
        if (!(t1 === 47 || t1 === 92))
          return 0;
        return 3;
      },
      rootLength$1: function(path) {
        return this.rootLength$2$withDrive(path, false);
      },
      isRootRelative$1: function(path) {
        return this.rootLength$1(path) === 1;
      },
      pathFromUri$1: function(uri) {
        var path, t1;
        if (uri.get$scheme() !== "" && uri.get$scheme() !== "file")
          throw H.wrapException(P.ArgumentError$("Uri " + uri.toString$0(0) + " must have scheme 'file:'."));
        path = uri.get$path(uri);
        if (uri.get$host(uri) === "") {
          if (path.length >= 3 && J.startsWith$1$s(path, "/") && B.isDriveLetter(path, 1))
            path = J.replaceFirst$2$s(path, "/", "");
        } else
          path = "\\\\" + H.S(uri.get$host(uri)) + H.S(path);
        path.toString;
        t1 = H.stringReplaceAllUnchecked(path, "/", "\\");
        return P._Uri__uriDecode(t1, 0, t1.length, C.Utf8Codec_false, false);
      },
      codeUnitsEqual$2: function(codeUnit1, codeUnit2) {
        var upperCase1;
        if (codeUnit1 === codeUnit2)
          return true;
        if (codeUnit1 === 47)
          return codeUnit2 === 92;
        if (codeUnit1 === 92)
          return codeUnit2 === 47;
        if ((codeUnit1 ^ codeUnit2) !== 32)
          return false;
        upperCase1 = codeUnit1 | 32;
        return upperCase1 >= 97 && upperCase1 <= 122;
      },
      pathsEqual$2: function(path1, path2) {
        var t1, t2, i;
        H.stringTypeCheck(path1);
        H.stringTypeCheck(path2);
        if (path1 == path2)
          return true;
        t1 = path1.length;
        if (t1 !== path2.length)
          return false;
        for (t2 = J.getInterceptor$s(path2), i = 0; i < t1; ++i)
          if (!this.codeUnitsEqual$2(C.JSString_methods._codeUnitAt$1(path1, i), t2._codeUnitAt$1(path2, i)))
            return false;
        return true;
      }
    }
  }], ["", "package:path/src/utils.dart",, B, {
    "^": "",
    isAlphabetic: function(char) {
      var t1;
      if (!(char >= 65 && char <= 90))
        t1 = char >= 97 && char <= 122;
      else
        t1 = true;
      return t1;
    },
    isDriveLetter: function(path, index) {
      var t1, t2;
      t1 = path.length;
      t2 = index + 2;
      if (t1 < t2)
        return false;
      if (!B.isAlphabetic(J.getInterceptor$s(path).codeUnitAt$1(path, index)))
        return false;
      if (C.JSString_methods.codeUnitAt$1(path, index + 1) !== 58)
        return false;
      if (t1 === t2)
        return true;
      return C.JSString_methods.codeUnitAt$1(path, t2) === 47;
    }
  }], ["quiver.core", "package:quiver/core.dart",, X, {
    "^": "",
    hashObjects: function(objects) {
      return X._finish(C.JSArray_methods.fold$1$2(objects, 0, new X.hashObjects_closure(), P.int));
    },
    _combine: function(hash, value) {
      if (typeof hash !== "number")
        return hash.$add();
      if (typeof value !== "number")
        return H.iae(value);
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      return hash ^ hash >>> 6;
    },
    _finish: function(hash) {
      H.intTypeCheck(hash);
      if (typeof hash !== "number")
        return H.iae(hash);
      hash = 536870911 & hash + ((67108863 & hash) << 3);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15);
    },
    hashObjects_closure: {
      "^": "Closure:208;",
      call$2: function(h, i) {
        return X._combine(H.intTypeCheck(h), J.get$hashCode$(i));
      }
    },
    Optional: {
      "^": "IterableBase;_core0$_value<,$ti",
      get$iterator: function(_) {
        var t1 = this._core0$_value;
        if (t1 != null) {
          t1 = H.setRuntimeTypeInfo([t1], this.$ti);
          t1 = new J.ArrayIterator(t1, 1, 0, [H.getTypeArgumentByIndex(t1, 0)]);
        } else
          t1 = C.C_EmptyIterator;
        return t1;
      },
      get$hashCode: function(_) {
        return J.get$hashCode$(this._core0$_value);
      },
      $eq: function(_, o) {
        if (o == null)
          return false;
        return H.checkSubtype(o, "$isOptional", this.$ti, null) && J.$eq$(o.get$_core0$_value(), this._core0$_value);
      },
      toString$0: function(_) {
        var t1 = this._core0$_value;
        return t1 == null ? "Optional { absent }" : "Optional { value: " + H.S(t1) + " }";
      },
      static: {
        Optional$of: function(value, $T) {
          if (value == null)
            H.throwExpression(P.ArgumentError$("Must not be null."));
          return new X.Optional(value, [$T]);
        }
      }
    }
  }], ["quiver.time", "package:quiver/time.dart",, V, {
    "^": "",
    systemTime: [function() {
      return new P.DateTime(Date.now(), false);
    }, "call$0", "time__systemTime$closure", 0, 0, 170],
    Clock: {
      "^": "Object;_time"
    }
  }], ["", "package:source_span/src/file.dart",, Y, {
    "^": "",
    SourceFile: {
      "^": "Object;url,_lineStarts,_decodedChars,0_cachedLine",
      get$length: function(_) {
        return this._decodedChars.length;
      },
      get$lines: function(_) {
        return this._lineStarts.length;
      },
      SourceFile$decoded$2$url: function(decodedChars, url) {
        var t1, t2, t3, i, c, j, t4;
        for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
          c = t1[i];
          if (c === 13) {
            j = i + 1;
            if (j < t2) {
              if (j >= t2)
                return H.ioore(t1, j);
              t4 = t1[j] !== 10;
            } else
              t4 = true;
            if (t4)
              c = 10;
          }
          if (c === 10)
            C.JSArray_methods.add$1(t3, i + 1);
        }
      },
      getLine$1: function(offset) {
        var t1;
        if (typeof offset !== "number")
          return offset.$lt();
        if (offset < 0)
          throw H.wrapException(P.RangeError$("Offset may not be negative, was " + offset + "."));
        else if (offset > this._decodedChars.length)
          throw H.wrapException(P.RangeError$("Offset " + offset + " must not be greater than the number of characters in the file, " + this.get$length(this) + "."));
        t1 = this._lineStarts;
        if (offset < C.JSArray_methods.get$first(t1))
          return -1;
        if (offset >= C.JSArray_methods.get$last(t1))
          return t1.length - 1;
        if (this._isNearCachedLine$1(offset))
          return this._cachedLine;
        t1 = this._binarySearch$1(offset) - 1;
        this._cachedLine = t1;
        return t1;
      },
      _isNearCachedLine$1: function(offset) {
        var t1, t2, t3, t4;
        t1 = this._cachedLine;
        if (t1 == null)
          return false;
        t2 = this._lineStarts;
        if (t1 >>> 0 !== t1 || t1 >= t2.length)
          return H.ioore(t2, t1);
        t1 = t2[t1];
        if (typeof offset !== "number")
          return offset.$lt();
        if (offset < t1)
          return false;
        t1 = this._cachedLine;
        t3 = t2.length;
        if (typeof t1 !== "number")
          return t1.$ge();
        if (t1 < t3 - 1) {
          t4 = t1 + 1;
          if (t4 < 0 || t4 >= t3)
            return H.ioore(t2, t4);
          t4 = offset < t2[t4];
        } else
          t4 = true;
        if (t4)
          return true;
        if (t1 < t3 - 2) {
          t4 = t1 + 2;
          if (t4 < 0 || t4 >= t3)
            return H.ioore(t2, t4);
          t4 = offset < t2[t4];
          t2 = t4;
        } else
          t2 = true;
        if (t2) {
          this._cachedLine = t1 + 1;
          return true;
        }
        return false;
      },
      _binarySearch$1: function(offset) {
        var t1, t2, max, min, half, t3;
        t1 = this._lineStarts;
        t2 = t1.length;
        max = t2 - 1;
        for (min = 0; min < max;) {
          half = min + C.JSInt_methods._tdivFast$1(max - min, 2);
          if (half < 0 || half >= t2)
            return H.ioore(t1, half);
          t3 = t1[half];
          if (typeof offset !== "number")
            return H.iae(offset);
          if (t3 > offset)
            max = half;
          else
            min = half + 1;
        }
        return max;
      },
      getColumn$2$line: function(offset, line) {
        var lineStart;
        if (typeof offset !== "number")
          return offset.$lt();
        if (offset < 0)
          throw H.wrapException(P.RangeError$("Offset may not be negative, was " + offset + "."));
        else if (offset > this._decodedChars.length)
          throw H.wrapException(P.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + this.get$length(this) + "."));
        line = this.getLine$1(offset);
        lineStart = C.JSArray_methods.$index(this._lineStarts, line);
        if (lineStart > offset)
          throw H.wrapException(P.RangeError$("Line " + H.S(line) + " comes after offset " + offset + "."));
        return offset - lineStart;
      },
      getColumn$1: function(offset) {
        return this.getColumn$2$line(offset, null);
      },
      getOffset$2: function(line, column) {
        var t1, t2, result, t3;
        if (typeof line !== "number")
          return line.$lt();
        if (line < 0)
          throw H.wrapException(P.RangeError$("Line may not be negative, was " + line + "."));
        else {
          t1 = this._lineStarts;
          t2 = t1.length;
          if (line >= t2)
            throw H.wrapException(P.RangeError$("Line " + line + " must be less than the number of lines in the file, " + this.get$lines(this) + "."));
        }
        result = t1[line];
        if (result <= this._decodedChars.length) {
          t3 = line + 1;
          t1 = t3 < t2 && result >= t1[t3];
        } else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$("Line " + line + " doesn't have 0 columns."));
        return result;
      },
      getOffset$1: function(line) {
        return this.getOffset$2(line, null);
      }
    },
    FileLocation: {
      "^": "SourceLocationMixin;file,offset>",
      get$sourceUrl: function() {
        return this.file.url;
      },
      get$line: function(_) {
        return this.file.getLine$1(this.offset);
      },
      get$column: function() {
        return this.file.getColumn$1(this.offset);
      },
      static: {
        FileLocation$_: function(file, offset) {
          if (typeof offset !== "number")
            return offset.$lt();
          if (offset < 0)
            H.throwExpression(P.RangeError$("Offset may not be negative, was " + offset + "."));
          else if (offset > file._decodedChars.length)
            H.throwExpression(P.RangeError$("Offset " + offset + " must not be greater than the number of characters in the file, " + file.get$length(file) + "."));
          return new Y.FileLocation(file, offset);
        }
      }
    },
    _FileSpan: {
      "^": "SourceSpanMixin;file,_file$_start,_end",
      get$sourceUrl: function() {
        return this.file.url;
      },
      get$length: function(_) {
        var t1 = this._file$_start;
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this._end - t1;
      },
      get$start: function(_) {
        return Y.FileLocation$_(this.file, this._file$_start);
      },
      get$end: function(_) {
        return Y.FileLocation$_(this.file, this._end);
      },
      get$text: function(_) {
        return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._end), 0, null);
      },
      get$context: function(_) {
        var t1, endOffset, endLine, t2;
        t1 = this.file;
        endOffset = this._end;
        endLine = t1.getLine$1(endOffset);
        if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
          t2 = this._file$_start;
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (endOffset - t2 === 0) {
            if (endLine === t1._lineStarts.length - 1)
              t1 = "";
            else {
              t2 = t1.getOffset$1(endLine);
              if (typeof endLine !== "number")
                return endLine.$add();
              t1 = P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t2, t1.getOffset$1(endLine + 1)), 0, null);
            }
            return t1;
          }
        } else if (endLine === t1._lineStarts.length - 1)
          endOffset = t1._decodedChars.length;
        else {
          if (typeof endLine !== "number")
            return endLine.$add();
          endOffset = t1.getOffset$1(endLine + 1);
        }
        return P.String_String$fromCharCodes(C.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(this._file$_start)), endOffset), 0, null);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!J.getInterceptor$(other).$isFileSpan)
          return this.super$SourceSpanMixin$$eq(0, other);
        return this._file$_start == other._file$_start && this._end === other._end && J.$eq$(this.file.url, other.file.url);
      },
      get$hashCode: function(_) {
        return Y.SourceSpanMixin.prototype.get$hashCode.call(this, this);
      },
      $isFileSpan: 1,
      $isSourceSpanWithContext: 1
    }
  }], ["", "package:source_span/src/highlighter.dart",, U, {
    "^": "",
    Highlighter: {
      "^": "Object;_highlighter$_span,_color,_multiline,_paddingBeforeSidebar,_highlighter$_buffer",
      highlight$0: function(_) {
        var t1, t2, lineStart, context, lines, t3, t4, lineNumber, _i, line, lastLineIndex;
        $._glyphs.toString;
        this._writeSidebar$1$end("\u2577");
        t1 = this._highlighter$_buffer;
        t1._contents += "\n";
        t2 = this._highlighter$_span;
        lineStart = B.findLineStart(t2.get$context(t2), t2.get$text(t2), t2.get$start(t2).get$column());
        context = t2.get$context(t2);
        if (typeof lineStart !== "number")
          return lineStart.$gt();
        if (lineStart > 0) {
          lines = C.JSString_methods.substring$2(context, 0, lineStart - 1).split("\n");
          t3 = t2.get$start(t2);
          t3 = t3.get$line(t3);
          t4 = lines.length;
          if (typeof t3 !== "number")
            return t3.$sub();
          lineNumber = t3 - t4;
          for (t3 = this._multiline, _i = 0; _i < t4; ++_i) {
            line = lines[_i];
            this._writeSidebar$1$line(lineNumber);
            t1._contents += C.JSString_methods.$mul(" ", t3 ? 3 : 1);
            this._writeText$1(line);
            t1._contents += "\n";
            ++lineNumber;
          }
          context = C.JSString_methods.substring$1(context, lineStart);
        }
        lines = H.setRuntimeTypeInfo(context.split("\n"), [P.String]);
        t3 = t2.get$end(t2);
        t3 = t3.get$line(t3);
        t2 = t2.get$start(t2);
        t2 = t2.get$line(t2);
        if (typeof t3 !== "number")
          return t3.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        lastLineIndex = t3 - t2;
        if (J.get$isEmpty$asx(C.JSArray_methods.get$last(lines)) && lines.length > lastLineIndex + 1) {
          if (0 >= lines.length)
            return H.ioore(lines, -1);
          lines.pop();
        }
        this._writeFirstLine$1(C.JSArray_methods.get$first(lines));
        if (this._multiline) {
          this._writeIntermediateLines$1(H.SubListIterable$(lines, 1, null, H.getTypeArgumentByIndex(lines, 0)).take$1(0, lastLineIndex - 1));
          if (lastLineIndex < 0 || lastLineIndex >= lines.length)
            return H.ioore(lines, lastLineIndex);
          this._writeLastLine$1(lines[lastLineIndex]);
        }
        this._writeTrailingLines$1(H.SubListIterable$(lines, lastLineIndex + 1, null, H.getTypeArgumentByIndex(lines, 0)));
        $._glyphs.toString;
        this._writeSidebar$1$end("\u2575");
        t1 = t1._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      _writeFirstLine$1: function(line) {
        var t1, t2, t3, t4, startColumn, endColumn, textBefore, textInside, tabsBefore, tabsInside;
        t1 = {};
        H.stringTypeCheck(line);
        t2 = this._highlighter$_span;
        t3 = t2.get$start(t2);
        this._writeSidebar$1$line(t3.get$line(t3));
        t3 = t2.get$start(t2).get$column();
        t4 = line.length;
        startColumn = Math.min(H.checkNum(t3), t4);
        t1.startColumn = startColumn;
        t3 = t2.get$end(t2);
        t3 = t3.get$offset(t3);
        if (typeof t3 !== "number")
          return H.iae(t3);
        t2 = t2.get$start(t2);
        t2 = t2.get$offset(t2);
        if (typeof t2 !== "number")
          return H.iae(t2);
        endColumn = Math.min(startColumn + t3 - t2, t4);
        t1.endColumn = endColumn;
        textBefore = J.substring$2$s(line, 0, startColumn);
        t2 = this._multiline;
        if (t2 && this._isOnlyWhitespace$1(textBefore)) {
          t1 = this._highlighter$_buffer;
          t1._contents += " ";
          this._colorize$1(new U.Highlighter__writeFirstLine_closure(this, line));
          t1._contents += "\n";
          return;
        }
        t3 = this._highlighter$_buffer;
        t3._contents += C.JSString_methods.$mul(" ", t2 ? 3 : 1);
        this._writeText$1(textBefore);
        textInside = C.JSString_methods.substring$2(line, startColumn, endColumn);
        this._colorize$1(new U.Highlighter__writeFirstLine_closure0(this, textInside));
        this._writeText$1(C.JSString_methods.substring$1(line, endColumn));
        t3._contents += "\n";
        tabsBefore = this._countTabs$1(textBefore);
        tabsInside = this._countTabs$1(textInside);
        startColumn += tabsBefore * 3;
        t1.startColumn = startColumn;
        t1.endColumn = endColumn + (tabsBefore + tabsInside) * 3;
        this._writeSidebar$0();
        if (t2) {
          t3._contents += " ";
          this._colorize$1(new U.Highlighter__writeFirstLine_closure1(t1, this));
        } else {
          t3._contents += C.JSString_methods.$mul(" ", startColumn + 1);
          this._colorize$1(new U.Highlighter__writeFirstLine_closure2(t1, this));
        }
        t3._contents += "\n";
      },
      _writeIntermediateLines$1: function(lines) {
        var t1, lineNumber, t2, t3;
        H.assertSubtype(lines, "$isIterable", [P.String], "$asIterable");
        t1 = this._highlighter$_span;
        t1 = t1.get$start(t1);
        t1 = t1.get$line(t1);
        if (typeof t1 !== "number")
          return t1.$add();
        lineNumber = t1 + 1;
        for (t1 = new H.ListIterator(lines, lines.get$length(lines), 0, [H.getTypeArgumentByIndex(lines, 0)]), t2 = this._highlighter$_buffer; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          this._writeSidebar$1$line(lineNumber);
          t2._contents += " ";
          this._colorize$1(new U.Highlighter__writeIntermediateLines_closure(this, t3));
          t2._contents += "\n";
          ++lineNumber;
        }
      },
      _writeLastLine$1: function(line) {
        var t1, t2, t3, endColumn, textInside;
        t1 = {};
        H.stringTypeCheck(line);
        t2 = this._highlighter$_span;
        t3 = t2.get$end(t2);
        this._writeSidebar$1$line(t3.get$line(t3));
        t2 = t2.get$end(t2).get$column();
        t3 = line.length;
        endColumn = Math.min(H.checkNum(t2), t3);
        t1.endColumn = endColumn;
        if (this._multiline && endColumn === t3) {
          t1 = this._highlighter$_buffer;
          t1._contents += " ";
          this._colorize$1(new U.Highlighter__writeLastLine_closure(this, line));
          t1._contents += "\n";
          return;
        }
        t2 = this._highlighter$_buffer;
        t2._contents += " ";
        textInside = J.substring$2$s(line, 0, endColumn);
        this._colorize$1(new U.Highlighter__writeLastLine_closure0(this, textInside));
        this._writeText$1(C.JSString_methods.substring$1(line, endColumn));
        t2._contents += "\n";
        t1.endColumn = endColumn + this._countTabs$1(textInside) * 3;
        this._writeSidebar$0();
        t2._contents += " ";
        this._colorize$1(new U.Highlighter__writeLastLine_closure1(t1, this));
        t2._contents += "\n";
      },
      _writeTrailingLines$1: function(lines) {
        var t1, lineNumber, t2, t3, t4;
        H.assertSubtype(lines, "$isIterable", [P.String], "$asIterable");
        t1 = this._highlighter$_span;
        t1 = t1.get$end(t1);
        t1 = t1.get$line(t1);
        if (typeof t1 !== "number")
          return t1.$add();
        lineNumber = t1 + 1;
        for (t1 = new H.ListIterator(lines, lines.get$length(lines), 0, [H.getTypeArgumentByIndex(lines, 0)]), t2 = this._highlighter$_buffer, t3 = this._multiline; t1.moveNext$0();) {
          t4 = t1.__internal$_current;
          this._writeSidebar$1$line(lineNumber);
          t2._contents += C.JSString_methods.$mul(" ", t3 ? 3 : 1);
          this._writeText$1(t4);
          t2._contents += "\n";
          ++lineNumber;
        }
      },
      _writeText$1: function(text) {
        var t1, t2, t3;
        for (text.toString, t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [P.int]), t2 = this._highlighter$_buffer; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          if (t3 === 9)
            t2._contents += C.JSString_methods.$mul(" ", 4);
          else
            t2._contents += H.Primitives_stringFromCharCode(t3);
        }
      },
      _writeSidebar$2$end$line: function(end, line) {
        this._colorize$2$color(new U.Highlighter__writeSidebar_closure(this, line, end), "\x1b[34m");
      },
      _writeSidebar$1$end: function(end) {
        return this._writeSidebar$2$end$line(end, null);
      },
      _writeSidebar$1$line: function(line) {
        return this._writeSidebar$2$end$line(null, line);
      },
      _writeSidebar$0: function() {
        return this._writeSidebar$2$end$line(null, null);
      },
      _countTabs$1: function(text) {
        var t1, count;
        for (t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [P.int]), count = 0; t1.moveNext$0();)
          if (t1.__internal$_current === 9)
            ++count;
        return count;
      },
      _isOnlyWhitespace$1: function(text) {
        var t1, t2;
        for (t1 = new H.CodeUnits(text), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [P.int]); t1.moveNext$0();) {
          t2 = t1.__internal$_current;
          if (t2 !== 32 && t2 !== 9)
            return false;
        }
        return true;
      },
      _colorize$2$color: function(callback, color) {
        var t1, t2;
        H.functionTypeCheck(callback, {func: 1, ret: -1});
        t1 = this._color;
        t2 = t1 != null;
        if (t2) {
          t1 = color == null ? t1 : color;
          this._highlighter$_buffer._contents += t1;
        }
        callback.call$0();
        if (t2)
          this._highlighter$_buffer._contents += "\x1b[0m";
      },
      _colorize$1: function(callback) {
        return this._colorize$2$color(callback, null);
      },
      static: {
        Highlighter__normalizeNewlines: function(span) {
          var text, t1, endOffset, i, t2, t3, t4;
          text = span.get$text(span);
          if (!C.JSString_methods.contains$1(text, "\r\n"))
            return span;
          t1 = span.get$end(span);
          endOffset = t1.get$offset(t1);
          for (t1 = text.length - 1, i = 0; i < t1; ++i)
            if (C.JSString_methods._codeUnitAt$1(text, i) === 13 && C.JSString_methods._codeUnitAt$1(text, i + 1) === 10) {
              if (typeof endOffset !== "number")
                return endOffset.$sub();
              --endOffset;
            }
          t1 = span.get$start(span);
          t2 = span.get$sourceUrl();
          t3 = span.get$end(span);
          t3 = t3.get$line(t3);
          t2 = V.SourceLocation$(endOffset, span.get$end(span).get$column(), t3, t2);
          t3 = H.stringReplaceAllUnchecked(text, "\r\n", "\n");
          t4 = span.get$context(span);
          return X.SourceSpanWithContext$(t1, t2, t3, H.stringReplaceAllUnchecked(t4, "\r\n", "\n"));
        },
        Highlighter__normalizeTrailingNewline: function(span) {
          var context, text, start, end, t1, t2, t3;
          if (!C.JSString_methods.endsWith$1(span.get$context(span), "\n"))
            return span;
          context = C.JSString_methods.substring$2(span.get$context(span), 0, span.get$context(span).length - 1);
          text = span.get$text(span);
          start = span.get$start(span);
          end = span.get$end(span);
          if (C.JSString_methods.endsWith$1(span.get$text(span), "\n")) {
            t1 = B.findLineStart(span.get$context(span), span.get$text(span), span.get$start(span).get$column());
            t2 = span.get$start(span).get$column();
            if (typeof t1 !== "number")
              return t1.$add();
            if (typeof t2 !== "number")
              return H.iae(t2);
            t2 = t1 + t2 + span.get$length(span) === span.get$context(span).length;
            t1 = t2;
          } else
            t1 = false;
          if (t1) {
            text = C.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
            t1 = span.get$end(span);
            t1 = t1.get$offset(t1);
            if (typeof t1 !== "number")
              return t1.$sub();
            t2 = span.get$sourceUrl();
            t3 = span.get$end(span);
            t3 = t3.get$line(t3);
            if (typeof t3 !== "number")
              return t3.$sub();
            end = V.SourceLocation$(t1 - 1, U.Highlighter__lastLineLength(text), t3 - 1, t2);
            t1 = span.get$start(span);
            t1 = t1.get$offset(t1);
            t2 = span.get$end(span);
            start = t1 == t2.get$offset(t2) ? end : span.get$start(span);
          }
          return X.SourceSpanWithContext$(start, end, text, context);
        },
        Highlighter__normalizeEndOfLine: function(span) {
          var t1, t2, text, t3, t4;
          if (span.get$end(span).get$column() !== 0)
            return span;
          t1 = span.get$end(span);
          t1 = t1.get$line(t1);
          t2 = span.get$start(span);
          if (t1 == t2.get$line(t2))
            return span;
          text = C.JSString_methods.substring$2(span.get$text(span), 0, span.get$text(span).length - 1);
          t1 = span.get$start(span);
          t2 = span.get$end(span);
          t2 = t2.get$offset(t2);
          if (typeof t2 !== "number")
            return t2.$sub();
          t3 = span.get$sourceUrl();
          t4 = span.get$end(span);
          t4 = t4.get$line(t4);
          if (typeof t4 !== "number")
            return t4.$sub();
          return X.SourceSpanWithContext$(t1, V.SourceLocation$(t2 - 1, U.Highlighter__lastLineLength(text), t4 - 1, t3), text, span.get$context(span));
        },
        Highlighter__lastLineLength: function(text) {
          var t1 = text.length;
          if (t1 === 0)
            return 0;
          return C.JSString_methods.codeUnitAt$1(text, t1 - 1) === 10 ? t1 - C.JSString_methods.lastIndexOf$2(text, "\n", t1 - 2) - 1 : t1 - C.JSString_methods.lastIndexOf$1(text, "\n") - 1;
        }
      }
    },
    Highlighter__writeFirstLine_closure: {
      "^": "Closure:0;$this,line",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._highlighter$_buffer;
        $._glyphs.toString;
        t3 = t2._contents += "\u250c";
        t2._contents = t3 + " ";
        t1._writeText$1(this.line);
      }
    },
    Highlighter__writeFirstLine_closure0: {
      "^": "Closure:2;$this,textInside",
      call$0: function() {
        return this.$this._writeText$1(this.textInside);
      }
    },
    Highlighter__writeFirstLine_closure1: {
      "^": "Closure:0;_box_0,$this",
      call$0: function() {
        var t1, t2;
        t1 = this.$this._highlighter$_buffer;
        $._glyphs.toString;
        t1._contents += "\u250c";
        t2 = t1._contents += C.JSString_methods.$mul("\u2500", this._box_0.startColumn + 1);
        t1._contents = t2 + "^";
      }
    },
    Highlighter__writeFirstLine_closure2: {
      "^": "Closure:2;_box_0,$this",
      call$0: function() {
        var t1 = this._box_0;
        this.$this._highlighter$_buffer._contents += C.JSString_methods.$mul("^", Math.max(t1.endColumn - t1.startColumn, 1));
        return;
      }
    },
    Highlighter__writeIntermediateLines_closure: {
      "^": "Closure:0;$this,line",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._highlighter$_buffer;
        $._glyphs.toString;
        t3 = t2._contents += "\u2502";
        t2._contents = t3 + " ";
        t1._writeText$1(this.line);
      }
    },
    Highlighter__writeLastLine_closure: {
      "^": "Closure:0;$this,line",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._highlighter$_buffer;
        $._glyphs.toString;
        t3 = t2._contents += "\u2514";
        t2._contents = t3 + " ";
        t1._writeText$1(this.line);
      }
    },
    Highlighter__writeLastLine_closure0: {
      "^": "Closure:0;$this,textInside",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.$this;
        t2 = t1._highlighter$_buffer;
        $._glyphs.toString;
        t3 = t2._contents += "\u2502";
        t2._contents = t3 + " ";
        t1._writeText$1(this.textInside);
      }
    },
    Highlighter__writeLastLine_closure1: {
      "^": "Closure:0;_box_0,$this",
      call$0: function() {
        var t1, t2;
        t1 = this.$this._highlighter$_buffer;
        $._glyphs.toString;
        t1._contents += "\u2514";
        t2 = t1._contents += C.JSString_methods.$mul("\u2500", this._box_0.endColumn);
        t1._contents = t2 + "^";
      }
    },
    Highlighter__writeSidebar_closure: {
      "^": "Closure:0;$this,line,end",
      call$0: function() {
        var t1, t2, t3;
        t1 = this.line;
        t2 = this.$this;
        t3 = t2._highlighter$_buffer;
        t2 = t2._paddingBeforeSidebar;
        if (t1 != null)
          t3._contents += C.JSString_methods.padRight$1(C.JSInt_methods.toString$0(t1 + 1), t2);
        else
          t3._contents += C.JSString_methods.$mul(" ", t2);
        t1 = this.end;
        if (t1 == null) {
          $._glyphs.toString;
          t1 = "\u2502";
        }
        t3._contents += t1;
      }
    }
  }], ["", "package:source_span/src/location.dart",, V, {
    "^": "",
    SourceLocation: {
      "^": "Object;sourceUrl<,offset>,line>,column<",
      distance$1: function(other) {
        var t1, t2;
        t1 = this.sourceUrl;
        if (!J.$eq$(t1, other.get$sourceUrl()))
          throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(t1) + '" and "' + H.S(other.get$sourceUrl()) + "\" don't match."));
        t1 = this.offset;
        t2 = other.get$offset(other);
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        return Math.abs(t1 - t2);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return !!J.getInterceptor$(other).$isSourceLocation && J.$eq$(this.sourceUrl, other.get$sourceUrl()) && this.offset == other.get$offset(other);
      },
      get$hashCode: function(_) {
        var t1, t2;
        t1 = J.get$hashCode$(this.sourceUrl);
        t2 = this.offset;
        if (typeof t2 !== "number")
          return H.iae(t2);
        return t1 + t2;
      },
      toString$0: function(_) {
        var t1, source, t2, t3;
        t1 = "<" + new H.TypeImpl(H.getRti(this)).toString$0(0) + ": " + H.S(this.offset) + " ";
        source = this.sourceUrl;
        t2 = H.S(source == null ? "unknown source" : source) + ":" + (this.line + 1) + ":";
        t3 = this.column;
        if (typeof t3 !== "number")
          return t3.$add();
        return t1 + (t2 + (t3 + 1)) + ">";
      },
      static: {
        SourceLocation$: function(offset, column, line, sourceUrl) {
          var t1, t2, t3, t4;
          t1 = line == null;
          t2 = t1 ? 0 : line;
          t3 = column == null;
          t4 = t3 ? offset : column;
          if (typeof offset !== "number")
            return offset.$lt();
          if (offset < 0)
            H.throwExpression(P.RangeError$("Offset may not be negative, was " + offset + "."));
          else if (!t1 && line < 0)
            H.throwExpression(P.RangeError$("Line may not be negative, was " + H.S(line) + "."));
          else if (!t3 && column < 0)
            H.throwExpression(P.RangeError$("Column may not be negative, was " + H.S(column) + "."));
          return new V.SourceLocation(sourceUrl, offset, t2, t4);
        }
      }
    }
  }], ["", "package:source_span/src/location_mixin.dart",, D, {
    "^": "",
    SourceLocationMixin: {
      "^": "Object;",
      distance$1: function(other) {
        var t1, t2;
        if (!J.$eq$(this.file.url, other.get$sourceUrl()))
          throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(this.get$sourceUrl()) + '" and "' + H.S(other.get$sourceUrl()) + "\" don't match."));
        t1 = this.offset;
        t2 = other.get$offset(other);
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        return Math.abs(t1 - t2);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return !!J.getInterceptor$(other).$isSourceLocation && J.$eq$(this.file.url, other.get$sourceUrl()) && this.offset == other.get$offset(other);
      },
      get$hashCode: function(_) {
        var t1, t2;
        t1 = J.get$hashCode$(this.file.url);
        t2 = this.offset;
        if (typeof t2 !== "number")
          return H.iae(t2);
        return t1 + t2;
      },
      toString$0: function(_) {
        var t1, t2, t3, source, t4, t5;
        t1 = this.offset;
        t2 = "<" + new H.TypeImpl(H.getRti(this)).toString$0(0) + ": " + H.S(t1) + " ";
        t3 = this.file;
        source = t3.url;
        t4 = H.S(source == null ? "unknown source" : source) + ":";
        t5 = t3.getLine$1(t1);
        if (typeof t5 !== "number")
          return t5.$add();
        return t2 + (t4 + (t5 + 1) + ":" + (t3.getColumn$1(t1) + 1)) + ">";
      },
      $isSourceLocation: 1
    }
  }], ["", "package:source_span/src/span.dart",, V, {
    "^": "",
    SourceSpanBase: {
      "^": "SourceSpanMixin;start>,end>,text>",
      SourceSpanBase$3: function(start, end, text) {
        var t1, t2, t3, t4;
        t1 = this.end;
        t2 = this.start;
        if (!J.$eq$(t1.get$sourceUrl(), t2.get$sourceUrl()))
          throw H.wrapException(P.ArgumentError$('Source URLs "' + H.S(t2.get$sourceUrl()) + '" and  "' + H.S(t1.get$sourceUrl()) + "\" don't match."));
        else {
          t3 = t1.get$offset(t1);
          t4 = t2.get$offset(t2);
          if (typeof t3 !== "number")
            return t3.$lt();
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (t3 < t4)
            throw H.wrapException(P.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + "."));
          else {
            t3 = this.text;
            if (t3.length !== t2.distance$1(t1))
              throw H.wrapException(P.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long."));
          }
        }
      }
    }
  }], ["", "package:source_span/src/span_exception.dart",, G, {
    "^": "",
    SourceSpanException: {
      "^": "Object;_span_exception$_message<,_span<",
      get$message: function(_) {
        return this._span_exception$_message;
      },
      toString$1$color: function(_, color) {
        var t1, t2, t3, highlight;
        t1 = this._span;
        t2 = t1.get$start(t1);
        t2 = t2.get$line(t2);
        if (typeof t2 !== "number")
          return t2.$add();
        t2 = "line " + (t2 + 1) + ", column " + (t1.get$start(t1).get$column() + 1);
        if (t1.get$sourceUrl() != null) {
          t3 = t1.get$sourceUrl();
          t3 = t2 + (" of " + H.S($.$get$context0().prettyUri$1(t3)));
          t2 = t3;
        }
        t2 += ": " + this._span_exception$_message;
        highlight = t1.highlight$1$color(0, color);
        t1 = highlight.length !== 0 ? t2 + "\n" + highlight : t2;
        return "Error on " + (t1.charCodeAt(0) == 0 ? t1 : t1);
      },
      toString$0: function($receiver) {
        return this.toString$1$color($receiver, null);
      }
    },
    SourceSpanFormatException: {
      "^": "SourceSpanException;_span_exception$_source,_span_exception$_message,_span",
      get$source: function(_) {
        return this._span_exception$_source;
      },
      get$offset: function(_) {
        var t1 = this._span;
        t1 = Y.FileLocation$_(t1.file, t1._file$_start);
        return t1.offset;
      },
      $isFormatException: 1,
      static: {
        SourceSpanFormatException$: function(message, span, _source) {
          return new G.SourceSpanFormatException(_source, message, span);
        }
      }
    }
  }], ["", "package:source_span/src/span_mixin.dart",, Y, {
    "^": "",
    SourceSpanMixin: {
      "^": "Object;",
      get$sourceUrl: function() {
        return this.get$start(this).get$sourceUrl();
      },
      get$length: function(_) {
        var t1, t2;
        t1 = this.get$end(this);
        t1 = t1.get$offset(t1);
        t2 = this.get$start(this);
        t2 = t2.get$offset(t2);
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        return t1 - t2;
      },
      message$2$color: [function(_, message, color) {
        var t1, t2, highlight;
        t1 = this.get$start(this);
        t1 = t1.get$line(t1);
        if (typeof t1 !== "number")
          return t1.$add();
        t1 = "line " + (t1 + 1) + ", column ";
        t2 = this.get$start(this).get$column();
        if (typeof t2 !== "number")
          return t2.$add();
        t2 = t1 + (t2 + 1);
        if (this.get$sourceUrl() != null) {
          t1 = this.get$sourceUrl();
          t1 = t2 + (" of " + H.S($.$get$context0().prettyUri$1(t1)));
        } else
          t1 = t2;
        t1 += ": " + message;
        highlight = this.highlight$1$color(0, color);
        if (highlight.length !== 0)
          t1 = t1 + "\n" + highlight;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }, function($receiver, message) {
        return this.message$2$color($receiver, message, null);
      }, "message$1", "call$2$color", "call$1", "get$message", 5, 3, 209],
      highlight$1$color: function(_, color) {
        var t1, t2, t3, t4, newSpan;
        t1 = !!this.$isSourceSpanWithContext;
        if (!t1 && this.get$length(this) === 0)
          return "";
        if (t1 && B.findLineStart(this.get$context(this), this.get$text(this), this.get$start(this).get$column()) != null)
          t1 = this;
        else {
          t1 = this.get$start(this);
          t1 = V.SourceLocation$(t1.get$offset(t1), 0, 0, this.get$sourceUrl());
          t2 = this.get$end(this);
          t2 = t2.get$offset(t2);
          t3 = this.get$sourceUrl();
          t4 = B.countCodeUnits(this.get$text(this), 10);
          t3 = X.SourceSpanWithContext$(t1, V.SourceLocation$(t2, U.Highlighter__lastLineLength(this.get$text(this)), t4, t3), this.get$text(this), this.get$text(this));
          t1 = t3;
        }
        newSpan = U.Highlighter__normalizeEndOfLine(U.Highlighter__normalizeTrailingNewline(U.Highlighter__normalizeNewlines(t1)));
        t1 = newSpan.get$start(newSpan);
        t1 = t1.get$line(t1);
        t2 = newSpan.get$end(newSpan);
        t2 = t2.get$line(t2);
        t3 = newSpan.get$end(newSpan);
        return new U.Highlighter(newSpan, color, t1 != t2, J.toString$0$(t3.get$line(t3)).length + 1, new P.StringBuffer("")).highlight$0(0);
      },
      $eq: ["super$SourceSpanMixin$$eq", function(_, other) {
        if (other == null)
          return false;
        return !!J.getInterceptor$(other).$isSourceSpan && this.get$start(this).$eq(0, other.get$start(other)) && this.get$end(this).$eq(0, other.get$end(other));
      }],
      get$hashCode: function(_) {
        var t1, t2;
        t1 = this.get$start(this);
        t1 = t1.get$hashCode(t1);
        t2 = this.get$end(this);
        return t1 + 31 * t2.get$hashCode(t2);
      },
      toString$0: function(_) {
        return "<" + new H.TypeImpl(H.getRti(this)).toString$0(0) + ": from " + this.get$start(this).toString$0(0) + " to " + this.get$end(this).toString$0(0) + ' "' + this.get$text(this) + '">';
      },
      $isSourceSpan: 1
    }
  }], ["", "package:source_span/src/span_with_context.dart",, X, {
    "^": "",
    SourceSpanWithContext: {
      "^": "SourceSpanBase;_context,start,end,text",
      get$context: function(_) {
        return this._context;
      },
      static: {
        SourceSpanWithContext$: function(start, end, text, _context) {
          var t1, t2, t3;
          t1 = new X.SourceSpanWithContext(_context, start, end, text);
          t1.SourceSpanBase$3(start, end, text);
          if (!C.JSString_methods.contains$1(_context, text))
            H.throwExpression(P.ArgumentError$('The context line "' + _context + '" must contain "' + text + '".'));
          if (B.findLineStart(_context, text, start.get$column()) == null) {
            t2 = 'The span text "' + text + '" must start at column ';
            t3 = start.get$column();
            if (typeof t3 !== "number")
              return t3.$add();
            H.throwExpression(P.ArgumentError$(t2 + (t3 + 1) + ' in a line within "' + _context + '".'));
          }
          return t1;
        }
      }
    }
  }], ["", "package:source_span/src/utils.dart",, B, {
    "^": "",
    countCodeUnits: function(string, codeUnit) {
      var t1, count;
      for (t1 = new H.CodeUnits(string), t1 = new H.ListIterator(t1, t1.get$length(t1), 0, [P.int]), count = 0; t1.moveNext$0();)
        if (t1.__internal$_current === codeUnit)
          ++count;
      return count;
    },
    findLineStart: function(context, text, column) {
      var beginningOfLine, index, lineStart;
      if (text.length === 0)
        for (beginningOfLine = 0; true;) {
          index = C.JSString_methods.indexOf$2(context, "\n", beginningOfLine);
          if (index === -1) {
            if (typeof column !== "number")
              return H.iae(column);
            return context.length - beginningOfLine >= column ? beginningOfLine : null;
          }
          if (typeof column !== "number")
            return H.iae(column);
          if (index - beginningOfLine >= column)
            return beginningOfLine;
          beginningOfLine = index + 1;
        }
      index = C.JSString_methods.indexOf$1(context, text);
      for (; index !== -1;) {
        lineStart = index === 0 ? 0 : C.JSString_methods.lastIndexOf$2(context, "\n", index - 1) + 1;
        if (column === index - lineStart)
          return lineStart;
        index = C.JSString_methods.indexOf$2(context, text, index + 1);
      }
      return;
    }
  }], ["", "package:string_scanner/src/exception.dart",, E, {
    "^": "",
    StringScannerException: {
      "^": "SourceSpanFormatException;_span_exception$_source,_span_exception$_message,_span",
      get$source: function(_) {
        return G.SourceSpanFormatException.prototype.get$source.call(this, this);
      }
    }
  }], ["", "package:string_scanner/src/string_scanner.dart",, X, {
    "^": "",
    StringScanner: {
      "^": "Object;sourceUrl,string,_string_scanner$_position,0_lastMatch,0_lastMatchPosition",
      get$lastMatch: function() {
        if (this._string_scanner$_position !== this._lastMatchPosition)
          this._lastMatch = null;
        return this._lastMatch;
      },
      scan$1: function(pattern) {
        var t1, success;
        t1 = J.matchAsPrefix$2$s(pattern, this.string, this._string_scanner$_position);
        this._lastMatch = t1;
        this._lastMatchPosition = this._string_scanner$_position;
        success = t1 != null;
        if (success) {
          t1 = t1.get$end(t1);
          this._string_scanner$_position = t1;
          this._lastMatchPosition = t1;
        }
        return success;
      },
      expect$2$name: function(pattern, $name) {
        var t1, source;
        if (this.scan$1(pattern))
          return;
        if ($name == null) {
          t1 = J.getInterceptor$(pattern);
          if (!!t1.$isRegExp) {
            source = pattern.pattern;
            if (!$.$get$_slashAutoEscape())
              source = H.stringReplaceAllUnchecked(source, "/", "\\/");
            $name = "/" + source + "/";
          } else {
            t1 = t1.toString$0(pattern);
            t1 = H.stringReplaceAllUnchecked(t1, "\\", "\\\\");
            $name = '"' + H.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
          }
        }
        this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
      },
      expect$1: function(pattern) {
        return this.expect$2$name(pattern, null);
      },
      expectDone$0: function() {
        var t1 = this._string_scanner$_position;
        if (t1 === this.string.length)
          return;
        this.error$3$length$position(0, "expected no more input.", 0, t1);
      },
      substring$2: function(_, start, end) {
        return C.JSString_methods.substring$2(this.string, start, end);
      },
      substring$1: function($receiver, start) {
        return this.substring$2($receiver, start, null);
      },
      error$4$length$match$position: function(_, message, $length, match, position) {
        var t1, t2, t3, t4, t5, sourceFile, end;
        t1 = this.string;
        if (position < 0)
          H.throwExpression(P.RangeError$("position must be greater than or equal to 0."));
        else if (position > t1.length)
          H.throwExpression(P.RangeError$("position must be less than or equal to the string length."));
        t2 = position + $length > t1.length;
        if (t2)
          H.throwExpression(P.RangeError$("position plus length must not go beyond the end of the string."));
        t2 = this.sourceUrl;
        t3 = new H.CodeUnits(t1);
        t4 = H.setRuntimeTypeInfo([0], [P.int]);
        t5 = new Uint32Array(H._ensureNativeList(t3.toList$0(t3)));
        sourceFile = new Y.SourceFile(t2, t4, t5);
        sourceFile.SourceFile$decoded$2$url(t3, t2);
        end = position + $length;
        if (end > t5.length)
          H.throwExpression(P.RangeError$("End " + end + " must not be greater than the number of characters in the file, " + sourceFile.get$length(sourceFile) + "."));
        else if (position < 0)
          H.throwExpression(P.RangeError$("Start may not be negative, was " + position + "."));
        throw H.wrapException(new E.StringScannerException(t1, message, new Y._FileSpan(sourceFile, position, end)));
      },
      error$3$length$position: function($receiver, message, $length, position) {
        return this.error$4$length$match$position($receiver, message, $length, null, position);
      }
    }
  }], ["", "package:term_glyph/src/generated/unicode_glyph_set.dart",, K, {
    "^": "",
    UnicodeGlyphSet: {
      "^": "Object;"
    }
  }], ["", "main.dart",, F, {
    "^": "",
    main: function() {
      H.interceptedTypeCheck(G.appInjector(K.main_template__injector$Injector$closure(), G.modules__createNgZone$closure()).$get$1(0, C.Type_ApplicationRef_Aij), "$isApplicationRef").bootstrap$1$1(C.ComponentFactory_fRp, Q.AppComponent);
    }
  }, 1], ["", "main.template.dart",, K, {
    "^": "",
    injector$Injector: [function($parent) {
      return new K._Injector$injector($parent);
    }, function() {
      return K.injector$Injector(null);
    }, "call$1", "call$0", "main_template__injector$Injector$closure", 0, 2, 83],
    _Injector$injector: {
      "^": "HierarchicalInjector;0_field0,0_field1,0_field2,0_field3,parent",
      injectFromSelfOptional$2: function(token, orElse) {
        var t1, t2;
        if (token === C.Type_Router_yx3) {
          t1 = this._field0;
          if (t1 == null) {
            t1 = Z.RouterImpl$(H.interceptedTypeCheck(this.$get$1(0, C.Type_Location_ckm), "$isLocation"), H.interceptedTypeCheck(this.provideUntyped$2(C.Type_RouterHook_okS, null), "$isRouterHook"));
            this._field0 = t1;
          }
          return t1;
        }
        if (token === C.Type_Location_ckm) {
          t1 = this._field1;
          if (t1 == null) {
            t1 = V.Location$(H.interceptedTypeCheck(this.$get$1(0, C.Type_LocationStrategy_gyR), "$isLocationStrategy"));
            this._field1 = t1;
          }
          return t1;
        }
        if (token === C.Type_PlatformLocation_6lH) {
          t1 = this._field2;
          if (t1 == null) {
            t1 = new M.BrowserPlatformLocation();
            $.baseHRefFromDOM = O.base_href__baseHrefFromDOM$closure();
            t1._location = window.location;
            t1._history = window.history;
            this._field2 = t1;
          }
          return t1;
        }
        if (token === C.Type_LocationStrategy_gyR) {
          t1 = this._field3;
          if (t1 == null) {
            t1 = H.interceptedTypeCheck(this.$get$1(0, C.Type_PlatformLocation_6lH), "$isPlatformLocation");
            t2 = H.stringTypeCheck(this.provideUntyped$2(C.OpaqueToken_appBaseHref, null));
            t1 = new O.HashLocationStrategy(t1, t2 == null ? "" : t2);
            this._field3 = t1;
          }
          return t1;
        }
        if (token === C.Type_Injector_aJC)
          return this;
        return orElse;
      }
    }
  }], ["", "package:term_glyph/term_glyph.dart",, D, {
    "^": ""
  }]];
  setupProgram(dart, 0, 0);
  // getInterceptor methods
  J.getInterceptor$ = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSDouble.prototype;
    }
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return J.JSNull.prototype;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$ansx = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$asx = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$ax = function(receiver) {
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$bn = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (receiver == null)
      return receiver;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$in = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSNumber.prototype;
    }
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$n = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$ns = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$s = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$x = function(receiver) {
    if (receiver == null)
      return receiver;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$z = function(receiver) {
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.set$button$z = function(receiver, value) {
    return J.getInterceptor$z(receiver).set$button(receiver, value);
  };
  J.set$content$z = function(receiver, value) {
    return J.getInterceptor$z(receiver).set$content(receiver, value);
  };
  J.set$item$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$item(receiver, value);
  };
  J.set$key$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$key(receiver, value);
  };
  J.set$name$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$name(receiver, value);
  };
  J.set$responseType$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$responseType(receiver, value);
  };
  J.set$withCredentials$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$withCredentials(receiver, value);
  };
  J.get$children$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$children(receiver);
  };
  J.get$className$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$className(receiver);
  };
  J.get$classes$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$classes(receiver);
  };
  J.get$collapse$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$collapse(receiver);
  };
  J.get$disabled$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$disabled(receiver);
  };
  J.get$enabled$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$enabled(receiver);
  };
  J.get$hashCode$ = function(receiver) {
    return J.getInterceptor$(receiver).get$hashCode(receiver);
  };
  J.get$headers$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$headers(receiver);
  };
  J.get$height$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$height(receiver);
  };
  J.get$icon$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$icon(receiver);
  };
  J.get$id$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$id(receiver);
  };
  J.get$index$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$index(receiver);
  };
  J.get$isEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
  };
  J.get$isNegative$n = function(receiver) {
    return J.getInterceptor$n(receiver).get$isNegative(receiver);
  };
  J.get$isNotEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
  };
  J.get$item$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$item(receiver);
  };
  J.get$iterator$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$iterator(receiver);
  };
  J.get$key$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$key(receiver);
  };
  J.get$keys$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$keys(receiver);
  };
  J.get$label$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$label(receiver);
  };
  J.get$left$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$left(receiver);
  };
  J.get$length$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$length(receiver);
  };
  J.get$message$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$message(receiver);
  };
  J.get$name$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$name(receiver);
  };
  J.get$offset$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$offset(receiver);
  };
  J.get$onCancel$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$onCancel(receiver);
  };
  J.get$onFocus$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onFocus(receiver);
  };
  J.get$onKeyUp$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onKeyUp(receiver);
  };
  J.get$onMouseDown$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onMouseDown(receiver);
  };
  J.get$onMouseLeave$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onMouseLeave(receiver);
  };
  J.get$onMouseOver$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onMouseOver(receiver);
  };
  J.get$onMouseUp$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onMouseUp(receiver);
  };
  J.get$onScroll$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$onScroll(receiver);
  };
  J.get$onSearch$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$onSearch(receiver);
  };
  J.get$role$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$role(receiver);
  };
  J.get$setRequestHeader$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$setRequestHeader(receiver);
  };
  J.get$size$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$size(receiver);
  };
  J.get$source$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$source(receiver);
  };
  J.get$statusCode$z = function(receiver) {
    return J.getInterceptor$z(receiver).get$statusCode(receiver);
  };
  J.get$tabIndex$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$tabIndex(receiver);
  };
  J.get$target$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$target(receiver);
  };
  J.get$top$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$top(receiver);
  };
  J.get$topLeft$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$topLeft(receiver);
  };
  J.get$value$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$value(receiver);
  };
  J.get$values$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$values(receiver);
  };
  J.get$width$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$width(receiver);
  };
  J.$add$ansx = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver + a0;
    return J.getInterceptor$ansx(receiver).$add(receiver, a0);
  };
  J.$and$bn = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver & a0) >>> 0;
    return J.getInterceptor$bn(receiver).$and(receiver, a0);
  };
  J.$eq$ = function(receiver, a0) {
    if (receiver == null)
      return a0 == null;
    if (typeof receiver != "object")
      return a0 != null && receiver === a0;
    return J.getInterceptor$(receiver).$eq(receiver, a0);
  };
  J.$index$asx = function(receiver, a0) {
    if (typeof a0 === "number")
      if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
        if (a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0];
    return J.getInterceptor$asx(receiver).$index(receiver, a0);
  };
  J.$indexSet$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
  };
  J.$lt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver < a0;
    return J.getInterceptor$n(receiver).$lt(receiver, a0);
  };
  J.$mul$ns = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver * a0;
    return J.getInterceptor$ns(receiver).$mul(receiver, a0);
  };
  J.$or$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver | a0) >>> 0;
    return J.getInterceptor$n(receiver).$or(receiver, a0);
  };
  J._add$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._add$1(receiver, a0);
  };
  J._codeUnitAt$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver)._codeUnitAt$1(receiver, a0);
  };
  J._hasAttribute$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._hasAttribute$1(receiver, a0);
  };
  J._initEvent$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver)._initEvent$3(receiver, a0, a1, a2);
  };
  J._removeChild$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver)._removeChild$1(receiver, a0);
  };
  J._replaceChild$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
  };
  J.add$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).add$1(receiver, a0);
  };
  J.addEventListener$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).addEventListener$2(receiver, a0, a1);
  };
  J.addEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
  };
  J.allMatches$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).allMatches$1(receiver, a0);
  };
  J.any$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).any$1(receiver, a0);
  };
  J.append$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).append$1(receiver, a0);
  };
  J.close$0$z = function(receiver) {
    return J.getInterceptor$z(receiver).close$0(receiver);
  };
  J.codeUnitAt$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
  };
  J.contains$1$asx = function(receiver, a0) {
    return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
  };
  J.contains$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
  };
  J.containsKey$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).containsKey$1(receiver, a0);
  };
  J.create$0$z = function(receiver) {
    return J.getInterceptor$z(receiver).create$0(receiver);
  };
  J.elementAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
  };
  J.endsWith$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
  };
  J.fillRange$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).fillRange$3(receiver, a0, a1, a2);
  };
  J.firstWhere$2$orElse$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).firstWhere$2$orElse(receiver, a0, a1);
  };
  J.focus$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).focus$0(receiver);
  };
  J.forEach$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
  };
  J.getAttribute$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).getAttribute$1(receiver, a0);
  };
  J.getComputedStyle$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).getComputedStyle$0(receiver);
  };
  J.indexOf$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).indexOf$2(receiver, a0, a1);
  };
  J.indexWhere$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).indexWhere$1(receiver, a0);
  };
  J.insert$2$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).insert$2(receiver, a0, a1);
  };
  J.insertBefore$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).insertBefore$2(receiver, a0, a1);
  };
  J.map$1$1$ax = function(receiver, a0, $T1) {
    return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
  };
  J.matchAsPrefix$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
  };
  J.noSuchMethod$1$ = function(receiver, a0) {
    return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
  };
  J.remove$0$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).remove$0(receiver);
  };
  J.remove$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
  };
  J.removeAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
  };
  J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
  };
  J.removeWhere$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).removeWhere$1(receiver, a0);
  };
  J.replaceFirst$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).replaceFirst$2(receiver, a0, a1);
  };
  J.replaceWith$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
  };
  J.send$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).send$1(receiver, a0);
  };
  J.setAttribute$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).setAttribute$2(receiver, a0, a1);
  };
  J.skip$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
  };
  J.startsWith$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
  };
  J.startsWith$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).startsWith$2(receiver, a0, a1);
  };
  J.stopPropagation$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).stopPropagation$0(receiver);
  };
  J.sublist$2$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).sublist$2(receiver, a0, a1);
  };
  J.substring$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).substring$1(receiver, a0);
  };
  J.substring$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
  };
  J.toDouble$0$n = function(receiver) {
    return J.getInterceptor$n(receiver).toDouble$0(receiver);
  };
  J.toInt$0$n = function(receiver) {
    return J.getInterceptor$n(receiver).toInt$0(receiver);
  };
  J.toRadixString$1$n = function(receiver, a0) {
    return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
  };
  J.toString$0$ = function(receiver) {
    return J.getInterceptor$(receiver).toString$0(receiver);
  };
  J.trim$0$s = function(receiver) {
    return J.getInterceptor$s(receiver).trim$0(receiver);
  };
  J.where$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).where$1(receiver, a0);
  };
  Isolate.makeConstantList = function(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  };
  var $ = Isolate.$isolateProperties;
  C.AnchorElement_methods = W.AnchorElement.prototype;
  C.BodyElement_methods = W.BodyElement.prototype;
  C.Comment_methods = W.Comment.prototype;
  C.CssStyleDeclaration_methods = W.CssStyleDeclaration.prototype;
  C.DivElement_methods = W.DivElement.prototype;
  C.FileReader_methods = W.FileReader.prototype;
  C.HeadElement_methods = W.HeadElement.prototype;
  C.History_methods = W.History.prototype;
  C.HtmlDocument_methods = W.HtmlDocument.prototype;
  C.HttpRequest_methods = W.HttpRequest.prototype;
  C.InputElement_methods = W.InputElement.prototype;
  C.Interceptor_methods = J.Interceptor.prototype;
  C.JSArray_methods = J.JSArray.prototype;
  C.JSBool_methods = J.JSBool.prototype;
  C.JSDouble_methods = J.JSDouble.prototype;
  C.JSInt_methods = J.JSInt.prototype;
  C.JSNull_methods = J.JSNull.prototype;
  C.JSNumber_methods = J.JSNumber.prototype;
  C.JSString_methods = J.JSString.prototype;
  C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
  C.NativeUint32List_methods = H.NativeUint32List.prototype;
  C.NativeUint8List_methods = H.NativeUint8List.prototype;
  C.NodeList_methods = W.NodeList.prototype;
  C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
  C.SpanElement_methods = W.SpanElement.prototype;
  C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
  C.Window_methods = W.Window.prototype;
  C.AfterCustomAlignment_ZCw = new K.AfterCustomAlignment(false, "", "", "After", null);
  C.Alignment_Center_center = new K.Alignment("Center", "center");
  C.Alignment_Yw7 = new K.Alignment("End", "flex-end");
  C.Alignment_dMH = new K.Alignment("Start", "flex-start");
  C.AsciiCodec_false = new P.AsciiCodec(false);
  C.AsciiDecoder_false_127 = new P.AsciiDecoder(false, 127);
  C.AsciiEncoder_127 = new P.AsciiEncoder(127);
  C.Base64Encoder_false = new P.Base64Encoder(false);
  C.Base64Codec_Base64Encoder_false = new P.Base64Codec(C.Base64Encoder_false);
  C.BeforeCustomAlignment_yHF = new K.BeforeCustomAlignment(true, "", "", "Before", null);
  C.BottomPanelState_0 = new D.BottomPanelState(0, "BottomPanelState.empty");
  C.BottomPanelState_1 = new D.BottomPanelState(1, "BottomPanelState.error");
  C.BottomPanelState_2 = new D.BottomPanelState(2, "BottomPanelState.hint");
  C.C_DomSanitizationServiceImpl = new R.DomSanitizationServiceImpl();
  C.C_EmptyIterator = new H.EmptyIterator([P.Null]);
  C.C_Object = new P.Object();
  C.C_OutOfMemoryError = new P.OutOfMemoryError();
  C.C_UnicodeGlyphSet = new K.UnicodeGlyphSet();
  C.C_Utf8Encoder = new P.Utf8Encoder();
  C.C__DelayedDone = new P._DelayedDone();
  C.C__JSRandom = new P._JSRandom();
  C.C__NoopDisposable = new R._NoopDisposable();
  C.C__RootZone = new P._RootZone();
  C.Clock_systemTime = new V.Clock(V.time__systemTime$closure());
  C.ComponentFactory_B8J = new D.ComponentFactory("admin-comp", K.admin_component_template__viewFactory_AdminComponentHost0$closure(), [O.AdminComponent]);
  C.ComponentFactory_EyN = new D.ComponentFactory("game-detail", G.game_template__viewFactory_GameDetailComponentHost0$closure(), [D.GameDetailComponent]);
  C.ComponentFactory_L97 = new D.ComponentFactory("user-detail", F.user_template__viewFactory_UserDetailComponentHost0$closure(), [N.UserDetailComponent]);
  C.ComponentFactory_MLc = new D.ComponentFactory("round-detail", Z.round_template__viewFactory_RoundDetailComponentHost0$closure(), [R.RoundDetailComponent]);
  C.ComponentFactory_OSt = new D.ComponentFactory("tournament-detail", A.tournament_template__viewFactory_TournamentDetailComponentHost0$closure(), [E.TournamentDetailComponent]);
  C.ComponentFactory_S1h = new D.ComponentFactory("material-tooltip-text", L.ink_tooltip_template__viewFactory_MaterialInkTooltipComponentHost0$closure(), [F.MaterialInkTooltipComponent]);
  C.ComponentFactory_UKi = new D.ComponentFactory("entrant-detail", S.entrant_template__viewFactory_EntrantDetailComponentHost0$closure(), [D.EntrantDetailComponent]);
  C.ComponentFactory_bl8 = new D.ComponentFactory("tr-dashboard", T.dashboard_component_template__viewFactory_DashboardComponentHost0$closure(), [K.DashboardComponent]);
  C.ComponentFactory_fRp = new D.ComponentFactory("tr-app", V.app_component_template__viewFactory_AppComponentHost0$closure(), [Q.AppComponent]);
  C.ComponentFactory_ftt = new D.ComponentFactory("event-detail", G.event_template__viewFactory_EventDetailComponentHost0$closure(), [X.EventDetailComponent]);
  C.ComponentFactory_gOH = new D.ComponentFactory("stage-detail", R.stage_template__viewFactory_StageDetailComponentHost0$closure(), [L.StageDetailComponent]);
  C.ComponentFactory_ivk = new D.ComponentFactory("my-itemlist", Z.type_list_component_template__viewFactory_TypeListComponentHost0$closure(), [L.TypeListComponent]);
  C.ComponentFactory_mJb = new D.ComponentFactory("match-detail", R.match_template__viewFactory_MatchDetailComponentHost0$closure(), [Y.MatchDetailComponent]);
  C.ComponentFactory_qbf = new D.ComponentFactory("result-detail", S.result_template__viewFactory_ResultDetailComponentHost0$closure(), [E.ResultDetailComponent]);
  C.DomServiceState_0 = new F.DomServiceState(0, "DomServiceState.Idle");
  C.DomServiceState_1 = new F.DomServiceState(1, "DomServiceState.Writing");
  C.DomServiceState_2 = new F.DomServiceState(2, "DomServiceState.Reading");
  C.Duration_0 = new P.Duration(0);
  C.Duration_100000 = new P.Duration(100000);
  C.Duration_150000 = new P.Duration(150000);
  C.Duration_400000 = new P.Duration(400000);
  C.Duration_500000 = new P.Duration(500000);
  C.Duration_600000 = new P.Duration(600000);
  C.EmptyInjector_null = new R.EmptyInjector(null);
  C.Icon_check_box = new L.Icon("check_box");
  C.Icon_check_box_outline_blank = new L.Icon("check_box_outline_blank");
  C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
  C.JS_CONST_4hp = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
  C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
  C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
  C.JS_CONST_bDt = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
  C.JS_CONST_gkc = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
  C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
  C.JS_CONST_u2C = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
  C.JsonCodec_null_null = new P.JsonCodec(null, null);
  C.JsonDecoder_null = new P.JsonDecoder(null);
  C.JsonEncoder_null_null = new P.JsonEncoder(null, null);
  C.Latin1Codec_false = new P.Latin1Codec(false);
  C.Latin1Decoder_false_255 = new P.Latin1Decoder(false, 255);
  C.Latin1Encoder_255 = new P.Latin1Encoder(255);
  C.C_DefaultEquality = new U.DefaultEquality([P.Null]);
  C.ListEquality_DefaultEquality = new U.ListEquality(C.C_DefaultEquality, [Y.ChangeRecord]);
  C.ListEquality_DefaultEquality0 = new U.ListEquality(C.C_DefaultEquality, [null]);
  C.List_127_2047_65535_1114111 = H.setRuntimeTypeInfo(Isolate.makeConstantList([127, 2047, 65535, 1114111]), [P.int]);
  C.List_2Vk = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 32776, 33792, 1, 10240, 0, 0]), [P.int]);
  C.Rectangle_0_0_0_0 = new P.Rectangle(0, 0, 0, 0, [P.num]);
  C.List_4YB = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.Rectangle_0_0_0_0]), [[P.Rectangle, P.num]]);
  C.RelativePosition_EkK = new K.RelativePosition(C.Alignment_Center_center, C.AfterCustomAlignment_ZCw, "top center");
  C.RelativePosition_gRf = new K.RelativePosition(C.Alignment_dMH, C.AfterCustomAlignment_ZCw, "top left");
  C.RelativePosition_DT7 = new K.RelativePosition(C.Alignment_Yw7, C.AfterCustomAlignment_ZCw, "top right");
  C.List_ALf = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.RelativePosition_EkK, C.RelativePosition_gRf, C.RelativePosition_DT7]), [K.RelativePosition]);
  C.List_CVk = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), [P.int]);
  C.List_CX7 = H.setRuntimeTypeInfo(Isolate.makeConstantList(["arrow_back", "arrow_forward", "chevron_left", "chevron_right", "navigate_before", "navigate_next", "last_page", "first_page", "open_in_new", "star_half", "exit_to_app"]), [P.String]);
  C.List_JYB = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), [P.int]);
  C.List_KIf = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 26498, 1023, 65534, 34815, 65534, 18431]), [P.int]);
  C.RelativePosition_fXH = new K.RelativePosition(C.AfterCustomAlignment_ZCw, C.Alignment_Center_center, "center left");
  C.RelativePosition_22B = new K.RelativePosition(C.BeforeCustomAlignment_yHF, C.Alignment_Center_center, "center right");
  C.List_MIe = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.RelativePosition_fXH, C.RelativePosition_22B]), [K.RelativePosition]);
  C.List_WnV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["/", "\\"]), [P.String]);
  C.List_cSk = H.setRuntimeTypeInfo(Isolate.makeConstantList(["/"]), [P.String]);
  C.List_empty3 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [[Y.ListChangeRecord, P.Null]]);
  C.List_empty1 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.Null]);
  C.List_empty2 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [N.RouteDefinition]);
  C.List_empty0 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.String]);
  C.List_empty = Isolate.makeConstantList([]);
  C.RelativePosition_wss = new K.RelativePosition(C.Alignment_dMH, C.Alignment_dMH, "top center");
  C.RelativePosition_AG4 = new K.RelativePosition(C.Alignment_Yw7, C.Alignment_dMH, "top right");
  C.RelativePosition_8p6 = new K.RelativePosition(C.Alignment_dMH, C.Alignment_dMH, "top left");
  C.RelativePosition_W7X = new K.RelativePosition(C.Alignment_dMH, C.Alignment_Yw7, "bottom center");
  C.RelativePosition_VUu = new K.RelativePosition(C.Alignment_Yw7, C.Alignment_Yw7, "bottom right");
  C.RelativePosition_jtt = new K.RelativePosition(C.Alignment_dMH, C.Alignment_Yw7, "bottom left");
  C.List_ezW = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.RelativePosition_wss, C.RelativePosition_AG4, C.RelativePosition_8p6, C.RelativePosition_W7X, C.RelativePosition_VUu, C.RelativePosition_jtt]), [K.RelativePosition]);
  C.List_gRj = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), [P.int]);
  C.List_huV = H.setRuntimeTypeInfo(Isolate.makeConstantList(["auto", "x-small", "small", "medium", "large", "x-large"]), [P.String]);
  C.RelativePosition_kqK = new K.RelativePosition(C.AfterCustomAlignment_ZCw, C.Alignment_dMH, "top left");
  C.RelativePosition_MoS = new K.RelativePosition(C.AfterCustomAlignment_ZCw, C.Alignment_Yw7, "bottom left");
  C.RelativePosition_kQW = new K.RelativePosition(C.BeforeCustomAlignment_yHF, C.Alignment_dMH, "top right");
  C.RelativePosition_QC7 = new K.RelativePosition(C.BeforeCustomAlignment_yHF, C.Alignment_Yw7, "bottom right");
  C.List_kaS = H.setRuntimeTypeInfo(Isolate.makeConstantList([C.RelativePosition_kqK, C.RelativePosition_fXH, C.RelativePosition_MoS, C.RelativePosition_kQW, C.RelativePosition_22B, C.RelativePosition_QC7]), [K.RelativePosition]);
  C.List_number_tel = H.setRuntimeTypeInfo(Isolate.makeConstantList(["number", "tel"]), [P.String]);
  C.List_nxB = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), [P.int]);
  C.List_qNA = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), [P.int]);
  C.List_qg40 = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]), [P.int]);
  C.List_qg4 = H.setRuntimeTypeInfo(Isolate.makeConstantList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), [P.int]);
  C.MapEquality_DefaultEquality_DefaultEquality = new U.MapEquality(C.C_DefaultEquality, C.C_DefaultEquality, [null, null]);
  C.List_duration_iterations = H.setRuntimeTypeInfo(Isolate.makeConstantList(["duration", "iterations"]), [P.String]);
  C.Map_662Zs = new H.ConstantStringMap(2, {duration: 2000, iterations: 1 / 0}, C.List_duration_iterations, [P.String, P.double]);
  C.List_transform_offset = H.setRuntimeTypeInfo(Isolate.makeConstantList(["transform", "offset"]), [P.String]);
  C.Map_IFWzb = new H.ConstantStringMap(2, {transform: "translateX(0px) scaleX(0)", offset: 0.6}, C.List_transform_offset, [P.String, P.Object]);
  C.Map_IFcF3 = new H.ConstantStringMap(2, {transform: "translateX(0px) scaleX(0.5)", offset: 0.25}, C.List_transform_offset, [P.String, P.Object]);
  C.Map_IFidk = new H.ConstantStringMap(2, {transform: "translateX(0px) scaleX(0.6)", offset: 0.8}, C.List_transform_offset, [P.String, P.Object]);
  C.Map_empty1 = new H.ConstantStringMap(0, {}, C.List_empty0, [P.String, P.String]);
  C.Map_empty0 = new H.ConstantStringMap(0, {}, C.List_empty0, [P.String, null]);
  C.List_empty4 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.Symbol0]);
  C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty4, [P.Symbol0, null]);
  C.List_transform = H.setRuntimeTypeInfo(Isolate.makeConstantList(["transform"]), [P.String]);
  C.Map_n5nbm = new H.ConstantStringMap(1, {transform: "translateX(0px) scaleX(0)"}, C.List_transform, [P.String, P.String]);
  C.Map_qsUoh = new H.GeneralConstantMap([8, "Backspace", 9, "Tab", 12, "Clear", 13, "Enter", 16, "Shift", 17, "Control", 18, "Alt", 19, "Pause", 20, "CapsLock", 27, "Escape", 32, " ", 33, "PageUp", 34, "PageDown", 35, "End", 36, "Home", 37, "ArrowLeft", 38, "ArrowUp", 39, "ArrowRight", 40, "ArrowDown", 45, "Insert", 46, "Delete", 65, "a", 66, "b", 67, "c", 68, "d", 69, "e", 70, "f", 71, "g", 72, "h", 73, "i", 74, "j", 75, "k", 76, "l", 77, "m", 78, "n", 79, "o", 80, "p", 81, "q", 82, "r", 83, "s", 84, "t", 85, "u", 86, "v", 87, "w", 88, "x", 89, "y", 90, "z", 91, "OS", 93, "ContextMenu", 96, "0", 97, "1", 98, "2", 99, "3", 100, "4", 101, "5", 102, "6", 103, "7", 104, "8", 105, "9", 106, "*", 107, "+", 109, "-", 110, ".", 111, "/", 112, "F1", 113, "F2", 114, "F3", 115, "F4", 116, "F5", 117, "F6", 118, "F7", 119, "F8", 120, "F9", 121, "F10", 122, "F11", 123, "F12", 144, "NumLock", 145, "ScrollLock"], [P.int, P.String]);
  C.List_yHw = H.setRuntimeTypeInfo(Isolate.makeConstantList(["bottom right", "bottom left", "center right", "center left", "top right", "top left"]), [P.String]);
  C.Map_yH4ig = new H.ConstantStringMap(6, {"bottom right": "bottom left", "bottom left": "bottom right", "center right": "center left", "center left": "center right", "top right": "top left", "top left": "top right"}, C.List_yHw, [P.String, P.String]);
  C.NavigationResult_0 = new Z.NavigationResult(0, "NavigationResult.SUCCESS");
  C.NavigationResult_1 = new Z.NavigationResult(1, "NavigationResult.BLOCKED_BY_GUARD");
  C.NavigationResult_2 = new Z.NavigationResult(2, "NavigationResult.INVALID_ROUTE");
  C.OpaqueToken_8qt = new S.OpaqueToken("third_party.dart_src.acx.material_datepicker.datepickerClock", [null]);
  C.OpaqueToken_APP_ID = new S.OpaqueToken("APP_ID", [P.String]);
  C.OpaqueToken_acxDarkTheme = new S.OpaqueToken("acxDarkTheme", [null]);
  C.OpaqueToken_appBaseHref = new S.OpaqueToken("appBaseHref", [P.String]);
  C.OpaqueToken_defaultPopupPositions = new S.OpaqueToken("defaultPopupPositions", [[P.List, K.RelativePosition]]);
  C.OpaqueToken_overlayContainer = new S.OpaqueToken("overlayContainer", [null]);
  C.OpaqueToken_overlayContainerName = new S.OpaqueToken("overlayContainerName", [null]);
  C.OpaqueToken_overlayContainerParent = new S.OpaqueToken("overlayContainerParent", [null]);
  C.OpaqueToken_overlayRepositionLoop = new S.OpaqueToken("overlayRepositionLoop", [null]);
  C.OpaqueToken_overlaySyncDom = new S.OpaqueToken("overlaySyncDom", [null]);
  C.Optional_null = new X.Optional(null, [P.String]);
  C.Symbol_89P = new H.Symbol("Intl.locale");
  C.Symbol_autoDismiss = new H.Symbol("autoDismiss");
  C.Symbol_call = new H.Symbol("call");
  C.Symbol_constrainToViewport = new H.Symbol("constrainToViewport");
  C.Symbol_enforceSpaceConstraints = new H.Symbol("enforceSpaceConstraints");
  C.Symbol_isEmpty = new H.Symbol("isEmpty");
  C.Symbol_isNotEmpty = new H.Symbol("isNotEmpty");
  C.Symbol_keys = new H.Symbol("keys");
  C.Symbol_length = new H.Symbol("length");
  C.Symbol_matchMinSourceWidth = new H.Symbol("matchMinSourceWidth");
  C.Symbol_offsetX = new H.Symbol("offsetX");
  C.Symbol_offsetY = new H.Symbol("offsetY");
  C.Symbol_preferredPositions = new H.Symbol("preferredPositions");
  C.Symbol_source = new H.Symbol("source");
  C.Symbol_trackLayoutChanges = new H.Symbol("trackLayoutChanges");
  C.Symbol_values = new H.Symbol("values");
  C.Type_ActivationHandler_Nm5 = H.createRuntimeType([Z.ActivationHandler,,]);
  C.Type_AcxDarkTheme_Tng = H.createRuntimeType(F.AcxDarkTheme);
  C.Type_AcxImperativeViewUtils_Ucj = H.createRuntimeType(O.AcxImperativeViewUtils);
  C.Type_AppViewUtils_NWH = H.createRuntimeType(Q.AppViewUtils);
  C.Type_ApplicationRef_Aij = H.createRuntimeType(Y.ApplicationRef);
  C.Type_BaseMaterialInput_ljM = H.createRuntimeType(D.BaseMaterialInput);
  C.Type_ButtonDirective_hH0 = H.createRuntimeType(T.ButtonDirective);
  C.Type_ChangeRecord_INA = H.createRuntimeType(Y.ChangeRecord);
  C.Type_Clock_MYz = H.createRuntimeType(V.Clock);
  C.Type_ComponentLoader_7xV = H.createRuntimeType(M.ComponentLoader);
  C.Type_DeferredContentAware_BCk = H.createRuntimeType(E.DeferredContentAware);
  C.Type_DeferredValidator_k2a = H.createRuntimeType(L.DeferredValidator);
  C.Type_Disposer_k0p = H.createRuntimeType(R.Disposer);
  C.Type_Document_woc = H.createRuntimeType(W.Document);
  C.Type_DomPopupSourceFactory_gmZ = H.createRuntimeType(K.DomPopupSourceFactory);
  C.Type_DomRuler_2Vk = H.createRuntimeType(K.DomRuler);
  C.Type_DomSanitizationService_cKo = H.createRuntimeType(Z.DomSanitizationService);
  C.Type_DomService_2jN = H.createRuntimeType(F.DomService);
  C.Type_DropdownHandle_YMM = H.createRuntimeType(M.DropdownHandle);
  C.Type_EnterAcceptsDirective_wwi = H.createRuntimeType(E.EnterAcceptsDirective);
  C.Type_ExceptionHandler_qBE = H.createRuntimeType(U.ExceptionHandler);
  C.Type_FocusableActivateItem_3fE = H.createRuntimeType(K.FocusableActivateItem);
  C.Type_Focusable_adc = H.createRuntimeType(O.Focusable);
  C.Type_GlobalModalStack_QCS = H.createRuntimeType(D.GlobalModalStack);
  C.Type_HasDisabled_qzc = H.createRuntimeType(U.HasDisabled);
  C.Type_HasRenderer_wsa = H.createRuntimeType([G.HasRenderer,,]);
  C.Type_IdGenerator_yLN = H.createRuntimeType(R.IdGenerator);
  C.Type_Injector_aJC = H.createRuntimeType(M.Injector);
  C.Type_InteropBarcodeService_P5u = H.createRuntimeType(Y.InteropBarcodeService);
  C.Type_KeyUpBoundaryDirective_GF2 = H.createRuntimeType(E.KeyUpBoundaryDirective);
  C.Type_ListChangeRecord_WB4 = H.createRuntimeType([Y.ListChangeRecord,,]);
  C.Type_LocationStrategy_gyR = H.createRuntimeType(X.LocationStrategy);
  C.Type_Location_ckm = H.createRuntimeType(V.Location);
  C.Type_ManagedZone_s3L = H.createRuntimeType(V.ManagedZone);
  C.Type_MaterialButtonComponent_xw8 = H.createRuntimeType(B.MaterialButtonComponent);
  C.Type_MaterialExpansionPanel_WrR = H.createRuntimeType(T.MaterialExpansionPanel);
  C.Type_MaterialInputComponent_Arc = H.createRuntimeType(L.MaterialInputComponent);
  C.Type_MaterialNumberValidator_86y = H.createRuntimeType(F.MaterialNumberValidator);
  C.Type_MaterialNumberValueAccessor_mqh = H.createRuntimeType(F.MaterialNumberValueAccessor);
  C.Type_MaterialPopupComponent_OpB = H.createRuntimeType(G.MaterialPopupComponent);
  C.Type_MenuRoot_uHT = H.createRuntimeType(Q.MenuRoot);
  C.Type_ModalComponent_Npb = H.createRuntimeType(D.ModalComponent);
  C.Type_Modal_OjC = H.createRuntimeType(D.Modal);
  C.Type_NgControl_GNi = H.createRuntimeType(T.NgControl);
  C.Type_NgModel_qx4 = H.createRuntimeType(U.NgModel);
  C.Type_NgSwitch_Mkn = H.createRuntimeType(V.NgSwitch);
  C.Type_NgZone_6ty = H.createRuntimeType(Y.NgZone);
  C.Type_NumberFormat_kZA = H.createRuntimeType(T.NumberFormat);
  C.Type_OverlayDomRenderService_qUY = H.createRuntimeType(K.OverlayDomRenderService);
  C.Type_OverlayService_4iH = H.createRuntimeType(X.OverlayService);
  C.Type_OverlayStyleConfig_rp8 = H.createRuntimeType(R.OverlayStyleConfig);
  C.Type_PlatformLocation_6lH = H.createRuntimeType(X.PlatformLocation);
  C.Type_PopupHierarchy_7R9 = H.createRuntimeType(Z.PopupHierarchy);
  C.Type_PopupRef_AWk = H.createRuntimeType(V.PopupRef);
  C.Type_PopupSizeProvider_a5y = H.createRuntimeType(F.PopupSizeProvider);
  C.Type_PropertyChangeRecord_8EM = H.createRuntimeType([Y.PropertyChangeRecord,,]);
  C.Type_ReferenceDirective_i58 = H.createRuntimeType(F.ReferenceDirective);
  C.Type_RouterHook_okS = H.createRuntimeType(B.RouterHook);
  C.Type_RouterOutletToken_Wv6 = H.createRuntimeType(S.RouterOutletToken);
  C.Type_RouterState_k6P = H.createRuntimeType(M.RouterState);
  C.Type_Router_yx3 = H.createRuntimeType(Z.Router);
  C.Type_SanitizationService_bRS = H.createRuntimeType(E.SanitizationService);
  C.Type_SelectionItem_uvp = H.createRuntimeType([L.SelectionItem,,]);
  C.Type_SlowComponentLoader_qxe = H.createRuntimeType(L.SlowComponentLoader);
  C.Type_TestabilityRegistry_IMm = H.createRuntimeType(D.TestabilityRegistry);
  C.Type_Testability_h8g = H.createRuntimeType(D.Testability);
  C.Type_TooltipController_H6X = H.createRuntimeType(U.TooltipController);
  C.Type_Window_0H0 = H.createRuntimeType(W.Window);
  C.Type_YIv = H.createRuntimeType(Z.MaterialInputDefaultValueAccessor);
  C.Type_ZIndexer_ViP = H.createRuntimeType(X.ZIndexer);
  C.Type_dynamic_0Rz = H.createRuntimeType(null);
  C.Utf8Codec_false = new P.Utf8Codec(false);
  C.ViewEncapsulation_0 = new A.ViewEncapsulation(0, "ViewEncapsulation.Emulated");
  C.ViewEncapsulation_1 = new A.ViewEncapsulation(1, "ViewEncapsulation.None");
  C.ViewType_0 = new R.ViewType(0, "ViewType.host");
  C.ViewType_1 = new R.ViewType(1, "ViewType.component");
  C.ViewType_2 = new R.ViewType(2, "ViewType.embedded");
  C.Visibility_Hidden_visibility_hidden = new L.Visibility("Hidden", "visibility", "hidden");
  C.Visibility_None_display_none = new L.Visibility("None", "display", "none");
  C.Visibility_Visible_null_null = new L.Visibility("Visible", null, null);
  C._Edit_0 = new O._Edit(0, "_Edit.leave");
  C._Edit_1 = new O._Edit(1, "_Edit.update");
  C._Edit_2 = new O._Edit(2, "_Edit.add");
  C._Edit_3 = new O._Edit(3, "_Edit.delete");
  C._ImmutableOverlayState_oyn0 = new Z._ImmutableOverlayState(false, null, null, null, null, null, null, null, C.Visibility_None_display_none, null, null);
  C._ImmutableOverlayState_oyn = new Z._ImmutableOverlayState(true, 0, 0, 0, 0, null, null, null, C.Visibility_None_display_none, null, null);
  C._IterationMarker_null_2 = new P._IterationMarker(null, 2);
  C._ZoneFunction_3bB = new P._ZoneFunction(C.C__RootZone, P.async___rootCreatePeriodicTimer$closure(), [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}]);
  C._ZoneFunction_7G2 = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterBinaryCallback$closure(), [P.Function]);
  C._ZoneFunction_Eeh = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterUnaryCallback$closure(), [P.Function]);
  C._ZoneFunction_NMc = new P._ZoneFunction(C.C__RootZone, P.async___rootHandleUncaughtError$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]);
  C._ZoneFunction__RootZone__rootCreateTimer = new P._ZoneFunction(C.C__RootZone, P.async___rootCreateTimer$closure(), [{func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}]);
  C._ZoneFunction__RootZone__rootErrorCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootErrorCallback$closure(), [{func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}]);
  C._ZoneFunction__RootZone__rootFork = new P._ZoneFunction(C.C__RootZone, P.async___rootFork$closure(), [{func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}]);
  C._ZoneFunction__RootZone__rootPrint = new P._ZoneFunction(C.C__RootZone, P.async___rootPrint$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}]);
  C._ZoneFunction__RootZone__rootRegisterCallback = new P._ZoneFunction(C.C__RootZone, P.async___rootRegisterCallback$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootRun = new P._ZoneFunction(C.C__RootZone, P.async___rootRun$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootRunBinary = new P._ZoneFunction(C.C__RootZone, P.async___rootRunBinary$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootRunUnary = new P._ZoneFunction(C.C__RootZone, P.async___rootRunUnary$closure(), [P.Function]);
  C._ZoneFunction__RootZone__rootScheduleMicrotask = new P._ZoneFunction(C.C__RootZone, P.async___rootScheduleMicrotask$closure(), [{func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}]);
  C._ZoneSpecification_ALf = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null, null);
  $.printToZone = null;
  $.Closure_functionCounter = 0;
  $.BoundClosure_selfFieldNameCache = null;
  $.BoundClosure_receiverFieldNameCache = null;
  $._inTypeAssertion = false;
  $.getTagFunction = null;
  $.alternateTagFunction = null;
  $.prototypeForTagFunction = null;
  $.dispatchRecordsForInstanceTags = null;
  $.interceptorsForUncacheableTags = null;
  $.initNativeDispatchFlag = null;
  $._nextCallback = null;
  $._lastCallback = null;
  $._lastPriorityCallback = null;
  $._isInCallbackLoop = false;
  $.Zone__current = C.C__RootZone;
  $._RootZone__rootDelegate = null;
  $.Expando__keyCount = 0;
  $.Device__isOpera = null;
  $.Device__isIE = null;
  $.Device__isFirefox = null;
  $.Device__isWebKit = null;
  $.Device__cachedCssPrefix = null;
  $._platformInjectorCache = null;
  $.NgClass__separator = null;
  $.ChangeDetectionHost__current = null;
  $.domRootRendererIsDirty = false;
  $.appViewUtils = null;
  $.AppViewUtils__nextCompTypeId = 0;
  $.sharedStylesHost = null;
  $.ViewDynamicComponent0__renderType = null;
  $.ViewFocusTrapComponent0__renderType = null;
  $.FrameworkStabilizers__nextId = 0;
  $.ViewGlyphComponent0__renderType = null;
  $.ViewHighlightedTextComponent0__renderType = null;
  $.ViewModalComponent0__renderType = null;
  $.ZIndexer__currentInstance = null;
  $.ViewMaterialButtonComponent0__renderType = null;
  $.ViewMaterialFabComponent0__renderType = null;
  $.ViewMaterialCheckboxComponent0__renderType = null;
  $.ViewMaterialDialogComponent0__renderType = null;
  $.ViewMaterialExpansionPanel0__renderType = null;
  $.ViewMaterialIconComponent0__renderType = null;
  $.ViewMaterialInputComponent0__renderType = null;
  $.ViewMaterialListComponent0__renderType = null;
  $.ViewMenuItemAffixListComponent0__renderType = null;
  $.ViewMenuItemGroupsComponent0__renderType = null;
  $.ViewMenuPopupComponent0__renderType = null;
  $.MaterialPopupComponent__viewportRect = null;
  $.ViewMaterialPopupComponent0__renderType = null;
  $.ViewMaterialProgressComponent0__renderType = null;
  $._numRipples = 0;
  $._rippleIndex = 0;
  $._ripplePool = null;
  $._rippleTemplate = null;
  $._opacityTiming = null;
  $._opacityKeyframes = null;
  $._transformTiming = null;
  $.ViewMaterialRippleComponent0__renderType = null;
  $.ViewMaterialSelectItemComponent0__renderType = null;
  $.ViewMaterialSpinnerComponent0__renderType = null;
  $._singletonController = null;
  $.ViewMaterialYesNoButtonsComponent0__renderType = null;
  $.ViewMaterialInkTooltipComponent0__renderType = null;
  $._singletonService = null;
  $.DomService_maintainZoneOnCallbacks = true;
  $.enableNewTriggerLogic = null;
  $._urlParsingNode = null;
  $._baseElement = null;
  $.baseHRefFromDOM = null;
  $.Url_isHashStrategy = false;
  $.ViewAppComponent0__renderType = null;
  $.ViewAdminComponent0__renderType = null;
  $.ViewDashboardComponent0__renderType = null;
  $.ViewEntrantDetailComponent0__renderType = null;
  $.ViewEventDetailComponent0__renderType = null;
  $.ViewGameDetailComponent0__renderType = null;
  $.ViewMatchDetailComponent0__renderType = null;
  $.ViewResultDetailComponent0__renderType = null;
  $.ViewRoundDetailComponent0__renderType = null;
  $.ViewStageDetailComponent0__renderType = null;
  $.ViewTournamentDetailComponent0__renderType = null;
  $.ViewUserDetailComponent0__renderType = null;
  $.ViewRaisableMenuComponent0__renderType = null;
  $.ViewTypeListComponent0__renderType = null;
  $.EntrantService_baseUrl = "http://localhost:8080/v1/";
  $.EntrantService_apiUrl = "entrant/";
  $.EventService_baseUrl = "http://localhost:8080/v1/";
  $.EventService_coreUrl = "event/";
  $.GameService_baseUrl = "http://localhost:8080/v1/";
  $.GameService_coreUrl = "game/";
  $.serviceSingleton = null;
  $.MatchService_baseUrl = "http://localhost:8080/v1/";
  $.MatchService_apiUrl = "match/";
  $.ResultService_baseUrl = "http://localhost:8080/v1/";
  $.ResultService_coreUrl = "matchResult/";
  $.RoundService_baseUrl = "http://localhost:8080/v1/";
  $.RoundService_coreUrl = "round/";
  $.StageService_baseUrl = "http://localhost:8080/v1/";
  $.StageService_coreUrl = "stage/";
  $.TournamentService_baseUrl = "http://localhost:8080/v1/";
  $.TournamentService_coreUrl = "tournament/";
  $.UserService_baseUrl = "http://localhost:8080/v1/";
  $.UserService_coreUrl = "user/";
  $.Intl__defaultLocale = null;
  $.Intl_systemLocale = "en_US";
  $._currentUriBase = null;
  $._current = null;
  $._glyphs = C.C_UnicodeGlyphSet;
  $ = null;
  init.isHunkLoaded = function(hunkHash) {
    return !!$dart_deferred_initializers$[hunkHash];
  };
  init.deferredInitialized = new Object(null);
  init.isHunkInitialized = function(hunkHash) {
    return init.deferredInitialized[hunkHash];
  };
  init.initializeLoadedHunk = function(hunkHash) {
    var hunk = $dart_deferred_initializers$[hunkHash];
    if (hunk == null)
      throw "DeferredLoading state error: code with hash '" + hunkHash + "' was not loaded";
    hunk($globals$, $);
    init.deferredInitialized[hunkHash] = true;
  };
  init.deferredLibraryParts = {};
  init.deferredPartUris = [];
  init.deferredPartHashes = [];
  // Empty type-to-interceptor map.
  (function(lazies) {
    for (var i = 0; i < lazies.length;) {
      var fieldName = lazies[i++];
      var getterName = lazies[i++];
      var lazyValue = lazies[i++];
      var staticName = lazies[i++];
      Isolate.$lazy(fieldName, getterName, lazyValue, staticName);
    }
  })(["DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartClosure");
  }, "DART_CLOSURE_PROPERTY_NAME", "JS_INTEROP_INTERCEPTOR_TAG", "$get$JS_INTEROP_INTERCEPTOR_TAG", function() {
    return H.getIsolateAffinityTag("_$dart_js");
  }, "JS_INTEROP_INTERCEPTOR_TAG", "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    }));
  }, "TypeErrorDecoder_noSuchMethodPattern", "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    }));
  }, "TypeErrorDecoder_notClosurePattern", "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
  }, "TypeErrorDecoder_nullCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_nullLiteralCallPattern", "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
  }, "TypeErrorDecoder_undefinedCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_undefinedLiteralCallPattern", "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
  }, "TypeErrorDecoder_nullPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_nullLiteralPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
  }, "TypeErrorDecoder_undefinedPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", function() {
    return P._AsyncRun__initializeScheduleImmediate();
  }, "_AsyncRun__scheduleImmediateClosure", "Future__nullFuture", "$get$Future__nullFuture", function() {
    return P._Future$zoneValue(null, C.C__RootZone, P.Null);
  }, "Future__nullFuture", "_DistinctStream__SENTINEL", "$get$_DistinctStream__SENTINEL", function() {
    return new P.Object();
  }, "_DistinctStream__SENTINEL", "_RootZone__rootMap", "$get$_RootZone__rootMap", function() {
    return P.HashMap_HashMap(null, null, null, null, null);
  }, "_RootZone__rootMap", "_toStringVisiting", "$get$_toStringVisiting", function() {
    return [];
  }, "_toStringVisiting", "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", function() {
    return P.Utf8Decoder__makeDecoder();
  }, "Utf8Decoder__decoder", "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", function() {
    return H.NativeInt8List__create1(H._ensureNativeList(H.setRuntimeTypeInfo([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], [P.int])));
  }, "_Base64Decoder__inverseAlphabet", "Encoding__nameToEncoding", "$get$Encoding__nameToEncoding", function() {
    return P.LinkedHashMap_LinkedHashMap$_literal(["iso_8859-1:1987", C.Latin1Codec_false, "iso-ir-100", C.Latin1Codec_false, "iso_8859-1", C.Latin1Codec_false, "iso-8859-1", C.Latin1Codec_false, "latin1", C.Latin1Codec_false, "l1", C.Latin1Codec_false, "ibm819", C.Latin1Codec_false, "cp819", C.Latin1Codec_false, "csisolatin1", C.Latin1Codec_false, "iso-ir-6", C.AsciiCodec_false, "ansi_x3.4-1968", C.AsciiCodec_false, "ansi_x3.4-1986", C.AsciiCodec_false, "iso_646.irv:1991", C.AsciiCodec_false, "iso646-us", C.AsciiCodec_false, "us-ascii", C.AsciiCodec_false, "us", C.AsciiCodec_false, "ibm367", C.AsciiCodec_false, "cp367", C.AsciiCodec_false, "csascii", C.AsciiCodec_false, "ascii", C.AsciiCodec_false, "csutf8", C.Utf8Codec_false, "utf-8", C.Utf8Codec_false], P.String, P.Encoding);
  }, "Encoding__nameToEncoding", "_Uri__isWindowsCached", "$get$_Uri__isWindowsCached", function() {
    return typeof process != "undefined" && Object.prototype.toString.call(process) == "[object process]" && process.platform == "win32";
  }, "_Uri__isWindowsCached", "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", function() {
    return P.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true, false);
  }, "_Uri__needsNoEncoding", "_hasErrorStackProperty", "$get$_hasErrorStackProperty", function() {
    return new Error().stack != void 0;
  }, "_hasErrorStackProperty", "_scannerTables", "$get$_scannerTables", function() {
    return P._createTables();
  }, "_scannerTables", "CssStyleDeclaration__propertyCache", "$get$CssStyleDeclaration__propertyCache", function() {
    return {};
  }, "CssStyleDeclaration__propertyCache", "ElementEvents_webkitEvents", "$get$ElementEvents_webkitEvents", function() {
    var t1 = P.String;
    return P.LinkedHashMap_LinkedHashMap$_literal(["animationend", "webkitAnimationEnd", "animationiteration", "webkitAnimationIteration", "animationstart", "webkitAnimationStart", "fullscreenchange", "webkitfullscreenchange", "fullscreenerror", "webkitfullscreenerror", "keyadded", "webkitkeyadded", "keyerror", "webkitkeyerror", "keymessage", "webkitkeymessage", "needkey", "webkitneedkey", "pointerlockchange", "webkitpointerlockchange", "pointerlockerror", "webkitpointerlockerror", "resourcetimingbufferfull", "webkitresourcetimingbufferfull", "transitionend", "webkitTransitionEnd", "speechchange", "webkitSpeechChange"], t1, t1);
  }, "ElementEvents_webkitEvents", "CssClassSetImpl__validTokenRE", "$get$CssClassSetImpl__validTokenRE", function() {
    return P.RegExp_RegExp("^\\S+$", true, false);
  }, "CssClassSetImpl__validTokenRE", "context", "$get$context", function() {
    return H.interceptedTypeCheck(P._wrapToDart(self), "$isJsObject");
  }, "context", "_DART_OBJECT_PROPERTY_NAME", "$get$_DART_OBJECT_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartObject");
  }, "_DART_OBJECT_PROPERTY_NAME", "_dartProxyCtor", "$get$_dartProxyCtor", function() {
    return function DartObject(o) {
      this.o = o;
    };
  }, "_dartProxyCtor", "_viewContainerAnchor", "$get$_viewContainerAnchor", function() {
    var t1 = W.document();
    return t1.createComment("");
  }, "_viewContainerAnchor", "_componentIdPlaceholder", "$get$_componentIdPlaceholder", function() {
    return P.RegExp_RegExp("%ID%", true, false);
  }, "_componentIdPlaceholder", "NgZone__anyZoneKey", "$get$NgZone__anyZoneKey", function() {
    return new P.Object();
  }, "NgZone__anyZoneKey", "_modifierKeyGetters", "$get$_modifierKeyGetters", function() {
    return P.LinkedHashMap_LinkedHashMap$_literal(["alt", new N.closure(), "control", new N.closure0(), "meta", new N.closure1(), "shift", new N.closure2()], P.String, {func: 1, ret: P.bool, args: [W.KeyboardEvent]});
  }, "_modifierKeyGetters", "styles20", "$get$styles20", function() {
    return ["._nghost-%ID%{display:block}[focusContentWrapper]._ngcontent-%ID%{height:inherit;max-height:inherit;min-height:inherit}"];
  }, "styles20", "styles$FocusTrapComponent", "$get$styles$FocusTrapComponent", function() {
    return [$.$get$styles20()];
  }, "styles$FocusTrapComponent", "FrameworkStabilizers__idToFrameworkStabilizer", "$get$FrameworkStabilizers__idToFrameworkStabilizer", function() {
    return P.LinkedHashMap_LinkedHashMap$_empty(P.int, null);
  }, "FrameworkStabilizers__idToFrameworkStabilizer", "testabilitiesEnabled", "$get$testabilitiesEnabled", function() {
    return J.contains$1$asx(self.window.location.href, "enableTestabilities");
  }, "testabilitiesEnabled", "styles15", "$get$styles15", function() {
    return ['._nghost-%ID%{display:inline-flex}._nghost-%ID%[light]{opacity:0.54}._nghost-%ID%[size=x-small]  i{font-size:12px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=small]  i{font-size:13px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=medium]  i{font-size:16px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=large]  i{font-size:18px;height:1em;line-height:1em;width:1em}._nghost-%ID%[size=x-large]  i{font-size:20px;height:1em;line-height:1em;width:1em}._nghost-%ID%[flip][dir=rtl] .glyph-i._ngcontent-%ID%,[dir=rtl] [flip]._nghost-%ID% .glyph-i._ngcontent-%ID%{transform:scaleX(-1)}._nghost-%ID%[baseline]{align-items:center}._nghost-%ID%[baseline]::before{content:"-";display:inline-block;width:0;visibility:hidden}._nghost-%ID%[baseline] .glyph-i._ngcontent-%ID%{margin-bottom:0.1em}'];
  }, "styles15", "styles$GlyphComponent", "$get$styles$GlyphComponent", function() {
    return [$.$get$styles15()];
  }, "styles$GlyphComponent", "styles18", "$get$styles18", function() {
    return [".segment-highlight._ngcontent-%ID%{font-weight:700}"];
  }, "styles18", "styles$HighlightedTextComponent", "$get$styles$HighlightedTextComponent", function() {
    return [$.$get$styles18()];
  }, "styles$HighlightedTextComponent", "styles1", "$get$styles1", function() {
    return ['._nghost-%ID%{font-size:14px;font-weight:500;text-transform:uppercase;user-select:none;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;display:inline-block;letter-spacing:0.01em;line-height:normal;outline:none;position:relative;text-align:center}._nghost-%ID%.acx-theme-dark{color:#fff}._nghost-%ID%:not([icon]){margin:0 0.29em}._nghost-%ID%[dense]:not([icon]){height:32px;font-size:13px}._nghost-%ID%[compact]:not([icon]){padding:0 8px}._nghost-%ID%[disabled]{color:rgba(0,0,0,0.26);cursor:not-allowed}._nghost-%ID%[disabled].acx-theme-dark{color:rgba(255,255,255,0.3)}._nghost-%ID%[disabled] > *._ngcontent-%ID%{pointer-events:none}._nghost-%ID%:not([disabled]):not([icon]):hover::after,._nghost-%ID%.is-focused::after{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;background-color:currentColor;opacity:0.12;border-radius:inherit;pointer-events:none}._nghost-%ID%[raised][animated]{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}._nghost-%ID%[raised][elevation="1"]{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="2"]{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="3"]{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="4"]{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="5"]{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="6"]{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}._nghost-%ID%[raised].acx-theme-dark{background-color:#4285f4}._nghost-%ID%[raised][disabled]{background:rgba(0,0,0,0.12);box-shadow:none}._nghost-%ID%[raised][disabled].acx-theme-dark{background:rgba(255,255,255,0.12)}._nghost-%ID%[raised].highlighted:not([disabled]){background-color:#4285f4;color:#fff}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%[clear-size]{margin:0}._nghost-%ID% .content._ngcontent-%ID%{display:inline-flex;align-items:center}._nghost-%ID%:not([icon]){border-radius:2px;min-width:64px}._nghost-%ID%:not([icon]) .content._ngcontent-%ID%{padding:0.7em 0.57em}._nghost-%ID%[icon]{border-radius:50%}._nghost-%ID%[icon] .content._ngcontent-%ID%{padding:8px}._nghost-%ID%[clear-size]{min-width:0}'];
  }, "styles1", "styles$MaterialButtonComponent", "$get$styles$MaterialButtonComponent", function() {
    return [$.$get$styles1()];
  }, "styles$MaterialButtonComponent", "styles30", "$get$styles30", function() {
    return ['._nghost-%ID%{font-size:14px;font-weight:500;text-transform:uppercase;user-select:none;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;display:inline-block;letter-spacing:0.01em;line-height:normal;outline:none;position:relative;text-align:center;border-radius:28px}._nghost-%ID%.acx-theme-dark{color:#fff}._nghost-%ID%:not([icon]){margin:0 0.29em}._nghost-%ID%[dense]:not([icon]){height:32px;font-size:13px}._nghost-%ID%[compact]:not([icon]){padding:0 8px}._nghost-%ID%[disabled]{color:rgba(0,0,0,0.26);cursor:not-allowed}._nghost-%ID%[disabled].acx-theme-dark{color:rgba(255,255,255,0.3)}._nghost-%ID%[disabled] > *._ngcontent-%ID%{pointer-events:none}._nghost-%ID%:not([disabled]):not([icon]):hover::after,._nghost-%ID%.is-focused::after{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;background-color:currentColor;opacity:0.12;border-radius:inherit;pointer-events:none}._nghost-%ID%[raised][animated]{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}._nghost-%ID%[raised][elevation="1"]{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="2"]{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="3"]{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="4"]{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="5"]{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}._nghost-%ID%[raised][elevation="6"]{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}._nghost-%ID%[raised].acx-theme-dark{background-color:#4285f4}._nghost-%ID%[raised][disabled]{background:rgba(0,0,0,0.12);box-shadow:none}._nghost-%ID%[raised][disabled].acx-theme-dark{background:rgba(255,255,255,0.12)}._nghost-%ID%[raised].highlighted:not([disabled]){background-color:#4285f4;color:#fff}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%[clear-size]{margin:0}._nghost-%ID% .content._ngcontent-%ID%{display:inline-flex;align-items:center}._nghost-%ID% .content._ngcontent-%ID%{height:56px;width:56px}._nghost-%ID% .content._ngcontent-%ID%{justify-content:center}._nghost-%ID%[mini]{font-size:14px;font-weight:500;text-transform:uppercase;user-select:none;background:transparent;border-radius:inherit;box-sizing:border-box;cursor:pointer;display:inline-block;letter-spacing:0.01em;line-height:normal;outline:none;position:relative;text-align:center;border-radius:20px}._nghost-%ID%[mini].acx-theme-dark{color:#fff}._nghost-%ID%[mini]:not([icon]){margin:0 0.29em}._nghost-%ID%[mini][dense]:not([icon]){height:32px;font-size:13px}._nghost-%ID%[mini][compact]:not([icon]){padding:0 8px}._nghost-%ID%[mini][disabled]{color:rgba(0,0,0,0.26);cursor:not-allowed}._nghost-%ID%[mini][disabled].acx-theme-dark{color:rgba(255,255,255,0.3)}._nghost-%ID%[mini][disabled] > *._ngcontent-%ID%{pointer-events:none}._nghost-%ID%[mini]:not([disabled]):not([icon]):hover::after,._nghost-%ID%[mini].is-focused::after{content:"";display:block;position:absolute;top:0;left:0;right:0;bottom:0;background-color:currentColor;opacity:0.12;border-radius:inherit;pointer-events:none}._nghost-%ID%[mini][raised][animated]{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}._nghost-%ID%[mini][raised][elevation="1"]{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}._nghost-%ID%[mini][raised][elevation="2"]{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}._nghost-%ID%[mini][raised][elevation="3"]{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}._nghost-%ID%[mini][raised][elevation="4"]{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}._nghost-%ID%[mini][raised][elevation="5"]{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}._nghost-%ID%[mini][raised][elevation="6"]{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}._nghost-%ID%[mini][raised].acx-theme-dark{background-color:#4285f4}._nghost-%ID%[mini][raised][disabled]{background:rgba(0,0,0,0.12);box-shadow:none}._nghost-%ID%[mini][raised][disabled].acx-theme-dark{background:rgba(255,255,255,0.12)}._nghost-%ID%[mini][raised].highlighted:not([disabled]){background-color:#4285f4;color:#fff}._nghost-%ID%[mini][no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%[mini][clear-size]{margin:0}._nghost-%ID%[mini] .content._ngcontent-%ID%{display:inline-flex;align-items:center}._nghost-%ID%[mini] .content._ngcontent-%ID%{height:40px;width:40px}._nghost-%ID%[mini] .content._ngcontent-%ID%{justify-content:center}._nghost-%ID%[raised]{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}._nghost-%ID%.is-pressed[raised]{box-shadow:0 12px 17px 2px rgba(0,0,0,0.14),0 5px 22px 4px rgba(0,0,0,0.12),0 7px 8px -4px rgba(0,0,0,0.2)}material-icon._ngcontent-%ID%  .material-icon-i.material-icon-i{font-size:24px}glyph._ngcontent-%ID%  i{font-size:24px;height:1em;line-height:1em;width:1em}'];
  }, "styles30", "styles$MaterialFabComponent", "$get$styles$MaterialFabComponent", function() {
    return [$.$get$styles30()];
  }, "styles$MaterialFabComponent", "styles16", "$get$styles16", function() {
    return ['._nghost-%ID%{align-items:center;cursor:pointer;display:inline-flex;margin:8px}._nghost-%ID%[no-ink] material-ripple._ngcontent-%ID%{display:none}._nghost-%ID%:focus{outline:none}._nghost-%ID%.disabled{cursor:not-allowed}._nghost-%ID%.disabled > .content._ngcontent-%ID%{color:rgba(0,0,0,0.54)}._nghost-%ID%.disabled > .icon-container._ngcontent-%ID% > .icon._ngcontent-%ID%{color:rgba(0,0,0,0.26)}.icon-container._ngcontent-%ID%{display:flex;position:relative}.icon-container.focus._ngcontent-%ID%::after,.icon-container._ngcontent-%ID% .ripple._ngcontent-%ID%{color:#9e9e9e;border-radius:20px;height:40px;left:-8px;position:absolute;top:-8px;width:40px}.icon-container.focus._ngcontent-%ID%::after{content:"";display:block;background-color:currentColor;opacity:0.12}.icon._ngcontent-%ID%{opacity:0.54}.icon.filled._ngcontent-%ID%{color:#4285f4;opacity:0.87}.content._ngcontent-%ID%{align-items:center;flex-grow:1;flex-shrink:1;flex-basis:auto;margin-left:8px;overflow-x:hidden;padding:1px 0;text-overflow:ellipsis}'];
  }, "styles16", "styles$MaterialCheckboxComponent", "$get$styles$MaterialCheckboxComponent", function() {
    return [$.$get$styles16()];
  }, "styles$MaterialCheckboxComponent", "styles28", "$get$styles28", function() {
    return ["._nghost-%ID%{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2);background:#fff;border-radius:2px;display:block;height:auto;max-height:60vh;max-width:1240px;overflow:hidden}@media (max-height:1200px){._nghost-%ID%{max-height:calc(560px + (100vh - 600px) * .267)}}@media (max-height:600px){._nghost-%ID%{max-height:calc(100vh - 32px)}}@media (max-width:1800px){._nghost-%ID%{max-width:calc(880px + (100vw - 920px) * .4)}}@media (max-width:920px){._nghost-%ID%{max-width:calc(100vw - 32px)}}focus-trap._ngcontent-%ID%{height:inherit;max-height:inherit;min-height:inherit;width:100%}.wrapper._ngcontent-%ID%{display:flex;flex-direction:column;height:inherit;overflow:hidden;max-height:inherit;min-height:inherit}.error._ngcontent-%ID%{font-size:13px;font-weight:400;box-sizing:border-box;flex-shrink:0;background:#eee;color:#c53929;padding:0 24px;transition:padding 218ms cubic-bezier(0.4,0,0.2,1) 0s;width:100%}.error.expanded._ngcontent-%ID%{border-bottom:1px #e0e0e0 solid;border-top:1px #e0e0e0 solid;padding:8px 24px}main._ngcontent-%ID%{font-size:13px;font-weight:400;box-sizing:border-box;flex-grow:1;color:rgba(0,0,0,0.87);overflow:auto;padding:0 24px;width:100%}main.top-scroll-stroke._ngcontent-%ID%{border-top:1px #e0e0e0 solid}main.bottom-scroll-stroke._ngcontent-%ID%{border-bottom:1px #e0e0e0 solid}footer._ngcontent-%ID%{box-sizing:border-box;flex-shrink:0;padding:0 8px 8px;width:100%}._nghost-%ID%  .wrapper > header{-moz-box-sizing:border-box;box-sizing:border-box;padding:24px 24px 0;width:100%;flex-shrink:0}._nghost-%ID%  .wrapper > header  h1,._nghost-%ID%  .wrapper > header  h3{font-size:20px;font-weight:500;margin:0 0 8px}._nghost-%ID%  .wrapper > header  p{font-size:12px;font-weight:400;margin:0}._nghost-%ID%  .wrapper > footer [footer]{display:flex;flex-shrink:0;justify-content:flex-end}._nghost-%ID%[headered]  .wrapper > header{-moz-box-sizing:border-box;box-sizing:border-box;padding:24px 24px 0;width:100%;background:#616161;padding-bottom:16px}._nghost-%ID%[headered]  .wrapper > header  h1,._nghost-%ID%[headered]  .wrapper > header  h3{font-size:20px;font-weight:500;margin:0 0 8px}._nghost-%ID%[headered]  .wrapper > header  p{font-size:12px;font-weight:400;margin:0}._nghost-%ID%[headered]  .wrapper > header  h1,._nghost-%ID%[headered]  .wrapper > header  h3{color:#fff;margin-bottom:4px}._nghost-%ID%[headered]  .wrapper > header  p{color:white}._nghost-%ID%[headered]  .wrapper > main{padding-top:8px}._nghost-%ID%[info]  .wrapper > header  h1,._nghost-%ID%[info]  .wrapper > header  h3{line-height:40px;margin:0}._nghost-%ID%[info]  .wrapper > header  material-button{float:right}._nghost-%ID%[info]  .wrapper > footer{padding-bottom:24px}"];
  }, "styles28", "styles$MaterialDialogComponent", "$get$styles$MaterialDialogComponent", function() {
    return [$.$get$styles28()];
  }, "styles$MaterialDialogComponent", "MaterialExpansionPanel__closePanelMsg", "$get$MaterialExpansionPanel__closePanelMsg", function() {
    return T.Intl_message("Close panel", null, "ARIA label for a button that closes the panel.", C.Map_empty0, null, null, "_closePanelMsg", null);
  }, "MaterialExpansionPanel__closePanelMsg", "MaterialExpansionPanel__openPanelMsg", "$get$MaterialExpansionPanel__openPanelMsg", function() {
    return T.Intl_message("Open panel", null, "ARIA label for a button that opens the panel.", C.Map_empty0, null, null, "_openPanelMsg", null);
  }, "MaterialExpansionPanel__openPanelMsg", "MaterialExpansionPanel_expandAriaMsg", "$get$MaterialExpansionPanel_expandAriaMsg", function() {
    return T.Intl_message("Expand", null, "Aria label used for the button used to expand the panel.", C.Map_empty0, null, null, null, null);
  }, "MaterialExpansionPanel_expandAriaMsg", "MaterialExpansionPanel__msgSave", "$get$MaterialExpansionPanel__msgSave", function() {
    return T.Intl_message("Save", null, "Text on save button.", C.Map_empty0, null, "Text on save button.", "_msgSave", null);
  }, "MaterialExpansionPanel__msgSave", "MaterialExpansionPanel__msgCancel", "$get$MaterialExpansionPanel__msgCancel", function() {
    return T.Intl_message("Cancel", null, "Text on cancel button.", C.Map_empty0, null, "Text on cancel button.", "_msgCancel", null);
  }, "MaterialExpansionPanel__msgCancel", "styles5", "$get$styles5", function() {
    return [".panel._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);background-color:#fff;margin:0;transition:margin 436ms cubic-bezier(0.4,0,0.2,1);width:inherit}._nghost-%ID%:not([hidden]){display:block}._nghost-%ID%[flat] .panel._ngcontent-%ID%{box-shadow:none;border:1px solid rgba(0,0,0,0.12)}._nghost-%ID%[wide] .panel._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);background-color:#fff;margin:0 24px;transition:margin 436ms cubic-bezier(0.4,0,0.2,1)}.panel.open._ngcontent-%ID%,._nghost-%ID%[wide] .panel.open._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);background-color:#fff;margin:16px 0}._nghost-%ID%[flat] .panel.open._ngcontent-%ID%{box-shadow:none;margin:0}.expand-button._ngcontent-%ID%{user-select:none;color:#616161;cursor:pointer;transition:transform 436ms cubic-bezier(0.4,0,0.2,1)}.expand-button.expand-more._ngcontent-%ID%{transform:rotate(180deg)}.expand-button.expand-on-left._ngcontent-%ID%{margin:0 4px 0 0}header._ngcontent-%ID%{display:flex;color:rgba(0,0,0,0.87);transition:height 218ms cubic-bezier(0.4,0,0.2,1),min-height 218ms cubic-bezier(0.4,0,0.2,1),opacity 436ms cubic-bezier(0.4,0,0.2,1)}header.hidden._ngcontent-%ID%{min-height:0;height:0;opacity:0;overflow:hidden}.header._ngcontent-%ID%{align-items:center;display:flex;flex-grow:1;font-size:15px;font-weight:400;cursor:pointer;min-height:48px;min-width:0;outline:none;padding:0 24px;transition:min-height 218ms cubic-bezier(0.4,0,0.2,1)}.header.closed:not(.is-disabled):hover._ngcontent-%ID%,.header.closed:not(.is-disabled):focus._ngcontent-%ID%{background-color:#eee}.header.disable-header-expansion._ngcontent-%ID%,.header.is-disabled._ngcontent-%ID%{cursor:default}.panel.open._ngcontent-%ID% > header:not(.hidden)._ngcontent-%ID% > .header._ngcontent-%ID%{min-height:64px}.background._ngcontent-%ID%,._nghost-%ID%[wide] .background._ngcontent-%ID%{background-color:whitesmoke}.panel-name._ngcontent-%ID%{padding-right:16px;min-width:20%}.panel-name._ngcontent-%ID% .primary-text._ngcontent-%ID%{margin:0}.panel-name._ngcontent-%ID% .secondary-text._ngcontent-%ID%{font-size:12px;font-weight:400;color:rgba(0,0,0,0.54);margin:0}.panel-description._ngcontent-%ID%{flex-grow:1;color:rgba(0,0,0,0.54);overflow:hidden;padding-right:16px}main._ngcontent-%ID%{max-height:100%;opacity:1;overflow:hidden;transition:height 218ms cubic-bezier(0.4,0,0.2,1),opacity 218ms cubic-bezier(0.4,0,0.2,1);width:100%}main.hidden._ngcontent-%ID%{height:0;opacity:0}.content-wrapper._ngcontent-%ID%{display:flex;margin:0 24px 16px}.content-wrapper.hidden-header._ngcontent-%ID%{margin-top:16px}.content-wrapper._ngcontent-%ID% > .expand-button._ngcontent-%ID%{align-self:flex-start;flex-shrink:0;margin-left:16px}.content-wrapper._ngcontent-%ID% > .expand-button:focus._ngcontent-%ID%{outline:none}.content-wrapper._ngcontent-%ID% > .expand-button.expand-on-left._ngcontent-%ID%{margin:0 4px 0 0}.content._ngcontent-%ID%{flex-grow:1;overflow:hidden;width:100%}.action-buttons._ngcontent-%ID%,.toolbelt._ngcontent-%ID%  [toolbelt]{box-sizing:border-box;border-top:1px rgba(0,0,0,0.12) solid;padding:16px 0;width:100%}.action-buttons._ngcontent-%ID%{color:#4285f4}"];
  }, "styles5", "styles$MaterialExpansionPanel", "$get$styles$MaterialExpansionPanel", function() {
    return [$.$get$styles5()];
  }, "styles$MaterialExpansionPanel", "styles", "$get$styles", function() {
    return ['._nghost-%ID%{display:inline-flex}._nghost-%ID%.flip  .material-icon-i{transform:scaleX(-1)}._nghost-%ID%[light]{opacity:0.54}._nghost-%ID% .material-icon-i._ngcontent-%ID%{font-size:24px}._nghost-%ID%[size=x-small] .material-icon-i._ngcontent-%ID%{font-size:12px}._nghost-%ID%[size=small] .material-icon-i._ngcontent-%ID%{font-size:13px}._nghost-%ID%[size=medium] .material-icon-i._ngcontent-%ID%{font-size:16px}._nghost-%ID%[size=large] .material-icon-i._ngcontent-%ID%{font-size:18px}._nghost-%ID%[size=x-large] .material-icon-i._ngcontent-%ID%{font-size:20px}.material-icon-i._ngcontent-%ID%{height:1em;line-height:1;width:1em}._nghost-%ID%[flip][dir=rtl] .material-icon-i._ngcontent-%ID%,[dir=rtl] [flip]._nghost-%ID% .material-icon-i._ngcontent-%ID%{transform:scaleX(-1)}._nghost-%ID%[baseline]{align-items:center}._nghost-%ID%[baseline]::before{content:"-";display:inline-block;width:0;visibility:hidden}._nghost-%ID%[baseline] .material-icon-i._ngcontent-%ID%{margin-bottom:0.1em}'];
  }, "styles", "styles$MaterialIconComponent", "$get$styles$MaterialIconComponent", function() {
    return [$.$get$styles()];
  }, "styles$MaterialIconComponent", "BaseMaterialInput_defaultEmptyMessage", "$get$BaseMaterialInput_defaultEmptyMessage", function() {
    return T.Intl_message("Enter a value", null, "Error message when the input is empty and required.", C.Map_empty0, null, null, null, null);
  }, "BaseMaterialInput_defaultEmptyMessage", "styles4", "$get$styles4", function() {
    return ["._nghost-%ID%{display:inline-flex;flex-direction:column;outline:none;padding:8px 0;text-align:inherit;width:176px;line-height:initial}.baseline._ngcontent-%ID%{display:inline-flex;flex-direction:column;width:100%}._nghost-%ID%[multiline] .baseline._ngcontent-%ID%{flex-shrink:0}.focused.label-text._ngcontent-%ID%{color:#4285f4}.focused-underline._ngcontent-%ID%,.cursor._ngcontent-%ID%{background-color:#4285f4}.top-section._ngcontent-%ID%{display:flex;flex-direction:row;align-items:baseline;margin-bottom:8px}.input-container._ngcontent-%ID%{flex-grow:100;flex-shrink:100;width:100%;position:relative}.input._ngcontent-%ID%::-ms-clear{display:none}.invalid.counter._ngcontent-%ID%,.invalid.label-text._ngcontent-%ID%,.error-text._ngcontent-%ID%,.focused.error-icon._ngcontent-%ID%{color:#c53929}.invalid.unfocused-underline._ngcontent-%ID%,.invalid.focused-underline._ngcontent-%ID%,.invalid.cursor._ngcontent-%ID%{background-color:#c53929}.right-align._ngcontent-%ID%{text-align:right}.leading-text._ngcontent-%ID%,.trailing-text._ngcontent-%ID%{padding:0 4px;white-space:nowrap}.glyph._ngcontent-%ID%{transform:translateY(8px)}.glyph.leading._ngcontent-%ID%{margin-right:8px}.glyph.trailing._ngcontent-%ID%{margin-left:8px}.glyph[disabled=true]._ngcontent-%ID%{opacity:0.3}input._ngcontent-%ID%,textarea._ngcontent-%ID%{font:inherit;color:inherit;padding:0;margin:0;background-color:transparent;border:0;outline:none;width:100%}input[type=text]._ngcontent-%ID%,input[type=text]:focus._ngcontent-%ID%,input[type=text]:hover._ngcontent-%ID%{border:0;outline:none;box-shadow:none}textarea._ngcontent-%ID%{position:absolute;top:0;right:0;bottom:0;left:0;resize:none;height:100%}input:hover._ngcontent-%ID%,textarea:hover._ngcontent-%ID%{cursor:text;box-shadow:none}input:focus._ngcontent-%ID%,textarea:focus._ngcontent-%ID%{box-shadow:none}input:invalid._ngcontent-%ID%,textarea:invalid._ngcontent-%ID%{box-shadow:none}.label-text.disabled._ngcontent-%ID%,.disabledInput._ngcontent-%ID%{color:rgba(0,0,0,0.38)}input[type=number]._ngcontent-%ID%::-webkit-inner-spin-button,input[type=number]._ngcontent-%ID%::-webkit-outer-spin-button{-webkit-appearance:none}input[type=number]._ngcontent-%ID%{-moz-appearance:textfield}.invisible._ngcontent-%ID%{visibility:hidden}.animated._ngcontent-%ID%,.reset._ngcontent-%ID%{transition:opacity 218ms cubic-bezier(0.4,0,0.2,1),transform 218ms cubic-bezier(0.4,0,0.2,1),font-size 218ms cubic-bezier(0.4,0,0.2,1)}.animated.label-text._ngcontent-%ID%{transform:translateY(-100%) translateY(-8px);font-size:12px}.leading-text.floated-label._ngcontent-%ID%,.trailing-text.floated-label._ngcontent-%ID%,.input-container.floated-label._ngcontent-%ID%{margin-top:16px}.label._ngcontent-%ID%{background:transparent;bottom:0;left:0;pointer-events:none;position:absolute;right:0;top:0}.label-text._ngcontent-%ID%{transform-origin:0%,0%;color:rgba(0,0,0,0.54);overflow:hidden;display:inline-block;max-width:100%}.label-text:not(.multiline)._ngcontent-%ID%{text-overflow:ellipsis;white-space:nowrap}.underline._ngcontent-%ID%{height:1px;overflow:visible}.disabled-underline._ngcontent-%ID%{-moz-box-sizing:border-box;box-sizing:border-box;height:1px;border-bottom:1px dashed;color:rgba(0,0,0,0.12)}.unfocused-underline._ngcontent-%ID%{height:1px;background:rgba(0,0,0,0.12);border-bottom-color:rgba(0,0,0,0.12);position:relative;top:-1px}.focused-underline._ngcontent-%ID%{transform:none;height:2px;position:relative;top:-3px}.focused-underline.invisible._ngcontent-%ID%{transform:scale3d(0,1,1)}.bottom-section._ngcontent-%ID%{display:flex;flex-direction:row;justify-content:space-between;margin-top:4px}.counter._ngcontent-%ID%,.error-text._ngcontent-%ID%,.hint-text._ngcontent-%ID%,.spaceholder._ngcontent-%ID%{font-size:12px}.spaceholder._ngcontent-%ID%{flex-grow:1;outline:none}.counter._ngcontent-%ID%{color:rgba(0,0,0,0.54);white-space:nowrap}.hint-text._ngcontent-%ID%{color:rgba(0,0,0,0.54)}.error-icon._ngcontent-%ID%{height:20px;width:20px}"];
  }, "styles4", "styles$MaterialInputComponent", "$get$styles$MaterialInputComponent", function() {
    return [$.$get$styles4()];
  }, "styles$MaterialInputComponent", "styles22", "$get$styles22", function() {
    return ["._nghost-%ID%{display:block;background:#fff;margin:0;padding:16px 0;white-space:nowrap}._nghost-%ID%[size=x-small]{width:96px}._nghost-%ID%[size=small]{width:192px}._nghost-%ID%[size=medium]{width:320px}._nghost-%ID%[size=large]{width:384px}._nghost-%ID%[size=x-large]{width:448px}._nghost-%ID%[min-size=x-small]{min-width:96px}._nghost-%ID%[min-size=small]{min-width:192px}._nghost-%ID%[min-size=medium]{min-width:320px}._nghost-%ID%[min-size=large]{min-width:384px}._nghost-%ID%[min-size=x-large]{min-width:448px}._nghost-%ID%  [group]:not(.empty) + *:not(script):not(template):not(.empty),._nghost-%ID%  :not([group]):not(script):not(template):not(.empty) + [group]:not(.empty){border-top:1px solid #e0e0e0;margin-top:7px;padding-top:8px}._nghost-%ID%  [group]:not(.empty) + *:not(script):not(template):not(.empty){box-shadow:inset 0 8px 0 0 #fff}._nghost-%ID%  [separator=present]{background:#e0e0e0;cursor:default;height:1px;margin:8px 0}._nghost-%ID%  [label]{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;color:#9e9e9e;font-size:12px;font-weight:400}._nghost-%ID%  [label].disabled{pointer-events:none}._nghost-%ID%  [label]  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}._nghost-%ID%  [label].disabled  .material-list-item-primary{color:rgba(0,0,0,0.38)}._nghost-%ID%  [label]  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}._nghost-%ID%  [label].disabled  .material-list-item-secondary{color:rgba(0,0,0,0.38)}._nghost-%ID%  [label]  .submenu-icon{transform:rotate(-90deg)}._nghost-%ID%[dir=rtl]  [label]  .submenu-icon,[dir=rtl] ._nghost-%ID%  [label]  .submenu-icon{transform:rotate(90deg)}"];
  }, "styles22", "styles$MaterialListComponent", "$get$styles$MaterialListComponent", function() {
    return [$.$get$styles22()];
  }, "styles$MaterialListComponent", "styles17", "$get$styles17", function() {
    return ["._nghost-%ID%{display:block}._nghost-%ID%:hover  .secondary-icon.hover-icon{opacity:inherit}.material-list-item-primary.caption-text._ngcontent-%ID%{margin:0 8px}.material-list-item-primary.secondary-icon._ngcontent-%ID%{transition:color 218ms cubic-bezier(0.4,0,0.2,1);width:24px}.material-list-item-primary.secondary-icon:not(.disabled):hover._ngcontent-%ID%{color:rgba(0,0,0,0.87)}.secondary-icon.hover-icon._ngcontent-%ID%{opacity:0;transition:opacity 218ms cubic-bezier(0.4,0,0.2,1)}"];
  }, "styles17", "styles$MenuItemAffixListComponent", "$get$styles$MenuItemAffixListComponent", function() {
    return [$.$get$styles17()];
  }, "styles$MenuItemAffixListComponent", "styles21", "$get$styles21", function() {
    return ["._nghost-%ID%{display:block;outline:none}.group-header._ngcontent-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;font-size:12px;font-weight:400;color:rgba(0,0,0,0.54);height:24px;line-height:24px;display:flex;justify-content:space-between}.group-header.disabled._ngcontent-%ID%{pointer-events:none}.group-header._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}.group-header.disabled._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.38)}.group-header._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}.group-header.disabled._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.38)}.group-header._ngcontent-%ID%  .submenu-icon{transform:rotate(-90deg)}.group-header.is-collapsible._ngcontent-%ID%{cursor:pointer}.expansion-icon._ngcontent-%ID%{align-items:center;cursor:pointer;margin-left:8px}.menu-item._ngcontent-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;display:flex;align-items:center;color:rgba(0,0,0,0.87);cursor:pointer;min-height:32px;outline:none}.menu-item.disabled._ngcontent-%ID%{pointer-events:none}.menu-item._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}.menu-item.disabled._ngcontent-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.38)}.menu-item._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}.menu-item.disabled._ngcontent-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.38)}.menu-item._ngcontent-%ID%  .submenu-icon{transform:rotate(-90deg)}.menu-item:not([separator=present]):hover._ngcontent-%ID%,.menu-item:not([separator=present]):focus._ngcontent-%ID%,.menu-item:not([separator=present]).active._ngcontent-%ID%{background:#eee}.menu-item:not([separator=present]).disabled._ngcontent-%ID%{background:none;color:rgba(0,0,0,0.38);cursor:default;pointer-events:all}.menu-item._ngcontent-%ID% material-icon.disabled._ngcontent-%ID%{color:rgba(0,0,0,0.38)}._nghost-%ID%[dir=rtl] .group-header._ngcontent-%ID%  .submenu-icon,[dir=rtl] ._nghost-%ID% .group-header._ngcontent-%ID%  .submenu-icon,._nghost-%ID%[dir=rtl] .menu-item._ngcontent-%ID%  .submenu-icon,[dir=rtl] ._nghost-%ID% .menu-item._ngcontent-%ID%  .submenu-icon{transform:rotate(90deg)}.menu-item.active._ngcontent-%ID%  .secondary-icon.hover-icon{opacity:inherit}.mouse-driven._ngcontent-%ID% .menu-item:not(:hover)._ngcontent-%ID%{background-color:inherit}.mouse-driven._ngcontent-%ID% .menu-item:hover._ngcontent-%ID%  .secondary-icon.hover-icon{opacity:inherit}.keyboard-driven._ngcontent-%ID% .menu-item:not(.active)._ngcontent-%ID%{background-color:inherit}.keyboard-driven._ngcontent-%ID% .menu-item.is-menu-parent._ngcontent-%ID%{background:#eee}.group:not(.empty):not(:first-child)._ngcontent-%ID%{border-top:1px solid #e0e0e0;margin-top:7px;padding-top:8px}.menu-item-label-section._ngcontent-%ID%{display:inline-flex;flex:1;flex-direction:column;line-height:normal;padding:4px 0}.menu-item-secondary-label._ngcontent-%ID%{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:rgba(0,0,0,0.54);font:400 12px/20px Roboto,Noto,sans-serif;letter-spacing:0.02em}.label-annotation._ngcontent-%ID%{color:#0f9d58;font-size:10px;font-weight:700;line-height:10px;text-transform:uppercase}.item-group-list._ngcontent-%ID%{padding:8px 0}.suffix-list._ngcontent-%ID%{margin-left:24px}"];
  }, "styles21", "styles$MenuItemGroupsComponent", "$get$styles$MenuItemGroupsComponent", function() {
    return [$.$get$styles21()];
  }, "styles$MenuItemGroupsComponent", "styles24", "$get$styles24", function() {
    return [".item-group-list._ngcontent-%ID%{padding:8px 0}"];
  }, "styles24", "styles$MenuPopupComponent", "$get$styles$MenuPopupComponent", function() {
    return [$.$get$styles24()];
  }, "styles$MenuPopupComponent", "MaterialPopupComponent__idGenerator", "$get$MaterialPopupComponent__idGenerator", function() {
    return R.SequentialIdGenerator$fromUUID();
  }, "MaterialPopupComponent__idGenerator", "styles23", "$get$styles23", function() {
    return ['.shadow._ngcontent-%ID%{background:#fff;border-radius:2px;transition:transform 150ms cubic-bezier(0.4,0,1,1);transform-origin:top left;transform:scale3d(0,0,1);will-change:transform}.shadow[animated]._ngcontent-%ID%{transition:box-shadow 0.28s cubic-bezier(0.4,0,0.2,1)}.shadow[elevation="1"]._ngcontent-%ID%{box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.shadow[elevation="2"]._ngcontent-%ID%{box-shadow:0 4px 5px 0 rgba(0,0,0,0.14),0 1px 10px 0 rgba(0,0,0,0.12),0 2px 4px -1px rgba(0,0,0,0.2)}.shadow[elevation="3"]._ngcontent-%ID%{box-shadow:0 6px 10px 0 rgba(0,0,0,0.14),0 1px 18px 0 rgba(0,0,0,0.12),0 3px 5px -1px rgba(0,0,0,0.2)}.shadow[elevation="4"]._ngcontent-%ID%{box-shadow:0 8px 10px 1px rgba(0,0,0,0.14),0 3px 14px 2px rgba(0,0,0,0.12),0 5px 5px -3px rgba(0,0,0,0.2)}.shadow[elevation="5"]._ngcontent-%ID%{box-shadow:0 16px 24px 2px rgba(0,0,0,0.14),0 6px 30px 5px rgba(0,0,0,0.12),0 8px 10px -5px rgba(0,0,0,0.2)}.shadow[elevation="6"]._ngcontent-%ID%{box-shadow:0 24px 38px 3px rgba(0,0,0,0.14),0 9px 46px 8px rgba(0,0,0,0.12),0 11px 15px -7px rgba(0,0,0,0.2)}.shadow[slide=x]._ngcontent-%ID%{transform:scale3d(0,1,1)}.shadow[slide=y]._ngcontent-%ID%{transform:scale3d(1,0,1)}.shadow.visible._ngcontent-%ID%{transition:transform 150ms cubic-bezier(0,0,0.2,1);transform:scale3d(1,1,1)}.shadow.ink._ngcontent-%ID%{background:#616161;color:#fff}.shadow.full-width._ngcontent-%ID%{flex-grow:1;flex-shrink:1;flex-basis:auto}.shadow._ngcontent-%ID% .popup._ngcontent-%ID%{border-radius:2px;flex-grow:1;flex-shrink:1;flex-basis:auto;overflow:hidden;transition:inherit}.shadow.visible._ngcontent-%ID% .popup._ngcontent-%ID%{visibility:initial}.shadow._ngcontent-%ID% header._ngcontent-%ID%,.shadow._ngcontent-%ID% footer._ngcontent-%ID%{display:block}.shadow._ngcontent-%ID% .main._ngcontent-%ID%{display:flex;flex-direction:column;min-height:inherit;min-width:inherit;max-height:inherit;max-width:inherit;overflow:auto;overscroll-behavior:contain}._nghost-%ID%{justify-content:flex-start;align-items:flex-start}._nghost-%ID%  ::-webkit-scrollbar{background-color:rgba(0,0,0,0);height:4px;width:4px}._nghost-%ID%  ::-webkit-scrollbar:hover{background-color:rgba(0,0,0,0.12)}._nghost-%ID%  ::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,0.26);min-height:48px;min-width:48px}._nghost-%ID%  ::-webkit-scrollbar-thumb:hover{background-color:#4285f4}._nghost-%ID%  ::-webkit-scrollbar-button{width:0;height:0}.material-popup-content._ngcontent-%ID%{min-width:inherit;min-height:inherit;max-width:inherit;max-height:inherit;position:relative;display:flex;flex-direction:column}.popup-wrapper._ngcontent-%ID%{width:100%}'];
  }, "styles23", "styles$MaterialPopupComponent", "$get$styles$MaterialPopupComponent", function() {
    return [$.$get$styles23()];
  }, "styles$MaterialPopupComponent", "styles29", "$get$styles29", function() {
    return ["._nghost-%ID%{display:inline-block;width:100%;height:4px}.progress-container._ngcontent-%ID%{position:relative;height:100%;background-color:#e0e0e0;overflow:hidden}._nghost-%ID%[dir=rtl] .progress-container._ngcontent-%ID%,[dir=rtl] ._nghost-%ID% .progress-container._ngcontent-%ID%{transform:scaleX(-1)}.progress-container.indeterminate._ngcontent-%ID%{background-color:#c6dafc}.progress-container.indeterminate._ngcontent-%ID% > .secondary-progress._ngcontent-%ID%{background-color:#4285f4}.active-progress._ngcontent-%ID%,.secondary-progress._ngcontent-%ID%{transform-origin:left center;transform:scaleX(0);position:absolute;top:0;transition:transform 218ms cubic-bezier(0.4,0,0.2,1);right:0;bottom:0;left:0;will-change:transform}.active-progress._ngcontent-%ID%{background-color:#4285f4}.secondary-progress._ngcontent-%ID%{background-color:#a1c2fa}.progress-container.indeterminate.fallback._ngcontent-%ID% > .active-progress._ngcontent-%ID%{animation-name:indeterminate-active-progress;animation-duration:2000ms;animation-iteration-count:infinite;animation-timing-function:linear}.progress-container.indeterminate.fallback._ngcontent-%ID% > .secondary-progress._ngcontent-%ID%{animation-name:indeterminate-secondary-progress;animation-duration:2000ms;animation-iteration-count:infinite;animation-timing-function:linear}@keyframes indeterminate-active-progress{0%{transform:translate(0%) scaleX(0)}25%{transform:translate(0%) scaleX(0.5)}50%{transform:translate(25%) scaleX(0.75)}75%{transform:translate(100%) scaleX(0)}100%{transform:translate(100%) scaleX(0)}}@keyframes indeterminate-secondary-progress{0%{transform:translate(0%) scaleX(0)}60%{transform:translate(0%) scaleX(0)}80%{transform:translate(0%) scaleX(0.6)}100%{transform:translate(100%) scaleX(0.1)}}"];
  }, "styles29", "styles$MaterialProgressComponent", "$get$styles$MaterialProgressComponent", function() {
    return [$.$get$styles29()];
  }, "styles$MaterialProgressComponent", "styles0", "$get$styles0", function() {
    return ["material-ripple {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n  border-radius: inherit;\n  contain: strict;\n  transform: translateX(0);\n}\n\n.__acx-ripple {\n  position: absolute;\n  width: 256px;\n  height: 256px;\n  background-color: currentColor;\n  border-radius: 50%;\n  pointer-events: none;\n  will-change: opacity, transform;\n  opacity: 0;\n}\n.__acx-ripple.fallback {\n  animation: __acx-ripple 300ms linear;\n  transform: translateZ(0);\n}\n\n@keyframes __acx-ripple {\n  from {\n    opacity: 0;\n    transform: translateZ(0) scale(0.125);\n  }\n  25%, 50% {\n    opacity: 0.16;\n  }\n  to {\n    opacity: 0;\n    transform: translateZ(0) scale(4);\n  }\n}\n"];
  }, "styles0", "styles$MaterialRippleComponent", "$get$styles$MaterialRippleComponent", function() {
    return [$.$get$styles0()];
  }, "styles$MaterialRippleComponent", "styles19", "$get$styles19", function() {
    return ["._nghost-%ID%{display:block;font-family:inherit;font-size:15px;line-height:32px;padding:0 24px;position:relative;white-space:nowrap;display:flex;align-items:center;color:rgba(0,0,0,0.87);cursor:pointer;padding:0 16px;outline:none}._nghost-%ID%.disabled{pointer-events:none}._nghost-%ID%  .material-list-item-primary{color:rgba(0,0,0,0.54);width:40px}._nghost-%ID%.disabled  .material-list-item-primary{color:rgba(0,0,0,0.38)}._nghost-%ID%  .material-list-item-secondary{color:rgba(0,0,0,0.54);margin-left:auto}._nghost-%ID%.disabled  .material-list-item-secondary{color:rgba(0,0,0,0.38)}._nghost-%ID%  .submenu-icon{transform:rotate(-90deg)}._nghost-%ID%:not([separator=present]):hover,._nghost-%ID%:not([separator=present]):focus,._nghost-%ID%:not([separator=present]).active{background:#eee}._nghost-%ID%:not([separator=present]).disabled{background:none;color:rgba(0,0,0,0.38);cursor:default;pointer-events:all}._nghost-%ID%:hover,._nghost-%ID%.active{background:whitesmoke}._nghost-%ID%:not(.multiselect).selected{background:#eee}._nghost-%ID% .selected-accent._ngcontent-%ID%{position:absolute;top:0;left:0;bottom:0;width:3px;background:#9e9e9e}._nghost-%ID% material-checkbox._ngcontent-%ID%{margin:0}.check-container._ngcontent-%ID%{display:inline-block;width:40px}.dynamic-item._ngcontent-%ID%{flex-grow:1}"];
  }, "styles19", "styles$MaterialSelectItemComponent", "$get$styles$MaterialSelectItemComponent", function() {
    return [$.$get$styles19()];
  }, "styles$MaterialSelectItemComponent", "styles2", "$get$styles2", function() {
    return ['._nghost-%ID%{animation:rotate 1568ms linear infinite;border-color:#4285f4;display:inline-block;height:28px;position:relative;vertical-align:middle;width:28px}.spinner._ngcontent-%ID%{animation:fill-unfill-rotate 5332ms cubic-bezier(0.4,0,0.2,1) infinite both;border-color:inherit;height:100%;display:flex;position:absolute;width:100%}.circle._ngcontent-%ID%{border-color:inherit;height:100%;overflow:hidden;position:relative;width:50%}.circle._ngcontent-%ID%::before{border-bottom-color:transparent!important;border-color:inherit;border-radius:50%;border-style:solid;border-width:3px;bottom:0;box-sizing:border-box;content:"";height:100%;left:0;position:absolute;right:0;top:0;width:200%}.circle.left._ngcontent-%ID%::before{animation:left-spin 1333ms cubic-bezier(0.4,0,0.2,1) infinite both;border-right-color:transparent;transform:rotate(129deg)}.circle.right._ngcontent-%ID%::before{animation:right-spin 1333ms cubic-bezier(0.4,0,0.2,1) infinite both;border-left-color:transparent;left:-100%;transform:rotate(-129deg)}.circle.gap._ngcontent-%ID%{height:50%;left:45%;position:absolute;top:0;width:10%}.circle.gap._ngcontent-%ID%::before{height:200%;left:-450%;width:1000%}@keyframes rotate{to{transform:rotate(360deg)}}@keyframes fill-unfill-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}to{transform:rotate(1080deg)}}@keyframes left-spin{from{transform:rotate(130deg)}50%{transform:rotate(-5deg)}to{transform:rotate(130deg)}}@keyframes right-spin{from{transform:rotate(-130deg)}50%{transform:rotate(5deg)}to{transform:rotate(-130deg)}}'];
  }, "styles2", "styles$MaterialSpinnerComponent", "$get$styles$MaterialSpinnerComponent", function() {
    return [$.$get$styles2()];
  }, "styles$MaterialSpinnerComponent", "MaterialYesNoButtonsComponent__msgYes", "$get$MaterialYesNoButtonsComponent__msgYes", function() {
    return T.Intl_message("Yes", null, "Text on yes button.", C.Map_empty0, null, "Text on yes button.", "_msgYes", null);
  }, "MaterialYesNoButtonsComponent__msgYes", "MaterialYesNoButtonsComponent__msgNo", "$get$MaterialYesNoButtonsComponent__msgNo", function() {
    return T.Intl_message("No", null, "Text on no button.", C.Map_empty0, null, "Text on no button.", "_msgNo", null);
  }, "MaterialYesNoButtonsComponent__msgNo", "styles3", "$get$styles3", function() {
    return ["._nghost-%ID%{display:flex}.btn.btn-yes._ngcontent-%ID%,.btn.btn-no._ngcontent-%ID%{height:36px;margin:0 4px}.btn:not([disabled]).highlighted[raised]._ngcontent-%ID%{background-color:#4285f4;color:#fff}.btn:not([disabled]).highlighted:not([raised])._ngcontent-%ID%{color:#4285f4}.spinner._ngcontent-%ID%{align-items:center;display:flex;margin-right:24px;min-width:128px}._nghost-%ID%.no-margin .btn._ngcontent-%ID%{margin:0;min-width:0;padding:0}._nghost-%ID%.no-margin .btn._ngcontent-%ID% .content._ngcontent-%ID%{padding-right:0}._nghost-%ID%[reverse]{flex-direction:row-reverse}._nghost-%ID%[reverse] .spinner._ngcontent-%ID%{justify-content:flex-end}._nghost-%ID%[dense] .btn.btn-yes._ngcontent-%ID% ,._nghost-%ID%[dense] .btn.btn-no._ngcontent-%ID% {height:32px;font-size:13px}"];
  }, "styles3", "styles$MaterialYesNoButtonsComponent", "$get$styles$MaterialYesNoButtonsComponent", function() {
    return [$.$get$styles3()];
  }, "styles$MaterialYesNoButtonsComponent", "DomPopupSource__isRtl", "$get$DomPopupSource__isRtl", function() {
    var t1 = W.document();
    return t1.documentElement.dir === "rtl" || t1.body.dir === "rtl";
  }, "DomPopupSource__isRtl", "styles26", "$get$styles26", function() {
    return ["._nghost-%ID%{position:absolute}.ink-container._ngcontent-%ID%{box-sizing:border-box;overflow:hidden;max-width:320px;padding:8px;font-size:12px;font-weight:500;line-height:16px;text-align:left;text-overflow:ellipsis}.aacmtit-ink-tooltip-shadow._ngcontent-%ID%  .popup-wrapper.mixin{margin:8px}"];
  }, "styles26", "styles$MaterialInkTooltipComponent", "$get$styles$MaterialInkTooltipComponent", function() {
    return [$.$get$styles26()];
  }, "styles$MaterialInkTooltipComponent", "supportsAnimationApi", "$get$supportsAnimationApi", function() {
    return P.hasProperty(W.DivElement_DivElement(), "animate") && !$.$get$context().hasProperty$1("__acxDisableWebAnimationsApi");
  }, "supportsAnimationApi", "SequentialIdGenerator__rnd", "$get$SequentialIdGenerator__rnd", function() {
    return P.Random_Random(null);
  }, "SequentialIdGenerator__rnd", "RouteDefinition__findParameters", "$get$RouteDefinition__findParameters", function() {
    return P.RegExp_RegExp(":([\\w-]+)", true, false);
  }, "RouteDefinition__findParameters", "styles25", "$get$styles25", function() {
    return ["h1._ngcontent-%ID%{font-size:1.2em;color:#999;margin-bottom:0}h2._ngcontent-%ID%{font-size:2em;margin-top:0;padding-top:0}nav._ngcontent-%ID% a._ngcontent-%ID%{padding:5px 10px;text-decoration:none;margin-top:10px;display:inline-block;background-color:#eee;border-radius:4px}nav._ngcontent-%ID% a:visited._ngcontent-%ID%,a:link._ngcontent-%ID%{color:#607D8B}nav._ngcontent-%ID% a:hover._ngcontent-%ID%{color:#039be5;background-color:#CFD8DC}nav._ngcontent-%ID% a.active._ngcontent-%ID%{color:#039be5}div.hrdiv._ngcontent-%ID%{border-bottom:2px solid #A0A0A0;overflow:hidden;width:100%;margin:auto;margin-bottom:.75em}div.appcontainer._ngcontent-%ID%{min-width:600px;max-width:1280px;margin:auto} material-input.interop_fillable .focused-underline{background-color:#27d64b}"];
  }, "styles25", "styles$AppComponent", "$get$styles$AppComponent", function() {
    return [$.$get$styles25()];
  }, "styles$AppComponent", "styles27", "$get$styles27", function() {
    return ["h1._ngcontent-%ID%{font-size:1.2em;color:#999;margin-bottom:0}h2._ngcontent-%ID%{font-size:2em;margin-top:0;padding-top:0}nav._ngcontent-%ID% a._ngcontent-%ID%{padding:5px 10px;text-decoration:none;margin-top:10px;display:inline-block;background-color:#eee;border-radius:4px}nav._ngcontent-%ID% a:visited._ngcontent-%ID%,a:link._ngcontent-%ID%{color:#607D8B}nav._ngcontent-%ID% a:hover._ngcontent-%ID%{color:#039be5;background-color:#CFD8DC}nav._ngcontent-%ID% a.active._ngcontent-%ID%{color:#039be5}div.hrdiv._ngcontent-%ID%{border-bottom:2px solid #A0A0A0;overflow:hidden;width:100%;margin:auto;margin-bottom:.75em}div.appcontainer._ngcontent-%ID%{min-width:600px;max-width:1280px;margin:auto}"];
  }, "styles27", "styles$AdminComponent", "$get$styles$AdminComponent", function() {
    return [$.$get$styles27()];
  }, "styles$AdminComponent", "styles32", "$get$styles32", function() {
    return ['[class*="col-"]._ngcontent-%ID%{float:left;padding-right:20px;padding-bottom:20px}[class*="col-"]:last-of-type._ngcontent-%ID%{padding-right:0}a._ngcontent-%ID%{text-decoration:none}*._ngcontent-%ID%,*._ngcontent-%ID%:after,*._ngcontent-%ID%:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}h3._ngcontent-%ID%{text-align:center;margin-bottom:0}h4._ngcontent-%ID%{position:relative}.grid._ngcontent-%ID%{margin:0}.col-1-4._ngcontent-%ID%{width:25%}.module._ngcontent-%ID%{padding:20px;text-align:center;color:#eee;max-height:120px;min-width:120px;background-color:#607D8B;border-radius:2px}.module:hover._ngcontent-%ID%{background-color:#EEE;cursor:pointer;color:#607d8b}.grid-pad._ngcontent-%ID%{padding:10px 0}.grid-pad._ngcontent-%ID% > [class*="col-"]:last-of-type._ngcontent-%ID%{padding-right:20px}@media (max-width:600px){.module._ngcontent-%ID%{font-size:10px;max-height:75px}}@media (max-width:1024px){.grid._ngcontent-%ID%{margin:0}.module._ngcontent-%ID%{min-width:60px}}'];
  }, "styles32", "styles$DashboardComponent", "$get$styles$DashboardComponent", function() {
    return [$.$get$styles32()];
  }, "styles$DashboardComponent", "dashSections", "$get$dashSections", function() {
    return H.setRuntimeTypeInfo([N.DashSection$("Events", true), N.DashSection$("Tournaments", true), N.DashSection$("Stages", true), N.DashSection$("Matches", true), N.DashSection$("Rounds", true), N.DashSection$("Games", true), N.DashSection$("Results", true), N.DashSection$("Overrides", false), N.DashSection$("Entrants", true), N.DashSection$("Users", true), N.DashSection$("Admin", true)], [N.DashSection]);
  }, "dashSections", "styles13", "$get$styles13", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles13", "styles$EntrantDetailComponent", "$get$styles$EntrantDetailComponent", function() {
    return [$.$get$styles13()];
  }, "styles$EntrantDetailComponent", "styles6", "$get$styles6", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles6", "styles$EventDetailComponent", "$get$styles$EventDetailComponent", function() {
    return [$.$get$styles6()];
  }, "styles$EventDetailComponent", "styles12", "$get$styles12", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles12", "styles$GameDetailComponent", "$get$styles$GameDetailComponent", function() {
    return [$.$get$styles12()];
  }, "styles$GameDetailComponent", "styles9", "$get$styles9", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles9", "styles$MatchDetailComponent", "$get$styles$MatchDetailComponent", function() {
    return [$.$get$styles9()];
  }, "styles$MatchDetailComponent", "styles10", "$get$styles10", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles10", "styles$ResultDetailComponent", "$get$styles$ResultDetailComponent", function() {
    return [$.$get$styles10()];
  }, "styles$ResultDetailComponent", "styles11", "$get$styles11", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles11", "styles$RoundDetailComponent", "$get$styles$RoundDetailComponent", function() {
    return [$.$get$styles11()];
  }, "styles$RoundDetailComponent", "styles8", "$get$styles8", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles8", "styles$StageDetailComponent", "$get$styles$StageDetailComponent", function() {
    return [$.$get$styles8()];
  }, "styles$StageDetailComponent", "styles7", "$get$styles7", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles7", "styles$TournamentDetailComponent", "$get$styles$TournamentDetailComponent", function() {
    return [$.$get$styles7()];
  }, "styles$TournamentDetailComponent", "styles14", "$get$styles14", function() {
    return [".danger_button._ngcontent-%ID%{margin-right:4em;color:white;background-color:#db4437}.inlinediv._ngcontent-%ID% h4._ngcontent-%ID%{display:inherit}.full_pad._ngcontent-%ID%{margin:8px}.vert_pad._ngcontent-%ID%{margin:8px 0px 8px 0px}"];
  }, "styles14", "styles$UserDetailComponent", "$get$styles$UserDetailComponent", function() {
    return [$.$get$styles14()];
  }, "styles$UserDetailComponent", "styles31", "$get$styles31", function() {
    return ["li._ngcontent-%ID% button.danger._ngcontent-%ID%{background-color:#A94A4B}li._ngcontent-%ID% button.danger:hover._ngcontent-%ID%{background-color:#763334}li._ngcontent-%ID% button.warn._ngcontent-%ID%{background-color:#FDB34C}li._ngcontent-%ID% button.warn:hover._ngcontent-%ID%{background-color:#B17D35}li._ngcontent-%ID% button.info._ngcontent-%ID%{background-color:#4AA66C}li._ngcontent-%ID% button.info:hover._ngcontent-%ID%{background-color:#33744B}div.col-1-2._ngcontent-%ID%{width:50%}div.inlinediv._ngcontent-%ID%{display:inline}div.floatright._ngcontent-%ID% *._ngcontent-%ID%{float:right}material-input#shiftedinput._ngcontent-%ID%{margin-right:1em}material-fab#heavyfab._ngcontent-%ID%{background-color:#db4437;color:white;margin-bottom:3em}material-button.delete_confirm._ngcontent-%ID%{margin-right:auto;background-color:#db4437;color:white}"];
  }, "styles31", "styles$TypeListComponent", "$get$styles$TypeListComponent", function() {
    return [$.$get$styles31()];
  }, "styles$TypeListComponent", "RoutePaths_dash", "$get$RoutePaths_dash", function() {
    return O.RoutePath$(null, null, "dash", false);
  }, "RoutePaths_dash", "RoutePaths_list", "$get$RoutePaths_list", function() {
    return O.RoutePath$(null, null, "list/:type", false);
  }, "RoutePaths_list", "RoutePaths_admin", "$get$RoutePaths_admin", function() {
    return O.RoutePath$(null, null, "admin", false);
  }, "RoutePaths_admin", "Routes_dashboard", "$get$Routes_dashboard", function() {
    return N.ComponentRouteDefinition$_(null, C.ComponentFactory_bl8, null, $.$get$RoutePaths_dash(), null);
  }, "Routes_dashboard", "Routes_list", "$get$Routes_list", function() {
    return N.ComponentRouteDefinition$_(null, C.ComponentFactory_ivk, null, $.$get$RoutePaths_list(), null);
  }, "Routes_list", "Routes_admin", "$get$Routes_admin", function() {
    return N.ComponentRouteDefinition$_(null, C.ComponentFactory_B8J, null, $.$get$RoutePaths_admin(), null);
  }, "Routes_admin", "Routes_all", "$get$Routes_all", function() {
    var t1, t2, t3, t4, t5;
    t1 = $.$get$Routes_dashboard();
    t2 = $.$get$Routes_list();
    t3 = $.$get$Routes_admin();
    t4 = $.$get$RoutePaths_dash().toUrl$0(0);
    t5 = F.Url_trimSlashes("");
    return H.setRuntimeTypeInfo([t1, t2, t3, new N.RedirectRouteDefinition(t4, t5, false, null)], [N.RouteDefinition]);
  }, "Routes_all", "_toStringVisiting0", "$get$_toStringVisiting0", function() {
    return [];
  }, "_toStringVisiting0", "_escapedChar", "$get$_escapedChar", function() {
    return P.RegExp_RegExp('["\\x00-\\x1F\\x7F]', true, false);
  }, "_escapedChar", "token", "$get$token", function() {
    return P.RegExp_RegExp('[^()<>@,;:"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+', true, false);
  }, "token", "_lws", "$get$_lws", function() {
    return P.RegExp_RegExp("(?:\\r\\n)?[ \\t]+", true, false);
  }, "_lws", "_quotedString", "$get$_quotedString", function() {
    return P.RegExp_RegExp('"(?:[^"\\x00-\\x1F\\x7F]|\\\\.)*"', true, false);
  }, "_quotedString", "_quotedPair", "$get$_quotedPair", function() {
    return P.RegExp_RegExp("\\\\(.)", true, false);
  }, "_quotedPair", "nonToken", "$get$nonToken", function() {
    return P.RegExp_RegExp('[()<>@,;:"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]', true, false);
  }, "nonToken", "whitespace", "$get$whitespace", function() {
    return P.RegExp_RegExp("(?:" + $.$get$_lws().pattern + ")*", true, false);
  }, "whitespace", "NumberFormat__ln10", "$get$NumberFormat__ln10", function() {
    return P.log(10);
  }, "NumberFormat__ln10", "NumberFormat__maxInt", "$get$NumberFormat__maxInt", function() {
    return typeof 1 === "number" ? P.pow(2, 52) : C.JSInt_methods.floor$0(1e300);
  }, "NumberFormat__maxInt", "NumberFormat__maxDigits", "$get$NumberFormat__maxDigits", function() {
    return C.JSDouble_methods.ceil$0(P.log($.$get$NumberFormat__maxInt()) / P.log(10));
  }, "NumberFormat__maxDigits", "numberFormatSymbols", "$get$numberFormatSymbols", function() {
    return P.LinkedHashMap_LinkedHashMap$_literal(["af", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ",", "ZAR", "E", "\xa0", "\u221e", "-", "af", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "am", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "ETB", "E", ",", "\u221e", "-", "am", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ar", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ".", "EGP", "E", ",", "\u221e", "\u200e-", "ar", "\u0644\u064a\u0633\xa0\u0631\u0642\u0645\u064b\u0627", "\u200e%\u200e", "#,##0%", "\u2030", "\u200e+", "#E0", "0"), "ar_DZ", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "DZD", "E", ".", "\u221e", "\u200e-", "ar_DZ", "\u0644\u064a\u0633\xa0\u0631\u0642\u0645\u064b\u0627", "\u200e%\u200e", "#,##0%", "\u2030", "\u200e+", "#E0", "0"), "ar_EG", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", "\u066b", "EGP", "\u0627\u0633", "\u066c", "\u221e", "\u061c-", "ar_EG", "\u0644\u064a\u0633\xa0\u0631\u0642\u0645", "\u066a\u061c", "#,##0%", "\u0609", "\u061c+", "#E0", "\u0660"), "az", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "AZN", "E", ".", "\u221e", "-", "az", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "be", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "BYN", "E", "\xa0", "\u221e", "-", "be", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "bg", B.NumberSymbols$("0.00\xa0\xa4", "#,##0.###", ",", "BGN", "E", "\xa0", "\u221e", "-", "bg", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "bn", B.NumberSymbols$("#,##,##0.00\xa4", "#,##,##0.###", ".", "BDT", "E", ",", "\u221e", "-", "bn", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "\u09e6"), "br", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", "\xa0", "\u221e", "-", "br", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "bs", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "BAM", "E", ".", "\u221e", "-", "bs", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "ca", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "ca", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "chr", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "USD", "E", ",", "\u221e", "-", "chr", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "cs", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "CZK", "E", "\xa0", "\u221e", "-", "cs", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "cy", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "GBP", "E", ",", "\u221e", "-", "cy", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "da", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "DKK", "E", ".", "\u221e", "-", "da", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "de", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "de", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "de_AT", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "EUR", "E", "\xa0", "\u221e", "-", "de_AT", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "de_CH", B.NumberSymbols$("\xa4\xa0#,##0.00;\xa4-#,##0.00", "#,##0.###", ".", "CHF", "E", "\u2019", "\u221e", "-", "de_CH", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "el", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "e", ".", "\u221e", "-", "el", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "USD", "E", ",", "\u221e", "-", "en", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_AU", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "AUD", "e", ",", "\u221e", "-", "en_AU", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_CA", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "CAD", "e", ",", "\u221e", "-", "en_CA", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_GB", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "GBP", "E", ",", "\u221e", "-", "en_GB", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_IE", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "EUR", "E", ",", "\u221e", "-", "en_IE", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_IN", B.NumberSymbols$("\xa4\xa0#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "en_IN", "NaN", "%", "#,##,##0%", "\u2030", "+", "#E0", "0"), "en_MY", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "MYR", "E", ",", "\u221e", "-", "en_MY", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_SG", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "SGD", "E", ",", "\u221e", "-", "en_SG", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_US", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "USD", "E", ",", "\u221e", "-", "en_US", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "en_ZA", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ",", "ZAR", "E", "\xa0", "\u221e", "-", "en_ZA", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "es", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "es", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "es_419", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "MXN", "E", ",", "\u221e", "-", "es_419", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "es_ES", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "es_ES", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "es_MX", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "MXN", "E", ",", "\u221e", "-", "es_MX", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "es_US", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "USD", "E", ",", "\u221e", "-", "es_US", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "et", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "\xd710^", "\xa0", "\u221e", "\u2212", "et", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "eu", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "\u2212", "eu", "NaN", "%", "%\xa0#,##0", "\u2030", "+", "#E0", "0"), "fa", B.NumberSymbols$("\u200e\xa4#,##0.00", "#,##0.###", "\u066b", "IRR", "\xd7\u06f1\u06f0^", "\u066c", "\u221e", "\u200e\u2212", "fa", "\u0646\u0627\u0639\u062f\u062f", "\u066a", "#,##0%", "\u0609", "\u200e+", "#E0", "\u06f0"), "fi", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", "\xa0", "\u221e", "\u2212", "fi", "ep\xe4luku", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "fil", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "PHP", "E", ",", "\u221e", "-", "fil", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "fr", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", "\xa0", "\u221e", "-", "fr", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "fr_CA", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "CAD", "E", "\xa0", "\u221e", "-", "fr_CA", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "fr_CH", B.NumberSymbols$("#,##0.00\xa0\xa4;-#,##0.00\xa0\xa4", "#,##0.###", ",", "CHF", "E", "\xa0", "\u221e", "-", "fr_CH", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ga", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "EUR", "E", ",", "\u221e", "-", "ga", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "gl", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "gl", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "gsw", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ".", "CHF", "E", "\u2019", "\u221e", "\u2212", "gsw", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "gu", B.NumberSymbols$("\xa4#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "gu", "NaN", "%", "#,##,##0%", "\u2030", "+", "[#E0]", "0"), "haw", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "USD", "E", ",", "\u221e", "-", "haw", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "he", B.NumberSymbols$("\u200f#,##0.00\xa0\xa4;\u200f-#,##0.00\xa0\xa4", "#,##0.###", ".", "ILS", "E", ",", "\u221e", "\u200e-", "he", "NaN", "%", "#,##0%", "\u2030", "\u200e+", "#E0", "0"), "hi", B.NumberSymbols$("\xa4#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "hi", "NaN", "%", "#,##,##0%", "\u2030", "+", "[#E0]", "0"), "hr", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "HRK", "E", ".", "\u221e", "-", "hr", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "hu", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "HUF", "E", "\xa0", "\u221e", "-", "hu", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "hy", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "AMD", "E", "\xa0", "\u221e", "-", "hy", "\u0548\u0579\u0539", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "id", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ",", "IDR", "E", ".", "\u221e", "-", "id", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "in", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ",", "IDR", "E", ".", "\u221e", "-", "in", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "is", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "ISK", "E", ".", "\u221e", "-", "is", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "it", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "it", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "it_CH", B.NumberSymbols$("\xa4\xa0#,##0.00;\xa4-#,##0.00", "#,##0.###", ".", "CHF", "E", "\u2019", "\u221e", "-", "it_CH", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "iw", B.NumberSymbols$("\u200f#,##0.00\xa0\xa4;\u200f-#,##0.00\xa0\xa4", "#,##0.###", ".", "ILS", "E", ",", "\u221e", "\u200e-", "iw", "NaN", "%", "#,##0%", "\u2030", "\u200e+", "#E0", "0"), "ja", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "JPY", "E", ",", "\u221e", "-", "ja", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ka", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "GEL", "E", "\xa0", "\u221e", "-", "ka", "\u10d0\u10e0\xa0\u10d0\u10e0\u10d8\u10e1\xa0\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "kk", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "KZT", "E", "\xa0", "\u221e", "-", "kk", "\u0441\u0430\u043d\xa0\u0435\u043c\u0435\u0441", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "km", B.NumberSymbols$("#,##0.00\xa4", "#,##0.###", ",", "KHR", "E", ".", "\u221e", "-", "km", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "kn", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "INR", "E", ",", "\u221e", "-", "kn", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ko", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "KRW", "E", ",", "\u221e", "-", "ko", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ky", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "KGS", "E", "\xa0", "\u221e", "-", "ky", "\u0441\u0430\u043d\xa0\u044d\u043c\u0435\u0441", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ln", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "CDF", "E", ".", "\u221e", "-", "ln", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "lo", B.NumberSymbols$("\xa4#,##0.00;\xa4-#,##0.00", "#,##0.###", ",", "LAK", "E", ".", "\u221e", "-", "lo", "\u0e9a\u0ecd\u0ec8\u200b\u0ec1\u0ea1\u0ec8\u0e99\u200b\u0ec2\u0e95\u200b\u0ec0\u0ea5\u0e81", "%", "#,##0%", "\u2030", "+", "#", "0"), "lt", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "\xd710^", "\xa0", "\u221e", "\u2212", "lt", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "lv", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", "\xa0", "\u221e", "-", "lv", "NS", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "mk", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "MKD", "E", ".", "\u221e", "-", "mk", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ml", B.NumberSymbols$("\xa4#,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "ml", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "mn", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ".", "MNT", "E", ",", "\u221e", "-", "mn", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "mr", B.NumberSymbols$("\xa4#,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "mr", "NaN", "%", "#,##0%", "\u2030", "+", "[#E0]", "\u0966"), "ms", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "MYR", "E", ",", "\u221e", "-", "ms", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "mt", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "EUR", "E", ",", "\u221e", "-", "mt", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "my", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ".", "MMK", "E", ",", "\u221e", "-", "my", "\u1002\u100f\u1014\u103a\u1038\u1019\u101f\u102f\u1010\u103a\u101e\u1031\u102c", "%", "#,##0%", "\u2030", "+", "#E0", "\u1040"), "nb", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "NOK", "E", "\xa0", "\u221e", "\u2212", "nb", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "ne", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ".", "NPR", "E", ",", "\u221e", "-", "ne", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "\u0966"), "nl", B.NumberSymbols$("\xa4\xa0#,##0.00;\xa4\xa0-#,##0.00", "#,##0.###", ",", "EUR", "E", ".", "\u221e", "-", "nl", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "no", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "NOK", "E", "\xa0", "\u221e", "\u2212", "no", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "no_NO", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "NOK", "E", "\xa0", "\u221e", "\u2212", "no_NO", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "or", B.NumberSymbols$("\xa4\xa0#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "or", "NaN", "%", "#,##,##0%", "\u2030", "+", "#E0", "0"), "pa", B.NumberSymbols$("\xa4\xa0#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "pa", "NaN", "%", "#,##,##0%", "\u2030", "+", "[#E0]", "0"), "pl", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "PLN", "E", "\xa0", "\u221e", "-", "pl", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ps", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", "\u066b", "AFN", "\xd7\u06f1\u06f0^", "\u066c", "\u221e", "\u200e-\u200e", "ps", "NaN", "\u066a", "#,##0%", "\u0609", "\u200e+\u200e", "#E0", "\u06f0"), "pt", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "BRL", "E", ".", "\u221e", "-", "pt", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "pt_BR", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ",", "BRL", "E", ".", "\u221e", "-", "pt_BR", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "pt_PT", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "E", "\xa0", "\u221e", "-", "pt_PT", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ro", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "RON", "E", ".", "\u221e", "-", "ro", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "ru", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "RUB", "E", "\xa0", "\u221e", "-", "ru", "\u043d\u0435\xa0\u0447\u0438\u0441\u043b\u043e", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "si", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "LKR", "E", ",", "\u221e", "-", "si", "NaN", "%", "#,##0%", "\u2030", "+", "#", "0"), "sk", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "e", "\xa0", "\u221e", "-", "sk", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "sl", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "EUR", "e", ".", "\u221e", "\u2212", "sl", "NaN", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "sq", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "ALL", "E", "\xa0", "\u221e", "-", "sq", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "sr", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "RSD", "E", ".", "\u221e", "-", "sr", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "sr_Latn", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "RSD", "E", ".", "\u221e", "-", "sr_Latn", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "sv", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "SEK", "\xd710^", "\xa0", "\u221e", "\u2212", "sv", "\xa4\xa4\xa4", "%", "#,##0\xa0%", "\u2030", "+", "#E0", "0"), "sw", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "TZS", "E", ",", "\u221e", "-", "sw", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ta", B.NumberSymbols$("\xa4\xa0#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "ta", "NaN", "%", "#,##,##0%", "\u2030", "+", "#E0", "0"), "te", B.NumberSymbols$("\xa4#,##,##0.00", "#,##,##0.###", ".", "INR", "E", ",", "\u221e", "-", "te", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "th", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "THB", "E", ",", "\u221e", "-", "th", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "tl", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "PHP", "E", ",", "\u221e", "-", "tl", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "tr", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ",", "TRY", "E", ".", "\u221e", "-", "tr", "NaN", "%", "%#,##0", "\u2030", "+", "#E0", "0"), "uk", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "UAH", "\u0415", "\xa0", "\u221e", "-", "uk", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "ur", B.NumberSymbols$("\xa4\xa0#,##0.00", "#,##0.###", ".", "PKR", "E", ",", "\u221e", "\u200e-", "ur", "NaN", "%", "#,##0%", "\u2030", "\u200e+", "#E0", "0"), "uz", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "UZS", "E", "\xa0", "\u221e", "-", "uz", "son\xa0emas", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "vi", B.NumberSymbols$("#,##0.00\xa0\xa4", "#,##0.###", ",", "VND", "E", ".", "\u221e", "-", "vi", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "zh", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "CNY", "E", ",", "\u221e", "-", "zh", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "zh_CN", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "CNY", "E", ",", "\u221e", "-", "zh_CN", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "zh_HK", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "HKD", "E", ",", "\u221e", "-", "zh_HK", "\u975e\u6578\u503c", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "zh_TW", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "TWD", "E", ",", "\u221e", "-", "zh_TW", "\u975e\u6578\u503c", "%", "#,##0%", "\u2030", "+", "#E0", "0"), "zu", B.NumberSymbols$("\xa4#,##0.00", "#,##0.###", ".", "ZAR", "E", ",", "\u221e", "-", "zu", "NaN", "%", "#,##0%", "\u2030", "+", "#E0", "0")], P.String, B.NumberSymbols);
  }, "numberFormatSymbols", "currencyFractionDigits", "$get$currencyFractionDigits", function() {
    return P.LinkedHashMap_LinkedHashMap$_literal(["ADP", 0, "AFN", 0, "ALL", 0, "AMD", 0, "BHD", 3, "BIF", 0, "BYN", 2, "BYR", 0, "CAD", 2, "CHF", 2, "CLF", 4, "CLP", 0, "COP", 0, "CRC", 2, "CZK", 2, "DEFAULT", 2, "DJF", 0, "DKK", 2, "ESP", 0, "GNF", 0, "GYD", 0, "HUF", 2, "IDR", 0, "IQD", 0, "IRR", 0, "ISK", 0, "ITL", 0, "JOD", 3, "JPY", 0, "KMF", 0, "KPW", 0, "KRW", 0, "KWD", 3, "LAK", 0, "LBP", 0, "LUF", 0, "LYD", 3, "MGA", 0, "MGF", 0, "MMK", 0, "MNT", 0, "MRO", 0, "MUR", 0, "NOK", 2, "OMR", 3, "PKR", 0, "PYG", 0, "RSD", 0, "RWF", 0, "SEK", 2, "SLL", 0, "SOS", 0, "STD", 0, "SYP", 0, "TMM", 0, "TND", 3, "TRL", 0, "TWD", 2, "TZS", 0, "UGX", 0, "UYI", 0, "UZS", 0, "VND", 0, "VUV", 0, "XAF", 0, "XOF", 0, "XPF", 0, "YER", 0, "ZMK", 0, "ZWD", 0], P.String, P.int);
  }, "currencyFractionDigits", "messageLookup", "$get$messageLookup", function() {
    return new X.UninitializedLocaleData("initializeMessages(<locale>)", null, H.setRuntimeTypeInfo([], [P.String]), [P.Null]);
  }, "messageLookup", "context0", "$get$context0", function() {
    return new M.Context($.$get$Style_platform(), null);
  }, "context0", "Style_posix", "$get$Style_posix", function() {
    return new E.PosixStyle("posix", "/", C.List_cSk, P.RegExp_RegExp("/", true, false), P.RegExp_RegExp("[^/]$", true, false), P.RegExp_RegExp("^/", true, false));
  }, "Style_posix", "Style_windows", "$get$Style_windows", function() {
    return new L.WindowsStyle("windows", "\\", C.List_WnV, P.RegExp_RegExp("[/\\\\]", true, false), P.RegExp_RegExp("[^/\\\\]$", true, false), P.RegExp_RegExp("^(\\\\\\\\[^\\\\]+\\\\[^\\\\/]+|[a-zA-Z]:[/\\\\])", true, false), P.RegExp_RegExp("^[/\\\\](?![/\\\\])", true, false));
  }, "Style_windows", "Style_url", "$get$Style_url", function() {
    return new F.UrlStyle("url", "/", C.List_cSk, P.RegExp_RegExp("/", true, false), P.RegExp_RegExp("(^[a-zA-Z][-+.a-zA-Z\\d]*://|[^/])$", true, false), P.RegExp_RegExp("[a-zA-Z][-+.a-zA-Z\\d]*://[^/]*", true, false), P.RegExp_RegExp("^/", true, false));
  }, "Style_url", "Style_platform", "$get$Style_platform", function() {
    return O.Style__getPlatformStyle();
  }, "Style_platform", "_slashAutoEscape", "$get$_slashAutoEscape", function() {
    return P.RegExp_RegExp("/", true, false).pattern === "\\/";
  }, "_slashAutoEscape"]);
  Isolate = Isolate.$finishIsolateConstructor(Isolate);
  $ = new Isolate();
  init.metadata = ["_", "value", "error", null, "stackTrace", "item", "event", "result", "e", "data", "self", "arg", "callback", "action", "parent", "zone", "object", "arg1", "arg2", "key", "each", "f", "invocation", "isVisible", "isDisabled", "b", "pair", "a", "s", "arguments", "o", "index", true, "element", "completed", "control", "m", "elem", "n", "zoneValues", "captureThis", "chunk", "numberOfArguments", "encodedComponent", "closure", "stack", "reason", "arg4", "theStackTrace", "findInAncestors", "didWork_", "specification", "t", "errorCode", "fn", "promiseValue", "ref", "arg3", "checked", "byUserAction", "body", "isExpanded", "theError", "success", "status", "promiseError", "sub", "layoutRects", "key2", "group", "state", "pane", false, "track", "shouldCancel", "results", "highResTimer", "argument", "validator", "c", "ev", "dict", "navigationResult", "routerState", "k", "response", "barcode", "cmd", "postCreate", "key1", "affix", "expandedPanelHeight"];
  init.types = [{func: 1, ret: P.Null}, {func: 1, ret: -1, args: [,]}, {func: 1, ret: -1}, {func: 1, ret: [S.AppView, A.MenuItemGroupsComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.Null, args: [,]}, {func: 1, ret: P.Null, args: [,,]}, {func: 1, ret: P.bool}, {func: 1, ret: P.String}, {func: 1, args: [,]}, {func: 1, ret: [S.AppView, L.MaterialInputComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.String, args: [P.String]}, {func: 1, ret: [S.AppView, T.MaterialExpansionPanel], args: [[S.AppView,,], P.int]}, {func: 1, ret: -1, args: [P.String,,]}, {func: 1, ret: P.Null, args: [W.Event]}, {func: 1, ret: -1, args: [P.Object]}, {func: 1, ret: P.String, args: [P.int]}, {func: 1, ret: -1, args: [W.KeyboardEvent]}, {func: 1, ret: P.bool, args: [P.String]}, {func: 1, ret: -1, args: [W.MouseEvent]}, {func: 1, ret: P.Null, args: [-1]}, {func: 1, ret: P.bool, args: [,]}, {func: 1, ret: -1, args: [P.bool]}, {func: 1, ret: [P.Future,,]}, {func: 1, ret: [P.Future, Z.NavigationResult]}, {func: 1, ret: P.Null, args: [W.MouseEvent]}, {func: 1, ret: -1, args: [W.UIEvent]}, {func: 1, ret: P.Null, args: [P.String]}, {func: 1, ret: P.bool, args: [W.KeyboardEvent]}, {func: 1, ret: [S.AppView, L.TypeListComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.Null, args: [P.bool]}, {func: 1, ret: [S.AppView, Q.MenuItemAffixListComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, K.DashboardComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.bool, args: [P.bool]}, {func: 1, ret: -1, args: [W.Event]}, {func: 1, ret: P.Null, args: [[L.AsyncAction, P.bool]]}, {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}, {func: 1, ret: P.String, args: [P.Match]}, {func: 1, ret: P.Null, args: [W.ProgressEvent]}, {func: 1, ret: -1, args: [P.Object], opt: [P.StackTrace]}, {func: 1, ret: P.Null, args: [N.KeyValueChangeRecord]}, {func: 1, ret: [S.AppView, F.MaterialInkTooltipComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [P.Future, P.bool]}, {func: 1, ret: [S.AppView, F.RaisableMenuComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: -1, args: [P.String, P.String]}, {func: 1, ret: P.Null, args: [R.CollectionChangeRecord]}, {func: 1, ret: -1, args: [{func: 1, ret: -1}]}, {func: 1}, {func: 1, ret: [S.AppView, E.MaterialYesNoButtonsComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: P.bool, args: [[P.List,,]]}, {func: 1, bounds: [P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}, 1]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1}]}, {func: 1, ret: P.Null, args: [P.String,,]}, {func: 1, ret: P.Null, args: [W.FocusEvent]}, {func: 1, ret: P.bool, args: [L.MenuItemAffix]}, {func: 1, ret: Y.NgZone}, {func: 1, ret: -1, named: {temporary: P.bool}}, {func: 1, ret: P.bool, args: [[P.Rectangle, P.num], [P.Rectangle, P.num]]}, {func: 1, ret: {futureOr: 1, type: P.bool}, args: [,]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: -1}]}, {func: 1, ret: W.Node, args: [P.int]}, {func: 1, ret: -1, args: [[L.AsyncAction,,]]}, {func: 1, ret: -1, args: [P.String]}, {func: 1, ret: -1, args: [[P.Set, P.String]]}, {func: 1, ret: W.MimeType, args: [P.int]}, {func: 1, ret: P.bool, args: [,,]}, {func: 1, bounds: [P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}, {func: 1, ret: [S.AppView, D.MaterialDialogComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: W.Element, args: [P.int]}, {func: 1, ret: [S.AppView, N.UserDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [P.Stream, [P.Rectangle, P.num]], args: [W.HtmlElement], named: {track: P.bool}}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone,, P.StackTrace]}, {func: 1, ret: P.bool, args: [W.Node]}, {func: 1, ret: P.Null, args: [W.TransitionEvent]}, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: 0, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}, 1, 2]}, {func: 1, ret: [S.AppView, D.EntrantDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, X.EventDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, D.GameDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, Y.MatchDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, E.ResultDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, R.RoundDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, L.StageDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, E.TournamentDetailComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: -1, opt: [P.Object]}, {func: 1, ret: M.Injector, opt: [M.Injector]}, {func: 1, bounds: [P.Object], ret: 0, args: [{func: 1, ret: 0}]}, {func: 1, ret: W.AccessibleNode, args: [P.int]}, {func: 1, ret: W.DataTransferItem, args: [P.int]}, {func: 1, ret: -1, args: [,], opt: [, P.String]}, {func: 1, args: [W.Element], opt: [P.bool]}, {func: 1, ret: [P.List,,]}, {func: 1, ret: [P.Rectangle, P.num], args: [P.int]}, {func: 1, ret: U.JsTestability, args: [W.Element]}, {func: 1, ret: [P.List, U.JsTestability]}, {func: 1, ret: U.JsTestability, args: [D.Testability]}, {func: 1, ret: P.bool, args: [[P.Map, P.String,,]]}, {func: 1, ret: P.Null, args: [W.DomException]}, {func: 1, ret: W.File, args: [P.int]}, {func: 1, ret: P.Null, args: [P.int,,]}, {func: 1, ret: P.Null, args: [,], opt: [,]}, {func: 1, ret: P.Null, args: [[D.ComponentRef,,]]}, {func: 1, ret: -1, args: [{func: 1, ret: -1, args: [P.bool, P.String]}]}, {func: 1, ret: [P._Future,,], args: [,]}, {func: 1, ret: -1, args: [P.Object, P.StackTrace]}, {func: 1, ret: [P.Map, P.String,,], args: [O.ImperativeViewRef]}, {func: 1, ret: -1, args: [, P.StackTrace]}, {func: 1, ret: W.Plugin, args: [P.int]}, {func: 1, ret: W.SourceBuffer, args: [P.int]}, {func: 1, ret: P.Null, args: [[L.AsyncAction,,]]}, {func: 1, ret: [P.Future, P.bool], named: {byUserAction: P.bool}}, {func: 1, ret: W.SpeechGrammar, args: [P.int]}, {func: 1, ret: W.SpeechRecognitionAlternative, args: [P.int]}, {func: 1, ret: P.Null, opt: [-1]}, {func: 1, ret: W.Touch, args: [P.int]}, {func: 1, ret: P.String, args: [P.num]}, {func: 1, ret: [P.List, W.HtmlElement], args: [D._ViewMaterialExpansionPanel4]}, {func: 1, ret: [P.List, T.ButtonDirective], args: [D._ViewMaterialExpansionPanel5]}, {func: 1, ret: [P.List, T.ButtonDirective], args: [D._ViewMaterialExpansionPanel6]}, {func: 1, ret: W.TrackDefault, args: [P.int]}, {func: 1, ret: W.CssRule, args: [P.int]}, {func: 1, ret: W.Gamepad, args: [P.int]}, {func: 1, ret: P.Null, args: [[P.List, [Y.ListChangeRecord, L.MenuItemAffix]]]}, {func: 1, ret: -1, args: [[D.MenuItem,,]]}, {func: 1, ret: -1, args: [W.KeyboardEvent], named: {shouldPreventDefault: P.bool}}, {func: 1, ret: -1, args: [W.FocusEvent]}, {func: 1, ret: W._Attr, args: [P.int]}, {func: 1, ret: [P.List, E.AutoFocusDirective], args: [B._ViewMenuItemGroupsComponent1]}, {func: 1, ret: [P.List, E.AutoFocusDirective], args: [B._ViewMenuItemGroupsComponent4]}, {func: 1, ret: [P.List, E.AutoFocusDirective], args: [B._ViewMenuItemGroupsComponent5]}, {func: 1, ret: [P.List, E.AutoFocusDirective], args: [B._ViewMenuItemGroupsComponent6]}, {func: 1, ret: [P.List, E.AutoFocusDirective], args: [B._ViewMenuItemGroupsComponent15]}, {func: 1, ret: [P.List, E.AutoFocusDirective], args: [B._ViewMenuItemGroupsComponent16]}, {func: 1, ret: [P.List, K.FocusableActivateItem], args: [B._ViewMenuItemGroupsComponent1]}, {func: 1, ret: [P.List, K.FocusableActivateItem], args: [B._ViewMenuItemGroupsComponent4]}, {func: 1, ret: [P.List, K.FocusableActivateItem], args: [B._ViewMenuItemGroupsComponent5]}, {func: 1, ret: [P.List, K.FocusableActivateItem], args: [B._ViewMenuItemGroupsComponent6]}, {func: 1, ret: [P.List, A.MenuItemGroupsComponent], args: [M._ViewMenuPopupComponent1]}, {func: 1, ret: -1, args: [-1]}, {func: 1, ret: P.Null, args: [[P.StreamSubscription, [P.Rectangle, P.num]]]}, {func: 1, ret: P.Null, args: [[P.List, [P.Rectangle, P.num]]]}, {func: 1, ret: P.bool, args: [[P.Rectangle, P.num]]}, {func: 1, ret: [P.List, B.MaterialButtonComponent], args: [M._ViewMaterialYesNoButtonsComponent2]}, {func: 1, ret: [P.List, B.MaterialButtonComponent], args: [M._ViewMaterialYesNoButtonsComponent3]}, {func: 1, ret: P.String, args: [P.Object]}, {func: 1, ret: W.SpeechRecognitionResult, args: [P.int]}, {func: 1, ret: P.int, args: [P.int, [P.List,,]]}, {func: 1, ret: P.String, args: [L.MenuItemAffix]}, {func: 1, ret: [P.Stream, [P.Rectangle, P.num]]}, {func: 1, ret: [P.Future,,], args: [,]}, {func: 1, ret: W.StyleSheet, args: [P.int]}, {func: 1, ret: [P.Future,,], args: [Z.OverlayState, W.HtmlElement]}, {func: 1, ret: [P.Rectangle, P.num], args: [,]}, {func: 1, ret: [P.Rectangle, P.num], args: [-1]}, {func: 1, args: [W.Event]}, {func: 1, ret: P.bool, args: [P.num, P.num]}, {func: 1, ret: -1, args: [W.TouchEvent]}, {func: 1, args: [,,]}, {func: 1, ret: [P.Future,,], args: [P.bool]}, {func: 1, ret: P.bool, args: [[P.List, P.bool]]}, {func: 1, ret: R._RateLimitSink, args: [[P.EventSink,,]]}, {func: 1, ret: O.ImperativeViewRef, args: [,]}, {func: 1, ret: P.Null, args: [P.num]}, {func: 1, ret: -1, args: [P.num]}, {func: 1, ret: P.int, args: [P.int]}, {func: 1, ret: P.Null, args: [,], named: {rawValue: P.String}}, {func: 1, ret: P.bool, args: [[Z.AbstractControl,,]]}, {func: 1, ret: [D.ComponentRef,,]}, {func: 1, ret: P.bool, args: [[P.Set, P.String]]}, {func: 1, ret: P.Null, args: [Z.NavigationResult]}, {func: 1, ret: [P.Future, -1], args: [-1]}, {func: 1, ret: P.String, args: [P.String, N.RouteDefinition]}, {func: 1, ret: P.DateTime}, {func: 1, ret: P.Null, args: [U.Response]}, {func: 1, ret: -1, args: [,], opt: [,]}, {func: 1, ret: -1, args: [L.Barcode]}, {func: 1, ret: [P.List, G.MenuPopupComponent], args: [G._ViewRaisableMenuComponent3]}, {func: 1, args: [P.String]}, {func: 1, ret: W.Element, args: [W.Node]}, {func: 1, ret: [P.List, T.MaterialExpansionPanel], args: [Z._ViewTypeListComponent4]}, {func: 1, ret: [P.List, R.ViewContainerRef], args: [Z._ViewTypeListComponent4]}, {func: 1, ret: [P.List, R.ViewContainerRef], args: [Z._ViewTypeListComponent5]}, {func: 1, ret: D.Entrant, args: [,]}, {func: 1, ret: P.bool, args: [D.Entrant]}, {func: 1, ret: X.Event0, args: [,]}, {func: 1, ret: P.bool, args: [X.Event0]}, {func: 1, ret: D.Game, args: [,]}, {func: 1, ret: P.bool, args: [D.Game]}, {func: 1, ret: -1, args: [P.JsObject]}, {func: 1, ret: Y.Match0, args: [,]}, {func: 1, ret: P.bool, args: [Y.Match0]}, {func: 1, ret: E.Result, args: [,]}, {func: 1, ret: R.Round, args: [,]}, {func: 1, ret: P.bool, args: [R.Round]}, {func: 1, ret: L.Stage, args: [,]}, {func: 1, ret: P.bool, args: [L.Stage]}, {func: 1, ret: E.Tournament, args: [,]}, {func: 1, ret: P.bool, args: [E.Tournament]}, {func: 1, ret: N.User, args: [,]}, {func: 1, ret: P.bool, args: [N.User]}, {func: 1, ret: [P.Future, U.Response], args: [U.Client]}, {func: 1, ret: P.bool, args: [P.String, P.String]}, {func: 1, ret: P.int, args: [P.String]}, {func: 1, ret: P.int, args: [[P.List, P.int], P.int]}, {func: 1, ret: -1, args: [[P.List, P.int]]}, {func: 1, ret: U.Response, args: [P.Uint8List]}, {func: 1, ret: P.bool, args: [P.Object]}, {func: 1, ret: R.MediaType}, {func: 1, ret: P.Null, args: [P.String, P.String]}, {func: 1, ret: P.String, args: [B.NumberSymbols]}, {func: 1, ret: P.int, args: [P.int,,]}, {func: 1, ret: P.String, args: [P.String], named: {color: null}}, {func: 1, ret: P.JsFunction, args: [,]}, {func: 1, bounds: [P.Object], ret: {func: 1, ret: 0}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0}]}, {func: 1, bounds: [P.Object, P.Object], ret: {func: 1, ret: 0, args: [1]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1]}]}, {func: 1, bounds: [P.Object, P.Object, P.Object], ret: {func: 1, ret: 0, args: [1, 2]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, ret: 0, args: [1, 2]}]}, {func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, ret: -1, args: [P.Timer]}]}, {func: 1, ret: -1, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}, {func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, [P.Map,,,]]}, {func: 1, ret: [P.JsArray,,], args: [,]}, {func: 1, ret: P.int, args: [,]}, {func: 1, ret: P.int, args: [P.Object]}, {func: 1, ret: P.bool, args: [P.Object, P.Object]}, {func: 1, args: [[P.Map,,,]], opt: [{func: 1, ret: -1, args: [P.Object]}]}, {func: 1, ret: P.Object, args: [,]}, {func: 1, ret: P.JsObject, args: [,]}, {func: 1, ret: P.Object, args: [P.int,,]}, {func: 1, ret: [S.AppView, Z.DynamicComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, G.HighlightedTextComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, D.ModalComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, B.MaterialCheckboxComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [P.Map,,,], args: [P.int]}, {func: 1, ret: -1, args: [P.int, P.int]}, {func: 1, ret: Y.ApplicationRef}, {func: 1, ret: Q.AppViewUtils}, {func: 1, ret: P.Null, args: [P.Symbol0,,]}, {func: 1, ret: [S.AppView, G.MenuPopupComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, G.MaterialPopupComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: D.Testability}, {func: 1, ret: P.String, args: [,]}, {func: 1, ret: M.Injector}, {func: 1, bounds: [P.Object], ret: {func: 1, args: [0]}, args: [{func: 1, args: [0]}, P.Duration]}, {func: 1, ret: {func: 1, ret: [P.Map, P.String,,], args: [[Z.AbstractControl,,]]}, args: [,]}, {func: 1, ret: [S.AppView, Q.AppComponent], args: [[S.AppView,,], P.int]}, {func: 1, ret: [S.AppView, O.AdminComponent], args: [[S.AppView,,], P.int]}, {func: 1, args: [, P.String]}, {func: 1, ret: [P.Map, P.String, P.String], args: [[P.Map, P.String, P.String], P.String]}, {func: 1, ret: P.Null, args: [R.CollectionChangeRecord, P.int, P.int]}, {func: 1, ret: P.Null, args: [Y.NgZoneError]}, {func: 1, ret: -1, args: [P.String, P.int]}, {func: 1, ret: -1, args: [P.String], opt: [,]}, {func: 1, ret: -1, args: [P.Function]}, {func: 1, ret: P.int, args: [P.int, P.int]}, {func: 1, ret: P.Null, args: [{func: 1, ret: -1}]}, {func: 1, ret: P.Null, args: [, P.StackTrace]}, {func: 1, ret: P.Uint8List, args: [P.int]}, {func: 1, ret: P.Uint8List, args: [,,]}, {func: 1, ret: [P.Future, M.MutableRouterState], args: [M.MutableRouterState]}];
  function convertToFastObject(properties) {
    function MyClass() {
    }
    MyClass.prototype = properties;
    new MyClass();
    return properties;
  }
  function convertToSlowObject(properties) {
    properties.__MAGIC_SLOW_PROPERTY = 1;
    delete properties.__MAGIC_SLOW_PROPERTY;
    return properties;
  }
  A = convertToFastObject(A);
  B = convertToFastObject(B);
  C = convertToFastObject(C);
  D = convertToFastObject(D);
  E = convertToFastObject(E);
  F = convertToFastObject(F);
  G = convertToFastObject(G);
  H = convertToFastObject(H);
  J = convertToFastObject(J);
  K = convertToFastObject(K);
  L = convertToFastObject(L);
  M = convertToFastObject(M);
  N = convertToFastObject(N);
  O = convertToFastObject(O);
  P = convertToFastObject(P);
  Q = convertToFastObject(Q);
  R = convertToFastObject(R);
  S = convertToFastObject(S);
  T = convertToFastObject(T);
  U = convertToFastObject(U);
  V = convertToFastObject(V);
  W = convertToFastObject(W);
  X = convertToFastObject(X);
  Y = convertToFastObject(Y);
  Z = convertToFastObject(Z);
  function init() {
    Isolate.$isolateProperties = Object.create(null);
    init.allClasses = map();
    init.getTypeFromName = function(name) {
      return init.allClasses[name];
    };
    init.interceptorsByTag = map();
    init.leafTags = map();
    init.finishedClasses = map();
    Isolate.$lazy = function(fieldName, getterName, lazyValue, staticName, prototype) {
      if (!init.lazies)
        init.lazies = Object.create(null);
      init.lazies[fieldName] = getterName;
      prototype = prototype || Isolate.$isolateProperties;
      var sentinelUndefined = {};
      var sentinelInProgress = {};
      prototype[fieldName] = sentinelUndefined;
      prototype[getterName] = function() {
        var result = this[fieldName];
        if (result == sentinelInProgress)
          H.throwCyclicInit(staticName || fieldName);
        try {
          if (result === sentinelUndefined) {
            this[fieldName] = sentinelInProgress;
            try {
              result = this[fieldName] = lazyValue();
            } finally {
              if (result === sentinelUndefined)
                this[fieldName] = null;
            }
          }
          return result;
        } finally {
          this[getterName] = function() {
            return this[fieldName];
          };
        }
      };
    };
    Isolate.$finishIsolateConstructor = function(oldIsolate) {
      var isolateProperties = oldIsolate.$isolateProperties;
      function Isolate() {
        var staticNames = Object.keys(isolateProperties);
        for (var i = 0; i < staticNames.length; i++) {
          var staticName = staticNames[i];
          this[staticName] = isolateProperties[staticName];
        }
        var lazies = init.lazies;
        var lazyInitializers = lazies ? Object.keys(lazies) : [];
        for (var i = 0; i < lazyInitializers.length; i++)
          this[lazies[lazyInitializers[i]]] = null;
        function ForceEfficientMap() {
        }
        ForceEfficientMap.prototype = this;
        new ForceEfficientMap();
        for (var i = 0; i < lazyInitializers.length; i++) {
          var lazyInitName = lazies[lazyInitializers[i]];
          this[lazyInitName] = isolateProperties[lazyInitName];
        }
      }
      Isolate.prototype = oldIsolate.prototype;
      Isolate.prototype.constructor = Isolate;
      Isolate.$isolateProperties = isolateProperties;
      Isolate.makeConstantList = oldIsolate.makeConstantList;
      Isolate.functionThatReturnsNull = oldIsolate.functionThatReturnsNull;
      return Isolate;
    };
  }
  !function() {
    var intern = function(s) {
      var o = {};
      o[s] = 1;
      return Object.keys(convertToFastObject(o))[0];
    };
    init.getIsolateTag = function(name) {
      return intern("___dart_" + name + init.isolateTag);
    };
    var tableProperty = "___dart_isolate_tags_";
    var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
    var rootProperty = "_ZxYxX";
    for (var i = 0;; i++) {
      var property = intern(rootProperty + "_" + i + "_");
      if (!(property in usedProperties)) {
        usedProperties[property] = 1;
        init.isolateTag = property;
        break;
      }
    }
    init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
  }();
  // BEGIN invoke [main].
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(F.main, []);
    else
      F.main([]);
  });
  // END invoke [main].
})();

//# sourceMappingURL=main.dart.js.map
